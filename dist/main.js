/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cad.ts":
/*!********************!*\
  !*** ./src/cad.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INSTANCE: () => (/* binding */ INSTANCE)\n/* harmony export */ });\n/* harmony import */ var _render_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render/renderer */ \"./src/render/renderer.ts\");\n/* harmony import */ var _scene_scene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scene/scene */ \"./src/scene/scene.ts\");\n/* harmony import */ var _utils_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/timer */ \"./src/utils/timer.ts\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n/* harmony import */ var _events_eventManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./events/eventManager */ \"./src/events/eventManager.ts\");\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mode */ \"./src/mode.ts\");\n/* harmony import */ var _commands_cli__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/cli */ \"./src/commands/cli.ts\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log */ \"./src/log.ts\");\n/* harmony import */ var _commands_commandManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/commandManager */ \"./src/commands/commandManager.ts\");\n/* harmony import */ var _window_windowManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./window/windowManager */ \"./src/window/windowManager.ts\");\n/* harmony import */ var _settings_settingsManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./settings/settingsManager */ \"./src/settings/settingsManager.ts\");\n/* harmony import */ var _materials_materialManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./materials/materialManager */ \"./src/materials/materialManager.ts\");\n/* harmony import */ var _commands_selector__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./commands/selector */ \"./src/commands/selector.ts\");\n/* harmony import */ var _widgets_mover__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./widgets/mover */ \"./src/widgets/mover.ts\");\n/* harmony import */ var _events_eventQueue__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./events/eventQueue */ \"./src/events/eventQueue.ts\");\n/* harmony import */ var _tests_testSceneSphere__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./tests/testSceneSphere */ \"./src/tests/testSceneSphere.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n  * Browser Based NURBS Modeling Software\n  * Inspired by Rhino, Vim, CSS\n  *\n  * By Nick Drian\n  *\n*/\nclass CAD {\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.eventQueue = new _events_eventQueue__WEBPACK_IMPORTED_MODULE_14__.EventQueue();\n            this.settingsManager = new _settings_settingsManager__WEBPACK_IMPORTED_MODULE_10__.SettingsManager();\n            this.commandManager = new _commands_commandManager__WEBPACK_IMPORTED_MODULE_8__.CommandManager();\n            this.cli = new _commands_cli__WEBPACK_IMPORTED_MODULE_6__.CLI();\n            this.setMode(_mode__WEBPACK_IMPORTED_MODULE_5__.OperatingMode.Command);\n            this.renderer = new _render_renderer__WEBPACK_IMPORTED_MODULE_0__.Renderer();\n            yield this.renderer.init();\n            this.materialManager = new _materials_materialManager__WEBPACK_IMPORTED_MODULE_11__.MaterialManager();\n            this.scene = new _scene_scene__WEBPACK_IMPORTED_MODULE_1__.Scene();\n            this.scene.init();\n            this.eventManager = new _events_eventManager__WEBPACK_IMPORTED_MODULE_4__.EventManager();\n            this.log = new _log__WEBPACK_IMPORTED_MODULE_7__.Log();\n            this.renderStats = new _stats__WEBPACK_IMPORTED_MODULE_3__.RenderStats();\n            this.windowManager = new _window_windowManager__WEBPACK_IMPORTED_MODULE_9__.WindowManager();\n            this.selector = new _commands_selector__WEBPACK_IMPORTED_MODULE_12__.Selector();\n            this.mover = new _widgets_mover__WEBPACK_IMPORTED_MODULE_13__.Mover();\n            //addTestSceneComplex();\n            //addTestSceneRevolve();\n            (0,_tests_testSceneSphere__WEBPACK_IMPORTED_MODULE_15__.addTestSceneSphere)();\n            //addTestSceneSweep2();\n            //addTestSceneCurve();\n            //addTestSceneArc();\n        });\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (true) {\n                if (document.hasFocus()) {\n                    var frameTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    // update scene\n                    var sceneTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    this.scene.tick();\n                    this.mover.tick();\n                    this.renderStats.setSceneTime(sceneTimer.getTime());\n                    // render\n                    var renderTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    yield this.renderer.render(this.scene);\n                    this.renderStats.setRenderTime(renderTimer.getTime());\n                    //stats\n                    this.renderStats.setFrameTime(frameTimer.getTime());\n                    // windows\n                    this.windowManager.tick();\n                }\n                else {\n                    yield new Promise(r => setTimeout(r, 100));\n                }\n            }\n        });\n    }\n    getMode() {\n        return this.operatingMode;\n    }\n    setMode(operatingMode) {\n        this.operatingMode = operatingMode;\n        if (this.operatingMode == _mode__WEBPACK_IMPORTED_MODULE_5__.OperatingMode.Command) {\n            this.cli.show();\n        }\n        else {\n            this.cli.hide();\n        }\n    }\n    getCli() {\n        return this.cli;\n    }\n    getStats() {\n        return this.renderStats;\n    }\n    getScene() {\n        return this.scene;\n    }\n    getRenderer() {\n        return this.renderer;\n    }\n    getLog() {\n        return this.log;\n    }\n    getCommandManager() {\n        return this.commandManager;\n    }\n    getWindowManager() {\n        return this.windowManager;\n    }\n    getSettingsManager() {\n        return this.settingsManager;\n    }\n    getMaterialManager() {\n        return this.materialManager;\n    }\n    getEventManager() {\n        return this.eventManager;\n    }\n    getSelector() {\n        return this.selector;\n    }\n    getMover() {\n        return this.mover;\n    }\n    getEventQueue() {\n        return this.eventQueue;\n    }\n}\nconst INSTANCE = new CAD();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cad.ts\n");

/***/ }),

/***/ "./src/commands/cli.ts":
/*!*****************************!*\
  !*** ./src/commands/cli.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLI: () => (/* binding */ CLI)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass CLI {\n    constructor() {\n        this.element = document.getElementById(\"cli\");\n        this.input = \"\";\n        this.render();\n    }\n    show() {\n        this.element.hidden = false;\n    }\n    hide() {\n        this.element.hidden = true;\n    }\n    processKeyDownEvent(event) {\n        if (event.key == \"Enter\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleInput(this.input);\n            this.clearInput();\n        }\n        else if (event.key == \"Escape\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleInput(\"Escape\");\n            this.clearInput();\n        }\n        else if (event.key == \"Backspace\") {\n            this.deleteLast();\n        }\n        else if (event.key.length == 1) {\n            this.addChar(event.key);\n        }\n    }\n    hasInput() {\n        return this.input != \"\";\n    }\n    clearInput() {\n        this.input = \"\";\n        this.render();\n    }\n    render() {\n        this.element.innerText = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().getInstructions() + this.input;\n    }\n    deleteLast() {\n        if (this.input.length) {\n            this.input = this.input.slice(0, -1);\n            this.render();\n        }\n    }\n    addChar(char) {\n        this.input += char;\n        this.render();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY2xpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBRTNCLE1BQU0sR0FBRztJQUtkO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBbUIsUUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUNNLElBQUk7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQUVNLG1CQUFtQixDQUFDLEtBQW9CO1FBQzdDLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxPQUFPLEVBQUU7WUFDeEIsMENBQVEsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckQsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ25CO2FBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBRTtZQUNoQywwQ0FBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ25ELElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUNuQjthQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxXQUFXLEVBQUU7WUFDbkMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ25CO2FBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBR00sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVNLFVBQVU7UUFDZixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLE1BQU07UUFDWCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsZUFBZSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN2RixDQUFDO0lBRU8sVUFBVTtRQUNoQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2Y7SUFDSCxDQUFDO0lBRU8sT0FBTyxDQUFDLElBQVk7UUFDMUIsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7Q0FHRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NsaS50cz9hNWMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuXG5leHBvcnQgY2xhc3MgQ0xJIHtcblxuICBwcml2YXRlIGVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xuICBwcml2YXRlIGlucHV0OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gPEhUTUxEaXZFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2xpXCIpO1xuICAgIHRoaXMuaW5wdXQgPSBcIlwiO1xuICAgIHRoaXMucmVuZGVyKCk7XG4gIH1cblxuICBwdWJsaWMgc2hvdygpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gZmFsc2U7XG4gIH1cbiAgcHVibGljIGhpZGUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmhpZGRlbiA9IHRydWU7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc0tleURvd25FdmVudChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIGlmIChldmVudC5rZXkgPT0gXCJFbnRlclwiKSB7XG4gICAgICBJTlNUQU5DRS5nZXRDb21tYW5kTWFuYWdlcigpLmhhbmRsZUlucHV0KHRoaXMuaW5wdXQpO1xuICAgICAgdGhpcy5jbGVhcklucHV0KCk7XG4gICAgfSBlbHNlIGlmIChldmVudC5rZXkgPT0gXCJFc2NhcGVcIikge1xuICAgICAgSU5TVEFOQ0UuZ2V0Q29tbWFuZE1hbmFnZXIoKS5oYW5kbGVJbnB1dChcIkVzY2FwZVwiKTtcbiAgICAgIHRoaXMuY2xlYXJJbnB1dCgpO1xuICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09IFwiQmFja3NwYWNlXCIpIHtcbiAgICAgIHRoaXMuZGVsZXRlTGFzdCgpO1xuICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5Lmxlbmd0aCA9PSAxKSB7XG4gICAgICB0aGlzLmFkZENoYXIoZXZlbnQua2V5KTtcbiAgICB9XG4gIH1cblxuXG4gIHB1YmxpYyBoYXNJbnB1dCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pbnB1dCAhPSBcIlwiO1xuICB9XG5cbiAgcHVibGljIGNsZWFySW5wdXQoKTogdm9pZCB7XG4gICAgdGhpcy5pbnB1dCA9IFwiXCI7XG4gICAgdGhpcy5yZW5kZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyByZW5kZXIoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVyVGV4dCA9IElOU1RBTkNFLmdldENvbW1hbmRNYW5hZ2VyKCkuZ2V0SW5zdHJ1Y3Rpb25zKCkgKyB0aGlzLmlucHV0O1xuICB9XG5cbiAgcHJpdmF0ZSBkZWxldGVMYXN0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmlucHV0Lmxlbmd0aCkge1xuICAgICAgdGhpcy5pbnB1dCA9IHRoaXMuaW5wdXQuc2xpY2UoMCwgLTEpO1xuICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFkZENoYXIoY2hhcjogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5pbnB1dCArPSBjaGFyO1xuICAgIHRoaXMucmVuZGVyKCk7XG4gIH1cblxuXG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/cli.ts\n");

/***/ }),

/***/ "./src/commands/clicker.ts":
/*!*********************************!*\
  !*** ./src/commands/clicker.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Clicker: () => (/* binding */ Clicker)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../widgets/cursor */ \"./src/widgets/cursor.ts\");\n\n\nclass Clicker {\n    constructor() {\n        this.point = null;\n        this.clicked = false;\n        this.element = document.createElement(\"div\");\n        this.element.id = \"clicker\";\n        this.element.className = \"floating-window\";\n        this.element.style.width = \"auto\";\n        this.element.hidden = true;\n        document.body.appendChild(this.element);\n        this.onMouseMove();\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.show();\n    }\n    onMouseMove(types, ids, sub = false) {\n        if (this.clicked)\n            return; // currently selecting from dropdown\n        const mousePos = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos();\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(mousePos[0], mousePos[1]);\n        var intersections = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().firstIntersectionsWithinMargin(ray, 5, sub);\n        if (types) {\n            intersections = intersections.filter((intersection) => {\n                return types.includes(intersection.description);\n            });\n        }\n        if (ids) {\n            intersections = intersections.filter((intersection) => {\n                var _a, _b;\n                return ids.includes((_b = (_a = intersection.geometry) === null || _a === void 0 ? void 0 : _a.getID()) !== null && _b !== void 0 ? _b : 0);\n            });\n        }\n        if (intersections.length !== 0) {\n            this.point = intersections[0].point;\n            _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.setPosition(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPixelAtPoint(this.point));\n            _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.show();\n        }\n        else {\n            _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.hide();\n        }\n    }\n    click(types, ids, sub = false) {\n        if (this.clicked) {\n            this.reset();\n            return;\n        }\n        this.clicked = true;\n        this.element.hidden = false;\n        const mousePos = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos();\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(mousePos[0], mousePos[1]);\n        var intersections = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().firstIntersectionsWithinMargin(ray, 2, sub);\n        if (types) {\n            intersections = intersections.filter((intersection) => {\n                return types.includes(intersection.description);\n            });\n        }\n        if (ids) {\n            intersections = intersections.filter((intersection) => {\n                var _a, _b;\n                return ids.includes((_b = (_a = intersection.geometry) === null || _a === void 0 ? void 0 : _a.getID()) !== null && _b !== void 0 ? _b : 0);\n            });\n        }\n        if (intersections.length === 0)\n            this.reset();\n        if (intersections.length === 1) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleClickResult(intersections[0]);\n            return;\n        }\n        const list = document.createElement(\"ul\");\n        this.element.innerHTML = \"\";\n        this.element.appendChild(list);\n        for (let intersection of intersections) {\n            const li = document.createElement(\"li\");\n            li.innerText = intersection.description;\n            li.onclick = function () {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleClickResult(intersection);\n            };\n            li.onmouseenter = function () {\n                _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.setPosition(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPixelAtPoint(intersection.point));\n            };\n            list.appendChild(li);\n        }\n        this.element.setAttribute(\"style\", `\n      left:${mousePos[0] + 20}px;\n      top:${mousePos[1] - 20}px;\n      width:auto;\n      height:auto;`);\n    }\n    destroy() {\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.hide();\n        document.body.removeChild(this.element);\n    }\n    getPoint() {\n        return this.point;\n    }\n    reset() {\n        this.clicked = false;\n        this.element.hidden = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/clicker.ts\n");

/***/ }),

/***/ "./src/commands/command.ts":
/*!*********************************!*\
  !*** ./src/commands/command.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command)\n/* harmony export */ });\nclass Command {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBSU8sTUFBZSxPQUFPO0NBUzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZC50cz80ZDA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcblxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tbWFuZCB7XG5cbiAgYWJzdHJhY3QgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQ7XG4gIGFic3RyYWN0IGhhbmRsZUNsaWNrUmVzdWx0KGludGVyc2VjdGlvbjogSW50ZXJzZWN0aW9uKTogdm9pZDtcbiAgYWJzdHJhY3QgaGFuZGxlQ2xpY2soKTogdm9pZDtcbiAgYWJzdHJhY3QgaGFuZGxlTW91c2VNb3ZlKCk6IHZvaWQ7XG4gIGFic3RyYWN0IGdldEluc3RydWN0aW9ucygpOiBzdHJpbmc7XG4gIGFic3RyYWN0IGlzRmluaXNoZWQoKTogYm9vbGVhbjtcblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/commands/command.ts\n");

/***/ }),

/***/ "./src/commands/commandManager.ts":
/*!****************************************!*\
  !*** ./src/commands/commandManager.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommandManager: () => (/* binding */ CommandManager)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _commands_arcCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/arcCommand */ \"./src/commands/commands/arcCommand.ts\");\n/* harmony import */ var _commands_arrayCommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands/arrayCommand */ \"./src/commands/commands/arrayCommand.ts\");\n/* harmony import */ var _commands_blendCurvesCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commands/blendCurvesCommand */ \"./src/commands/commands/blendCurvesCommand.ts\");\n/* harmony import */ var _commands_cameraCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commands/cameraCommand */ \"./src/commands/commands/cameraCommand.ts\");\n/* harmony import */ var _commands_circleCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./commands/circleCommand */ \"./src/commands/commands/circleCommand.ts\");\n/* harmony import */ var _commands_constructionPlaneCommand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/constructionPlaneCommand */ \"./src/commands/commands/constructionPlaneCommand.ts\");\n/* harmony import */ var _commands_copyCommand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commands/copyCommand */ \"./src/commands/commands/copyCommand.ts\");\n/* harmony import */ var _commands_curveCommand__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/curveCommand */ \"./src/commands/commands/curveCommand.ts\");\n/* harmony import */ var _commands_extrudeCurveCommand__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./commands/extrudeCurveCommand */ \"./src/commands/commands/extrudeCurveCommand.ts\");\n/* harmony import */ var _commands_loftCommand__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commands/loftCommand */ \"./src/commands/commands/loftCommand.ts\");\n/* harmony import */ var _commands_mirrorCommand__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./commands/mirrorCommand */ \"./src/commands/commands/mirrorCommand.ts\");\n/* harmony import */ var _commands_moveCommand__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./commands/moveCommand */ \"./src/commands/commands/moveCommand.ts\");\n/* harmony import */ var _commands_polarArrayCommand__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./commands/polarArrayCommand */ \"./src/commands/commands/polarArrayCommand.ts\");\n/* harmony import */ var _commands_revolveCommand__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./commands/revolveCommand */ \"./src/commands/commands/revolveCommand.ts\");\n/* harmony import */ var _commands_rotateCommand__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./commands/rotateCommand */ \"./src/commands/commands/rotateCommand.ts\");\n/* harmony import */ var _commands_scale1Command__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./commands/scale1Command */ \"./src/commands/commands/scale1Command.ts\");\n/* harmony import */ var _commands_scale2Command__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./commands/scale2Command */ \"./src/commands/commands/scale2Command.ts\");\n/* harmony import */ var _commands_scaleCommand__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./commands/scaleCommand */ \"./src/commands/commands/scaleCommand.ts\");\n/* harmony import */ var _commands_setMaterialCommand__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./commands/setMaterialCommand */ \"./src/commands/commands/setMaterialCommand.ts\");\n/* harmony import */ var _commands_shearCommand__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./commands/shearCommand */ \"./src/commands/commands/shearCommand.ts\");\n/* harmony import */ var _commands_snapsCommand__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./commands/snapsCommand */ \"./src/commands/commands/snapsCommand.ts\");\n/* harmony import */ var _commands_sphereCommand__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./commands/sphereCommand */ \"./src/commands/commands/sphereCommand.ts\");\n/* harmony import */ var _commands_splitCurveCommand__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./commands/splitCurveCommand */ \"./src/commands/commands/splitCurveCommand.ts\");\n/* harmony import */ var _commands_sweep2Command__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./commands/sweep2Command */ \"./src/commands/commands/sweep2Command.ts\");\n/* harmony import */ var _commands_windowCommand__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./commands/windowCommand */ \"./src/commands/commands/windowCommand.ts\");\n/* harmony import */ var _oneTimeCommands_hideCommands__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./oneTimeCommands/hideCommands */ \"./src/commands/oneTimeCommands/hideCommands.ts\");\n/* harmony import */ var _oneTimeCommands_reverseCurveCommand__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./oneTimeCommands/reverseCurveCommand */ \"./src/commands/oneTimeCommands/reverseCurveCommand.ts\");\n/* harmony import */ var _oneTimeCommands_toggleControlCageCommand__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./oneTimeCommands/toggleControlCageCommand */ \"./src/commands/oneTimeCommands/toggleControlCageCommand.ts\");\n/* harmony import */ var _oneTimeCommands_toggleDarkModeCommand__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./oneTimeCommands/toggleDarkModeCommand */ \"./src/commands/oneTimeCommands/toggleDarkModeCommand.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass CommandManager {\n    constructor() {\n        this.currentCommand = null;\n        this.previousInput = \"null\";\n    }\n    handleInput(input) {\n        var _a;\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().log(input);\n        input = input.toLowerCase();\n        if (this.currentCommand)\n            this.currentCommand.handleInputString(input);\n        else {\n            switch (input) {\n                case \"\":\n                    this.handleInput(this.previousInput);\n                    return;\n                case \"darkmode\":\n                case \"dm\":\n                    (0,_oneTimeCommands_toggleDarkModeCommand__WEBPACK_IMPORTED_MODULE_29__.toggleDarkMode)();\n                    break;\n                case \"constructionplane\":\n                case \"cpl\":\n                    this.currentCommand = new _commands_constructionPlaneCommand__WEBPACK_IMPORTED_MODULE_6__.ConstructionPlaneCommand();\n                    break;\n                case \"camera\":\n                case \"cam\":\n                    this.currentCommand = new _commands_cameraCommand__WEBPACK_IMPORTED_MODULE_4__.CameraCommand();\n                    break;\n                case \"curve\":\n                case \"c\":\n                    this.currentCommand = new _commands_curveCommand__WEBPACK_IMPORTED_MODULE_8__.CurveCommand();\n                    break;\n                case \"window\":\n                case \"w\":\n                    this.currentCommand = new _commands_windowCommand__WEBPACK_IMPORTED_MODULE_25__.WindowCommand();\n                    break;\n                case \"snaps\":\n                case \"sn\":\n                    this.currentCommand = new _commands_snapsCommand__WEBPACK_IMPORTED_MODULE_21__.SnapsCommand();\n                    break;\n                case \"circle\":\n                case \"ci\":\n                    this.currentCommand = new _commands_circleCommand__WEBPACK_IMPORTED_MODULE_5__.CircleCommand();\n                    break;\n                case \"arc\":\n                case \"a\":\n                    this.currentCommand = new _commands_arcCommand__WEBPACK_IMPORTED_MODULE_1__.ArcCommand();\n                    break;\n                case \"loft\":\n                case \"l\":\n                    this.currentCommand = new _commands_loftCommand__WEBPACK_IMPORTED_MODULE_10__.LoftCommand();\n                    break;\n                case \"revolve\":\n                case \"re\":\n                    this.currentCommand = new _commands_revolveCommand__WEBPACK_IMPORTED_MODULE_14__.RevolveCommand();\n                    break;\n                case \"copy\":\n                case \"cp\":\n                    this.currentCommand = new _commands_copyCommand__WEBPACK_IMPORTED_MODULE_7__.CopyCommand();\n                    break;\n                case \"move\":\n                case \"m\":\n                    this.currentCommand = new _commands_moveCommand__WEBPACK_IMPORTED_MODULE_12__.MoveCommand();\n                    break;\n                case \"scale1\":\n                case \"s1\":\n                    this.currentCommand = new _commands_scale1Command__WEBPACK_IMPORTED_MODULE_16__.Scale1Command();\n                    break;\n                case \"scale2\":\n                case \"s2\":\n                    this.currentCommand = new _commands_scale2Command__WEBPACK_IMPORTED_MODULE_17__.Scale2Command();\n                    break;\n                case \"scale\":\n                case \"s\":\n                    this.currentCommand = new _commands_scaleCommand__WEBPACK_IMPORTED_MODULE_18__.ScaleCommand();\n                    break;\n                case \"shear\":\n                case \"sh\":\n                    this.currentCommand = new _commands_shearCommand__WEBPACK_IMPORTED_MODULE_20__.ShearCommand();\n                    break;\n                case \"polar array\":\n                case \"pa\":\n                    this.currentCommand = new _commands_polarArrayCommand__WEBPACK_IMPORTED_MODULE_13__.PollarArrayCommand();\n                    break;\n                case \"linear array\":\n                case \"la\":\n                    this.currentCommand = new _commands_arrayCommand__WEBPACK_IMPORTED_MODULE_2__.LinearArrayCommand();\n                    break;\n                case \"mirror\":\n                case \"mi\":\n                    this.currentCommand = new _commands_mirrorCommand__WEBPACK_IMPORTED_MODULE_11__.MirrorCommand();\n                    break;\n                case \"rotate\":\n                case \"r\":\n                    this.currentCommand = new _commands_rotateCommand__WEBPACK_IMPORTED_MODULE_15__.RotateCommand();\n                    break;\n                case \"show controls\":\n                case \"sc\":\n                    (0,_oneTimeCommands_toggleControlCageCommand__WEBPACK_IMPORTED_MODULE_28__.ControlCageOnCommand)();\n                    break;\n                case \"hidw controls\":\n                case \"hc\":\n                    (0,_oneTimeCommands_toggleControlCageCommand__WEBPACK_IMPORTED_MODULE_28__.ControlCageOffCommand)();\n                    break;\n                case \"sphere\":\n                case \"sp\":\n                    this.currentCommand = new _commands_sphereCommand__WEBPACK_IMPORTED_MODULE_22__.SphereCommand();\n                    break;\n                case \"set material\":\n                case \"sm\":\n                    this.currentCommand = new _commands_setMaterialCommand__WEBPACK_IMPORTED_MODULE_19__.SetMaterialCommand();\n                    break;\n                case \"show\":\n                case \"sh\":\n                    (0,_oneTimeCommands_hideCommands__WEBPACK_IMPORTED_MODULE_26__.show)();\n                    break;\n                case \"hide\":\n                case \"h\":\n                    (0,_oneTimeCommands_hideCommands__WEBPACK_IMPORTED_MODULE_26__.hide)();\n                    break;\n                case \"hide swap\":\n                case \"hs\":\n                    (0,_oneTimeCommands_hideCommands__WEBPACK_IMPORTED_MODULE_26__.hideSwap)();\n                    break;\n                case \"blend curves\":\n                case \"bc\":\n                    this.currentCommand = new _commands_blendCurvesCommand__WEBPACK_IMPORTED_MODULE_3__.BlendCurvesCommand();\n                    break;\n                case \"extrude curve\":\n                case \"e\":\n                    this.currentCommand = new _commands_extrudeCurveCommand__WEBPACK_IMPORTED_MODULE_9__.ExtruedCurveCommand();\n                    break;\n                case \"sweep2\":\n                case \"sw2\":\n                    this.currentCommand = new _commands_sweep2Command__WEBPACK_IMPORTED_MODULE_24__.Sweep2Command();\n                    break;\n                case \"reverse curve\":\n                case \"rc\":\n                    (0,_oneTimeCommands_reverseCurveCommand__WEBPACK_IMPORTED_MODULE_27__.reverseCurveCommand)();\n                    break;\n                case \"split curve\":\n                case \"spc\":\n                    this.currentCommand = new _commands_splitCurveCommand__WEBPACK_IMPORTED_MODULE_23__.SplitCurveCommand();\n                    break;\n                default: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().log(\"Invalid Command\");\n            }\n            this.previousInput = input;\n        }\n        if ((_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.isFinished()) {\n            this.currentCommand = null;\n        }\n    }\n    hasActiveCommand() {\n        return this.currentCommand != null;\n    }\n    handleClickInput() {\n        var _a, _b;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleClick();\n        if ((_b = this.currentCommand) === null || _b === void 0 ? void 0 : _b.isFinished()) {\n            this.currentCommand = null;\n        }\n    }\n    handleClickResult(intersection) {\n        var _a, _b;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleClickResult(intersection);\n        if ((_b = this.currentCommand) === null || _b === void 0 ? void 0 : _b.isFinished()) {\n            this.currentCommand = null;\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCli().render();\n    }\n    handleMouseMove() {\n        var _a;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleMouseMove();\n    }\n    getInstructions() {\n        if (this.currentCommand)\n            return this.currentCommand.getInstructions();\n        return \"$\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commandManager.ts\n");

/***/ }),

/***/ "./src/commands/commands/arcCommand.ts":
/*!*********************************************!*\
  !*** ./src/commands/commands/arcCommand.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArcCommand: () => (/* binding */ ArcCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/arc */ \"./src/geometry/nurbs/arc.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\n\n\nvar ArcCommandMode;\n(function (ArcCommandMode) {\n    ArcCommandMode[ArcCommandMode[\"Menu\"] = 0] = \"Menu\";\n    ArcCommandMode[ArcCommandMode[\"FromStartEndMiddle\"] = 1] = \"FromStartEndMiddle\";\n    ArcCommandMode[ArcCommandMode[\"FromCenterStartEnd\"] = 2] = \"FromCenterStartEnd\";\n})(ArcCommandMode || (ArcCommandMode = {}));\nclass ArcCommand extends _command__WEBPACK_IMPORTED_MODULE_6__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.flipped = false;\n        this.mode = ArcCommandMode.Menu;\n        this.p1 = null;\n        this.p2 = null;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_5__.Clicker();\n        this.curve = null;\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            this.finished = true;\n            return;\n        }\n        if (this.mode == ArcCommandMode.Menu) {\n            switch (input) {\n                case \"1\":\n                    this.mode = ArcCommandMode.FromStartEndMiddle;\n                    break;\n                case \"2\":\n                    this.mode = ArcCommandMode.FromCenterStartEnd;\n                    break;\n            }\n        }\n        if (this.mode == ArcCommandMode.FromCenterStartEnd) {\n            if (this.p1 && this.p2 && input == \"1\") {\n                this.flipped = !this.flipped;\n                this.handleMouseMove();\n            }\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case ArcCommandMode.Menu:\n                break;\n            case ArcCommandMode.FromStartEndMiddle:\n                this.handleClickStartEndMiddle(intersection);\n                break;\n            case ArcCommandMode.FromCenterStartEnd:\n                this.handleClickCenterStartEnd(intersection);\n                break;\n            default:\n                throw new Error(\"case not handled\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        switch (this.mode) {\n            case ArcCommandMode.FromCenterStartEnd:\n                this.handleMouseMoveCenterStartEnd(null);\n                break;\n            case ArcCommandMode.FromStartEndMiddle:\n                this.handleMouseMoveStartEndMiddle(null);\n                break;\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case ArcCommandMode.Menu:\n                return \"0:Exit  1:StartEndMiddle  2:CenterStartEnd  $\";\n            case ArcCommandMode.FromStartEndMiddle:\n                return this.getInstructionsStartEndMiddle();\n            case ArcCommandMode.FromCenterStartEnd:\n                return this.getInstructionsCenterStartEnd();\n            default:\n                throw new Error(\"case not handled\");\n        }\n    }\n    getInstructionsStartEndMiddle() {\n        if (this.p1 === null) {\n            return \"0:Exit  Click start point.  $\";\n        }\n        if (this.p2 === null) {\n            return \"0:Exit  Click end point.  $\";\n        }\n        return \"0:Exit  click middle point.  $\";\n    }\n    getInstructionsCenterStartEnd() {\n        if (this.p1 === null) {\n            return \"0: Exit  click center point.  $\";\n        }\n        if (this.p2 === null) {\n            return \"0: Exit  click start point.  $\";\n        }\n        return \"0: Exit  1:Flip  click end point.  $\";\n    }\n    handleClickStartEndMiddle(intersection) {\n        if (this.p1 === null) {\n            this.p1 = intersection.point;\n        }\n        else if (this.p2 === null && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.equals(this.p1, intersection.point)) {\n            this.p2 = intersection.point;\n        }\n        else {\n            this.handleMouseMoveStartEndMiddle(intersection.point);\n            this.done();\n        }\n    }\n    handleClickCenterStartEnd(intersection) {\n        if (this.p1 === null) {\n            this.p1 = intersection.point;\n        }\n        else if (this.p2 === null && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.equals(this.p1, intersection.point)) {\n            this.p2 = intersection.point;\n        }\n        else {\n            this.handleMouseMoveCenterStartEnd(intersection.point);\n            this.done();\n        }\n    }\n    handleMouseMoveStartEndMiddle(point) {\n        var _a;\n        if (this.p1 && this.p2) {\n            if (!point)\n                point = this.clicker.getPoint();\n            if (point) {\n                const ab = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(this.p1, point);\n                const ac = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(this.p2, point);\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(ab, ac));\n                const ro = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.add(point, this.p1), 0.5);\n                const rd = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(ab, normal));\n                const r = new _geometry_ray__WEBPACK_IMPORTED_MODULE_3__.Ray(ro, rd);\n                const po = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.add(point, this.p2), 0.5);\n                const pn = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(ac);\n                const p = new _geometry_plane__WEBPACK_IMPORTED_MODULE_2__.Plane(po, pn);\n                const t = r.intersectPlane(p, true);\n                const center = r.at(t);\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.distance(point, center);\n                const xAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(this.p2, center));\n                const yAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(normal, xAxis);\n                var theta = (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.angleBetween)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(this.p1, center), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(this.p2, center));\n                if ((0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.angleBetween)(ab, ac) < Math.PI / 2) {\n                    theta = 2 * Math.PI - theta;\n                }\n                if (isNaN(theta) || theta === 0)\n                    return;\n                (_a = this.curve) === null || _a === void 0 ? void 0 : _a.delete();\n                this.curve = (0,_geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_1__.createArc)(center, xAxis, yAxis, radius, 0, theta);\n            }\n        }\n    }\n    handleMouseMoveCenterStartEnd(point) {\n        var _a;\n        if (this.p1 && this.p2) {\n            if (!point)\n                point = this.clicker.getPoint();\n            if (point) {\n                const xAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(this.p2, this.p1));\n                const toEnd = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(point, this.p1);\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(xAxis, toEnd));\n                const yAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(normal, xAxis);\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.length(toEnd);\n                var theta = (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.angleBetween)(xAxis, toEnd);\n                if (this.flipped) {\n                    theta = Math.PI * 2 - theta;\n                    wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(yAxis, -1, yAxis);\n                }\n                if (isNaN(theta) || theta === 0)\n                    return;\n                (_a = this.curve) === null || _a === void 0 ? void 0 : _a.delete();\n                this.curve = (0,_geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_1__.createArc)(this.p1, xAxis, yAxis, radius, 0, theta);\n            }\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        if (this.curve) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.curve);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/arcCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/arrayCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/arrayCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LinearArrayCommand: () => (/* binding */ LinearArrayCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\nvar LinearArrayCommandMode;\n(function (LinearArrayCommandMode) {\n    LinearArrayCommandMode[LinearArrayCommandMode[\"EnterCount\"] = 0] = \"EnterCount\";\n    LinearArrayCommandMode[LinearArrayCommandMode[\"BasePoint\"] = 1] = \"BasePoint\";\n    LinearArrayCommandMode[LinearArrayCommandMode[\"DirectionPoint\"] = 2] = \"DirectionPoint\";\n})(LinearArrayCommandMode || (LinearArrayCommandMode = {}));\nclass LinearArrayCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_1__.Clicker();\n        this.mode = LinearArrayCommandMode.EnterCount;\n        this.geometry = [];\n        this.arrayedGeometry = [];\n        this.basePoint = null;\n        this.directionPoint = null;\n        this.count = null;\n        const selected = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selected.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geo of selected) {\n            this.geometry.push(geo);\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            this.done();\n            return;\n        }\n        switch (this.mode) {\n            case LinearArrayCommandMode.EnterCount:\n                const count = parseInt(input);\n                if (!isNaN(count) && count > 1) {\n                    this.count = count;\n                    this.mode = LinearArrayCommandMode.BasePoint;\n                }\n                break;\n            case LinearArrayCommandMode.BasePoint:\n                break;\n            case LinearArrayCommandMode.DirectionPoint:\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case LinearArrayCommandMode.EnterCount:\n                break;\n            case LinearArrayCommandMode.BasePoint:\n                this.basePoint = intersection.point;\n                this.mode = LinearArrayCommandMode.DirectionPoint;\n                for (var i = 1; i < this.count; i++) {\n                    const translated = [];\n                    for (const geo of this.geometry) {\n                        translated.push(geo.clone());\n                    }\n                    this.arrayedGeometry.push(translated);\n                }\n                break;\n            case LinearArrayCommandMode.DirectionPoint:\n                this.directionPoint = intersection.point;\n                this.setTranslation();\n                for (const v of this.arrayedGeometry) {\n                    for (const geo of v) {\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n                        this.geometry.push(geo);\n                    }\n                }\n                this.arrayedGeometry = [];\n                this.mode = LinearArrayCommandMode.EnterCount;\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode == LinearArrayCommandMode.DirectionPoint) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                this.directionPoint = point;\n                this.setTranslation();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case LinearArrayCommandMode.EnterCount:\n                return \"0:Exit  Enter array count.  $\";\n            case LinearArrayCommandMode.BasePoint:\n                return \"0:Exit  Click base point.  $\";\n            case LinearArrayCommandMode.DirectionPoint:\n                return \"0:Exit  Click direction point.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        for (const v of this.arrayedGeometry) {\n            for (const geo of v) {\n                geo.delete();\n            }\n        }\n    }\n    setTranslation() {\n        const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(this.directionPoint, this.basePoint);\n        for (let i = 1; i < this.count; i++) {\n            const scaledTranslation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(translation, i);\n            const transform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.translation(scaledTranslation);\n            for (let j = 0; j < this.geometry.length; j++) {\n                this.arrayedGeometry[i - 1][j].setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.mul(transform, this.geometry[j].getModel()));\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/arrayCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/blendCurvesCommand.ts":
/*!*****************************************************!*\
  !*** ./src/commands/commands/blendCurvesCommand.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlendCurvesCommand: () => (/* binding */ BlendCurvesCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\nvar BlendCurvesCommandMode;\n(function (BlendCurvesCommandMode) {\n    BlendCurvesCommandMode[BlendCurvesCommandMode[\"SelectCurve1\"] = 0] = \"SelectCurve1\";\n    BlendCurvesCommandMode[BlendCurvesCommandMode[\"SelectCurve2\"] = 1] = \"SelectCurve2\";\n    BlendCurvesCommandMode[BlendCurvesCommandMode[\"Menu\"] = 2] = \"Menu\";\n    BlendCurvesCommandMode[BlendCurvesCommandMode[\"AdjustEnd1\"] = 3] = \"AdjustEnd1\";\n    BlendCurvesCommandMode[BlendCurvesCommandMode[\"AdjustEnd2\"] = 4] = \"AdjustEnd2\";\n})(BlendCurvesCommandMode || (BlendCurvesCommandMode = {}));\nclass BlendCurvesCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.mode = BlendCurvesCommandMode.SelectCurve1;\n        this.curve = null;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_2__.Clicker();\n        this.useStartOfCurve1 = true;\n        this.useStartOfCurve2 = true;\n        this.ray1 = null;\n        this.ray2 = null;\n        this.curve1 = null;\n        this.curve2 = null;\n        this.p1 = null;\n        this.p2 = null;\n    }\n    handleInputString(input) {\n        var _a;\n        if (input == \"0\") {\n            (_a = this.curve) === null || _a === void 0 ? void 0 : _a.delete();\n            this.curve = null;\n            this.done();\n        }\n        else {\n            if (this.mode === BlendCurvesCommandMode.Menu) {\n                switch (input) {\n                    case \"\":\n                        this.done();\n                        break;\n                    case \"1\": { // flip 1\n                        const dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.ray1.getOrigin(), this.p1);\n                        if (this.useStartOfCurve1) {\n                            this.ray1 = this.curve1.getEndRay();\n                        }\n                        else {\n                            this.ray1 = this.curve1.getStartRay();\n                        }\n                        this.useStartOfCurve1 = !this.useStartOfCurve1;\n                        this.p1 = this.ray1.at(dist);\n                        this.generateCurve();\n                        break;\n                    }\n                    case \"2\": { // flip 2\n                        const dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.ray2.getOrigin(), this.p2);\n                        if (this.useStartOfCurve2) {\n                            this.ray2 = this.curve2.getEndRay();\n                        }\n                        else {\n                            this.ray2 = this.curve2.getStartRay();\n                        }\n                        this.useStartOfCurve2 = !this.useStartOfCurve2;\n                        this.p2 = this.ray2.at(dist);\n                        this.generateCurve();\n                        break;\n                    }\n                    case \"3\": // adjust 1\n                        this.mode = BlendCurvesCommandMode.AdjustEnd1;\n                        break;\n                    case \"4\": // adjust 2\n                        this.mode = BlendCurvesCommandMode.AdjustEnd2;\n                        break;\n                }\n            }\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case BlendCurvesCommandMode.SelectCurve1:\n                this.curve1 = intersection.geometry;\n                this.mode = BlendCurvesCommandMode.SelectCurve2;\n                break;\n            case BlendCurvesCommandMode.SelectCurve2:\n                this.curve2 = intersection.geometry;\n                this.mode = BlendCurvesCommandMode.Menu;\n                this.ray1 = this.curve1.getStartRay();\n                this.ray2 = this.curve2.getStartRay();\n                const distance = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.ray1.getOrigin(), this.ray2.getOrigin());\n                this.p1 = this.ray1.at(distance / 3);\n                this.p2 = this.ray2.at(distance / 3);\n                this.generateCurve();\n                break;\n            case BlendCurvesCommandMode.Menu:\n                break;\n            case BlendCurvesCommandMode.AdjustEnd1:\n                this.p1 = this.ray1.closestPointToPoint(intersection.point);\n                this.generateCurve();\n                this.mode = BlendCurvesCommandMode.Menu;\n                break;\n            case BlendCurvesCommandMode.AdjustEnd2:\n                this.p2 = this.ray2.closestPointToPoint(intersection.point);\n                this.generateCurve();\n                this.mode = BlendCurvesCommandMode.Menu;\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    generateCurve() {\n        var _a;\n        (_a = this.curve) === null || _a === void 0 ? void 0 : _a.delete();\n        const controls = [\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...this.ray1.getOrigin(), 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...this.p1, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...this.p2, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...this.ray2.getOrigin(), 1),\n        ];\n        this.curve = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__.Curve(null, controls, 2);\n        this.curve.showControls(true);\n    }\n    handleClick() {\n        if (this.mode === BlendCurvesCommandMode.SelectCurve1 ||\n            this.mode === BlendCurvesCommandMode.SelectCurve2) {\n            this.clicker.click([\"curve\"]);\n        }\n        else {\n            this.clicker.click();\n        }\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        const point = this.clicker.getPoint();\n        if (point) {\n            if (this.mode === BlendCurvesCommandMode.AdjustEnd1) {\n                this.p1 = this.ray1.closestPointToPoint(point);\n                this.generateCurve();\n            }\n            else if (this.mode === BlendCurvesCommandMode.AdjustEnd2) {\n                this.p2 = this.ray2.closestPointToPoint(point);\n                this.generateCurve();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case BlendCurvesCommandMode.SelectCurve1:\n                return \"0:Exit  Select first curve to blend.  $\";\n            case BlendCurvesCommandMode.SelectCurve2:\n                return \"0:Exit  Select second curve to blend.  $\";\n            case BlendCurvesCommandMode.Menu:\n                return \"0:Exit  1:FlipCurve1  2:FlipCurve2  3:AdjustEnd1  4:AdjustEnd2  $\";\n            case BlendCurvesCommandMode.AdjustEnd1:\n                return \"0:Exit  Click to place control point.  $\";\n            case BlendCurvesCommandMode.AdjustEnd2:\n                return \"0:Exit  Click to place control point.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        if (this.curve) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.curve);\n            this.curve.showControls(false);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/blendCurvesCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/cameraCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/cameraCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CameraCommand: () => (/* binding */ CameraCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nvar CameraCommandMode;\n(function (CameraCommandMode) {\n    CameraCommandMode[CameraCommandMode[\"Menu\"] = 0] = \"Menu\";\n    CameraCommandMode[CameraCommandMode[\"Fovy\"] = 1] = \"Fovy\";\n})(CameraCommandMode || (CameraCommandMode = {}));\nclass CameraCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.mode = CameraCommandMode.Menu;\n        this.finished = false;\n    }\n    handleInputString(input) {\n        switch (this.mode) {\n            case CameraCommandMode.Menu:\n                this.handleMenuInput(input);\n                break;\n            case CameraCommandMode.Fovy:\n                this.handleFovyInput(input);\n                break;\n        }\n    }\n    handleClick() {\n    }\n    handleMouseMove() {\n    }\n    handleClickResult(input) {\n    }\n    getInstructions() {\n        const fovy = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getFovy();\n        const fovyDegrees = (180.0 * fovy / Math.PI).toFixed(1);\n        switch (this.mode) {\n            case CameraCommandMode.Menu:\n                return `0:Exit  1:FOVY(${fovyDegrees})  $`;\n            case CameraCommandMode.Fovy:\n                return `0:Exit  Enter New FOVY(${fovyDegrees})  $`;\n            default:\n                console.error(\"Unimplemented CameraCommandMode\");\n                return \"\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleFovyInput(input) {\n        const inputNum = parseFloat(input);\n        if (!isNaN(inputNum)) {\n            if (inputNum === 0) {\n                this.mode = CameraCommandMode.Menu;\n            }\n            if (inputNum) {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().setFovy(Math.PI * inputNum / 180.0);\n                this.mode = CameraCommandMode.Menu;\n            }\n        }\n    }\n    handleMenuInput(input) {\n        switch (input) {\n            case \"0\":\n            case \"exit\":\n                this.finished = true;\n                break;\n            case \"1\":\n            case \"fovy\":\n                this.mode = CameraCommandMode.Fovy;\n                break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvY2FtZXJhQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDcUM7QUFFQTtBQUVyQyxJQUFLLGlCQUdKO0FBSEQsV0FBSyxpQkFBaUI7SUFDcEIseURBQUk7SUFDSix5REFBSTtBQUNOLENBQUMsRUFISSxpQkFBaUIsS0FBakIsaUJBQWlCLFFBR3JCO0FBRU0sTUFBTSxhQUFjLFNBQVEsNkNBQU87SUFLeEM7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUFFZSxpQkFBaUIsQ0FBQyxLQUFhO1FBQzdDLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNqQixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVCLE1BQU07WUFDUixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVCLE1BQU07U0FDVDtJQUNILENBQUM7SUFFZSxXQUFXO0lBRTNCLENBQUM7SUFFZSxlQUFlO0lBRS9CLENBQUM7SUFFZSxpQkFBaUIsQ0FBQyxLQUFtQjtJQUNyRCxDQUFDO0lBRWUsZUFBZTtRQUM3QixNQUFNLElBQUksR0FBVywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQy9ELE1BQU0sV0FBVyxHQUFXLENBQUMsS0FBSyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNqQixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLE9BQU8sa0JBQWtCLFdBQVcsTUFBTSxDQUFDO1lBQzdDLEtBQUssaUJBQWlCLENBQUMsSUFBSTtnQkFDekIsT0FBTywwQkFBMEIsV0FBVyxNQUFNLENBQUM7WUFDckQ7Z0JBQ0UsT0FBTyxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO2dCQUNqRCxPQUFPLEVBQUUsQ0FBQztTQUNiO0lBQ0gsQ0FBQztJQUVlLFVBQVU7UUFDeEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTyxlQUFlLENBQUMsS0FBYTtRQUNuQyxNQUFNLFFBQVEsR0FBVyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNwQixJQUFJLFFBQVEsS0FBSyxDQUFDLEVBQUU7Z0JBQ2xCLElBQUksQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDO2FBQ3BDO1lBQ0QsSUFBSSxRQUFRLEVBQUU7Z0JBQ1osMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxRQUFRLEdBQUcsS0FBSyxDQUFDLENBQUM7Z0JBQ3BFLElBQUksQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDO2FBQ3BDO1NBQ0Y7SUFDSCxDQUFDO0lBRU8sZUFBZSxDQUFDLEtBQWE7UUFDbkMsUUFBUSxLQUFLLEVBQUU7WUFDYixLQUFLLEdBQUcsQ0FBQztZQUFDLEtBQUssTUFBTTtnQkFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7Z0JBQ3JCLE1BQU07WUFDUixLQUFLLEdBQUcsQ0FBQztZQUFDLEtBQUssTUFBTTtnQkFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7Z0JBQ25DLE1BQU07U0FDVDtJQUNILENBQUM7Q0FJRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NvbW1hbmRzL2NhbWVyYUNvbW1hbmQudHM/NWUyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiO1xuXG5lbnVtIENhbWVyYUNvbW1hbmRNb2RlIHtcbiAgTWVudSxcbiAgRm92eSxcbn1cblxuZXhwb3J0IGNsYXNzIENhbWVyYUNvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHtcblxuICBwcml2YXRlIG1vZGU6IENhbWVyYUNvbW1hbmRNb2RlO1xuICBwcml2YXRlIGZpbmlzaGVkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIENhbWVyYUNvbW1hbmRNb2RlLk1lbnU6XG4gICAgICAgIHRoaXMuaGFuZGxlTWVudUlucHV0KGlucHV0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIENhbWVyYUNvbW1hbmRNb2RlLkZvdnk6XG4gICAgICAgIHRoaXMuaGFuZGxlRm92eUlucHV0KGlucHV0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZUNsaWNrKCk6IHZvaWQge1xuXG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlTW91c2VNb3ZlKCk6IHZvaWQge1xuXG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlQ2xpY2tSZXN1bHQoaW5wdXQ6IEludGVyc2VjdGlvbik6IHZvaWQge1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGZvdnk6IG51bWJlciA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q2FtZXJhKCkuZ2V0Rm92eSgpO1xuICAgIGNvbnN0IGZvdnlEZWdyZWVzOiBzdHJpbmcgPSAoMTgwLjAgKiBmb3Z5IC8gTWF0aC5QSSkudG9GaXhlZCgxKTtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBDYW1lcmFDb21tYW5kTW9kZS5NZW51OlxuICAgICAgICByZXR1cm4gYDA6RXhpdCAgMTpGT1ZZKCR7Zm92eURlZ3JlZXN9KSAgJGA7XG4gICAgICBjYXNlIENhbWVyYUNvbW1hbmRNb2RlLkZvdnk6XG4gICAgICAgIHJldHVybiBgMDpFeGl0ICBFbnRlciBOZXcgRk9WWSgke2ZvdnlEZWdyZWVzfSkgICRgO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29uc29sZS5lcnJvcihcIlVuaW1wbGVtZW50ZWQgQ2FtZXJhQ29tbWFuZE1vZGVcIik7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBpc0ZpbmlzaGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZpbmlzaGVkO1xuICB9XG5cbiAgcHJpdmF0ZSBoYW5kbGVGb3Z5SW5wdXQoaW5wdXQ6IHN0cmluZykge1xuICAgIGNvbnN0IGlucHV0TnVtOiBudW1iZXIgPSBwYXJzZUZsb2F0KGlucHV0KTtcbiAgICBpZiAoIWlzTmFOKGlucHV0TnVtKSkge1xuICAgICAgaWYgKGlucHV0TnVtID09PSAwKSB7XG4gICAgICAgIHRoaXMubW9kZSA9IENhbWVyYUNvbW1hbmRNb2RlLk1lbnU7XG4gICAgICB9XG4gICAgICBpZiAoaW5wdXROdW0pIHtcbiAgICAgICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDYW1lcmEoKS5zZXRGb3Z5KE1hdGguUEkgKiBpbnB1dE51bSAvIDE4MC4wKTtcbiAgICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZU1lbnVJbnB1dChpbnB1dDogc3RyaW5nKSB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgY2FzZSBcIjBcIjogY2FzZSBcImV4aXRcIjpcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIjFcIjogY2FzZSBcImZvdnlcIjpcbiAgICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuRm92eTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/cameraCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/circleCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/circleCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CircleCommand: () => (/* binding */ CircleCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/circle */ \"./src/geometry/nurbs/circle.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\nvar CircleCommandMode;\n(function (CircleCommandMode) {\n    CircleCommandMode[CircleCommandMode[\"Menu\"] = 0] = \"Menu\";\n    CircleCommandMode[CircleCommandMode[\"ThreePoints\"] = 1] = \"ThreePoints\";\n    CircleCommandMode[CircleCommandMode[\"CenterNormalRadius\"] = 2] = \"CenterNormalRadius\";\n    CircleCommandMode[CircleCommandMode[\"CenterPointPoint\"] = 3] = \"CenterPointPoint\";\n})(CircleCommandMode || (CircleCommandMode = {}));\nclass CircleCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_2__.Clicker();\n        this.mode = CircleCommandMode.Menu;\n        this.v1 = null;\n        this.v2 = null;\n        this.v3 = null;\n        this.curve = null;\n    }\n    handleInputString(input) {\n        if (input === \"0\") {\n            this.done();\n            return;\n        }\n        switch (this.mode) {\n            case CircleCommandMode.Menu:\n                if (input === \"1\")\n                    this.mode = CircleCommandMode.ThreePoints;\n                if (input === \"2\")\n                    this.mode = CircleCommandMode.CenterNormalRadius;\n                if (input === \"3\")\n                    this.mode = CircleCommandMode.CenterPointPoint;\n                break;\n            case CircleCommandMode.CenterNormalRadius:\n                if (this.v3) {\n                    const radius = parseFloat(input);\n                    if (!isNaN(radius)) {\n                        const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v2, this.v3));\n                        if (this.curve)\n                            this.curve.delete();\n                        this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n                        this.done();\n                    }\n                }\n                break;\n        }\n    }\n    handleClickResult(intersection) {\n        if (this.clicker.getPoint()) {\n            switch (this.mode) {\n                case CircleCommandMode.CenterPointPoint:\n                    this.handleClickCenterPointPoint(intersection.point);\n                    break;\n                case CircleCommandMode.ThreePoints:\n                    this.handleClickThreePoints(intersection.point);\n                    break;\n                case CircleCommandMode.CenterNormalRadius:\n                    this.handleClickCenterNormalRadius(intersection.point);\n                    break;\n            }\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.clicker.getPoint()) {\n            switch (this.mode) {\n                case CircleCommandMode.CenterPointPoint:\n                    this.handleMouseMoveCenterPointPoint(this.clicker.getPoint());\n                    break;\n                case CircleCommandMode.ThreePoints:\n                    this.handleMouseMoveThreePoints(this.clicker.getPoint());\n                    break;\n                case CircleCommandMode.CenterNormalRadius:\n                    this.handleMouseMoveCenterNormalRadius(this.clicker.getPoint());\n                    break;\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case CircleCommandMode.Menu:\n                return \"0:Exit  1:FromThreePoints  2:FromNormalCenterRadius 3:CenterPointPoint $\";\n            case CircleCommandMode.ThreePoints:\n                return this.getInstructionsThreePoints();\n            case CircleCommandMode.CenterPointPoint:\n                return this.getInstructionsCenterPointPoint();\n            case CircleCommandMode.CenterNormalRadius:\n                return this.getInstructionsCenterNormalRadius();\n            default:\n                throw new Error(\"unhandled switch enum\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleClickCenterPointPoint(point) {\n        if (!this.v1) {\n            this.v1 = point;\n        }\n        else if (!this.v2) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point))\n                this.v2 = point;\n        }\n        else if (!this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, this.v2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, point)));\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, this.v2);\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n                this.done();\n            }\n        }\n    }\n    handleMouseMoveCenterPointPoint(point) {\n        if (this.v2) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, this.v2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, point)));\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, this.v2);\n                if (this.curve)\n                    this.curve.delete();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n            }\n        }\n    }\n    getInstructionsCenterPointPoint() {\n        if (!this.v1) {\n            return \"0:Exit  Click center point.\";\n        }\n        else if (!this.v2) {\n            return \"0:Exit  Click point on circle perimeter.\";\n        }\n        else {\n            return \"0:Exit  Click point to establish plane.\";\n        }\n    }\n    handleClickThreePoints(point) {\n        if (!this.v1) {\n            this.v1 = point;\n        }\n        else if (!this.v2) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point))\n                this.v2 = point;\n        }\n        else if (!this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                if (this.curve)\n                    this.curve.delete();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleThreePoints)(this.v1, this.v2, point);\n                this.done();\n            }\n        }\n    }\n    handleMouseMoveThreePoints(point) {\n        if (this.v2 && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point)) {\n            if (this.curve)\n                this.curve.delete();\n            this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleThreePoints)(this.v1, this.v2, point);\n        }\n    }\n    getInstructionsThreePoints() {\n        if (this.v1 == null)\n            return \"0:Exit Click first point\";\n        else if (this.v2 == null)\n            return \"0:Exit Click second point\";\n        return \"0:Exit Click third point\";\n    }\n    handleClickCenterNormalRadius(point) {\n        if (!this.v1) {\n            this.v1 = point;\n        }\n        else if (!this.v2) {\n            this.v2 = point;\n        }\n        else if (!this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                this.v3 = point;\n            }\n        }\n        else {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point)) {\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, point);\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v2, this.v3));\n                if (this.curve)\n                    this.curve.delete();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n                this.done();\n            }\n        }\n    }\n    handleMouseMoveCenterNormalRadius(point) {\n        if (this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point)) {\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, point);\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v2, this.v3));\n                if (this.curve)\n                    this.curve.delete();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n            }\n        }\n    }\n    getInstructionsCenterNormalRadius() {\n        if (!this.v1) {\n            return \"0:Exit  Click center point.\";\n        }\n        else if (!this.v2) {\n            return \"0:Exit  Click start of normal vector.\";\n        }\n        else if (!this.v3) {\n            return \"0:Exit  Click end of normal vector.\";\n        }\n        else {\n            return \"0:Exit  Enter radius or click to determine radius.  $\";\n        }\n    }\n    done() {\n        if (this.curve) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.curve);\n        }\n        this.finished = true;\n        this.clicker.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/circleCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/constructionPlaneCommand.ts":
/*!***********************************************************!*\
  !*** ./src/commands/commands/constructionPlaneCommand.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConstructionPlaneCommand: () => (/* binding */ ConstructionPlaneCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nvar ConstructionPlaneCommandMode;\n(function (ConstructionPlaneCommandMode) {\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"Menu\"] = 0] = \"Menu\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeMajorCount\"] = 1] = \"ChangeMajorCount\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeMinorCount\"] = 2] = \"ChangeMinorCount\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeSpacing\"] = 3] = \"ChangeSpacing\";\n})(ConstructionPlaneCommandMode || (ConstructionPlaneCommandMode = {}));\nclass ConstructionPlaneCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.mode = ConstructionPlaneCommandMode.Menu;\n        this.finished = false;\n    }\n    handleClickResult(input) {\n    }\n    handleInputString(input) {\n        switch (this.mode) {\n            case ConstructionPlaneCommandMode.Menu:\n                this.handleMenuInput(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeMajorCount:\n                this.changeMajorCount(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeMinorCount:\n                this.changeMinorCount(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeSpacing:\n                this.changeCellSize(input);\n                break;\n            default: console.error(\"Unhandled Mode\");\n        }\n    }\n    handleClick() {\n    }\n    getInstructions() {\n        const constructionPlane = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane();\n        const minorCount = constructionPlane.getMinorCount().toString();\n        const majorCount = constructionPlane.getMajorCount().toString();\n        const cellSize = constructionPlane.getCellSize().toFixed(2);\n        switch (this.mode) {\n            case ConstructionPlaneCommandMode.Menu:\n                return `0:Exit,  1:MajorCount(${majorCount}),  2:MinorCount(${minorCount}),  3:CellSize(${cellSize})  $`;\n            case ConstructionPlaneCommandMode.ChangeMajorCount:\n                return `0:Exit,  Enter New Major Count(${majorCount})  $`;\n            case ConstructionPlaneCommandMode.ChangeMinorCount:\n                return `0:Exit,  Enter New Minor Count(${minorCount})  $`;\n            case ConstructionPlaneCommandMode.ChangeSpacing:\n                return `0:Exit,  Enter New Cell Size(${cellSize})  $`;\n            default: console.error(\"Unhandled Mode\");\n        }\n        return \"\";\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleMouseMove() {\n    }\n    handleMenuInput(input) {\n        switch (input) {\n            case \"0\":\n            case \"exit\":\n                this.finished = true;\n                return;\n            case \"1\":\n            case \"majorcount\":\n                this.mode = ConstructionPlaneCommandMode.ChangeMajorCount;\n                return;\n            case \"2\":\n            case \"minorcount\":\n                this.mode = ConstructionPlaneCommandMode.ChangeMinorCount;\n                return;\n            case \"3\":\n            case \"cellspacing\":\n                this.mode = ConstructionPlaneCommandMode.ChangeSpacing;\n                return;\n        }\n    }\n    changeMajorCount(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const count = parseInt(input);\n        if (count) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorCount(count);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n    changeMinorCount(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const count = parseInt(input);\n        if (count) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMinorCount(count);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n    changeCellSize(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const size = parseFloat(input);\n        if (size) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setCellSize(size);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvY29uc3RydWN0aW9uUGxhbmVDb21tYW5kLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUNxQztBQUVEO0FBR3BDLElBQUssNEJBS0o7QUFMRCxXQUFLLDRCQUE0QjtJQUMvQiwrRUFBSTtJQUNKLHVHQUFnQjtJQUNoQix1R0FBZ0I7SUFDaEIsaUdBQWE7QUFDZixDQUFDLEVBTEksNEJBQTRCLEtBQTVCLDRCQUE0QixRQUtoQztBQUVNLE1BQU0sd0JBQXlCLFNBQVEsNkNBQU87SUFLbkQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxJQUFJLEdBQUcsNEJBQTRCLENBQUMsSUFBSSxDQUFDO1FBQzlDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxLQUFtQjtJQUNyQyxDQUFDO0lBRWUsaUJBQWlCLENBQUMsS0FBYTtRQUM3QyxRQUFRLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDakIsS0FBSyw0QkFBNEIsQ0FBQyxJQUFJO2dCQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUM1QixNQUFNO1lBQ1IsS0FBSyw0QkFBNEIsQ0FBQyxnQkFBZ0I7Z0JBQ2hELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDN0IsTUFBTTtZQUNSLEtBQUssNEJBQTRCLENBQUMsZ0JBQWdCO2dCQUNoRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzdCLE1BQUs7WUFDUCxLQUFLLDRCQUE0QixDQUFDLGFBQWE7Z0JBQzdDLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzNCLE1BQUs7WUFDUCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDMUM7SUFDSCxDQUFDO0lBRWUsV0FBVztJQUUzQixDQUFDO0lBRWUsZUFBZTtR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LENBQUMsSUFBSSxDQUFDO1NBQy9DO0lBQ0gsQ0FBQztJQUVPLGNBQWMsQ0FBQyxLQUFhO1FBQ2xDLElBQUksS0FBSyxLQUFLLEdBQUcsSUFBSSxLQUFLLEtBQUssTUFBTSxFQUFFO1lBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsNEJBQTRCLENBQUMsSUFBSSxDQUFDO1NBQy9DO1FBQ0QsTUFBTSxJQUFJLEdBQXVCLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuRCxJQUFJLElBQUksRUFBRTtZQUNSLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0QsSUFBSSxDQUFDLElBQUksR0FBRyw0QkFBNEIsQ0FBQyxJQUFJLENBQUM7U0FDL0M7SUFDSCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9jb21tYW5kcy9jb21tYW5kcy9jb25zdHJ1Y3Rpb25QbGFuZUNvbW1hbmQudHM/YTYwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiXG5cblxuZW51bSBDb25zdHJ1Y3Rpb25QbGFuZUNvbW1hbmRNb2RlIHtcbiAgTWVudSxcbiAgQ2hhbmdlTWFqb3JDb3VudCxcbiAgQ2hhbmdlTWlub3JDb3VudCxcbiAgQ2hhbmdlU3BhY2luZyxcbn1cblxuZXhwb3J0IGNsYXNzIENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgbW9kZTogQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZTtcbiAgcHJpdmF0ZSBmaW5pc2hlZDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMubW9kZSA9IENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZE1vZGUuTWVudTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gIH1cblxuICBoYW5kbGVDbGlja1Jlc3VsdChpbnB1dDogSW50ZXJzZWN0aW9uKTogdm9pZCB7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZE1vZGUuTWVudTpcbiAgICAgICAgdGhpcy5oYW5kbGVNZW51SW5wdXQoaW5wdXQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5DaGFuZ2VNYWpvckNvdW50OlxuICAgICAgICB0aGlzLmNoYW5nZU1ham9yQ291bnQoaW5wdXQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5DaGFuZ2VNaW5vckNvdW50OlxuICAgICAgICB0aGlzLmNoYW5nZU1pbm9yQ291bnQoaW5wdXQpO1xuICAgICAgICBicmVha1xuICAgICAgY2FzZSBDb25zdHJ1Y3Rpb25QbGFuZUNvbW1hbmRNb2RlLkNoYW5nZVNwYWNpbmc6XG4gICAgICAgIHRoaXMuY2hhbmdlQ2VsbFNpemUoaW5wdXQpO1xuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDogY29uc29sZS5lcnJvcihcIlVuaGFuZGxlZCBNb2RlXCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVDbGljaygpOiB2b2lkIHtcblxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNvbnN0cnVjdGlvblBsYW5lID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDb25zdHJ1Y3Rpb25QbGFuZSgpO1xuICAgIGNvbnN0IG1pbm9yQ291bnQ6IHN0cmluZyA9IGNvbnN0cnVjdGlvblBsYW5lLmdldE1pbm9yQ291bnQoKS50b1N0cmluZygpO1xuICAgIGNvbnN0IG1ham9yQ291bnQ6IHN0cmluZyA9IGNvbnN0cnVjdGlvblBsYW5lLmdldE1ham9yQ291bnQoKS50b1N0cmluZygpO1xuICAgIGNvbnN0IGNlbGxTaXplOiBzdHJpbmcgPSBjb25zdHJ1Y3Rpb25QbGFuZS5nZXRDZWxsU2l6ZSgpLnRvRml4ZWQoMik7XG4gICAgc3dpdGNoICh0aGlzLm1vZGUpIHtcbiAgICAgIGNhc2UgQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5NZW51OlxuICAgICAgICByZXR1cm4gYDA6RXhpdCwgIDE6TWFqb3JDb3VudCgke21ham9yQ291bnR9KSwgIDI6TWlub3JDb3VudCgke21pbm9yQ291bnR9KSwgIDM6Q2VsbFNpemUoJHtjZWxsU2l6ZX0pICAkYDtcbiAgICAgIGNhc2UgQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5DaGFuZ2VNYWpvckNvdW50OlxuICAgICAgICByZXR1cm4gYDA6RXhpdCwgIEVudGVyIE5ldyBNYWpvciBDb3VudCgke21ham9yQ291bnR9KSAgJGA7XG4gICAgICBjYXNlIENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZE1vZGUuQ2hhbmdlTWlub3JDb3VudDpcbiAgICAgICAgcmV0dXJuIGAwOkV4aXQsICBFbnRlciBOZXcgTWlub3IgQ291bnQoJHttaW5vckNvdW50fSkgICRgO1xuICAgICAgY2FzZSBDb25zdHJ1Y3Rpb25QbGFuZUNvbW1hbmRNb2RlLkNoYW5nZVNwYWNpbmc6XG4gICAgICAgIHJldHVybiBgMDpFeGl0LCAgRW50ZXIgTmV3IENlbGwgU2l6ZSgke2NlbGxTaXplfSkgICRgO1xuICAgICAgZGVmYXVsdDogY29uc29sZS5lcnJvcihcIlVuaGFuZGxlZCBNb2RlXCIpO1xuICAgIH1cbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBpc0ZpbmlzaGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZpbmlzaGVkO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZU1vdXNlTW92ZSgpOiB2b2lkIHtcblxuICB9XG5cblxuICBwcml2YXRlIGhhbmRsZU1lbnVJbnB1dChpbnB1dDogc3RyaW5nKTogdm9pZCB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgY2FzZSBcIjBcIjogY2FzZSBcImV4aXRcIjpcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIGNhc2UgXCIxXCI6IGNhc2UgXCJtYWpvcmNvdW50XCI6XG4gICAgICAgIHRoaXMubW9kZSA9IENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZE1vZGUuQ2hhbmdlTWFqb3JDb3VudDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY2FzZSBcIjJcIjogY2FzZSBcIm1pbm9yY291bnRcIjpcbiAgICAgICAgdGhpcy5tb2RlID0gQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5DaGFuZ2VNaW5vckNvdW50O1xuICAgICAgICByZXR1cm47XG4gICAgICBjYXNlIFwiM1wiOiBjYXNlIFwiY2VsbHNwYWNpbmdcIjpcbiAgICAgICAgdGhpcy5tb2RlID0gQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5DaGFuZ2VTcGFjaW5nO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjaGFuZ2VNYWpvckNvdW50KGlucHV0OiBzdHJpbmcpIHtcbiAgICBpZiAoaW5wdXQgPT09ICcwJyB8fCBpbnB1dCA9PT0gXCJleGl0XCIpIHtcbiAgICAgIHRoaXMubW9kZSA9IENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZE1vZGUuTWVudTtcbiAgICB9XG4gICAgY29uc3QgY291bnQ6IG51bWJlciB8IHVuZGVmaW5lZCA9IHBhcnNlSW50KGlucHV0KTtcbiAgICBpZiAoY291bnQpIHtcbiAgICAgIElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q29uc3RydWN0aW9uUGxhbmUoKS5zZXRNYWpvckNvdW50KGNvdW50KTtcbiAgICAgIHRoaXMubW9kZSA9IENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZE1vZGUuTWVudTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNoYW5nZU1pbm9yQ291bnQoaW5wdXQ6IHN0cmluZykge1xuICAgIGlmIChpbnB1dCA9PT0gJzAnIHx8IGlucHV0ID09PSBcImV4aXRcIikge1xuICAgICAgdGhpcy5tb2RlID0gQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5NZW51O1xuICAgIH1cbiAgICBjb25zdCBjb3VudDogbnVtYmVyIHwgdW5kZWZpbmVkID0gcGFyc2VJbnQoaW5wdXQpO1xuICAgIGlmIChjb3VudCkge1xuICAgICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDb25zdHJ1Y3Rpb25QbGFuZSgpLnNldE1pbm9yQ291bnQoY291bnQpO1xuICAgICAgdGhpcy5tb2RlID0gQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5NZW51O1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY2hhbmdlQ2VsbFNpemUoaW5wdXQ6IHN0cmluZykge1xuICAgIGlmIChpbnB1dCA9PT0gJzAnIHx8IGlucHV0ID09PSBcImV4aXRcIikge1xuICAgICAgdGhpcy5tb2RlID0gQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5NZW51O1xuICAgIH1cbiAgICBjb25zdCBzaXplOiBudW1iZXIgfCB1bmRlZmluZWQgPSBwYXJzZUZsb2F0KGlucHV0KTtcbiAgICBpZiAoc2l6ZSkge1xuICAgICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDb25zdHJ1Y3Rpb25QbGFuZSgpLnNldENlbGxTaXplKHNpemUpO1xuICAgICAgdGhpcy5tb2RlID0gQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kTW9kZS5NZW51O1xuICAgIH1cbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/constructionPlaneCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/copyCommand.ts":
/*!**********************************************!*\
  !*** ./src/commands/commands/copyCommand.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CopyCommand: () => (/* binding */ CopyCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\nvar CopyCommandMode;\n(function (CopyCommandMode) {\n    CopyCommandMode[CopyCommandMode[\"SelectPointToCopyFrom\"] = 0] = \"SelectPointToCopyFrom\";\n    CopyCommandMode[CopyCommandMode[\"SelectPointToCopyTo\"] = 1] = \"SelectPointToCopyTo\";\n})(CopyCommandMode || (CopyCommandMode = {}));\nclass CopyCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.mode = CopyCommandMode.SelectPointToCopyFrom;\n        this.pointToCopyFrom = null;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_1__.Clicker();\n        this.geometry = new Map;\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geometry of selection) {\n            this.geometry.set(geometry.clone(), geometry.getModel());\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            for (let geo of this.geometry.keys()) {\n                geo.delete();\n            }\n            this.geometry.clear();\n            this.done();\n        }\n        switch (this.mode) {\n            case CopyCommandMode.SelectPointToCopyFrom:\n                break;\n            case CopyCommandMode.SelectPointToCopyTo:\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case CopyCommandMode.SelectPointToCopyFrom:\n                this.pointToCopyFrom = intersection.point;\n                this.mode = CopyCommandMode.SelectPointToCopyTo;\n                this.clicker.reset();\n                break;\n            case CopyCommandMode.SelectPointToCopyTo:\n                const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(intersection.point, this.pointToCopyFrom));\n                for (const [copy, model] of this.geometry) {\n                    copy.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.mul(translation, model));\n                }\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode == CopyCommandMode.SelectPointToCopyTo) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, this.pointToCopyFrom));\n                for (const [copy, model] of this.geometry) {\n                    copy.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.mul(translation, model));\n                }\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case CopyCommandMode.SelectPointToCopyFrom:\n                return \"0:Exit  Select point to copy from.  $\";\n            case CopyCommandMode.SelectPointToCopyTo:\n                return \"0:Exit  Select point to copy to.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.clicker.destroy();\n        for (const copy of this.geometry.keys()) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(copy);\n        }\n        this.finished = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/copyCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/curveCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/curveCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CurveCommand: () => (/* binding */ CurveCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n\n\n\n\n\nvar CurveCommandMode;\n(function (CurveCommandMode) {\n    CurveCommandMode[CurveCommandMode[\"AddPoints\"] = 0] = \"AddPoints\";\n    CurveCommandMode[CurveCommandMode[\"ChangeDegree\"] = 1] = \"ChangeDegree\";\n})(CurveCommandMode || (CurveCommandMode = {}));\nclass CurveCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.curve = null;\n        this.degree = 2;\n        this.mode = CurveCommandMode.AddPoints;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n    }\n    // TODO: debug\n    handleInputString(input) {\n        var _a, _b, _c;\n        if (this.mode === CurveCommandMode.AddPoints) {\n            switch (input) {\n                case \"0\":\n                    (_a = this.curve) === null || _a === void 0 ? void 0 : _a.delete();\n                    this.finished = true;\n                    this.clicker.destroy();\n                    break;\n                case \"1\":\n                    this.mode = CurveCommandMode.ChangeDegree;\n                    break;\n                case \"\":\n                    if (this.curve != null) {\n                        if (this.curve.getControlPointCount() < 3)\n                            this.curve.delete();\n                        else {\n                            this.curve.removeLastControlPoint();\n                            this.curve.showControls(false);\n                            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.curve);\n                        }\n                    }\n                    this.finished = true;\n                    this.clicker.destroy();\n                    break;\n            }\n        }\n        else if (this.mode === CurveCommandMode.ChangeDegree) {\n            switch (input) {\n                case \"0\":\n                case \"\":\n                    break;\n                default:\n                    const degree = parseInt(input);\n                    if (degree) {\n                        this.degree = degree;\n                        (_b = this.curve) === null || _b === void 0 ? void 0 : _b.changeDegree(Math.min(this.curve.getControlPointCount() - 1, this.degree));\n                        (_c = this.curve) === null || _c === void 0 ? void 0 : _c.showControls(true);\n                    }\n                    break;\n            }\n            this.mode = CurveCommandMode.AddPoints;\n        }\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.curve && this.clicker.getPoint()) {\n            this.curve.updateLastControlPoint(this.clicker.getPoint(), 1);\n            this.curve.showControls(true);\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case CurveCommandMode.AddPoints:\n                if (this.curve == null)\n                    return `0:Exit  1:Degree(${this.degree})  Click start point.  $`;\n                return `0:Exit  1:Degree(${this.degree})  Click next point.  $`;\n            case CurveCommandMode.ChangeDegree:\n                return `0:Exit  Enter New Degree(${this.degree})  $`;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleClickResult(intersection) {\n        const point = intersection.point;\n        if (this.curve) {\n            this.curve.updateLastControlPoint(point, 1);\n            this.curve.addControlPoint(point, 1);\n            if (this.curve.getDegree() < this.degree)\n                this.curve.changeDegree(this.curve.getDegree() + 1);\n        }\n        else {\n            this.curve = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__.Curve(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...point, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...point, 1)], 1);\n        }\n        this.clicker.reset();\n        this.curve.showControls(true);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/curveCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/extrudeCurveCommand.ts":
/*!******************************************************!*\
  !*** ./src/commands/commands/extrudeCurveCommand.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtruedCurveCommand: () => (/* binding */ ExtruedCurveCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/loft */ \"./src/geometry/nurbs/loft.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\nvar ExtrudeCurveCommandMode;\n(function (ExtrudeCurveCommandMode) {\n    ExtrudeCurveCommandMode[ExtrudeCurveCommandMode[\"SelectCurves\"] = 0] = \"SelectCurves\";\n    ExtrudeCurveCommandMode[ExtrudeCurveCommandMode[\"Base\"] = 1] = \"Base\";\n    ExtrudeCurveCommandMode[ExtrudeCurveCommandMode[\"Direction\"] = 2] = \"Direction\";\n    ExtrudeCurveCommandMode[ExtrudeCurveCommandMode[\"Distance\"] = 3] = \"Distance\";\n})(ExtrudeCurveCommandMode || (ExtrudeCurveCommandMode = {}));\nclass ExtruedCurveCommand extends _command__WEBPACK_IMPORTED_MODULE_4__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n        this.mode = ExtrudeCurveCommandMode.SelectCurves;\n        this.base = null;\n        this.dir = null;\n        this.dist = null;\n        this.surfaces = [];\n        this.curves = [];\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            for (const surface of this.surfaces)\n                surface.delete();\n            this.surfaces = [];\n            this.done();\n        }\n        else if (this.mode === ExtrudeCurveCommandMode.SelectCurves) {\n            if (this.curves.length === 0) {\n                this.done();\n            }\n            else {\n                this.mode = ExtrudeCurveCommandMode.Base;\n            }\n        }\n        else if (this.mode === ExtrudeCurveCommandMode.Distance) {\n            const val = parseInt(input);\n            if (!isNaN(val)) {\n                this.dist = val;\n                this.updateSurfaces();\n                this.done();\n            }\n        }\n    }\n    updateSurfaces() {\n        for (const surface of this.surfaces)\n            surface.delete();\n        this.surfaces = [];\n        for (let i = 0; i < this.curves.length; i++) {\n            const clone = this.curves[i].clone();\n            const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.scale(this.dir, this.dist));\n            clone.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.mul(translation, clone.getModel()));\n            this.surfaces.push((0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_1__.loft)([this.curves[i], clone], 1));\n            clone.delete();\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case ExtrudeCurveCommandMode.SelectCurves:\n                const curve = intersection.geometry;\n                curve.select();\n                this.curves.push(curve);\n                break;\n            case ExtrudeCurveCommandMode.Base:\n                this.base = intersection.point;\n                this.mode = ExtrudeCurveCommandMode.Direction;\n                break;\n            case ExtrudeCurveCommandMode.Direction:\n                if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.equals(intersection.point, this.base)) {\n                    this.dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(intersection.point, this.base));\n                    this.dist = 1;\n                    this.updateSurfaces();\n                    this.mode = ExtrudeCurveCommandMode.Distance;\n                }\n                break;\n            case ExtrudeCurveCommandMode.Distance:\n                const ray = new _geometry_ray__WEBPACK_IMPORTED_MODULE_2__.Ray(this.base, this.dir);\n                const dirPoint = ray.closestPointToPoint(intersection.point);\n                this.dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.dot(this.dir, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(dirPoint, this.base));\n                this.updateSurfaces();\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        if (this.mode === ExtrudeCurveCommandMode.SelectCurves) {\n            this.clicker.click([\"curve\"]);\n        }\n        else {\n            this.clicker.click();\n        }\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode === ExtrudeCurveCommandMode.Distance) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                const ray = new _geometry_ray__WEBPACK_IMPORTED_MODULE_2__.Ray(this.base, this.dir);\n                const dirPoint = ray.closestPointToPoint(point);\n                this.dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.dot(this.dir, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(dirPoint, this.base));\n                this.updateSurfaces();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case ExtrudeCurveCommandMode.SelectCurves:\n                return \"0:Exit  Select curves.  $\";\n            case ExtrudeCurveCommandMode.Base:\n                return \"0:Exit  Select base point.  $\";\n            case ExtrudeCurveCommandMode.Direction:\n                return \"0:Exit  Select direction point.  $\";\n            case ExtrudeCurveCommandMode.Distance:\n                return \"0:Exit  Select distance point or enter number.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        for (const surface of this.surfaces) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(surface);\n        }\n        for (const curve of this.curves) {\n            curve.unSelect();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/extrudeCurveCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/loftCommand.ts":
/*!**********************************************!*\
  !*** ./src/commands/commands/loftCommand.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LoftCommand: () => (/* binding */ LoftCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/loft */ \"./src/geometry/nurbs/loft.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\nvar LoftCommandMode;\n(function (LoftCommandMode) {\n    LoftCommandMode[LoftCommandMode[\"SelectCurves\"] = 0] = \"SelectCurves\";\n    LoftCommandMode[LoftCommandMode[\"ChangeDegree\"] = 1] = \"ChangeDegree\";\n})(LoftCommandMode || (LoftCommandMode = {}));\nclass LoftCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.degree = 1;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_2__.Clicker();\n        this.mode = LoftCommandMode.SelectCurves;\n        this.curves = [];\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n    }\n    handleInputString(input) {\n        if (input === \"0\")\n            this.done();\n        switch (this.mode) {\n            case LoftCommandMode.SelectCurves:\n                if (input == \"1\") {\n                    this.mode = LoftCommandMode.ChangeDegree;\n                }\n                if (input == \"\") {\n                    const curves = [];\n                    for (let curve of this.curves) {\n                        while (curve.getTypeName() != \"Curve\" && curve.getParent()) {\n                            curve = curve.getParent();\n                        }\n                        if (curve.getTypeName() == \"Curve\") {\n                            curves.push(curve);\n                        }\n                    }\n                    if (curves.length < 2)\n                        this.done();\n                    this.degree = Math.min(this.degree, curves.length - 1);\n                    const surface = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_1__.loft)(curves, this.degree);\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(surface);\n                    this.done();\n                }\n                break;\n            case LoftCommandMode.ChangeDegree:\n                const inputNum = parseInt(input);\n                if (inputNum) {\n                    this.degree = inputNum;\n                    this.mode = LoftCommandMode.SelectCurves;\n                }\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClickResult(intersection) {\n        this.curves.push(intersection.geometry);\n        intersection.geometry.select();\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click([\"curve\"]);\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case LoftCommandMode.ChangeDegree:\n                return `0:Exit  Enter new degree(${this.degree})  $`;\n            case LoftCommandMode.SelectCurves:\n                return `0:Exit  1:ChangeDegree(${this.degree})  Select curves.  $`;\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.clicker.destroy();\n        for (const curve of this.curves) {\n            curve.unSelect();\n        }\n        this.finished = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFRCxlQUFlO1FBQ2IsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pCLEtBQUssZUFBZSxDQUFDLFlBQVk7Z0JBQy9CLE9BQU8sNEJBQTRCLElBQUksQ0FBQyxNQUFNLE1BQU0sQ0FBQztZQUN2RCxLQUFLLGVBQWUsQ0FBQyxZQUFZO2dCQUMvQixPQUFPLDBCQUEwQixJQUFJLENBQUMsTUFBTSxzQkFBc0IsQ0FBQztTQUN0RTtJQUNILENBQUM7SUFFRCxVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTyxJQUFJO1FBQ1YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN2QixLQUFLLE1BQU0sS0FBSyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDL0IsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ2xCO1FBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDdkIsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvbG9mdENvbW1hbmQudHM/MmYyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBDdXJ2ZSB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9udXJicy9jdXJ2ZVwiO1xuaW1wb3J0IHsgbG9mdCB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9udXJicy9sb2Z0XCI7XG5pbXBvcnQgeyBTdXJmYWNlIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L251cmJzL3N1cmZhY2VcIjtcbmltcG9ydCB7IENsaWNrZXIgfSBmcm9tIFwiLi4vY2xpY2tlclwiO1xuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi9jb21tYW5kXCI7XG5cbmVudW0gTG9mdENvbW1hbmRNb2RlIHtcbiAgU2VsZWN0Q3VydmVzLFxuICBDaGFuZ2VEZWdyZWUsXG59XG5cbmV4cG9ydCBjbGFzcyBMb2Z0Q29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG4gIHByaXZhdGUgZGVncmVlOiBudW1iZXI7XG4gIHByaXZhdGUgY2xpY2tlcjogQ2xpY2tlcjtcbiAgcHJpdmF0ZSBtb2RlOiBMb2Z0Q29tbWFuZE1vZGU7XG4gIHByaXZhdGUgY3VydmVzOiBHZW9tZXRyeVtdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuZGVncmVlID0gMTtcbiAgICB0aGlzLmNsaWNrZXIgPSBuZXcgQ2xpY2tlcigpO1xuICAgIHRoaXMubW9kZSA9IExvZnRDb21tYW5kTW9kZS5TZWxlY3RDdXJ2ZXM7XG4gICAgdGhpcy5jdXJ2ZXMgPSBbXTtcbiAgICBJTlNUQU5DRS5nZXRTZWxlY3RvcigpLnJlc2V0KCk7XG4gIH1cblxuICBoYW5kbGVJbnB1dFN0cmluZyhpbnB1dDogc3RyaW5nKTogdm9pZCB7XG5cbiAgICBpZiAoaW5wdXQgPT09IFwiMFwiKSB0aGlzLmRvbmUoKTtcblxuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIExvZnRDb21tYW5kTW9kZS5TZWxlY3RDdXJ2ZXM6XG4gICAgICAgIGlmIChpbnB1dCA9PSBcIjFcIikge1xuICAgICAgICAgIHRoaXMubW9kZSA9IExvZnRDb21tYW5kTW9kZS5DaGFuZ2VEZWdyZWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlucHV0ID09IFwiXCIpIHtcbiAgICAgICAgICBjb25zdCBjdXJ2ZXM6IEN1cnZlW10gPSBbXTtcbiAgICAgICAgICBmb3IgKGxldCBjdXJ2ZSBvZiB0aGlzLmN1cnZlcykge1xuICAgICAgICAgICAgd2hpbGUgKGN1cnZlLmdldFR5cGVOYW1lKCkgIT0gXCJDdXJ2ZVwiICYmIGN1cnZlLmdldFBhcmVudCgpKSB7XG4gICAgICAgICAgICAgIGN1cnZlID0gY3VydmUuZ2V0UGFyZW50KCkhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGN1cnZlLmdldFR5cGVOYW1lKCkgPT0gXCJDdXJ2ZVwiKSB7XG4gICAgICAgICAgICAgIGN1cnZlcy5wdXNoKDxDdXJ2ZT5jdXJ2ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjdXJ2ZXMubGVuZ3RoIDwgMikgdGhpcy5kb25lKCk7XG4gICAgICAgICAgdGhpcy5kZWdyZWUgPSBNYXRoLm1pbih0aGlzLmRlZ3JlZSwgY3VydmVzLmxlbmd0aCAtIDEpO1xuICAgICAgICAgIGNvbnN0IHN1cmZhY2U6IFN1cmZhY2UgPSBsb2Z0KGN1cnZlcywgdGhpcy5kZWdyZWUpO1xuICAgICAgICAgIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkoc3VyZmFjZSk7XG4gICAgICAgICAgdGhpcy5kb25lKCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIExvZnRDb21tYW5kTW9kZS5DaGFuZ2VEZWdyZWU6XG4gICAgICAgIGNvbnN0IGlucHV0TnVtOiBudW1iZXIgfCB1bmRlZmluZWQgPSBwYXJzZUludChpbnB1dCk7XG4gICAgICAgIGlmIChpbnB1dE51bSkge1xuICAgICAgICAgIHRoaXMuZGVncmVlID0gaW5wdXROdW07XG4gICAgICAgICAgdGhpcy5tb2RlID0gTG9mdENvbW1hbmRNb2RlLlNlbGVjdEN1cnZlcztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImNhc2Ugbm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZUNsaWNrUmVzdWx0KGludGVyc2VjdGlvbjogSW50ZXJzZWN0aW9uKTogdm9pZCB7XG4gICAgdGhpcy5jdXJ2ZXMucHVzaChpbnRlcnNlY3Rpb24uZ2VvbWV0cnkhKTtcbiAgICBpbnRlcnNlY3Rpb24uZ2VvbWV0cnkhLnNlbGVjdCgpO1xuICAgIHRoaXMuY2xpY2tlci5yZXNldCgpO1xuICB9XG5cbiAgaGFuZGxlQ2xpY2soKTogdm9pZCB7XG4gICAgdGhpcy5jbGlja2VyLmNsaWNrKFtcImN1cnZlXCJdKTtcbiAgfVxuXG4gIGhhbmRsZU1vdXNlTW92ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmNsaWNrZXIub25Nb3VzZU1vdmUoKTtcbiAgfVxuXG4gIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIExvZnRDb21tYW5kTW9kZS5DaGFuZ2VEZWdyZWU6XG4gICAgICAgIHJldHVybiBgMDpFeGl0ICBFbnRlciBuZXcgZGVncmVlKCR7dGhpcy5kZWdyZWV9KSAgJGA7XG4gICAgICBjYXNlIExvZnRDb21tYW5kTW9kZS5TZWxlY3RDdXJ2ZXM6XG4gICAgICAgIHJldHVybiBgMDpFeGl0ICAxOkNoYW5nZURlZ3JlZSgke3RoaXMuZGVncmVlfSkgIFNlbGVjdCBjdXJ2ZXMuICAkYDtcbiAgICB9XG4gIH1cblxuICBpc0ZpbmlzaGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZpbmlzaGVkO1xuICB9XG5cbiAgcHJpdmF0ZSBkb25lKCk6IHZvaWQge1xuICAgIHRoaXMuY2xpY2tlci5kZXN0cm95KCk7XG4gICAgZm9yIChjb25zdCBjdXJ2ZSBvZiB0aGlzLmN1cnZlcykge1xuICAgICAgY3VydmUudW5TZWxlY3QoKTtcbiAgICB9XG4gICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/commands/commands/loftCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/mirrorCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/mirrorCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MirrorCommand: () => (/* binding */ MirrorCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\nvar MirrorCommandMode;\n(function (MirrorCommandMode) {\n    MirrorCommandMode[MirrorCommandMode[\"SelectFirstPoint\"] = 0] = \"SelectFirstPoint\";\n    MirrorCommandMode[MirrorCommandMode[\"SelectSecondPoint\"] = 1] = \"SelectSecondPoint\";\n    MirrorCommandMode[MirrorCommandMode[\"SelectThirdPoint\"] = 2] = \"SelectThirdPoint\";\n})(MirrorCommandMode || (MirrorCommandMode = {}));\nclass MirrorCommand extends _command__WEBPACK_IMPORTED_MODULE_4__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n        this.oldToNew = new Map();\n        this.mode = MirrorCommandMode.SelectFirstPoint;\n        this.pointA = null;\n        this.pointB = null;\n        this.pointC = null;\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.done();\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\")\n            this.done();\n        switch (this.mode) {\n            case MirrorCommandMode.SelectFirstPoint:\n                break;\n            case MirrorCommandMode.SelectSecondPoint:\n                break;\n            case MirrorCommandMode.SelectThirdPoint:\n                if (input == \"\") {\n                    this.pointC = null;\n                    this.applyMirror();\n                    this.done();\n                }\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case MirrorCommandMode.SelectFirstPoint:\n                this.pointA = intersection.point;\n                const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n                for (const geometry of selection) {\n                    this.oldToNew.set(geometry, geometry.clone());\n                }\n                this.mode = MirrorCommandMode.SelectSecondPoint;\n                this.clicker.reset();\n                break;\n            case MirrorCommandMode.SelectSecondPoint:\n                this.pointB = intersection.point;\n                this.applyMirror();\n                this.mode = MirrorCommandMode.SelectThirdPoint;\n                this.clicker.reset();\n                break;\n            case MirrorCommandMode.SelectThirdPoint:\n                this.applyMirror();\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        const point = this.clicker.getPoint();\n        if (point) {\n            if (this.mode === MirrorCommandMode.SelectSecondPoint)\n                this.pointB = point;\n            else if (this.mode === MirrorCommandMode.SelectThirdPoint)\n                this.pointC = point;\n            this.applyMirror();\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case MirrorCommandMode.SelectFirstPoint:\n                return \"0:Exit  Click first point on mirror plane.  $\";\n            case MirrorCommandMode.SelectSecondPoint:\n                return \"0:Exit  Click second point on mirror plane.  $\";\n            case MirrorCommandMode.SelectThirdPoint:\n                return \"0:Exit  Click optional third point on mirror plane.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        for (let geo of this.oldToNew.values()) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n        }\n    }\n    applyMirror() {\n        if (this.pointC) {\n            const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.pointA, this.pointB);\n            const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.pointA, this.pointC);\n            const mirrorPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.pointA, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.cross(v1, v2));\n            const mirrorTransform = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getMirrorTransform)(mirrorPlane);\n            for (const [oldGeo, newGeo] of this.oldToNew) {\n                newGeo.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.mul(mirrorTransform, oldGeo.getModel()));\n            }\n        }\n        else if (this.pointB) {\n            const dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.pointA, this.pointB);\n            if (dir[0] === 0 && dir[1] === 0)\n                return;\n            dir[2] = 0;\n            const mirrorPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.pointA, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 1), dir));\n            const mirrorTransform = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getMirrorTransform)(mirrorPlane);\n            for (const [oldGeo, newGeo] of this.oldToNew) {\n                newGeo.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.mul(mirrorTransform, oldGeo.getModel()));\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/mirrorCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/moveCommand.ts":
/*!**********************************************!*\
  !*** ./src/commands/commands/moveCommand.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoveCommand: () => (/* binding */ MoveCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\nvar MoveCommandMode;\n(function (MoveCommandMode) {\n    MoveCommandMode[MoveCommandMode[\"SelectPointToMoveFrom\"] = 0] = \"SelectPointToMoveFrom\";\n    MoveCommandMode[MoveCommandMode[\"SelectPointToMoveTo\"] = 1] = \"SelectPointToMoveTo\";\n})(MoveCommandMode || (MoveCommandMode = {}));\nclass MoveCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.mode = MoveCommandMode.SelectPointToMoveFrom;\n        this.pointToMoveFrom = null;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_1__.Clicker();\n        this.clones = [];\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geo of selection) {\n            this.clones.push(geo.clone());\n            const clone = geo.clone();\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(clone);\n            this.clones.push(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(geo);\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.identity());\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n            this.done();\n            return;\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case MoveCommandMode.SelectPointToMoveFrom:\n                this.pointToMoveFrom = intersection.point;\n                this.mode = MoveCommandMode.SelectPointToMoveTo;\n                this.clicker.reset();\n                break;\n            case MoveCommandMode.SelectPointToMoveTo:\n                const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(intersection.point, this.pointToMoveFrom);\n                const translationTransform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.translation(translation);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(translationTransform);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode == MoveCommandMode.SelectPointToMoveTo) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, this.pointToMoveFrom);\n                const translationTransform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.translation(translation);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(translationTransform);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case MoveCommandMode.SelectPointToMoveFrom:\n                return \"0:Exit  Click point to move from.  $\";\n            case MoveCommandMode.SelectPointToMoveTo:\n                return \"0:Exit  Click point to move to.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        for (const geo of selection) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n        }\n        for (const clone of this.clones) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(clone);\n            clone.delete();\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().transformSelected();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/moveCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/polarArrayCommand.ts":
/*!****************************************************!*\
  !*** ./src/commands/commands/polarArrayCommand.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PollarArrayCommand: () => (/* binding */ PollarArrayCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\nvar PollarArrayCommandMode;\n(function (PollarArrayCommandMode) {\n    PollarArrayCommandMode[PollarArrayCommandMode[\"EnterCount\"] = 0] = \"EnterCount\";\n    PollarArrayCommandMode[PollarArrayCommandMode[\"EnterCenter\"] = 1] = \"EnterCenter\";\n    PollarArrayCommandMode[PollarArrayCommandMode[\"EnterAxis\"] = 2] = \"EnterAxis\";\n    PollarArrayCommandMode[PollarArrayCommandMode[\"Options\"] = 3] = \"Options\";\n    PollarArrayCommandMode[PollarArrayCommandMode[\"EnterFirstPointOrAngle\"] = 4] = \"EnterFirstPointOrAngle\";\n    PollarArrayCommandMode[PollarArrayCommandMode[\"EnterFinalPointOrFlip\"] = 5] = \"EnterFinalPointOrFlip\";\n})(PollarArrayCommandMode || (PollarArrayCommandMode = {}));\nclass PollarArrayCommand extends _command__WEBPACK_IMPORTED_MODULE_4__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.flipped = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n        this.count = null;\n        this.basePoint = null;\n        this.centerPoint = null;\n        this.axis = null;\n        this.useAngleBetween = null;\n        this.angle = null;\n        this.geometry = [];\n        this.arrayedGeometry = [];\n        this.mode = PollarArrayCommandMode.EnterCount;\n        const selected = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selected.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geo of selected) {\n            this.geometry.push(geo);\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            for (const v of this.arrayedGeometry) {\n                for (const geo of v) {\n                    geo.delete();\n                }\n            }\n            this.done();\n            return;\n        }\n        switch (this.mode) {\n            case PollarArrayCommandMode.EnterCount:\n                const count = parseInt(input);\n                if (!isNaN(count) && count > 1) {\n                    this.count = count;\n                    this.mode = PollarArrayCommandMode.EnterCenter;\n                }\n                break;\n            case PollarArrayCommandMode.EnterCenter:\n                break;\n            case PollarArrayCommandMode.EnterAxis:\n                if (input == \"1\") {\n                    this.axis = new _geometry_ray__WEBPACK_IMPORTED_MODULE_1__.Ray(this.centerPoint, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 1));\n                    this.mode = PollarArrayCommandMode.Options;\n                }\n                break;\n            case PollarArrayCommandMode.Options:\n                if (input == \"1\") { // full circle\n                    this.angle = 360 * (this.count - 1) / this.count;\n                    this.useAngleBetween = false;\n                    this.createClones();\n                    this.setTransforms();\n                    this.done();\n                }\n                else if (input == \"2\") { // angle between\n                    this.useAngleBetween = true;\n                    this.mode = PollarArrayCommandMode.EnterFirstPointOrAngle;\n                }\n                else if (input == \"3\") { // total angle\n                    this.useAngleBetween = false;\n                    this.mode = PollarArrayCommandMode.EnterFirstPointOrAngle;\n                }\n                break;\n            case PollarArrayCommandMode.EnterFirstPointOrAngle:\n                const angle = parseFloat(input);\n                if (!isNaN(angle)) {\n                    this.angle = angle;\n                    this.setTransforms();\n                    this.done();\n                }\n                break;\n            case PollarArrayCommandMode.EnterFinalPointOrFlip:\n                if (input == \"1\") {\n                    this.flipped = !this.flipped;\n                    this.angle -= 360;\n                    this.setTransforms();\n                }\n                break;\n            default:\n                throw new Error(\"Case not implemented\");\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case PollarArrayCommandMode.EnterCount:\n                break;\n            case PollarArrayCommandMode.EnterCenter:\n                this.centerPoint = intersection.point;\n                this.mode = PollarArrayCommandMode.EnterAxis;\n                break;\n            case PollarArrayCommandMode.EnterAxis:\n                if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.equals(intersection.point, this.centerPoint)) {\n                    this.axis = new _geometry_ray__WEBPACK_IMPORTED_MODULE_1__.Ray(this.centerPoint, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(intersection.point, this.centerPoint));\n                    this.mode = PollarArrayCommandMode.Options;\n                }\n                break;\n            case PollarArrayCommandMode.Options:\n                break;\n            case PollarArrayCommandMode.EnterFirstPointOrAngle:\n                this.basePoint = intersection.point;\n                this.mode = PollarArrayCommandMode.EnterFinalPointOrFlip;\n                this.createClones();\n                break;\n            case PollarArrayCommandMode.EnterFinalPointOrFlip:\n                const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.basePoint, this.centerPoint);\n                const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(intersection.point, this.centerPoint);\n                var theta = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.angleBetween)(v1, v2) / Math.PI * 180;\n                if (isNaN(theta)) {\n                    break;\n                }\n                if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.dot(v2, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.cross(v1, this.axis.getDirection())) > 0) {\n                    theta = 360 - theta;\n                }\n                if (this.flipped)\n                    theta -= 360;\n                this.angle = theta;\n                this.setTransforms();\n                this.done();\n                break;\n            default:\n                throw new Error(\"Case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode == PollarArrayCommandMode.EnterFinalPointOrFlip) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.basePoint, this.centerPoint);\n                const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(point, this.centerPoint);\n                var theta = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.angleBetween)(v1, v2) / Math.PI * 180;\n                if (isNaN(theta)) {\n                    return;\n                }\n                if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.dot(v2, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.cross(v1, this.axis.getDirection())) > 0) {\n                    theta = 360 - theta;\n                }\n                if (this.flipped)\n                    theta -= 360;\n                this.angle = theta;\n                this.setTransforms();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case PollarArrayCommandMode.EnterCount:\n                return \"0:Exit  Enter count.  $\";\n            case PollarArrayCommandMode.EnterCenter:\n                return \"0:Exit  Click center point.  $\";\n            case PollarArrayCommandMode.EnterAxis:\n                return \"0:Exit  1:Use Z-Axis  Click axis point.  $\";\n            case PollarArrayCommandMode.Options:\n                return \"0:Exit  1:Full Circle  2:Angle Between  3:Total Angle.  Select an option.  $\";\n            case PollarArrayCommandMode.EnterFirstPointOrAngle:\n                return \"0:Exit  Click first point or enter angle.  $\";\n            case PollarArrayCommandMode.EnterFinalPointOrFlip:\n                return \"0:Exit  1:Flip  Click second angle point.  $\";\n            default:\n                throw new Error(\"Case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        for (const v of this.arrayedGeometry) {\n            for (const geo of v) {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n            }\n        }\n    }\n    createClones() {\n        for (let i = 1; i < this.count; i++) {\n            const clones = [];\n            for (const geo of this.geometry) {\n                clones.push(geo.clone());\n            }\n            this.arrayedGeometry.push(clones);\n        }\n    }\n    setTransforms() {\n        const rads = this.angle * Math.PI / 180;\n        var theta;\n        if (this.useAngleBetween) {\n            theta = rads;\n        }\n        else {\n            theta = rads / (this.count - 1);\n        }\n        for (let i = 1; i < this.count; i++) {\n            const angle = theta * i;\n            const transform = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getRotationTransform)(this.axis, angle);\n            for (let j = 0; j < this.geometry.length; j++) {\n                this.arrayedGeometry[i - 1][j].setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.mul(transform, this.geometry[j].getModel()));\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/polarArrayCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/revolveCommand.ts":
/*!*************************************************!*\
  !*** ./src/commands/commands/revolveCommand.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RevolveCommand: () => (/* binding */ RevolveCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_revolve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/revolve */ \"./src/geometry/nurbs/revolve.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\n\nvar RevolveCommandMode;\n(function (RevolveCommandMode) {\n    RevolveCommandMode[RevolveCommandMode[\"SelectCurves\"] = 0] = \"SelectCurves\";\n    RevolveCommandMode[RevolveCommandMode[\"FirstAxisPoint\"] = 1] = \"FirstAxisPoint\";\n    RevolveCommandMode[RevolveCommandMode[\"SecondAxisPoint\"] = 2] = \"SecondAxisPoint\";\n    RevolveCommandMode[RevolveCommandMode[\"FirstAnglePoint\"] = 3] = \"FirstAnglePoint\";\n    RevolveCommandMode[RevolveCommandMode[\"SecondAnglePoint\"] = 4] = \"SecondAnglePoint\";\n})(RevolveCommandMode || (RevolveCommandMode = {}));\nclass RevolveCommand extends _command__WEBPACK_IMPORTED_MODULE_5__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.flipped = false;\n        this.mode = RevolveCommandMode.SelectCurves;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_4__.Clicker();\n        this.curves = [];\n        this.temp = null;\n        this.axis = null;\n        this.surfaces = [];\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            this.done();\n        }\n        switch (this.mode) {\n            case RevolveCommandMode.SelectCurves:\n                if (input == \"\") {\n                    if (this.curves.length == 0)\n                        this.done();\n                    else\n                        this.mode = RevolveCommandMode.FirstAxisPoint;\n                }\n                break;\n            case RevolveCommandMode.FirstAxisPoint:\n                break;\n            case RevolveCommandMode.SecondAxisPoint:\n                break;\n            case RevolveCommandMode.FirstAnglePoint:\n                if (input == \"1\") {\n                    this.fullRevolution();\n                }\n                break;\n            case RevolveCommandMode.SecondAnglePoint:\n                if (input == \"1\") {\n                    this.fullRevolution();\n                }\n                if (input == \"2\") {\n                    this.flip();\n                }\n                break;\n            default:\n                throw new Error(\"case not handled\");\n        }\n    }\n    handleClickResult(intersection) {\n        console.log(intersection);\n        switch (this.mode) {\n            case RevolveCommandMode.SelectCurves:\n                let geometry = intersection.geometry;\n                while (geometry.getTypeName() != \"Curve\" && geometry.getParent()) {\n                    geometry = geometry.getParent();\n                }\n                if (geometry.getTypeName() == \"Curve\") {\n                    this.curves.push(geometry);\n                    geometry.select();\n                }\n                break;\n            case RevolveCommandMode.FirstAxisPoint:\n                console.log(\"here\");\n                this.temp = intersection.point;\n                this.mode = RevolveCommandMode.SecondAxisPoint;\n                break;\n            case RevolveCommandMode.SecondAxisPoint:\n                if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.equals(this.temp, intersection.point))\n                    break;\n                this.axis = new _geometry_ray__WEBPACK_IMPORTED_MODULE_2__.Ray(this.temp, wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(this.temp, intersection.point));\n                this.mode = RevolveCommandMode.FirstAnglePoint;\n                break;\n            case RevolveCommandMode.FirstAnglePoint:\n                this.temp = intersection.point;\n                this.mode = RevolveCommandMode.SecondAnglePoint;\n                break;\n            case RevolveCommandMode.SecondAnglePoint:\n                if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.equals(this.temp, intersection.point))\n                    break;\n                for (const surface of this.surfaces)\n                    surface.delete();\n                const origin1 = this.axis.closestPointToPoint(this.temp);\n                const origin2 = this.axis.closestPointToPoint(intersection.point);\n                const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(this.temp, origin1);\n                const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(intersection.point, origin2);\n                var theta = (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.angleBetween)(v1, v2);\n                if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.dot(v2, wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.cross(v1, this.axis.getDirection())) > 0) {\n                    theta = 2 * Math.PI - theta;\n                }\n                if (this.flipped)\n                    theta = Math.PI * 2 - theta;\n                if (theta === 0 || isNaN(theta))\n                    return;\n                for (const curve of this.curves) {\n                    const revolution = (0,_geometry_nurbs_revolve__WEBPACK_IMPORTED_MODULE_1__.revolve)(this.axis, curve, theta);\n                    if (this.flipped) {\n                        const rotation = (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.getRotationTransform)(this.axis, Math.PI * 2 - theta);\n                        revolution.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(rotation, revolution.getModel()));\n                    }\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(revolution);\n                }\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not handled\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        switch (this.mode) {\n            case RevolveCommandMode.SelectCurves:\n                this.clicker.click([\"curve\"]);\n                break;\n            default:\n                this.clicker.click();\n        }\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        const point = this.clicker.getPoint();\n        if (point) {\n            if (this.mode == RevolveCommandMode.SecondAnglePoint) {\n                if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.equals(this.temp, point))\n                    return;\n                for (const surface of this.surfaces)\n                    surface.delete();\n                this.surfaces = [];\n                const origin1 = this.axis.closestPointToPoint(this.temp);\n                const origin2 = this.axis.closestPointToPoint(point);\n                const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(this.temp, origin1);\n                const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(point, origin2);\n                var theta = (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.angleBetween)(v1, v2);\n                if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.dot(v2, wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.cross(v1, this.axis.getDirection())) > 0) {\n                    theta = 2 * Math.PI - theta;\n                }\n                if (this.flipped)\n                    theta = Math.PI * 2 - theta;\n                if (isNaN(theta) || theta === 0)\n                    return;\n                for (const curve of this.curves) {\n                    const revolution = (0,_geometry_nurbs_revolve__WEBPACK_IMPORTED_MODULE_1__.revolve)(this.axis, curve, theta);\n                    if (this.flipped) {\n                        const rotation = (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.getRotationTransform)(this.axis, Math.PI * 2 - theta);\n                        revolution.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(rotation, revolution.getModel()));\n                    }\n                    this.surfaces.push(revolution);\n                }\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case RevolveCommandMode.SelectCurves:\n                return \"0:Exit  Select curves.  $\";\n            case RevolveCommandMode.FirstAxisPoint:\n                return \"0:Exit  Click or type first axis point.  $\";\n            case RevolveCommandMode.SecondAxisPoint:\n                return \"0:Exit  Click or type second axis point.  $\";\n            case RevolveCommandMode.FirstAnglePoint:\n                return \"0:Exit  1:Full  Click or type first angle point.  $\";\n            case RevolveCommandMode.SecondAnglePoint:\n                return \"0:Exit  1:Full  2:Flip  Click or type second angle point.  $\";\n            default:\n                throw new Error(\"case not handled\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.clicker.destroy();\n        for (const curve of this.curves) {\n            curve.unSelect();\n        }\n        this.finished = true;\n    }\n    fullRevolution() {\n        for (const surface of this.surfaces) {\n            surface.delete();\n        }\n        for (const curve of this.curves) {\n            const revolution = (0,_geometry_nurbs_revolve__WEBPACK_IMPORTED_MODULE_1__.revolve)(this.axis, curve, Math.PI * 2);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(revolution);\n        }\n        this.done();\n    }\n    flip() {\n        this.flipped = !this.flipped;\n        this.handleMouseMove();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/revolveCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/rotateCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/rotateCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RotateCommand: () => (/* binding */ RotateCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\nvar RotateCommandMode;\n(function (RotateCommandMode) {\n    RotateCommandMode[RotateCommandMode[\"SelectCenterPoint\"] = 0] = \"SelectCenterPoint\";\n    RotateCommandMode[RotateCommandMode[\"SelectAxisPoint\"] = 1] = \"SelectAxisPoint\";\n    RotateCommandMode[RotateCommandMode[\"SelectFromPointOrAngle\"] = 2] = \"SelectFromPointOrAngle\";\n    RotateCommandMode[RotateCommandMode[\"SelectToPoint\"] = 3] = \"SelectToPoint\";\n})(RotateCommandMode || (RotateCommandMode = {}));\nclass RotateCommand extends _command__WEBPACK_IMPORTED_MODULE_4__.Command {\n    constructor() {\n        super();\n        this.mode = RotateCommandMode.SelectCenterPoint;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n        this.center = null;\n        this.axis = null;\n        this.fromPoint = null;\n        this.finished = false;\n        this.clones = [];\n        const selected = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selected.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geo of selected) {\n            const clone = geo.clone();\n            clone.delete(); // an invisible clone just for intersecting with.\n            this.clones.push(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(geo);\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.identity());\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n            this.done();\n            return;\n        }\n        if (this.mode === RotateCommandMode.SelectFromPointOrAngle) {\n            const val = parseFloat(input);\n            if (!isNaN(val)) {\n                const rotationMatrix = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getRotationTransform)(this.axis, val / 180 * Math.PI);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(rotationMatrix);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n                this.done();\n            }\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case RotateCommandMode.SelectCenterPoint:\n                this.center = intersection.point;\n                this.mode = RotateCommandMode.SelectAxisPoint;\n                break;\n            case RotateCommandMode.SelectAxisPoint:\n                this.axis = new _geometry_ray__WEBPACK_IMPORTED_MODULE_1__.Ray(this.center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(intersection.point, this.center));\n                this.mode = RotateCommandMode.SelectFromPointOrAngle;\n                break;\n            case RotateCommandMode.SelectFromPointOrAngle:\n                if (this.axis.closestDistanceToPoint(intersection.point) > 0.0001) {\n                    this.fromPoint = intersection.point;\n                    this.mode = RotateCommandMode.SelectToPoint;\n                }\n                break;\n            case RotateCommandMode.SelectToPoint:\n                if (this.axis.closestDistanceToPoint(intersection.point) > 0.0001) {\n                    if (this.updateRotation(intersection.point)) {\n                        this.done();\n                    }\n                }\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    updateRotation(toPoint) {\n        const origin1 = this.axis.closestPointToPoint(this.center);\n        const origin2 = this.axis.closestPointToPoint(toPoint);\n        const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.fromPoint, origin1);\n        const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(toPoint, origin2);\n        var theta = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.angleBetween)(v1, v2);\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.dot(v2, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.cross(v1, this.axis.getDirection())) > 0) {\n            theta = 2 * Math.PI - theta;\n        }\n        if (isNaN(theta) || theta === 0)\n            return false;\n        const rotation = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getRotationTransform)(this.axis, theta);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(rotation);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n        return true;\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode === RotateCommandMode.SelectToPoint) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                this.updateRotation(point);\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case RotateCommandMode.SelectCenterPoint:\n                return \"0:Exit  Click center point.  $\";\n            case RotateCommandMode.SelectAxisPoint:\n                return \"0:Exit  Click axis point.  $\";\n            case RotateCommandMode.SelectFromPointOrAngle:\n                return \"0:Exit  Select start point of rotation or enter angle.  $\";\n            case RotateCommandMode.SelectToPoint:\n                return \"0:Exit  Select point to rotate to.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        for (const geo of selection) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n        }\n        for (const clone of this.clones) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(clone);\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().transformSelected();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/rotateCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/scale1Command.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/scale1Command.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scale1Command: () => (/* binding */ Scale1Command)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\nvar Scale1CommandMode;\n(function (Scale1CommandMode) {\n    Scale1CommandMode[Scale1CommandMode[\"ClickBasePoint\"] = 0] = \"ClickBasePoint\";\n    Scale1CommandMode[Scale1CommandMode[\"ClickFromPoint\"] = 1] = \"ClickFromPoint\";\n    Scale1CommandMode[Scale1CommandMode[\"ClickToPointOrFactor\"] = 2] = \"ClickToPointOrFactor\";\n})(Scale1CommandMode || (Scale1CommandMode = {}));\nclass Scale1Command extends _command__WEBPACK_IMPORTED_MODULE_4__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.mode = Scale1CommandMode.ClickBasePoint;\n        this.basePoint = null;\n        this.fromPoint = null;\n        this.toPoint = null;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n        this.clones = [];\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geo of selection) {\n            const clone = geo.clone();\n            clone.delete(); // invisible clone for intersecting\n            this.clones.push(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(geo);\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.identity());\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n            this.done();\n            return;\n        }\n        if (this.mode === Scale1CommandMode.ClickToPointOrFactor) {\n            const factor = parseFloat(input);\n            if (!isNaN(factor)) {\n                const vFrom = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.fromPoint, this.basePoint);\n                const transform = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getScale1Transform)(new _geometry_plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.basePoint, vFrom), factor);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(transform);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n                this.done();\n            }\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case Scale1CommandMode.ClickBasePoint:\n                this.basePoint = intersection.point;\n                this.mode = Scale1CommandMode.ClickFromPoint;\n                this.clicker.reset();\n                break;\n            case Scale1CommandMode.ClickFromPoint:\n                this.fromPoint = intersection.point;\n                this.mode = Scale1CommandMode.ClickToPointOrFactor;\n                this.clicker.reset();\n                break;\n            case Scale1CommandMode.ClickToPointOrFactor:\n                this.toPoint = intersection.point;\n                this.setScale();\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode == Scale1CommandMode.ClickToPointOrFactor) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                this.toPoint = point;\n                this.setScale();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case Scale1CommandMode.ClickBasePoint:\n                return \"0:Exit  Click base point.  $\";\n            case Scale1CommandMode.ClickFromPoint:\n                return \"0:Exit  Click from point.  $\";\n            case Scale1CommandMode.ClickToPointOrFactor:\n                return \"0:Exit  Click to point or enter factor.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    setScale() {\n        const vFrom = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.fromPoint, this.basePoint);\n        const vTo = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.sub(this.toPoint, this.basePoint);\n        const lFrom = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.length(vFrom);\n        const lTo = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.dot(vTo, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.normalize(vFrom));\n        const factor = lTo / lFrom;\n        const transform = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getScale1Transform)(new _geometry_plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.basePoint, vFrom), factor);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(transform);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        for (const geo of selection) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n        }\n        for (const clone of this.clones) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(clone);\n            clone.delete();\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().transformSelected();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/scale1Command.ts\n");

/***/ }),

/***/ "./src/commands/commands/scale2Command.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/scale2Command.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scale2Command: () => (/* binding */ Scale2Command)\n/* harmony export */ });\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nclass Scale2Command extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_0__.Clicker();\n    }\n    handleInputString(input) {\n        alert(\"todo scale2\");\n        this.finished = true;\n    }\n    handleClickResult(input) {\n        alert(\"todo scale2\");\n    }\n    handleClick() {\n        alert(\"todo scale2\");\n    }\n    handleMouseMove() {\n        alert(\"todo scale2\");\n    }\n    getInstructions() {\n        alert(\"todo scale2\");\n        return \"\";\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc2NhbGUyQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDcUM7QUFDQTtBQUU5QixNQUFNLGFBQWMsU0FBUSw2Q0FBTztJQUt4QztRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLDZDQUFPLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQsaUJBQWlCLENBQUMsS0FBYTtRQUM3QixLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDdkIsQ0FBQztJQUNELGlCQUFpQixDQUFDLEtBQW1CO1FBQ25DLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBQ0QsV0FBVztRQUNULEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBQ0QsZUFBZTtRQUNiLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBQ0QsZUFBZTtRQUNiLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNyQixPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFDRCxVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NvbW1hbmRzL3NjYWxlMkNvbW1hbmQudHM/MTNjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBDbGlja2VyIH0gZnJvbSBcIi4uL2NsaWNrZXJcIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiO1xuXG5leHBvcnQgY2xhc3MgU2NhbGUyQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG4gIHByaXZhdGUgY2xpY2tlcjogQ2xpY2tlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICB0aGlzLmNsaWNrZXIgPSBuZXcgQ2xpY2tlcigpO1xuICB9XG5cbiAgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGFsZXJ0KFwidG9kbyBzY2FsZTJcIik7XG4gICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gIH1cbiAgaGFuZGxlQ2xpY2tSZXN1bHQoaW5wdXQ6IEludGVyc2VjdGlvbik6IHZvaWQge1xuICAgIGFsZXJ0KFwidG9kbyBzY2FsZTJcIik7XG4gIH1cbiAgaGFuZGxlQ2xpY2soKTogdm9pZCB7XG4gICAgYWxlcnQoXCJ0b2RvIHNjYWxlMlwiKTtcbiAgfVxuICBoYW5kbGVNb3VzZU1vdmUoKTogdm9pZCB7XG4gICAgYWxlcnQoXCJ0b2RvIHNjYWxlMlwiKTtcbiAgfVxuICBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBhbGVydChcInRvZG8gc2NhbGUyXCIpO1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIGlzRmluaXNoZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmluaXNoZWQ7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/commands/commands/scale2Command.ts\n");

/***/ }),

/***/ "./src/commands/commands/scaleCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/scaleCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScaleCommand: () => (/* binding */ ScaleCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\nvar ScaleCommandMode;\n(function (ScaleCommandMode) {\n    ScaleCommandMode[ScaleCommandMode[\"SelectCenterPoint\"] = 0] = \"SelectCenterPoint\";\n    ScaleCommandMode[ScaleCommandMode[\"SelectFromPoint\"] = 1] = \"SelectFromPoint\";\n    ScaleCommandMode[ScaleCommandMode[\"SelectToPointOrFactor\"] = 2] = \"SelectToPointOrFactor\";\n})(ScaleCommandMode || (ScaleCommandMode = {}));\nclass ScaleCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.mode = ScaleCommandMode.SelectCenterPoint;\n        this.centerPoint = null;\n        this.fromPoint = null;\n        this.toPoint = null;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_2__.Clicker();\n        this.clones = [];\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geo of selection) {\n            const clone = geo.clone();\n            clone.delete(); // invisible clones for intersection\n            this.clones.push(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(geo);\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.identity());\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n            this.done();\n            return;\n        }\n        if (this.mode === ScaleCommandMode.SelectToPointOrFactor) {\n            const factor = parseFloat(input);\n            if (!isNaN(factor)) {\n                const scaleTransform = (0,_utils_math__WEBPACK_IMPORTED_MODULE_1__.getScaleTransform)(this.centerPoint, factor);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(scaleTransform);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n                this.done();\n            }\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case ScaleCommandMode.SelectCenterPoint:\n                this.centerPoint = intersection.point;\n                this.clicker.reset();\n                this.mode = ScaleCommandMode.SelectFromPoint;\n                break;\n            case ScaleCommandMode.SelectFromPoint:\n                this.fromPoint = intersection.point;\n                this.clicker.reset();\n                this.mode = ScaleCommandMode.SelectToPointOrFactor;\n                break;\n            case ScaleCommandMode.SelectToPointOrFactor:\n                this.toPoint = intersection.point;\n                this.setScale();\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode == ScaleCommandMode.SelectToPointOrFactor) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                this.toPoint = point;\n                this.setScale();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case ScaleCommandMode.SelectCenterPoint:\n                return \"0:Exit  Click center point.  $\";\n            case ScaleCommandMode.SelectFromPoint:\n                return \"0:Exit  Click from point.  $\";\n            case ScaleCommandMode.SelectToPointOrFactor:\n                return \"0:Exit  Click to point or enter factor.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    setScale() {\n        const factor = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.centerPoint, this.toPoint) /\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.centerPoint, this.fromPoint);\n        const toOrigin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(this.centerPoint, -1));\n        const toPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.translation(this.centerPoint);\n        const scale = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.uniformScaling(factor);\n        const transform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.mul(toPos, scale), toOrigin);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(transform);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        for (const geo of selection) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n        }\n        for (const clone of this.clones) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(clone);\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().transformSelected();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/scaleCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/setMaterialCommand.ts":
/*!*****************************************************!*\
  !*** ./src/commands/commands/setMaterialCommand.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetMaterialCommand: () => (/* binding */ SetMaterialCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nclass SetMaterialCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.done();\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\")\n            this.done();\n        else {\n            const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n            for (const geo of selection)\n                geo.setMaterial(input);\n            this.done();\n        }\n    }\n    handleClickResult(intersection) {\n    }\n    handleClick() {\n    }\n    handleMouseMove() {\n    }\n    getInstructions() {\n        return \"0:Exit  Enter material name.  $\";\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc2V0TWF0ZXJpYWxDb21tYW5kLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUdBO0FBRTlCLE1BQU0sa0JBQW1CLFNBQVEsNkNBQU87SUFJN0M7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLE1BQU0sU0FBUyxHQUFrQiwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3ZFLElBQUksU0FBUyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7WUFDeEIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2I7SUFDSCxDQUFDO0lBRUQsaUJBQWlCLENBQUMsS0FBYTtRQUM3QixJQUFJLEtBQUssSUFBSSxHQUFHO1lBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO2FBQ3pCO1lBQ0gsTUFBTSxTQUFTLEdBQWtCLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDdkUsS0FBSyxNQUFNLEdBQUcsSUFBSSxTQUFTO2dCQUFFLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEQsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2I7SUFDSCxDQUFDO0lBRUQsaUJBQWlCLENBQUMsWUFBMEI7SUFDNUMsQ0FBQztJQUVELFdBQVc7SUFDWCxDQUFDO0lBRUQsZUFBZTtJQUNmLENBQUM7SUFFRCxlQUFlO1FBQ2IsT0FBTyxpQ0FBaUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsVUFBVTtRQUNSLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRU8sSUFBSTtRQUNWLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ3ZCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NvbW1hbmRzL3NldE1hdGVyaWFsQ29tbWFuZC50cz85ZTAxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvZ2VvbWV0cnlcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiO1xuXG5leHBvcnQgY2xhc3MgU2V0TWF0ZXJpYWxDb21tYW5kIGV4dGVuZHMgQ29tbWFuZCB7XG5cbiAgcHJpdmF0ZSBmaW5pc2hlZDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICBjb25zdCBzZWxlY3Rpb246IFNldDxHZW9tZXRyeT4gPSBJTlNUQU5DRS5nZXRTZWxlY3RvcigpLmdldFNlbGVjdGlvbigpO1xuICAgIGlmIChzZWxlY3Rpb24uc2l6ZSA9PT0gMCkge1xuICAgICAgdGhpcy5kb25lKCk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmIChpbnB1dCA9PSBcIjBcIikgdGhpcy5kb25lKCk7XG4gICAgZWxzZSB7XG4gICAgICBjb25zdCBzZWxlY3Rpb246IFNldDxHZW9tZXRyeT4gPSBJTlNUQU5DRS5nZXRTZWxlY3RvcigpLmdldFNlbGVjdGlvbigpO1xuICAgICAgZm9yIChjb25zdCBnZW8gb2Ygc2VsZWN0aW9uKSBnZW8uc2V0TWF0ZXJpYWwoaW5wdXQpO1xuICAgICAgdGhpcy5kb25lKCk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlQ2xpY2tSZXN1bHQoaW50ZXJzZWN0aW9uOiBJbnRlcnNlY3Rpb24pOiB2b2lkIHtcbiAgfVxuXG4gIGhhbmRsZUNsaWNrKCk6IHZvaWQge1xuICB9XG5cbiAgaGFuZGxlTW91c2VNb3ZlKCk6IHZvaWQge1xuICB9XG5cbiAgZ2V0SW5zdHJ1Y3Rpb25zKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwiMDpFeGl0ICBFbnRlciBtYXRlcmlhbCBuYW1lLiAgJFwiO1xuICB9XG5cbiAgaXNGaW5pc2hlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5maW5pc2hlZDtcbiAgfVxuXG4gIHByaXZhdGUgZG9uZSgpIHtcbiAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZTtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/setMaterialCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/shearCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/shearCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShearCommand: () => (/* binding */ ShearCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _utils_print__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/print */ \"./src/utils/print.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\n\nvar ShearCommandMode;\n(function (ShearCommandMode) {\n    ShearCommandMode[ShearCommandMode[\"SelectFirstPoint\"] = 0] = \"SelectFirstPoint\";\n    ShearCommandMode[ShearCommandMode[\"SelectSecondPoint\"] = 1] = \"SelectSecondPoint\";\n    ShearCommandMode[ShearCommandMode[\"SelectThirdPoint\"] = 2] = \"SelectThirdPoint\";\n    ShearCommandMode[ShearCommandMode[\"SelectBasePoint\"] = 3] = \"SelectBasePoint\";\n    ShearCommandMode[ShearCommandMode[\"SelectToPoint\"] = 4] = \"SelectToPoint\";\n})(ShearCommandMode || (ShearCommandMode = {}));\nclass ShearCommand extends _command__WEBPACK_IMPORTED_MODULE_5__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.mode = ShearCommandMode.SelectFirstPoint;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_4__.Clicker();\n        this.plane = null;\n        this.p1 = null;\n        this.p2 = null;\n        this.basePoint = null;\n        this.clones = [];\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.done();\n            return;\n        }\n        for (const geo of selection) {\n            this.clones.push(geo.clone());\n            const clone = geo.clone();\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(clone);\n            this.clones.push(clone);\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(geo);\n        }\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity());\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n            this.done();\n            return;\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case ShearCommandMode.SelectFirstPoint:\n                this.p1 = intersection.point;\n                this.mode = ShearCommandMode.SelectSecondPoint;\n                break;\n            case ShearCommandMode.SelectSecondPoint:\n                this.p2 = intersection.point;\n                this.mode = ShearCommandMode.SelectThirdPoint;\n                break;\n            case ShearCommandMode.SelectThirdPoint:\n                this.plane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_1__.Plane(intersection.point, wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(this.p1, intersection.point), wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(this.p2, intersection.point)));\n                this.mode = ShearCommandMode.SelectBasePoint;\n                break;\n            case ShearCommandMode.SelectBasePoint:\n                this.basePoint = intersection.point;\n                this.mode = ShearCommandMode.SelectToPoint;\n                break;\n            case ShearCommandMode.SelectToPoint:\n                const from = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(this.basePoint, this.plane.getOrigin());\n                const to = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(intersection.point, this.plane.getOrigin());\n                const t = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getShearTransform)(this.plane, from, to);\n                (0,_utils_print__WEBPACK_IMPORTED_MODULE_3__.printMat4)(t);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(t);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n                this.done();\n                break;\n            default: throw new Error(\"case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode == ShearCommandMode.SelectToPoint) {\n            const point = this.clicker.getPoint();\n            if (point) {\n                const from = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(this.basePoint, this.plane.getOrigin());\n                const to = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.sub(point, this.plane.getOrigin());\n                const t = (0,_utils_math__WEBPACK_IMPORTED_MODULE_2__.getShearTransform)(this.plane, from, to);\n                console.log(t);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().setTransform(t);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case ShearCommandMode.SelectFirstPoint:\n                return \"0:Exit  Select first point on shear plane.  $\";\n            case ShearCommandMode.SelectSecondPoint:\n                return \"0:Exit  Select second point on shear plane.  $\";\n            case ShearCommandMode.SelectThirdPoint:\n                return \"0:Exit  Select third point on shear plane.  $\";\n            case ShearCommandMode.SelectBasePoint:\n                return \"0:Exit  Select base point.  $\";\n            case ShearCommandMode.SelectToPoint:\n                return \"0:Exit  Select to point.  $\";\n            default: throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        for (const geo of selection) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(geo);\n        }\n        for (const clone of this.clones) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(clone);\n            clone.delete();\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().transformSelected();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/shearCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/snapsCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/snapsCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapsCommand: () => (/* binding */ SnapsCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nclass SnapsCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n    }\n    handleInputString(input) {\n        switch (input) {\n            case \"0\":\n                this.finished = true;\n                break;\n            default:\n                this.toggleSnap(input);\n        }\n    }\n    handleClickResult(input) {\n        throw new Error(\"\");\n    }\n    toggleSnap(input) {\n        const snapSettings = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getSnapSettings();\n        switch (input) {\n            case \"1\":\n                snapSettings.snapGrid = !snapSettings.snapGrid;\n                break;\n            case \"2\":\n                snapSettings.snapLine = !snapSettings.snapLine;\n                break;\n            case \"3\":\n                snapSettings.snapPoint = !snapSettings.snapPoint;\n                break;\n        }\n    }\n    handleClick() {\n    }\n    handleMouseMove() {\n    }\n    getInstructions() {\n        const snapSettings = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getSnapSettings();\n        const grid = snapSettings.snapGrid ? \"on\" : \"off\";\n        const point = snapSettings.snapPoint ? \"on\" : \"off\";\n        const line = snapSettings.snapLine ? \"on\" : \"off\";\n        return `0:Exit  1:Grid(${grid})  2:Line(${line})  3:Point(${point})  $`;\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc25hcHNDb21tYW5kLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUNxQztBQUdBO0FBRTlCLE1BQU0sWUFBYSxTQUFRLDZDQUFPO0lBSXZDO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0lBRWUsaUJBQWlCLENBQUMsS0FBYTtRQUM3QyxRQUFRLEtBQUssRUFBRTtZQUNiLEtBQUssR0FBRztnQkFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDckIsTUFBTTtZQUNSO2dCQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDMUI7SUFDSCxDQUFDO0lBRWUsaUJBQWlCLENBQUMsS0FBbUI7UUFDbkQsTUFBTSxJQUFJLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRU8sVUFBVSxDQUFDLEtBQWE7UUFDOUIsTUFBTSxZQUFZLEdBQWlCLDBDQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzVHLFFBQVEsS0FBSyxFQUFFO1lBQ2IsS0FBSyxHQUFHO2dCQUNOLFlBQVksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO2dCQUMvQyxNQUFNO1lBQ1IsS0FBSyxHQUFHO2dCQUNOLFlBQVksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO2dCQUMvQyxNQUFNO1lBQ1IsS0FBSyxHQUFHO2dCQUNOLFlBQVksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO2dCQUNqRCxNQUFNO1NBQ1Q7SUFDSCxDQUFDO0lBRWUsV0FBVztJQUUzQixDQUFDO0lBRWUsZUFBZTtJQUUvQixDQUFDO0lBRWUsZUFBZTtRQUM3QixNQUFNLFlBQVksR0FBaUIsMENBQVEsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLHNCQUFzQixFQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDNUcsTUFBTSxJQUFJLEdBQVcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDMUQsTUFBTSxLQUFLLEdBQVcsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDNUQsTUFBTSxJQUFJLEdBQVcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDMUQsT0FBTyxrQkFBa0IsSUFBSSxhQUFhLElBQUksY0FBYyxLQUFLLE1BQU0sQ0FBQztJQUMxRSxDQUFDO0lBRWUsVUFBVTtRQUN4QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc25hcHNDb21tYW5kLnRzPzhiZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBTbmFwU2V0dGluZ3MgfSBmcm9tIFwiLi4vLi4vc2V0dGluZ3Mvc25hcHNNYW5hZ2VyXCI7XG5pbXBvcnQgeyBDb21tYW5kIH0gZnJvbSBcIi4uL2NvbW1hbmRcIjtcblxuZXhwb3J0IGNsYXNzIFNuYXBzQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgIGNhc2UgXCIwXCI6XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRoaXMudG9nZ2xlU25hcChpbnB1dCk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZUNsaWNrUmVzdWx0KGlucHV0OiBJbnRlcnNlY3Rpb24pOiB2b2lkIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJcIik7XG4gIH1cblxuICBwcml2YXRlIHRvZ2dsZVNuYXAoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IHNuYXBTZXR0aW5nczogU25hcFNldHRpbmdzID0gSU5TVEFOQ0UuZ2V0U2V0dGluZ3NNYW5hZ2VyKCkuZ2V0U25hcFNldHRpbmdzTWFuYWdlcigpLmdldFNuYXBTZXR0aW5ncygpO1xuICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgIGNhc2UgXCIxXCI6XG4gICAgICAgIHNuYXBTZXR0aW5ncy5zbmFwR3JpZCA9ICFzbmFwU2V0dGluZ3Muc25hcEdyaWQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIjJcIjpcbiAgICAgICAgc25hcFNldHRpbmdzLnNuYXBMaW5lID0gIXNuYXBTZXR0aW5ncy5zbmFwTGluZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiM1wiOlxuICAgICAgICBzbmFwU2V0dGluZ3Muc25hcFBvaW50ID0gIXNuYXBTZXR0aW5ncy5zbmFwUG9pbnQ7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVDbGljaygpOiB2b2lkIHtcblxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZU1vdXNlTW92ZSgpOiB2b2lkIHtcblxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGNvbnN0IHNuYXBTZXR0aW5nczogU25hcFNldHRpbmdzID0gSU5TVEFOQ0UuZ2V0U2V0dGluZ3NNYW5hZ2VyKCkuZ2V0U25hcFNldHRpbmdzTWFuYWdlcigpLmdldFNuYXBTZXR0aW5ncygpO1xuICAgIGNvbnN0IGdyaWQ6IHN0cmluZyA9IHNuYXBTZXR0aW5ncy5zbmFwR3JpZCA/IFwib25cIiA6IFwib2ZmXCI7XG4gICAgY29uc3QgcG9pbnQ6IHN0cmluZyA9IHNuYXBTZXR0aW5ncy5zbmFwUG9pbnQgPyBcIm9uXCIgOiBcIm9mZlwiO1xuICAgIGNvbnN0IGxpbmU6IHN0cmluZyA9IHNuYXBTZXR0aW5ncy5zbmFwTGluZSA/IFwib25cIiA6IFwib2ZmXCI7XG4gICAgcmV0dXJuIGAwOkV4aXQgIDE6R3JpZCgke2dyaWR9KSAgMjpMaW5lKCR7bGluZX0pICAzOlBvaW50KCR7cG9pbnR9KSAgJGA7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaXNGaW5pc2hlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5maW5pc2hlZDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/snapsCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/sphereCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/sphereCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SphereCommand: () => (/* binding */ SphereCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_sphere__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/sphere */ \"./src/geometry/nurbs/sphere.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\nvar SphereCommandMode;\n(function (SphereCommandMode) {\n    SphereCommandMode[SphereCommandMode[\"Menu\"] = 0] = \"Menu\";\n    SphereCommandMode[SphereCommandMode[\"PointA\"] = 1] = \"PointA\";\n    SphereCommandMode[SphereCommandMode[\"PointB\"] = 2] = \"PointB\";\n    SphereCommandMode[SphereCommandMode[\"SelectCenter\"] = 3] = \"SelectCenter\";\n    SphereCommandMode[SphereCommandMode[\"SelectRadius\"] = 4] = \"SelectRadius\";\n})(SphereCommandMode || (SphereCommandMode = {}));\nclass SphereCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_2__.Clicker();\n        this.temp = null;\n        this.mode = SphereCommandMode.Menu;\n        this.sphere = null;\n    }\n    handleInputString(input) {\n        var _a;\n        if (input == \"0\") {\n            (_a = this.sphere) === null || _a === void 0 ? void 0 : _a.delete();\n            this.sphere = null;\n            this.done();\n        }\n        switch (this.mode) {\n            case SphereCommandMode.Menu:\n                if (input == \"1\")\n                    this.mode = SphereCommandMode.SelectCenter;\n                else if (input == \"2\")\n                    this.mode = SphereCommandMode.PointA;\n                break;\n            case SphereCommandMode.PointA:\n                break;\n            case SphereCommandMode.PointB:\n                break;\n            case SphereCommandMode.SelectCenter:\n                break;\n            case SphereCommandMode.SelectRadius:\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case SphereCommandMode.Menu:\n                break;\n            case SphereCommandMode.PointA:\n                this.temp = intersection.point;\n                this.mode = SphereCommandMode.PointB;\n                break;\n            case SphereCommandMode.PointB:\n                this.updateSphere(intersection.point);\n                this.done();\n                break;\n            case SphereCommandMode.SelectCenter:\n                this.temp = intersection.point;\n                this.mode = SphereCommandMode.SelectRadius;\n                break;\n            case SphereCommandMode.SelectRadius:\n                this.updateSphere(intersection.point);\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.mode === SphereCommandMode.SelectRadius || this.mode === SphereCommandMode.PointB) {\n            const point = this.clicker.getPoint();\n            if (point && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(point, this.temp)) {\n                this.updateSphere(point);\n            }\n        }\n    }\n    updateSphere(pos) {\n        if (this.mode === SphereCommandMode.SelectRadius) {\n            const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.temp, pos);\n            if (this.sphere === null)\n                this.sphere = (0,_geometry_nurbs_sphere__WEBPACK_IMPORTED_MODULE_1__.createSphere)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0, 0, 0), 1);\n            const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.translation(this.temp);\n            const scale = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.uniformScaling(radius);\n            this.sphere.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.mul(translation, scale));\n            this.sphere.getControlCage().updatePoints();\n        }\n        else if (this.mode === SphereCommandMode.PointB) {\n            const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(this.temp, pos), 0.5);\n            const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.temp, center);\n            if (this.sphere === null)\n                this.sphere = (0,_geometry_nurbs_sphere__WEBPACK_IMPORTED_MODULE_1__.createSphere)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0, 0, 0), 1);\n            const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.translation(center);\n            const scale = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.uniformScaling(radius);\n            this.sphere.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.mul(translation, scale));\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case SphereCommandMode.Menu:\n                return \"0:Exit  1:FromCenterAndRadius  2:Between2Points  $\";\n            case SphereCommandMode.PointA:\n                return \"0:Exit  Click Point A.  $\";\n            case SphereCommandMode.PointB:\n                return \"0:Exit  Click Point B.  $\";\n            case SphereCommandMode.SelectCenter:\n                return \"0:Exit  Click Center Point.  $\";\n            case SphereCommandMode.SelectRadius:\n                return \"0:Exit  Click radial point or enter radius.  $\";\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    done() {\n        this.finished = true;\n        this.clicker.destroy();\n        if (this.sphere) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.sphere);\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/sphereCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/splitCurveCommand.ts":
/*!****************************************************!*\
  !*** ./src/commands/commands/splitCurveCommand.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SplitCurveCommand: () => (/* binding */ SplitCurveCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_splitCurve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/splitCurve */ \"./src/geometry/nurbs/splitCurve.ts\");\n/* harmony import */ var _geometry_points__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geometry/points */ \"./src/geometry/points.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\n\nvar SplitCurveCommandMode;\n(function (SplitCurveCommandMode) {\n    SplitCurveCommandMode[SplitCurveCommandMode[\"SelectCurve\"] = 0] = \"SelectCurve\";\n    SplitCurveCommandMode[SplitCurveCommandMode[\"SelectSplitPoint\"] = 1] = \"SelectSplitPoint\";\n})(SplitCurveCommandMode || (SplitCurveCommandMode = {}));\nclass SplitCurveCommand extends _command__WEBPACK_IMPORTED_MODULE_5__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_4__.Clicker();\n        this.mode = SplitCurveCommandMode.SelectCurve;\n        this.showSuggestions = true;\n        this.suggestedPoints = null;\n        this.curve = null;\n        this.filteredKnots = [];\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n    }\n    handleInputString(input) {\n        if (input == \"0\") {\n            this.done();\n        }\n        if (this.mode === SplitCurveCommandMode.SelectSplitPoint) {\n            if (input == \"1\") {\n                this.showSuggestions = !this.showSuggestions;\n                if (this.showSuggestions) {\n                    this.generateSuggestionPoints();\n                }\n                else {\n                    if (this.suggestedPoints) {\n                        this.suggestedPoints.delete();\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(this.suggestedPoints);\n                        this.suggestedPoints = null;\n                    }\n                }\n            }\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case SplitCurveCommandMode.SelectCurve:\n                this.curve = intersection.geometry;\n                this.curve.select();\n                this.generateSuggestionPoints();\n                this.mode = SplitCurveCommandMode.SelectSplitPoint;\n                break;\n            case SplitCurveCommandMode.SelectSplitPoint:\n                if (this.suggestedPoints && intersection.geometry === this.suggestedPoints) {\n                    var u = this.filteredKnots[intersection.objectSubID];\n                }\n                else {\n                    intersection.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.inverse(this.curve.getModelRecursive()), new _geometry_ray__WEBPACK_IMPORTED_MODULE_3__.Ray([0, 0, 0], [0, 0, 1]));\n                    var u = this.curve.getU(intersection);\n                }\n                const res = (0,_geometry_nurbs_splitCurve__WEBPACK_IMPORTED_MODULE_1__.splitCurve)(this.curve, u);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(res[0]);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(res[1]);\n                this.done();\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n        this.clicker.reset();\n    }\n    generateSuggestionPoints() {\n        const knots = this.curve.getKnots();\n        const min = knots[0];\n        const max = knots.at(-1);\n        this.filteredKnots = [];\n        var prevKnot = NaN;\n        for (const knot of knots) {\n            if (knot === min)\n                continue;\n            if (knot === max)\n                continue;\n            if (knot === prevKnot)\n                continue;\n            this.filteredKnots.push(knot);\n            prevKnot = knot;\n        }\n        if (this.filteredKnots.length === 0)\n            return;\n        const pointsAtKnots = [];\n        const model = this.curve.getModelRecursive();\n        for (const knot of this.filteredKnots) {\n            pointsAtKnots.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.transformMat4(this.curve.sample(knot), model));\n        }\n        this.suggestedPoints = new _geometry_points__WEBPACK_IMPORTED_MODULE_2__.Points(null, pointsAtKnots);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.suggestedPoints);\n    }\n    handleClick() {\n        switch (this.mode) {\n            case SplitCurveCommandMode.SelectCurve:\n                this.clicker.click([\"curve\"]);\n                break;\n            case SplitCurveCommandMode.SelectSplitPoint:\n                const ids = [this.curve.getID()];\n                if (this.suggestedPoints)\n                    ids.push(this.suggestedPoints.getID());\n                this.clicker.click(undefined, ids);\n                break;\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case SplitCurveCommandMode.SelectCurve:\n                return \"0:Exit  Select curve to split.  $\";\n            case SplitCurveCommandMode.SelectSplitPoint:\n                if (this.showSuggestions) {\n                    return \"0:Exit  1:HideSuggestions  Select split point.  $\";\n                }\n                else {\n                    return \"0:Exit  1:ShowSuggestions  Select split point.  $\";\n                }\n            default:\n                throw new Error(\"case not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    done() {\n        var _a;\n        this.finished = true;\n        this.clicker.destroy();\n        (_a = this.curve) === null || _a === void 0 ? void 0 : _a.unSelect();\n        if (this.suggestedPoints) {\n            this.suggestedPoints.delete();\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeGeometry(this.suggestedPoints);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc3BsaXRDdXJ2ZUNvbW1hbmQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBcUQ7QUFDaEI7QUFHd0I7QUFDZDtBQUNOO0FBQ0o7QUFDQTtBQUVyQyxJQUFLLHFCQUdKO0FBSEQsV0FBSyxxQkFBcUI7SUFDeEIsK0VBQVc7SUFDWCx5RkFBZ0I7QUFDbEIsQ0FBQyxFQUhJLHFCQUFxQixLQUFyQixxQkFBcUIsUUFHekI7QUFFTSxNQUFNLGlCQUFrQixTQUFRLDZDQUFPO0lBVTVDO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksNkNBQU8sRUFBRSxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcscUJBQXFCLENBQUMsV0FBVyxDQUFDO1FBQzlDLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELGlCQUFpQixDQUFDLEtBQWE7UUFDN0IsSUFBSSxLQUFLLElBQUksR0FBRyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNiO1FBQ0QsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLHFCQUFxQixDQUFDLGdCQUFnQixFQUFFO1lBQ3hELElBQUksS0FBSyxJQUFJLEdBQUcsRUFBRTtnQkFDaEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7Z0JBQzdDLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtvQkFDeEIsSUFBSSxDQUFDLHdCQUF3QixFQUFF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Q0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFRCxlQUFlO1FBQ2IsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pCLEtBQUsscUJBQXFCLENBQUMsV0FBVztnQkFDcEMsT0FBTyxtQ0FBbUMsQ0FBQztZQUM3QyxLQUFLLHFCQUFxQixDQUFDLGdCQUFnQjtnQkFDekMsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO29CQUN4QixPQUFPLG1EQUFtRCxDQUFDO2lCQUM1RDtxQkFBTTtvQkFDTCxPQUFPLG1EQUFtRCxDQUFDO2lCQUM1RDtZQUNIO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztTQUMzQztJQUNILENBQUM7SUFFRCxVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTyxJQUFJOztRQUNWLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdkIsVUFBSSxDQUFDLEtBQUssMENBQUUsUUFBUSxFQUFFLENBQUM7UUFDdkIsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDOUIsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQzFEO0lBQ0gsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc3BsaXRDdXJ2ZUNvbW1hbmQudHM/YzM3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IEN1cnZlIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L251cmJzL2N1cnZlXCI7XG5pbXBvcnQgeyBzcGxpdEN1cnZlIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L251cmJzL3NwbGl0Q3VydmVcIjtcbmltcG9ydCB7IFBvaW50cyB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9wb2ludHNcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9yYXlcIjtcbmltcG9ydCB7IENsaWNrZXIgfSBmcm9tIFwiLi4vY2xpY2tlclwiO1xuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi9jb21tYW5kXCI7XG5cbmVudW0gU3BsaXRDdXJ2ZUNvbW1hbmRNb2RlIHtcbiAgU2VsZWN0Q3VydmUsXG4gIFNlbGVjdFNwbGl0UG9pbnQsXG59XG5cbmV4cG9ydCBjbGFzcyBTcGxpdEN1cnZlQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG4gIHByaXZhdGUgY2xpY2tlcjogQ2xpY2tlcjtcbiAgcHJpdmF0ZSBtb2RlOiBTcGxpdEN1cnZlQ29tbWFuZE1vZGU7XG4gIHByaXZhdGUgc2hvd1N1Z2dlc3Rpb25zOiBib29sZWFuO1xuICBwcml2YXRlIHN1Z2dlc3RlZFBvaW50czogUG9pbnRzIHwgbnVsbDtcbiAgcHJpdmF0ZSBjdXJ2ZTogQ3VydmUgfCBudWxsO1xuICBwcml2YXRlIGZpbHRlcmVkS25vdHM6IG51bWJlcltdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuY2xpY2tlciA9IG5ldyBDbGlja2VyKCk7XG4gICAgdGhpcy5tb2RlID0gU3BsaXRDdXJ2ZUNvbW1hbmRNb2RlLlNlbGVjdEN1cnZlO1xuICAgIHRoaXMuc2hvd1N1Z2dlc3Rpb25zID0gdHJ1ZTtcbiAgICB0aGlzLnN1Z2dlc3RlZFBvaW50cyA9IG51bGw7XG4gICAgdGhpcy5jdXJ2ZSA9IG51bGw7XG4gICAgdGhpcy5maWx0ZXJlZEtub3RzID0gW107XG4gICAgSU5TVEFOQ0UuZ2V0U2VsZWN0b3IoKS5yZXNldCgpO1xuICB9XG5cbiAgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmIChpbnB1dCA9PSBcIjBcIikge1xuICAgICAgdGhpcy5kb25lKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLm1vZGUgPT09IFNwbGl0Q3VydmVDb21tYW5kTW9kZS5TZWxlY3RTcGxpdFBvaW50KSB7XG4gICAgICBpZiAoaW5wdXQgPT0gXCIxXCIpIHtcbiAgICAgICAgdGhpcy5zaG93U3VnZ2VzdGlvbnMgPSAhdGhpcy5zaG93U3VnZ2VzdGlvbnM7XG4gICAgICAgIGlmICh0aGlzLnNob3dTdWdnZXN0aW9ucykge1xuICAgICAgICAgIHRoaXMuZ2VuZXJhdGVTdWdnZXN0aW9uUG9pbnRzKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHRoaXMuc3VnZ2VzdGVkUG9pbnRzKSB7XG4gICAgICAgICAgICB0aGlzLnN1Z2dlc3RlZFBvaW50cyEuZGVsZXRlKCk7XG4gICAgICAgICAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLnJlbW92ZUdlb21ldHJ5KHRoaXMuc3VnZ2VzdGVkUG9pbnRzISk7XG4gICAgICAgICAgICB0aGlzLnN1Z2dlc3RlZFBvaW50cyA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlQ2xpY2tSZXN1bHQoaW50ZXJzZWN0aW9uOiBJbnRlcnNlY3Rpb24pOiB2b2lkIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBTcGxpdEN1cnZlQ29tbWFuZE1vZGUuU2VsZWN0Q3VydmU6XG4gICAgICAgIHRoaXMuY3VydmUgPSA8Q3VydmU+aW50ZXJzZWN0aW9uLmdlb21ldHJ5O1xuICAgICAgICB0aGlzLmN1cnZlLnNlbGVjdCgpO1xuICAgICAgICB0aGlzLmdlbmVyYXRlU3VnZ2VzdGlvblBvaW50cygpO1xuICAgICAgICB0aGlzLm1vZGUgPSBTcGxpdEN1cnZlQ29tbWFuZE1vZGUuU2VsZWN0U3BsaXRQb2ludDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFNwbGl0Q3VydmVDb21tYW5kTW9kZS5TZWxlY3RTcGxpdFBvaW50OlxuICAgICAgICBpZiAodGhpcy5zdWdnZXN0ZWRQb2ludHMgJiYgaW50ZXJzZWN0aW9uLmdlb21ldHJ5ID09PSB0aGlzLnN1Z2dlc3RlZFBvaW50cykge1xuICAgICAgICAgIHZhciB1OiBudW1iZXIgPSB0aGlzLmZpbHRlcmVkS25vdHNbaW50ZXJzZWN0aW9uLm9iamVjdFN1YklEXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpbnRlcnNlY3Rpb24udHJhbnNmb3JtKG1hdDQuaW52ZXJzZSh0aGlzLmN1cnZlIS5nZXRNb2RlbFJlY3Vyc2l2ZSgpKSwgbmV3IFJheShbMCwgMCwgMF0sIFswLCAwLCAxXSkpO1xuICAgICAgICAgIHZhciB1OiBudW1iZXIgPSB0aGlzLmN1cnZlIS5nZXRVKGludGVyc2VjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzOiBbQ3VydmUsIEN1cnZlXSA9IHNwbGl0Q3VydmUodGhpcy5jdXJ2ZSEsIHUpO1xuICAgICAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmFkZEdlb21ldHJ5KHJlc1swXSk7XG4gICAgICAgIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkocmVzWzFdKTtcbiAgICAgICAgdGhpcy5kb25lKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2FzZSBub3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxuICAgIHRoaXMuY2xpY2tlci5yZXNldCgpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZW5lcmF0ZVN1Z2dlc3Rpb25Qb2ludHMoKSB7XG4gICAgY29uc3Qga25vdHM6IG51bWJlcltdID0gdGhpcy5jdXJ2ZSEuZ2V0S25vdHMoKTtcbiAgICBjb25zdCBtaW46IG51bWJlciA9IGtub3RzWzBdO1xuICAgIGNvbnN0IG1heDogbnVtYmVyID0ga25vdHMuYXQoLTEpITtcbiAgICB0aGlzLmZpbHRlcmVkS25vdHMgPSBbXTtcbiAgICB2YXIgcHJldktub3Q6IG51bWJlciA9IE5hTjtcblxuICAgIGZvciAoY29uc3Qga25vdCBvZiBrbm90cykge1xuICAgICAgaWYgKGtub3QgPT09IG1pbikgY29udGludWU7XG4gICAgICBpZiAoa25vdCA9PT0gbWF4KSBjb250aW51ZTtcbiAgICAgIGlmIChrbm90ID09PSBwcmV2S25vdCkgY29udGludWU7XG4gICAgICB0aGlzLmZpbHRlcmVkS25vdHMucHVzaChrbm90KTtcbiAgICAgIHByZXZLbm90ID0ga25vdDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5maWx0ZXJlZEtub3RzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGNvbnN0IHBvaW50c0F0S25vdHM6IFZlYzNbXSA9IFtdO1xuICAgIGNvbnN0IG1vZGVsOiBNYXQ0ID0gdGhpcy5jdXJ2ZSEuZ2V0TW9kZWxSZWN1cnNpdmUoKTtcbiAgICBmb3IgKGNvbnN0IGtub3Qgb2YgdGhpcy5maWx0ZXJlZEtub3RzKSB7XG4gICAgICBwb2ludHNBdEtub3RzLnB1c2godmVjMy50cmFuc2Zvcm1NYXQ0KHRoaXMuY3VydmUhLnNhbXBsZShrbm90KSwgbW9kZWwpKTtcbiAgICB9XG5cbiAgICB0aGlzLnN1Z2dlc3RlZFBvaW50cyA9IG5ldyBQb2ludHMobnVsbCwgcG9pbnRzQXRLbm90cyk7XG4gICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5hZGRHZW9tZXRyeSh0aGlzLnN1Z2dlc3RlZFBvaW50cyk7XG4gIH1cblxuICBoYW5kbGVDbGljaygpOiB2b2lkIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBTcGxpdEN1cnZlQ29tbWFuZE1vZGUuU2VsZWN0Q3VydmU6XG4gICAgICAgIHRoaXMuY2xpY2tlci5jbGljayhbXCJjdXJ2ZVwiXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBTcGxpdEN1cnZlQ29tbWFuZE1vZGUuU2VsZWN0U3BsaXRQb2ludDpcbiAgICAgICAgY29uc3QgaWRzOiBudW1iZXJbXSA9IFt0aGlzLmN1cnZlIS5nZXRJRCgpXTtcbiAgICAgICAgaWYgKHRoaXMuc3VnZ2VzdGVkUG9pbnRzKSBpZHMucHVzaCh0aGlzLnN1Z2dlc3RlZFBvaW50cy5nZXRJRCgpKTtcbiAgICAgICAgdGhpcy5jbGlja2VyLmNsaWNrKHVuZGVmaW5lZCwgaWRzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjYXNlIG5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVNb3VzZU1vdmUoKTogdm9pZCB7XG4gICAgdGhpcy5jbGlja2VyLm9uTW91c2VNb3ZlKCk7XG4gIH1cblxuICBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBTcGxpdEN1cnZlQ29tbWFuZE1vZGUuU2VsZWN0Q3VydmU6XG4gICAgICAgIHJldHVybiBcIjA6RXhpdCAgU2VsZWN0IGN1cnZlIHRvIHNwbGl0LiAgJFwiO1xuICAgICAgY2FzZSBTcGxpdEN1cnZlQ29tbWFuZE1vZGUuU2VsZWN0U3BsaXRQb2ludDpcbiAgICAgICAgaWYgKHRoaXMuc2hvd1N1Z2dlc3Rpb25zKSB7XG4gICAgICAgICAgcmV0dXJuIFwiMDpFeGl0ICAxOkhpZGVTdWdnZXN0aW9ucyAgU2VsZWN0IHNwbGl0IHBvaW50LiAgJFwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBcIjA6RXhpdCAgMTpTaG93U3VnZ2VzdGlvbnMgIFNlbGVjdCBzcGxpdCBwb2ludC4gICRcIjtcbiAgICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2FzZSBub3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxuICB9XG5cbiAgaXNGaW5pc2hlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5maW5pc2hlZDtcbiAgfVxuXG4gIHByaXZhdGUgZG9uZSgpOiB2b2lkIHtcbiAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZTtcbiAgICB0aGlzLmNsaWNrZXIuZGVzdHJveSgpO1xuICAgIHRoaXMuY3VydmU/LnVuU2VsZWN0KCk7XG4gICAgaWYgKHRoaXMuc3VnZ2VzdGVkUG9pbnRzKSB7XG4gICAgICB0aGlzLnN1Z2dlc3RlZFBvaW50cy5kZWxldGUoKTtcbiAgICAgIElOU1RBTkNFLmdldFNjZW5lKCkucmVtb3ZlR2VvbWV0cnkodGhpcy5zdWdnZXN0ZWRQb2ludHMpO1xuICAgIH1cbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/splitCurveCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/sweep2Command.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/sweep2Command.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sweep2Command: () => (/* binding */ Sweep2Command)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../geometry/nurbs/loft */ \"./src/geometry/nurbs/loft.ts\");\n/* harmony import */ var _geometry_nurbs_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../geometry/nurbs/utils */ \"./src/geometry/nurbs/utils.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\n\n\n\nvar Sweep2CommandMode;\n(function (Sweep2CommandMode) {\n    Sweep2CommandMode[Sweep2CommandMode[\"SelectPipe1\"] = 0] = \"SelectPipe1\";\n    Sweep2CommandMode[Sweep2CommandMode[\"SelectPipe2\"] = 1] = \"SelectPipe2\";\n    Sweep2CommandMode[Sweep2CommandMode[\"SelectCrossSection1\"] = 2] = \"SelectCrossSection1\";\n    Sweep2CommandMode[Sweep2CommandMode[\"SelectCrossSection2\"] = 3] = \"SelectCrossSection2\";\n    Sweep2CommandMode[Sweep2CommandMode[\"Preview\"] = 4] = \"Preview\";\n})(Sweep2CommandMode || (Sweep2CommandMode = {}));\nclass Sweep2Command extends _command__WEBPACK_IMPORTED_MODULE_6__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_5__.Clicker();\n        this.mode = Sweep2CommandMode.SelectPipe1;\n        this.surface = null;\n        this.pipe1 = null;\n        this.pipe2 = null;\n        this.crossSection1 = null;\n        this.crossSection2 = null;\n        this.preserveHeight = false;\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n    }\n    handleInputString(input) {\n        var _a;\n        if (input == \"0\") {\n            (_a = this.surface) === null || _a === void 0 ? void 0 : _a.delete();\n            this.surface = null;\n            this.done();\n        }\n        if (this.mode === Sweep2CommandMode.Preview) {\n            switch (input) {\n                case \"\":\n                    this.done();\n                    break;\n                case \"1\":\n                    this.preserveHeight = !this.preserveHeight;\n                    this.generateSurface();\n                    break;\n            }\n        }\n    }\n    handleClickResult(intersection) {\n        switch (this.mode) {\n            case Sweep2CommandMode.SelectPipe1:\n                this.pipe1 = intersection.geometry;\n                this.pipe1.select();\n                this.mode = Sweep2CommandMode.SelectPipe2;\n                break;\n            case Sweep2CommandMode.SelectPipe2:\n                this.pipe2 = intersection.geometry;\n                this.pipe2.select();\n                this.mode = Sweep2CommandMode.SelectCrossSection1;\n                break;\n            case Sweep2CommandMode.SelectCrossSection1:\n                this.crossSection1 = intersection.geometry;\n                this.crossSection1.select();\n                this.mode = Sweep2CommandMode.SelectCrossSection2;\n                break;\n            case Sweep2CommandMode.SelectCrossSection2:\n                this.crossSection2 = intersection.geometry;\n                this.crossSection2.select();\n                this.generateSurface();\n                this.mode = Sweep2CommandMode.Preview;\n                break;\n            default:\n                throw new Error(\"case not handled\");\n        }\n        this.clicker.reset();\n    }\n    handleClick() {\n        this.clicker.click([\"curve\"]);\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove([\"curve\"]);\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case Sweep2CommandMode.SelectPipe1:\n                return \"0:Exit  Select pipe 1.  $\";\n            case Sweep2CommandMode.SelectPipe2:\n                return \"0:Exit  Select pipe 2.  $\";\n            case Sweep2CommandMode.SelectCrossSection1:\n                return \"0:Exit  Select cross section 1.  $\";\n            case Sweep2CommandMode.SelectCrossSection2:\n                return \"0:Exit  Select cross section 2.  $\";\n            case Sweep2CommandMode.Preview:\n                return `0:Exit  1:PreserveHeight(${this.preserveHeight ? \"True\" : \"False\"})  $`;\n            default:\n                throw new Error(\"case not handled\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    generateSurface() {\n        var _a;\n        (_a = this.surface) === null || _a === void 0 ? void 0 : _a.delete();\n        // create clones\n        const p1 = this.pipe1.clone();\n        const p2 = this.pipe2.clone();\n        const c1 = this.crossSection1.clone();\n        const c2 = this.crossSection2.clone();\n        // Match degrees\n        (0,_geometry_nurbs_utils__WEBPACK_IMPORTED_MODULE_3__.matchDegrees)([p1, p2]);\n        (0,_geometry_nurbs_utils__WEBPACK_IMPORTED_MODULE_3__.matchDegrees)([c1, c2]);\n        // Match knots\n        (0,_geometry_nurbs_utils__WEBPACK_IMPORTED_MODULE_3__.matchKnots)([p1, p2]);\n        (0,_geometry_nurbs_utils__WEBPACK_IMPORTED_MODULE_3__.matchKnots)([c1, c2]);\n        // Align directions\n        const face = (a, b, c) => {\n            // make a face b not c\n            const aEnd = a.getEndPoint();\n            const bStart = b.getStartPoint();\n            const bEnd = b.getEndPoint();\n            const cStart = c.getStartPoint();\n            const cEnd = c.getEndPoint();\n            const distB = Math.min(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.dist(aEnd, bEnd), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.dist(aEnd, bStart));\n            const distC = Math.min(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.dist(aEnd, cEnd), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.dist(aEnd, cStart));\n            if (distC < distB)\n                a.reverse();\n        };\n        face(c1, p2, p1);\n        face(c2, p2, p1);\n        face(p1, c2, c1);\n        face(p2, c2, c1);\n        // create new controls \n        const p1Controls = p1.getControlPoints();\n        const p2Controls = p2.getControlPoints();\n        const controls = [];\n        const c1Controls = c1.getWeightedControlPoints();\n        const c2Controls = c2.getWeightedControlPoints();\n        const fromO1Start = p1.getStartPoint();\n        const fromO2Start = p2.getStartPoint();\n        const fromY1Start = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(fromO2Start, fromO1Start);\n        const fromY2Start = fromY1Start;\n        const fromX1Start = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(p1.getStartRay().getDirection(), -1);\n        const fromX2Start = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(p2.getStartRay().getDirection(), -1);\n        const fromZ1Start = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(fromX1Start, fromY1Start);\n        const fromZ2Start = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(fromX2Start, fromY2Start);\n        const fromO1End = p1.getEndPoint();\n        const fromO2End = p2.getEndPoint();\n        const fromY1End = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(fromO2End, fromO1End);\n        const fromY2End = fromY1End;\n        const fromX1End = p1.getEndRay().getDirection();\n        const fromX2End = p2.getEndRay().getDirection();\n        const fromZ1End = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(fromX1End, fromY1End);\n        const fromZ2End = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(fromX2End, fromY2End);\n        const c1Ratios = [];\n        const c2Ratios = [];\n        for (let i = 0; i < c1.getControlPointCount(); i++) {\n            const c1StartDist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.distance(c1Controls[i], c1Controls[0]);\n            const c1EndDist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.distance(c1Controls[i], c1Controls.at(-1));\n            c1Ratios.push(c1StartDist / (c1StartDist + c1EndDist));\n            const c2StartDist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.distance(c2Controls[i], c2Controls[0]);\n            const c2EndDist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.distance(c2Controls[i], c2Controls.at(-1));\n            c2Ratios.push(c2StartDist / (c2StartDist + c2EndDist));\n        }\n        controls.push(c1);\n        for (let i = 1; i < p1.getControlPointCount() - 1; i++) {\n            const toO1 = p1Controls[i];\n            const toO2 = p2Controls[i];\n            const toY1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(toO2, toO1);\n            const toY2 = toY1;\n            const x1Prev = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(p1Controls[i], p1Controls[i - 1]));\n            const x2Prev = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(p2Controls[i], p2Controls[i - 1]));\n            const x1Next = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(p1Controls[i + 1], p1Controls[i]));\n            const x2Next = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(p2Controls[i + 1], p2Controls[i]));\n            const toX1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.add(x1Prev, x1Next));\n            const toX2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.add(x2Prev, x2Next));\n            var toZ1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(toX1, toY1);\n            var toZ2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(toX2, toY2);\n            if (this.preserveHeight) {\n                toZ1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(toZ1);\n                toZ1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(toZ1, (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.lerp)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.length(fromZ1Start), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.length(fromZ1End), i / (p1.getControlPointCount() - 1)));\n                toZ2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(toZ2);\n                toZ2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(toZ2, (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.lerp)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.length(fromZ2Start), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.length(fromZ2End), i / (p1.getControlPointCount() - 1)));\n            }\n            const cob1Start = (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.changeOfBasis)(fromX1Start, fromY1Start, fromZ1Start, fromO1Start, toX1, toY1, toZ1, toO1);\n            const cob2Start = (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.changeOfBasis)(fromX2Start, fromY2Start, fromZ2Start, fromO2Start, toX2, toY2, toZ2, toO2);\n            const cob1End = (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.changeOfBasis)(fromX1End, fromY1End, fromZ1End, fromO1End, toX1, toY1, toZ1, toO1);\n            const cob2End = (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.changeOfBasis)(fromX2End, fromY2End, fromZ2End, fromO2End, toX2, toY2, toZ2, toO2);\n            const controlRow = [];\n            for (let j = 0; j < c1.getControlPointCount(); j++) {\n                const c1p1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(c1Controls[j], cob1Start);\n                const c1p2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(c1Controls[j], cob2Start);\n                const c1Combined = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.lerp(c1p1, c1p2, c1Ratios[j]);\n                const c2p1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(c2Controls[j], cob1End);\n                const c2p2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(c2Controls[j], cob2End);\n                const c2Combined = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.lerp(c2p1, c2p2, c2Ratios[j]);\n                const combined = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.lerp(c1Combined, c2Combined, i / (p1.getControlPointCount() - 1));\n                const combinedWeight = (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.lerp)(c1.getWeightedControlPoints()[j][3], c2.getWeightedControlPoints()[j][3], i / (p1.getControlPointCount() - 1));\n                controlRow.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec4.create(combined[0] * combinedWeight, combined[1] * combinedWeight, combined[2] * combinedWeight, combinedWeight));\n            }\n            controls.push(new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__.Curve(null, controlRow, c1.getDegree(), c1.getKnots()));\n        }\n        controls.push(c2);\n        // loft\n        this.surface = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_2__.loft)(controls, p1.getDegree());\n        this.surface.showControls(true);\n        // clean up\n        p1.delete();\n        p2.delete();\n        for (const curve of controls) {\n            curve.delete();\n        }\n    }\n    done() {\n        var _a, _b, _c, _d;\n        this.finished = true;\n        this.clicker.destroy();\n        (_a = this.pipe1) === null || _a === void 0 ? void 0 : _a.unSelect();\n        (_b = this.pipe2) === null || _b === void 0 ? void 0 : _b.unSelect();\n        (_c = this.crossSection1) === null || _c === void 0 ? void 0 : _c.unSelect();\n        (_d = this.crossSection2) === null || _d === void 0 ? void 0 : _d.unSelect();\n        if (this.surface) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.surface);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/sweep2Command.ts\n");

/***/ }),

/***/ "./src/commands/commands/windowCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/windowCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WindowCommand: () => (/* binding */ WindowCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../widgets/cursor */ \"./src/widgets/cursor.ts\");\n/* harmony import */ var _window_windowManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../window/windowManager */ \"./src/window/windowManager.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\nvar WindowCommandMode;\n(function (WindowCommandMode) {\n    WindowCommandMode[WindowCommandMode[\"SelectWindow\"] = 0] = \"SelectWindow\";\n    WindowCommandMode[WindowCommandMode[\"PlaceWindowStartOrRemoveWindow\"] = 1] = \"PlaceWindowStartOrRemoveWindow\";\n    WindowCommandMode[WindowCommandMode[\"PlaceWindowEnd\"] = 2] = \"PlaceWindowEnd\";\n})(WindowCommandMode || (WindowCommandMode = {}));\nclass WindowCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.windowName = \"none\";\n        this.finished = false;\n        this.mode = WindowCommandMode.SelectWindow;\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.show();\n    }\n    handleClickResult(input) {\n    }\n    handleInputString(input) {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                if (input == \"0\") {\n                    _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.hide();\n                    this.finished = true;\n                    break;\n                }\n                if (_window_windowManager__WEBPACK_IMPORTED_MODULE_2__.WINDOW_NAMES.has(parseInt(input))) {\n                    this.windowName = _window_windowManager__WEBPACK_IMPORTED_MODULE_2__.WINDOW_NAMES.get(parseInt(input));\n                    this.mode = WindowCommandMode.PlaceWindowStartOrRemoveWindow;\n                    // remove existing window to add it back\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().removeWindow(this.windowName);\n                }\n                break;\n            case WindowCommandMode.PlaceWindowStartOrRemoveWindow:\n                if (input == \"1\") {\n                    this.mode = WindowCommandMode.SelectWindow;\n                }\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    // rounds n to nearest multiple of m\n    nearestMultiple(n, m) {\n        const delta = n % m;\n        if (delta < m / 2)\n            n -= delta;\n        else\n            n += m - delta;\n        return n;\n    }\n    roundScreenPoint(p) {\n        return [this.nearestMultiple(p[0], 10), this.nearestMultiple(p[1], 10)];\n    }\n    handleClick() {\n        const [x, y] = this.roundScreenPoint(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos());\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                break;\n            case WindowCommandMode.PlaceWindowStartOrRemoveWindow:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().addWindow(this.windowName, [x, y]);\n                this.mode = WindowCommandMode.PlaceWindowEnd;\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(this.windowName).updateEnd([x, y]);\n                this.windowName = \"none\";\n                this.mode = WindowCommandMode.SelectWindow;\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    handleMouseMove() {\n        const [x, y] = this.roundScreenPoint(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos());\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.setPosition([x, y]);\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                break;\n            case WindowCommandMode.PlaceWindowStartOrRemoveWindow:\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(this.windowName).updateEnd([x, y]);\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                var res = \"Exit:0  \";\n                for (let [key, value] of _window_windowManager__WEBPACK_IMPORTED_MODULE_2__.WINDOW_NAMES) {\n                    res += value + \"(\" + key.toString() + \")  \";\n                }\n                return res + \"$\";\n            case WindowCommandMode.PlaceWindowStartOrRemoveWindow:\n                return \"0:Exit  1:Remove  Click first corner for window.\";\n            case WindowCommandMode.PlaceWindowEnd:\n                return \"0:Exit  Click second corner for window.\";\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqRixNQUFNO1lBQ1I7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQztJQUVlLGVBQWU7UUFDN0IsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pCLEtBQUssaUJBQWlCLENBQUMsWUFBWTtnQkFDakMsSUFBSSxHQUFHLEdBQVcsVUFBVSxDQUFDO2dCQUM3QixLQUFLLElBQUksQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLElBQUksK0RBQVksRUFBRTtvQkFDckMsR0FBRyxJQUFJLEtBQUssR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLEtBQUssQ0FBQztpQkFDN0M7Z0JBQ0QsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDO1lBQ25CLEtBQUssaUJBQWlCLENBQUMsOEJBQThCO2dCQUNuRCxPQUFPLGtEQUFrRCxDQUFDO1lBQzVELEtBQUssaUJBQWlCLENBQUMsY0FBYztnQkFDbkMsT0FBTyx5Q0FBeUMsQ0FBQztZQUNuRDtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRWUsVUFBVTtRQUN4QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvd2luZG93Q29tbWFuZC50cz80ZDc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L2ludGVyc2VjdGlvblwiO1xuaW1wb3J0IHsgY3Vyc29yIH0gZnJvbSBcIi4uLy4uL3dpZGdldHMvY3Vyc29yXCI7XG5pbXBvcnQgeyBXSU5ET1dfTkFNRVMgfSBmcm9tIFwiLi4vLi4vd2luZG93L3dpbmRvd01hbmFnZXJcIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiO1xuXG5lbnVtIFdpbmRvd0NvbW1hbmRNb2RlIHtcbiAgU2VsZWN0V2luZG93LFxuICBQbGFjZVdpbmRvd1N0YXJ0T3JSZW1vdmVXaW5kb3csXG4gIFBsYWNlV2luZG93RW5kLFxufVxuXG5leHBvcnQgY2xhc3MgV2luZG93Q29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG4gIHByaXZhdGUgbW9kZTogV2luZG93Q29tbWFuZE1vZGU7XG4gIHByaXZhdGUgd2luZG93TmFtZTogc3RyaW5nID0gXCJub25lXCI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgdGhpcy5tb2RlID0gV2luZG93Q29tbWFuZE1vZGUuU2VsZWN0V2luZG93O1xuICAgIGN1cnNvci5zaG93KCk7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlQ2xpY2tSZXN1bHQoaW5wdXQ6IEludGVyc2VjdGlvbik6IHZvaWQge1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZUlucHV0U3RyaW5nKGlucHV0OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5TZWxlY3RXaW5kb3c6XG4gICAgICAgIGlmIChpbnB1dCA9PSBcIjBcIikge1xuICAgICAgICAgIGN1cnNvci5oaWRlKCk7XG4gICAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFdJTkRPV19OQU1FUy5oYXMocGFyc2VJbnQoaW5wdXQpKSkge1xuICAgICAgICAgIHRoaXMud2luZG93TmFtZSA9IFdJTkRPV19OQU1FUy5nZXQocGFyc2VJbnQoaW5wdXQpKSE7XG4gICAgICAgICAgdGhpcy5tb2RlID0gV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dTdGFydE9yUmVtb3ZlV2luZG93O1xuXG4gICAgICAgICAgLy8gcmVtb3ZlIGV4aXN0aW5nIHdpbmRvdyB0byBhZGQgaXQgYmFja1xuICAgICAgICAgIElOU1RBTkNFLmdldFdpbmRvd01hbmFnZXIoKS5yZW1vdmVXaW5kb3codGhpcy53aW5kb3dOYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dTdGFydE9yUmVtb3ZlV2luZG93OlxuICAgICAgICBpZiAoaW5wdXQgPT0gXCIxXCIpIHtcbiAgICAgICAgICB0aGlzLm1vZGUgPSBXaW5kb3dDb21tYW5kTW9kZS5TZWxlY3RXaW5kb3c7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93RW5kOlxuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gIH1cblxuICAvLyByb3VuZHMgbiB0byBuZWFyZXN0IG11bHRpcGxlIG9mIG1cbiAgcHJpdmF0ZSBuZWFyZXN0TXVsdGlwbGUobjogbnVtYmVyLCBtOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGNvbnN0IGRlbHRhID0gbiAlIG07XG4gICAgaWYgKGRlbHRhIDwgbSAvIDIpIG4gLT0gZGVsdGE7XG4gICAgZWxzZSBuICs9IG0gLSBkZWx0YTtcbiAgICByZXR1cm4gbjtcbiAgfVxuXG4gIHByaXZhdGUgcm91bmRTY3JlZW5Qb2ludChwOiBbbnVtYmVyLCBudW1iZXJdKTogW251bWJlciwgbnVtYmVyXSB7XG4gICAgcmV0dXJuIFt0aGlzLm5lYXJlc3RNdWx0aXBsZShwWzBdLCAxMCksIHRoaXMubmVhcmVzdE11bHRpcGxlKHBbMV0sIDEwKV07XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlQ2xpY2soKTogdm9pZCB7XG4gICAgY29uc3QgW3gsIHldID0gdGhpcy5yb3VuZFNjcmVlblBvaW50KElOU1RBTkNFLmdldEV2ZW50TWFuYWdlcigpLmdldE1vdXNlSGFuZGxlcigpLmdldE1vdXNlUG9zKCkpO1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlNlbGVjdFdpbmRvdzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93U3RhcnRPclJlbW92ZVdpbmRvdzpcbiAgICAgICAgSU5TVEFOQ0UuZ2V0V2luZG93TWFuYWdlcigpLmFkZFdpbmRvdyh0aGlzLndpbmRvd05hbWUsIFt4LCB5XSk7XG4gICAgICAgIHRoaXMubW9kZSA9IFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93RW5kO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dFbmQ6XG4gICAgICAgIElOU1RBTkNFLmdldFdpbmRvd01hbmFnZXIoKS5nZXRXaW5kb3dzKCkuZ2V0KHRoaXMud2luZG93TmFtZSkhLnVwZGF0ZUVuZChbeCwgeV0pO1xuICAgICAgICB0aGlzLndpbmRvd05hbWUgPSBcIm5vbmVcIjtcbiAgICAgICAgdGhpcy5tb2RlID0gV2luZG93Q29tbWFuZE1vZGUuU2VsZWN0V2luZG93O1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlTW91c2VNb3ZlKCk6IHZvaWQge1xuICAgIGNvbnN0IFt4LCB5XSA9IHRoaXMucm91bmRTY3JlZW5Qb2ludChJTlNUQU5DRS5nZXRFdmVudE1hbmFnZXIoKS5nZXRNb3VzZUhhbmRsZXIoKS5nZXRNb3VzZVBvcygpKTtcbiAgICBjdXJzb3Iuc2V0UG9zaXRpb24oW3gsIHldKTtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5TZWxlY3RXaW5kb3c6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5QbGFjZVdpbmRvd1N0YXJ0T3JSZW1vdmVXaW5kb3c6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5QbGFjZVdpbmRvd0VuZDpcbiAgICAgICAgSU5TVEFOQ0UuZ2V0V2luZG93TWFuYWdlcigpLmdldFdpbmRvd3MoKS5nZXQodGhpcy53aW5kb3dOYW1lKSEudXBkYXRlRW5kKFt4LCB5XSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5TZWxlY3RXaW5kb3c6XG4gICAgICAgIHZhciByZXM6IHN0cmluZyA9IFwiRXhpdDowICBcIjtcbiAgICAgICAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIFdJTkRPV19OQU1FUykge1xuICAgICAgICAgIHJlcyArPSB2YWx1ZSArIFwiKFwiICsga2V5LnRvU3RyaW5nKCkgKyBcIikgIFwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXMgKyBcIiRcIjtcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dTdGFydE9yUmVtb3ZlV2luZG93OlxuICAgICAgICByZXR1cm4gXCIwOkV4aXQgIDE6UmVtb3ZlICBDbGljayBmaXJzdCBjb3JuZXIgZm9yIHdpbmRvdy5cIjtcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dFbmQ6XG4gICAgICAgIHJldHVybiBcIjA6RXhpdCAgQ2xpY2sgc2Vjb25kIGNvcm5lciBmb3Igd2luZG93LlwiO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBpc0ZpbmlzaGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZpbmlzaGVkO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/commands/windowCommand.ts\n");

/***/ }),

/***/ "./src/commands/oneTimeCommands/hideCommands.ts":
/*!******************************************************!*\
  !*** ./src/commands/oneTimeCommands/hideCommands.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hide: () => (/* binding */ hide),\n/* harmony export */   hideSwap: () => (/* binding */ hideSwap),\n/* harmony export */   show: () => (/* binding */ show)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n\nconst hide = function () {\n    const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n    for (const geo of selection)\n        geo.hide();\n};\nconst show = function () {\n    const geometry = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getRootGeometry();\n    for (const geo of geometry)\n        geo.show();\n};\nconst hideSwap = function () {\n    const geometry = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getRootGeometry();\n    for (const geo of geometry) {\n        if (geo.isHidden()) {\n            geo.show();\n        }\n        else {\n            geo.hide();\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL2hpZGVDb21tYW5kcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9DO0FBRzdCLE1BQU0sSUFBSSxHQUFHO0lBQ2xCLE1BQU0sU0FBUyxHQUFrQiwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3ZFLEtBQUssTUFBTSxHQUFHLElBQUksU0FBUztRQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMxQyxDQUFDO0FBRU0sTUFBTSxJQUFJLEdBQUc7SUFDbEIsTUFBTSxRQUFRLEdBQUcsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN2RCxLQUFLLE1BQU0sR0FBRyxJQUFJLFFBQVE7UUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDekMsQ0FBQztBQUVNLE1BQU0sUUFBUSxHQUFHO0lBQ3RCLE1BQU0sUUFBUSxHQUFHLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDdkQsS0FBSyxNQUFNLEdBQUcsSUFBSSxRQUFRLEVBQUU7UUFDMUIsSUFBSSxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDbEIsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ1o7YUFBTTtZQUNMLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNaO0tBQ0Y7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL2hpZGVDb21tYW5kcy50cz84NWE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiXG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9nZW9tZXRyeVwiXG5cbmV4cG9ydCBjb25zdCBoaWRlID0gZnVuY3Rpb24oKTogdm9pZCB7XG4gIGNvbnN0IHNlbGVjdGlvbjogU2V0PEdlb21ldHJ5PiA9IElOU1RBTkNFLmdldFNlbGVjdG9yKCkuZ2V0U2VsZWN0aW9uKCk7XG4gIGZvciAoY29uc3QgZ2VvIG9mIHNlbGVjdGlvbikgZ2VvLmhpZGUoKTtcbn1cblxuZXhwb3J0IGNvbnN0IHNob3cgPSBmdW5jdGlvbigpOiB2b2lkIHtcbiAgY29uc3QgZ2VvbWV0cnkgPSBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldFJvb3RHZW9tZXRyeSgpO1xuICBmb3IgKGNvbnN0IGdlbyBvZiBnZW9tZXRyeSkgZ2VvLnNob3coKTtcbn1cblxuZXhwb3J0IGNvbnN0IGhpZGVTd2FwID0gZnVuY3Rpb24oKTogdm9pZCB7XG4gIGNvbnN0IGdlb21ldHJ5ID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRSb290R2VvbWV0cnkoKTtcbiAgZm9yIChjb25zdCBnZW8gb2YgZ2VvbWV0cnkpIHtcbiAgICBpZiAoZ2VvLmlzSGlkZGVuKCkpIHtcbiAgICAgIGdlby5zaG93KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlby5oaWRlKCk7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/oneTimeCommands/hideCommands.ts\n");

/***/ }),

/***/ "./src/commands/oneTimeCommands/reverseCurveCommand.ts":
/*!*************************************************************!*\
  !*** ./src/commands/oneTimeCommands/reverseCurveCommand.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reverseCurveCommand: () => (/* binding */ reverseCurveCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n\nconst reverseCurveCommand = function () {\n    const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n    for (const geo of selection) {\n        if (geo.getTypeName() == \"Curve\") {\n            geo.reverse();\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL3JldmVyc2VDdXJ2ZUNvbW1hbmQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFJN0IsTUFBTSxtQkFBbUIsR0FBRztJQUNqQyxNQUFNLFNBQVMsR0FBa0IsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN2RSxLQUFLLE1BQU0sR0FBRyxJQUFJLFNBQVMsRUFBRTtRQUMzQixJQUFJLEdBQUcsQ0FBQyxXQUFXLEVBQUUsSUFBSSxPQUFPLEVBQUU7WUFDeEIsR0FBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ3hCO0tBQ0Y7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL3JldmVyc2VDdXJ2ZUNvbW1hbmQudHM/NTk5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIlxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvZ2VvbWV0cnlcIlxuaW1wb3J0IHsgQ3VydmUgfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvbnVyYnMvY3VydmVcIjtcblxuZXhwb3J0IGNvbnN0IHJldmVyc2VDdXJ2ZUNvbW1hbmQgPSBmdW5jdGlvbigpIHtcbiAgY29uc3Qgc2VsZWN0aW9uOiBTZXQ8R2VvbWV0cnk+ID0gSU5TVEFOQ0UuZ2V0U2VsZWN0b3IoKS5nZXRTZWxlY3Rpb24oKTtcbiAgZm9yIChjb25zdCBnZW8gb2Ygc2VsZWN0aW9uKSB7XG4gICAgaWYgKGdlby5nZXRUeXBlTmFtZSgpID09IFwiQ3VydmVcIikge1xuICAgICAgKDxDdXJ2ZT5nZW8pLnJldmVyc2UoKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/oneTimeCommands/reverseCurveCommand.ts\n");

/***/ }),

/***/ "./src/commands/oneTimeCommands/toggleControlCageCommand.ts":
/*!******************************************************************!*\
  !*** ./src/commands/oneTimeCommands/toggleControlCageCommand.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControlCageOffCommand: () => (/* binding */ ControlCageOffCommand),\n/* harmony export */   ControlCageOnCommand: () => (/* binding */ ControlCageOnCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n\nconst ControlCageOnCommand = function () {\n    const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n    for (const geo of selection)\n        geo.showControls(true);\n};\nconst ControlCageOffCommand = function () {\n    const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n    for (const geo of selection)\n        geo.showControls(false);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL3RvZ2dsZUNvbnRyb2xDYWdlQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0M7QUFJN0IsTUFBTSxvQkFBb0IsR0FBRztJQUNsQyxNQUFNLFNBQVMsR0FBa0IsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN2RSxLQUFLLE1BQU0sR0FBRyxJQUFJLFNBQVM7UUFBRSxHQUFHLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RELENBQUM7QUFFTSxNQUFNLHFCQUFxQixHQUFHO0lBQ25DLE1BQU0sU0FBUyxHQUFrQiwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3ZFLEtBQUssTUFBTSxHQUFHLElBQUksU0FBUztRQUFFLEdBQUcsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdkQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL29uZVRpbWVDb21tYW5kcy90b2dnbGVDb250cm9sQ2FnZUNvbW1hbmQudHM/MTMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIlxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvZ2VvbWV0cnlcIjtcblxuXG5leHBvcnQgY29uc3QgQ29udHJvbENhZ2VPbkNvbW1hbmQgPSBmdW5jdGlvbigpOiB2b2lkIHtcbiAgY29uc3Qgc2VsZWN0aW9uOiBTZXQ8R2VvbWV0cnk+ID0gSU5TVEFOQ0UuZ2V0U2VsZWN0b3IoKS5nZXRTZWxlY3Rpb24oKTtcbiAgZm9yIChjb25zdCBnZW8gb2Ygc2VsZWN0aW9uKSBnZW8uc2hvd0NvbnRyb2xzKHRydWUpO1xufVxuXG5leHBvcnQgY29uc3QgQ29udHJvbENhZ2VPZmZDb21tYW5kID0gZnVuY3Rpb24oKTogdm9pZCB7XG4gIGNvbnN0IHNlbGVjdGlvbjogU2V0PEdlb21ldHJ5PiA9IElOU1RBTkNFLmdldFNlbGVjdG9yKCkuZ2V0U2VsZWN0aW9uKCk7XG4gIGZvciAoY29uc3QgZ2VvIG9mIHNlbGVjdGlvbikgZ2VvLnNob3dDb250cm9scyhmYWxzZSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/oneTimeCommands/toggleControlCageCommand.ts\n");

/***/ }),

/***/ "./src/commands/oneTimeCommands/toggleDarkModeCommand.ts":
/*!***************************************************************!*\
  !*** ./src/commands/oneTimeCommands/toggleDarkModeCommand.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toggleDarkMode: () => (/* binding */ toggleDarkMode)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n\nvar isDarkMode = true;\nconst rootStyle = document.querySelector(':root');\nfunction toggleDarkMode() {\n    if (isDarkMode)\n        setLightMode();\n    else\n        setDarkMode();\n}\nfunction setLightMode() {\n    isDarkMode = false;\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().setClearColor([0.8, 0.8, 0.8, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorMaterial(\"darker grey\");\n    rootStyle.style.setProperty(\"--floating-window-background-color\", \"var(--transparent-white)\");\n    rootStyle.style.setProperty(\"--floating-window-text-color\", \"var(--dark-red)\");\n    rootStyle.style.setProperty(\"--floating-window-border-color\", \"var(--dark-red)\");\n}\nfunction setDarkMode() {\n    isDarkMode = true;\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().setClearColor([0.1, 0.1, 0.1, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorMaterial(\"lighter grey\");\n    rootStyle.style.setProperty(\"--floating-window-background-color\", \"var(--transparent-black)\");\n    rootStyle.style.setProperty(\"--floating-window-text-color\", \"var(--light-red)\");\n    rootStyle.style.setProperty(\"--floating-window-border-color\", \"var(--light-red)\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL3RvZ2dsZURhcmtNb2RlQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUVyQyxJQUFJLFVBQVUsR0FBWSxJQUFJLENBQUM7QUFFL0IsTUFBTSxTQUFTLEdBQXVDLFFBQVEsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7QUFFL0UsU0FBUyxjQUFjO0lBQzVCLElBQUksVUFBVTtRQUFFLFlBQVksRUFBRSxDQUFDOztRQUMxQixXQUFXLEVBQUUsQ0FBQztBQUNyQixDQUFDO0FBRUQsU0FBUyxZQUFZO0lBQ25CLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDbkIsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzNELDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMzRSxTQUFTLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxvQ0FBb0MsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO0lBQzlGLFNBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLDhCQUE4QixFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDL0UsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsZ0NBQWdDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQUVuRixDQUFDO0FBRUQsU0FBUyxXQUFXO0lBQ2xCLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDbEIsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzNELDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUM1RSxTQUFTLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxvQ0FBb0MsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO0lBQzlGLFNBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLDhCQUE4QixFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDaEYsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsZ0NBQWdDLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztBQUNwRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL3RvZ2dsZURhcmtNb2RlQ29tbWFuZC50cz81YWYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuXG52YXIgaXNEYXJrTW9kZTogYm9vbGVhbiA9IHRydWU7XG5cbmNvbnN0IHJvb3RTdHlsZTogSFRNTFN0eWxlRWxlbWVudCA9IDxIVE1MU3R5bGVFbGVtZW50PmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJzpyb290Jyk7XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVEYXJrTW9kZSgpIHtcbiAgaWYgKGlzRGFya01vZGUpIHNldExpZ2h0TW9kZSgpO1xuICBlbHNlIHNldERhcmtNb2RlKCk7XG59XG5cbmZ1bmN0aW9uIHNldExpZ2h0TW9kZSgpIHtcbiAgaXNEYXJrTW9kZSA9IGZhbHNlO1xuICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLnNldENsZWFyQ29sb3IoWzAuOCwgMC44LCAwLjgsIDEuMF0pO1xuICBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENvbnN0cnVjdGlvblBsYW5lKCkuc2V0TWFqb3JNYXRlcmlhbChcImRhcmtlciBncmV5XCIpO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy1iYWNrZ3JvdW5kLWNvbG9yXCIsIFwidmFyKC0tdHJhbnNwYXJlbnQtd2hpdGUpXCIpO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy10ZXh0LWNvbG9yXCIsIFwidmFyKC0tZGFyay1yZWQpXCIpO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy1ib3JkZXItY29sb3JcIiwgXCJ2YXIoLS1kYXJrLXJlZClcIik7XG5cbn1cblxuZnVuY3Rpb24gc2V0RGFya01vZGUoKSB7XG4gIGlzRGFya01vZGUgPSB0cnVlO1xuICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLnNldENsZWFyQ29sb3IoWzAuMSwgMC4xLCAwLjEsIDEuMF0pO1xuICBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENvbnN0cnVjdGlvblBsYW5lKCkuc2V0TWFqb3JNYXRlcmlhbChcImxpZ2h0ZXIgZ3JleVwiKTtcbiAgcm9vdFN0eWxlLnN0eWxlLnNldFByb3BlcnR5KFwiLS1mbG9hdGluZy13aW5kb3ctYmFja2dyb3VuZC1jb2xvclwiLCBcInZhcigtLXRyYW5zcGFyZW50LWJsYWNrKVwiKTtcbiAgcm9vdFN0eWxlLnN0eWxlLnNldFByb3BlcnR5KFwiLS1mbG9hdGluZy13aW5kb3ctdGV4dC1jb2xvclwiLCBcInZhcigtLWxpZ2h0LXJlZClcIik7XG4gIHJvb3RTdHlsZS5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tZmxvYXRpbmctd2luZG93LWJvcmRlci1jb2xvclwiLCBcInZhcigtLWxpZ2h0LXJlZClcIik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/oneTimeCommands/toggleDarkModeCommand.ts\n");

/***/ }),

/***/ "./src/commands/selector.ts":
/*!**********************************!*\
  !*** ./src/commands/selector.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Selector: () => (/* binding */ Selector)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_frustum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/frustum */ \"./src/geometry/frustum.ts\");\n\n\nclass Selector {\n    constructor() {\n        this.selection = new Set;\n        this.selecting = false;\n        this.element = document.createElement(\"div\");\n        this.element.id = \"clicker\";\n        this.element.className = \"floating-window\";\n        this.element.style.width = \"auto\";\n        this.element.hidden = true;\n        document.body.appendChild(this.element);\n    }\n    reset() {\n        for (let geo of this.selection) {\n            geo.unSelect();\n        }\n        this.selection.clear();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n    addToSubSelection(geos, subIDss) {\n        for (let i = 0; i < geos.length; i++) {\n            let geo = geos[i];\n            const subIDs = subIDss[i];\n            if (subIDs.length > 0 && subIDs[0] === -1) {\n                this.addToSelection(geo);\n                continue;\n            }\n            while (!_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().containsGeometry(geo) && geo.getParent())\n                geo = geo.getParent();\n            this.selection.add(geo);\n            geo.addToSubSelection(...subIDs);\n        }\n    }\n    removeFromSubSelection(geos, subIDss) {\n        for (let i = 0; i < geos.length; i++) {\n            let geo = geos[i];\n            const subIDs = subIDss[i];\n            if (subIDs.length > 0 && subIDs[0] === -1) {\n                this.removeFromSelection(geo);\n                continue;\n            }\n            while (!_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().containsGeometry(geo) && geo.getParent())\n                geo = geo.getParent();\n            geo.removeFromSubSelection(...subIDs);\n            if (!geo.hasSubSelection()) {\n                this.selection.delete(geo);\n            }\n        }\n    }\n    addToSelection(...geometry) {\n        for (let geo of geometry) {\n            while (!_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().containsGeometry(geo) && geo.getParent())\n                geo = geo.getParent();\n            this.selection.add(geo);\n            geo.select();\n        }\n    }\n    removeFromSelection(...geometry) {\n        for (let geo of geometry) {\n            while (!_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().containsGeometry(geo) && geo.getParent())\n                geo = geo.getParent();\n            this.selection.delete(geo);\n            geo.unSelect();\n        }\n    }\n    onSelectionMoved() {\n        for (const geo of this.selection) {\n            geo.onSelectionMoved();\n        }\n    }\n    toggleSelectionAtPixel(x, y, sub) {\n        if (this.selecting) {\n            this.doneTogglingSelectionAtPixel(null);\n            return;\n        }\n        this.selecting = true;\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n        const intersections = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().firstIntersectionsWithinMargin(ray, 2, sub);\n        const list = document.createElement(\"ul\");\n        this.element.innerHTML = \"\";\n        this.element.appendChild(list);\n        const geometryAtPixel = [];\n        for (let intersection of intersections) {\n            if (intersection.geometry === null)\n                continue; // construction plane intersection\n            if (intersection.description != \"control cage\") {\n                intersection.objectSubID = -1;\n            }\n            let geo = intersection.geometry; // TODO: chase parent\n            geometryAtPixel.push([geo, intersection.objectSubID]);\n            const li = document.createElement(\"li\");\n            li.innerText = intersection.description;\n            li.onclick = function () {\n                if (sub) {\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().doneTogglingSelectionAtPixel(geo, intersection.objectSubID);\n                }\n                else {\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().doneTogglingSelectionAtPixel(geo);\n                }\n            };\n            li.onmouseover = function () { geo.hover(); };\n            li.onmouseleave = function () { geo.unHover(); };\n            list.appendChild(li);\n        }\n        if (geometryAtPixel.length === 0) {\n            this.doneTogglingSelectionAtPixel(null);\n            return;\n        }\n        if (geometryAtPixel.length === 1) {\n            if (sub) {\n                this.doneTogglingSelectionAtPixel(geometryAtPixel[0][0], geometryAtPixel[0][1]);\n            }\n            else {\n                this.doneTogglingSelectionAtPixel(geometryAtPixel[0][0]);\n            }\n            return;\n        }\n        this.element.setAttribute(\"style\", `\n      left:${x}px;\n      top:${y}px;\n      width:auto;\n      height:auto;`);\n        this.element.hidden = false;\n    }\n    doneTogglingSelectionAtPixel(geo, subID) {\n        if (geo !== null) {\n            geo.unHover();\n            if (subID !== undefined && subID !== -1) {\n                if (geo.isSubSelected(subID)) {\n                    this.removeFromSubSelection([geo], [[subID]]);\n                }\n                else {\n                    this.addToSubSelection([geo], [[subID]]);\n                }\n            }\n            else {\n                if (geo.isSelected()) {\n                    this.removeFromSelection(geo);\n                }\n                else {\n                    this.addToSelection(geo);\n                }\n            }\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n        this.selecting = false;\n        this.element.hidden = true;\n    }\n    selectInRectangle(left, right, top, bottom, inclusive, sub) {\n        const frustum = new _geometry_frustum__WEBPACK_IMPORTED_MODULE_1__.Frustum(left, right, top, bottom);\n        if (sub) {\n            const within = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().getWithinFrustumSub(frustum, inclusive);\n            this.addToSubSelection(...within);\n        }\n        else {\n            const within = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().getWithinFrustum(frustum, inclusive);\n            for (const geo of within) {\n                this.addToSelection(geo);\n            }\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n    unSelectInRectangle(left, right, top, bottom, inclusive, sub) {\n        const frustum = new _geometry_frustum__WEBPACK_IMPORTED_MODULE_1__.Frustum(left, right, top, bottom);\n        if (sub) {\n            const within = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().getWithinFrustumSub(frustum, inclusive);\n            this.removeFromSubSelection(...within);\n        }\n        else {\n            const within = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().getWithinFrustum(frustum, inclusive);\n            for (const geo of within) {\n                this.removeFromSelection(geo);\n            }\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n    getSelection() {\n        return this.selection;\n    }\n    transformSelected() {\n        const scene = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene();\n        for (const geo of this.selection) {\n            scene.getBoundingBoxHeirarchy().remove(geo);\n            geo.bakeSelectionTransform();\n            scene.getBoundingBoxHeirarchy().add(geo);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxZQUFZO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRU0saUJBQWlCO1FBQ3RCLE1BQU0sS0FBSyxHQUFVLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDekMsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hDLEtBQUssQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM1QyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztZQUM3QixLQUFLLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDMUM7SUFDSCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9jb21tYW5kcy9zZWxlY3Rvci50cz85NGU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuaW1wb3J0IHsgRnJ1c3R1bSB9IGZyb20gXCIuLi9nZW9tZXRyeS9mcnVzdHVtXCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi9nZW9tZXRyeS9nZW9tZXRyeVwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4uL2dlb21ldHJ5L2ludGVyc2VjdGlvblwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4uL2dlb21ldHJ5L3JheVwiO1xuaW1wb3J0IHsgU2NlbmUgfSBmcm9tIFwiLi4vc2NlbmUvc2NlbmVcIjtcblxuXG5leHBvcnQgY2xhc3MgU2VsZWN0b3Ige1xuXG4gIHByaXZhdGUgc2VsZWN0aW9uOiBTZXQ8R2VvbWV0cnk+ID0gbmV3IFNldDxHZW9tZXRyeT47XG4gIHByaXZhdGUgZWxlbWVudDogSFRNTEVsZW1lbnQ7XG4gIHByaXZhdGUgc2VsZWN0aW5nOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc2VsZWN0aW5nID0gZmFsc2U7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0aGlzLmVsZW1lbnQuaWQgPSBcImNsaWNrZXJcIjtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NOYW1lID0gXCJmbG9hdGluZy13aW5kb3dcIjtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUud2lkdGggPSBcImF1dG9cIjtcbiAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gdHJ1ZTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7XG4gIH1cblxuICBwdWJsaWMgcmVzZXQoKTogdm9pZCB7XG4gICAgZm9yIChsZXQgZ2VvIG9mIHRoaXMuc2VsZWN0aW9uKSB7XG4gICAgICBnZW8udW5TZWxlY3QoKTtcbiAgICB9XG4gICAgdGhpcy5zZWxlY3Rpb24uY2xlYXIoKTtcbiAgICBJTlNUQU5DRS5nZXRNb3ZlcigpLnVwZGF0ZWRTZWxlY3Rpb24oKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRUb1N1YlNlbGVjdGlvbihnZW9zOiBHZW9tZXRyeVtdLCBzdWJJRHNzOiBudW1iZXJbXVtdKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnZW9zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgZ2VvOiBHZW9tZXRyeSA9IGdlb3NbaV07XG4gICAgICBjb25zdCBzdWJJRHM6IG51bWJlcltdID0gc3ViSURzc1tpXTtcbiAgICAgIGlmIChzdWJJRHMubGVuZ3RoID4gMCAmJiBzdWJJRHNbMF0gPT09IC0xKSB7XG4gICAgICAgIHRoaXMuYWRkVG9TZWxlY3Rpb24oZ2VvKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICB3aGlsZSAoIUlOU1RBTkNFLmdldFNjZW5lKCkuY29udGFpbnNHZW9tZXRyeShnZW8pICYmIGdlby5nZXRQYXJlbnQoKSkgZ2VvID0gZ2VvLmdldFBhcmVudCgpITtcbiAgICAgIHRoaXMuc2VsZWN0aW9uLmFkZChnZW8pO1xuICAgICAgZ2VvLmFkZFRvU3ViU2VsZWN0aW9uKC4uLnN1YklEcyk7XG4gICAgfVxuICB9XG5cblxuICBwdWJsaWMgcmVtb3ZlRnJvbVN1YlNlbGVjdGlvbihnZW9zOiBHZW9tZXRyeVtdLCBzdWJJRHNzOiBudW1iZXJbXVtdKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnZW9zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgZ2VvOiBHZW9tZXRyeSA9IGdlb3NbaV07XG4gICAgICBjb25zdCBzdWJJRHM6IG51bWJlcltdID0gc3ViSURzc1tpXTtcbiAgICAgIGlmIChzdWJJRHMubGVuZ3RoID4gMCAmJiBzdWJJRHNbMF0gPT09IC0xKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRnJvbVNlbGVjdGlvbihnZW8pO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHdoaWxlICghSU5TVEFOQ0UuZ2V0U2NlbmUoKS5jb250YWluc0dlb21ldHJ5KGdlbykgJiYgZ2VvLmdldFBhcmVudCgpKSBnZW8gPSBnZW8uZ2V0UGFyZW50KCkhO1xuICAgICAgZ2VvLnJlbW92ZUZyb21TdWJTZWxlY3Rpb24oLi4uc3ViSURzKTtcbiAgICAgIGlmICghZ2VvLmhhc1N1YlNlbGVjdGlvbigpKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0aW9uLmRlbGV0ZShnZW8pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBhZGRUb1NlbGVjdGlvbiguLi5nZW9tZXRyeTogR2VvbWV0cnlbXSk6IHZvaWQge1xuICAgIGZvciAobGV0IGdlbyBvZiBnZW9tZXRyeSkge1xuICAgICAgd2hpbGUgKCFJTlNUQU5DRS5nZXRTY2VuZSgpLmNvbnRhaW5zR2VvbWV0cnkoZ2VvKSAmJiBnZW8uZ2V0UGFyZW50KCkpIGdlbyA9IGdlby5nZXRQYXJlbnQoKSE7XG4gICAgICB0aGlzLnNlbGVjdGlvbi5hZGQoZ2VvKTtcbiAgICAgIGdlby5zZWxlY3QoKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlRnJvbVNlbGVjdGlvbiguLi5nZW9tZXRyeTogR2VvbWV0cnlbXSk6IHZvaWQge1xuICAgIGZvciAobGV0IGdlbyBvZiBnZW9tZXRyeSkge1xuICAgICAgd2hpbGUgKCFJTlNUQU5DRS5nZXRTY2VuZSgpLmNvbnRhaW5zR2VvbWV0cnkoZ2VvKSAmJiBnZW8uZ2V0UGFyZW50KCkpIGdlbyA9IGdlby5nZXRQYXJlbnQoKSE7XG4gICAgICB0aGlzLnNlbGVjdGlvbi5kZWxldGUoZ2VvKTtcbiAgICAgIGdlby51blNlbGVjdCgpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvblNlbGVjdGlvbk1vdmVkKCk6IHZvaWQge1xuICAgIGZvciAoY29uc3QgZ2VvIG9mIHRoaXMuc2VsZWN0aW9uKSB7XG4gICAgICBnZW8ub25TZWxlY3Rpb25Nb3ZlZCgpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyB0b2dnbGVTZWxlY3Rpb25BdFBpeGVsKHg6IG51bWJlciwgeTogbnVtYmVyLCBzdWI6IGJvb2xlYW4pOiB2b2lkIHtcblxuICAgIGlmICh0aGlzLnNlbGVjdGluZykge1xuICAgICAgdGhpcy5kb25lVG9nZ2xpbmdTZWxlY3Rpb25BdFBpeGVsKG51bGwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdGluZyA9IHRydWU7XG5cbiAgICBjb25zdCByYXk6IFJheSA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q2FtZXJhKCkuZ2V0UmF5QXRQaXhlbCh4LCB5KTtcbiAgICBjb25zdCBpbnRlcnNlY3Rpb25zOiBJbnRlcnNlY3Rpb25bXSA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Qm91bmRpbmdCb3hIZWlyYXJjaHkoKS5maXJzdEludGVyc2VjdGlvbnNXaXRoaW5NYXJnaW4ocmF5LCAyLCBzdWIpO1xuICAgIGNvbnN0IGxpc3Q6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSBcIlwiO1xuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChsaXN0KTtcbiAgICBjb25zdCBnZW9tZXRyeUF0UGl4ZWw6IFtHZW9tZXRyeSwgbnVtYmVyXVtdID0gW107XG4gICAgZm9yIChsZXQgaW50ZXJzZWN0aW9uIG9mIGludGVyc2VjdGlvbnMpIHtcblxuICAgICAgaWYgKGludGVyc2VjdGlvbi5nZW9tZXRyeSA9PT0gbnVsbCkgY29udGludWU7IC8vIGNvbnN0cnVjdGlvbiBwbGFuZSBpbnRlcnNlY3Rpb25cblxuICAgICAgaWYgKGludGVyc2VjdGlvbi5kZXNjcmlwdGlvbiAhPSBcImNvbnRyb2wgY2FnZVwiKSB7XG4gICAgICAgIGludGVyc2VjdGlvbi5vYmplY3RTdWJJRCA9IC0xO1xuICAgICAgfVxuXG4gICAgICBsZXQgZ2VvOiBHZW9tZXRyeSA9IGludGVyc2VjdGlvbi5nZW9tZXRyeTsvLyBUT0RPOiBjaGFzZSBwYXJlbnRcbiAgICAgIGdlb21ldHJ5QXRQaXhlbC5wdXNoKFtnZW8sIGludGVyc2VjdGlvbi5vYmplY3RTdWJJRF0pO1xuXG4gICAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICAgIGxpLmlubmVyVGV4dCA9IGludGVyc2VjdGlvbi5kZXNjcmlwdGlvbjtcbiAgICAgIGxpLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHN1Yikge1xuICAgICAgICAgIElOU1RBTkNFLmdldFNlbGVjdG9yKCkuZG9uZVRvZ2dsaW5nU2VsZWN0aW9uQXRQaXhlbChnZW8sIGludGVyc2VjdGlvbi5vYmplY3RTdWJJRCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgSU5TVEFOQ0UuZ2V0U2VsZWN0b3IoKS5kb25lVG9nZ2xpbmdTZWxlY3Rpb25BdFBpeGVsKGdlbyk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBsaS5vbm1vdXNlb3ZlciA9IGZ1bmN0aW9uKCkgeyBnZW8uaG92ZXIoKTsgfTtcbiAgICAgIGxpLm9ubW91c2VsZWF2ZSA9IGZ1bmN0aW9uKCkgeyBnZW8udW5Ib3ZlcigpOyB9XG4gICAgICBsaXN0LmFwcGVuZENoaWxkKGxpKTtcbiAgICB9XG5cbiAgICBpZiAoZ2VvbWV0cnlBdFBpeGVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5kb25lVG9nZ2xpbmdTZWxlY3Rpb25BdFBpeGVsKG51bGwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoZ2VvbWV0cnlBdFBpeGVsLmxlbmd0aCA9PT0gMSkge1xuICAgICAgaWYgKHN1Yikge1xuICAgICAgICB0aGlzLmRvbmVUb2dnbGluZ1NlbGVjdGlvbkF0UGl4ZWwoZ2VvbWV0cnlBdFBpeGVsWzBdWzBdLCBnZW9tZXRyeUF0UGl4ZWxbMF1bMV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kb25lVG9nZ2xpbmdTZWxlY3Rpb25BdFBpeGVsKGdlb21ldHJ5QXRQaXhlbFswXVswXSk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIGBcbiAgICAgIGxlZnQ6JHt4fXB4O1xuICAgICAgdG9wOiR7eX1weDtcbiAgICAgIHdpZHRoOmF1dG87XG4gICAgICBoZWlnaHQ6YXV0bztgXG4gICAgKTtcbiAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gZmFsc2U7XG4gIH1cblxuICBwcml2YXRlIGRvbmVUb2dnbGluZ1NlbGVjdGlvbkF0UGl4ZWwoZ2VvOiBHZW9tZXRyeSB8IG51bGwsIHN1YklEPzogbnVtYmVyKTogdm9pZCB7XG4gICAgaWYgKGdlbyAhPT0gbnVsbCkge1xuICAgICAgZ2VvLnVuSG92ZXIoKTtcbiAgICAgIGlmIChzdWJJRCAhPT0gdW5kZWZpbmVkICYmIHN1YklEICE9PSAtMSkge1xuICAgICAgICBpZiAoZ2VvLmlzU3ViU2VsZWN0ZWQoc3ViSUQpKSB7XG4gICAgICAgICAgdGhpcy5yZW1vdmVGcm9tU3ViU2VsZWN0aW9uKFtnZW9dLCBbW3N1YklEXV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuYWRkVG9TdWJTZWxlY3Rpb24oW2dlb10sIFtbc3ViSURdXSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChnZW8uaXNTZWxlY3RlZCgpKSB7XG4gICAgICAgICAgdGhpcy5yZW1vdmVGcm9tU2VsZWN0aW9uKGdlbyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5hZGRUb1NlbGVjdGlvbihnZW8pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIElOU1RBTkNFLmdldE1vdmVyKCkudXBkYXRlZFNlbGVjdGlvbigpO1xuICAgIHRoaXMuc2VsZWN0aW5nID0gZmFsc2U7XG4gICAgdGhpcy5lbGVtZW50LmhpZGRlbiA9IHRydWU7XG4gIH1cblxuICBwdWJsaWMgc2VsZWN0SW5SZWN0YW5nbGUobGVmdDogbnVtYmVyLCByaWdodDogbnVtYmVyLCB0b3A6IG51bWJlciwgYm90dG9tOiBudW1iZXIsIGluY2x1c2l2ZTogYm9vbGVhbiwgc3ViOiBib29sZWFuKTogdm9pZCB7XG4gICAgY29uc3QgZnJ1c3R1bTogRnJ1c3R1bSA9IG5ldyBGcnVzdHVtKGxlZnQsIHJpZ2h0LCB0b3AsIGJvdHRvbSk7XG4gICAgaWYgKHN1Yikge1xuICAgICAgY29uc3Qgd2l0aGluOiBbR2VvbWV0cnlbXSwgbnVtYmVyW11bXV0gPSBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldEJvdW5kaW5nQm94SGVpcmFyY2h5KCkuZ2V0V2l0aGluRnJ1c3R1bVN1YihmcnVzdHVtLCBpbmNsdXNpdmUpO1xuICAgICAgdGhpcy5hZGRUb1N1YlNlbGVjdGlvbiguLi53aXRoaW4pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB3aXRoaW46IEdlb21ldHJ5W10gPSBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldEJvdW5kaW5nQm94SGVpcmFyY2h5KCkuZ2V0V2l0aGluRnJ1c3R1bShmcnVzdHVtLCBpbmNsdXNpdmUpO1xuICAgICAgZm9yIChjb25zdCBnZW8gb2Ygd2l0aGluKSB7XG4gICAgICAgIHRoaXMuYWRkVG9TZWxlY3Rpb24oZ2VvKTtcbiAgICAgIH1cbiAgICB9XG4gICAgSU5TVEFOQ0UuZ2V0TW92ZXIoKS51cGRhdGVkU2VsZWN0aW9uKCk7XG4gIH1cblxuICBwdWJsaWMgdW5TZWxlY3RJblJlY3RhbmdsZShsZWZ0OiBudW1iZXIsIHJpZ2h0OiBudW1iZXIsIHRvcDogbnVtYmVyLCBib3R0b206IG51bWJlciwgaW5jbHVzaXZlOiBib29sZWFuLCBzdWI6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICBjb25zdCBmcnVzdHVtOiBGcnVzdHVtID0gbmV3IEZydXN0dW0obGVmdCwgcmlnaHQsIHRvcCwgYm90dG9tKTtcbiAgICBpZiAoc3ViKSB7XG4gICAgICBjb25zdCB3aXRoaW46IFtHZW9tZXRyeVtdLCBudW1iZXJbXVtdXSA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Qm91bmRpbmdCb3hIZWlyYXJjaHkoKS5nZXRXaXRoaW5GcnVzdHVtU3ViKGZydXN0dW0sIGluY2x1c2l2ZSk7XG4gICAgICB0aGlzLnJlbW92ZUZyb21TdWJTZWxlY3Rpb24oLi4ud2l0aGluKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgd2l0aGluOiBHZW9tZXRyeVtdID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRCb3VuZGluZ0JveEhlaXJhcmNoeSgpLmdldFdpdGhpbkZydXN0dW0oZnJ1c3R1bSwgaW5jbHVzaXZlKTtcbiAgICAgIGZvciAoY29uc3QgZ2VvIG9mIHdpdGhpbikge1xuICAgICAgICB0aGlzLnJlbW92ZUZyb21TZWxlY3Rpb24oZ2VvKTtcbiAgICAgIH1cbiAgICB9XG4gICAgSU5TVEFOQ0UuZ2V0TW92ZXIoKS51cGRhdGVkU2VsZWN0aW9uKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0U2VsZWN0aW9uKCk6IFNldDxHZW9tZXRyeT4ge1xuICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbjtcbiAgfVxuXG4gIHB1YmxpYyB0cmFuc2Zvcm1TZWxlY3RlZCgpIHtcbiAgICBjb25zdCBzY2VuZTogU2NlbmUgPSBJTlNUQU5DRS5nZXRTY2VuZSgpO1xuICAgIGZvciAoY29uc3QgZ2VvIG9mIHRoaXMuc2VsZWN0aW9uKSB7XG4gICAgICBzY2VuZS5nZXRCb3VuZGluZ0JveEhlaXJhcmNoeSgpLnJlbW92ZShnZW8pO1xuICAgICAgZ2VvLmJha2VTZWxlY3Rpb25UcmFuc2Zvcm0oKTtcbiAgICAgIHNjZW5lLmdldEJvdW5kaW5nQm94SGVpcmFyY2h5KCkuYWRkKGdlbyk7XG4gICAgfVxuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/selector.ts\n");

/***/ }),

/***/ "./src/events/eventManager.ts":
/*!************************************!*\
  !*** ./src/events/eventManager.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventManager: () => (/* binding */ EventManager)\n/* harmony export */ });\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mode */ \"./src/mode.ts\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _mouseHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mouseHandler */ \"./src/events/mouseHandler.ts\");\n\n\n\nclass EventManager {\n    constructor() {\n        this.mouseHandler = new _mouseHandler__WEBPACK_IMPORTED_MODULE_2__.MouseHandler();\n        onmousemove = (event) => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getEventQueue().pushEvent(() => {\n                this.mouseHandler.onMouseMove(event);\n            });\n        };\n        onresize = () => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getEventQueue().pushEvent(() => {\n                _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getRenderer().updateScreenSize();\n            });\n        };\n        onkeydown = (event) => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getEventQueue().pushEvent(() => {\n                if (event.code == \"Tab\") {\n                    if (_cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Navigation) {\n                        _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.setMode(_mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Command);\n                    }\n                    else {\n                        _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getCli().clearInput();\n                        _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.setMode(_mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Navigation);\n                    }\n                    // prevent tab from chaging focus\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                else {\n                    if (_cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Command)\n                        _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getCli().processKeyDownEvent(event);\n                    else if (event.code == \"Delete\" || event.code == \"Backspace\") {\n                        _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getScene().deleteSelected();\n                    }\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getMover().onkeydown(event);\n                }\n            });\n        };\n        onfocus = () => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getEventQueue().pushEvent(() => {\n                _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getStats().reset();\n            });\n        };\n        onmousedown = (event) => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getEventQueue().pushEvent(() => {\n                this.mouseHandler.onMouseDown(event);\n            });\n        };\n        onmouseup = (event) => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getEventQueue().pushEvent(() => {\n                this.mouseHandler.onMouseUp(event);\n            });\n        };\n    }\n    getMouseHandler() {\n        return this.mouseHandler;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2V2ZW50cy9ldmVudE1hbmFnZXIudHM/YWQzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcGVyYXRpbmdNb2RlIH0gZnJvbSBcIi4uL21vZGVcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IE1vdXNlSGFuZGxlciB9IGZyb20gXCIuL21vdXNlSGFuZGxlclwiO1xuXG5cbmV4cG9ydCBjbGFzcyBFdmVudE1hbmFnZXIge1xuXG4gIHByaXZhdGUgbW91c2VIYW5kbGVyOiBNb3VzZUhhbmRsZXI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG5cbiAgICB0aGlzLm1vdXNlSGFuZGxlciA9IG5ldyBNb3VzZUhhbmRsZXIoKTtcblxuICAgIG9ubW91c2Vtb3ZlID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XG5cbiAgICAgIElOU1RBTkNFLmdldEV2ZW50UXVldWUoKS5wdXNoRXZlbnQoKCkgPT4ge1xuICAgICAgICB0aGlzLm1vdXNlSGFuZGxlci5vbk1vdXNlTW92ZShldmVudCk7XG4gICAgICB9KTtcblxuICAgIH07XG5cbiAgICBvbnJlc2l6ZSA9ICgpID0+IHtcbiAgICAgIElOU1RBTkNFLmdldEV2ZW50UXVldWUoKS5wdXNoRXZlbnQoKCkgPT4ge1xuICAgICAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLnVwZGF0ZVNjcmVlblNpemUoKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIG9ua2V5ZG93biA9IChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgICAgSU5TVEFOQ0UuZ2V0RXZlbnRRdWV1ZSgpLnB1c2hFdmVudCgoKSA9PiB7XG4gICAgICAgIGlmIChldmVudC5jb2RlID09IFwiVGFiXCIpIHtcbiAgICAgICAgICBpZiAoSU5TVEFOQ0UuZ2V0TW9kZSgpID09IE9wZXJhdGluZ01vZGUuTmF2aWdhdGlvbikge1xuICAgICAgICAgICAgSU5TVEFOQ0Uuc2V0TW9kZShPcGVyYXRpbmdNb2RlLkNvbW1hbmQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBJTlNUQU5DRS5nZXRDbGkoKS5jbGVhcklucHV0KCk7XG4gICAgICAgICAgICBJTlNUQU5DRS5zZXRNb2RlKE9wZXJhdGluZ01vZGUuTmF2aWdhdGlvbik7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIHByZXZlbnQgdGFiIGZyb20gY2hhZ2luZyBmb2N1c1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKElOU1RBTkNFLmdldE1vZGUoKSA9PSBPcGVyYXRpbmdNb2RlLkNvbW1hbmQpIElOU1RBTkNFLmdldENsaSgpLnByb2Nlc3NLZXlEb3duRXZlbnQoZXZlbnQpO1xuICAgICAgICAgIGVsc2UgaWYgKGV2ZW50LmNvZGUgPT0gXCJEZWxldGVcIiB8fCBldmVudC5jb2RlID09IFwiQmFja3NwYWNlXCIpIHtcbiAgICAgICAgICAgIElOU1RBTkNFLmdldFNjZW5lKCkuZGVsZXRlU2VsZWN0ZWQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgSU5TVEFOQ0UuZ2V0TW92ZXIoKS5vbmtleWRvd24oZXZlbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgb25mb2N1cyA9ICgpID0+IHtcbiAgICAgIElOU1RBTkNFLmdldEV2ZW50UXVldWUoKS5wdXNoRXZlbnQoKCkgPT4ge1xuICAgICAgICBJTlNUQU5DRS5nZXRTdGF0cygpLnJlc2V0KCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBvbm1vdXNlZG93biA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgICAgSU5TVEFOQ0UuZ2V0RXZlbnRRdWV1ZSgpLnB1c2hFdmVudCgoKSA9PiB7XG4gICAgICAgIHRoaXMubW91c2VIYW5kbGVyLm9uTW91c2VEb3duKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIG9ubW91c2V1cCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgICAgSU5TVEFOQ0UuZ2V0RXZlbnRRdWV1ZSgpLnB1c2hFdmVudCgoKSA9PiB7XG4gICAgICAgIHRoaXMubW91c2VIYW5kbGVyLm9uTW91c2VVcChldmVudCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0TW91c2VIYW5kbGVyKCk6IE1vdXNlSGFuZGxlciB7XG4gICAgcmV0dXJuIHRoaXMubW91c2VIYW5kbGVyO1xuICB9XG5cbn1cblxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/events/eventManager.ts\n");

/***/ }),

/***/ "./src/events/eventQueue.ts":
/*!**********************************!*\
  !*** ./src/events/eventQueue.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventQueue: () => (/* binding */ EventQueue)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass EventNode {\n    constructor(handle) {\n        this.handle = handle;\n        this.next = null;\n    }\n    addNext(eventNode) {\n        this.next = eventNode;\n    }\n    getNext() {\n        return this.next;\n    }\n    execute() {\n        this.handle();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventQueue().eventComplete();\n    }\n}\nclass EventQueue {\n    constructor() {\n        this.first = null;\n        this.last = null;\n    }\n    pushEvent(handle) {\n        if (this.first === null) {\n            this.first = new EventNode(handle);\n            this.last = this.first;\n            this.first.execute();\n        }\n        else {\n            this.last.addNext(new EventNode(handle));\n            this.last = this.last.getNext();\n        }\n    }\n    eventComplete() {\n        this.first = this.first.getNext();\n        if (this.first === null) {\n            this.last = null;\n        }\n        else {\n            this.first.execute();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXZlbnRzL2V2ZW50UXVldWUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7QUFHbEMsTUFBTSxTQUFTO0lBSWIsWUFDVSxNQUFnQjtRQUFoQixXQUFNLEdBQU4sTUFBTSxDQUFVO1FBSGxCLFNBQUksR0FBcUIsSUFBSSxDQUFDO0lBSWxDLENBQUM7SUFFRSxPQUFPLENBQUMsU0FBb0I7UUFDakMsSUFBSSxDQUFDLElBQUksR0FBRyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbkIsQ0FBQztJQUVNLE9BQU87UUFDWixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDZCwwQ0FBUSxDQUFDLGFBQWEsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzNDLENBQUM7Q0FDRjtBQUdNLE1BQU0sVUFBVTtJQUtyQjtRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFFTSxTQUFTLENBQUMsTUFBZ0I7UUFDL0IsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksRUFBRTtZQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ25DLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ3RCO2FBQU07WUFDTCxJQUFJLENBQUMsSUFBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNsQztJQUNILENBQUM7SUFFTSxhQUFhO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNuQyxJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQ2xCO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ3RCO0lBQ0gsQ0FBQztDQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZXZlbnRzL2V2ZW50UXVldWUudHM/MjE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcblxuXG5jbGFzcyBFdmVudE5vZGUge1xuXG4gIHByaXZhdGUgbmV4dDogRXZlbnROb2RlIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBoYW5kbGU6IEZ1bmN0aW9uXG4gICkgeyB9XG5cbiAgcHVibGljIGFkZE5leHQoZXZlbnROb2RlOiBFdmVudE5vZGUpOiB2b2lkIHtcbiAgICB0aGlzLm5leHQgPSBldmVudE5vZGU7XG4gIH1cblxuICBwdWJsaWMgZ2V0TmV4dCgpOiBFdmVudE5vZGUgfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy5uZXh0O1xuICB9XG5cbiAgcHVibGljIGV4ZWN1dGUoKTogdm9pZCB7XG4gICAgdGhpcy5oYW5kbGUoKTtcbiAgICBJTlNUQU5DRS5nZXRFdmVudFF1ZXVlKCkuZXZlbnRDb21wbGV0ZSgpO1xuICB9XG59XG5cblxuZXhwb3J0IGNsYXNzIEV2ZW50UXVldWUge1xuXG4gIHByaXZhdGUgZmlyc3Q6IEV2ZW50Tm9kZSB8IG51bGw7XG4gIHByaXZhdGUgbGFzdDogRXZlbnROb2RlIHwgbnVsbDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmZpcnN0ID0gbnVsbDtcbiAgICB0aGlzLmxhc3QgPSBudWxsO1xuICB9XG5cbiAgcHVibGljIHB1c2hFdmVudChoYW5kbGU6IEZ1bmN0aW9uKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuZmlyc3QgPT09IG51bGwpIHtcbiAgICAgIHRoaXMuZmlyc3QgPSBuZXcgRXZlbnROb2RlKGhhbmRsZSk7XG4gICAgICB0aGlzLmxhc3QgPSB0aGlzLmZpcnN0O1xuICAgICAgdGhpcy5maXJzdC5leGVjdXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubGFzdCEuYWRkTmV4dChuZXcgRXZlbnROb2RlKGhhbmRsZSkpO1xuICAgICAgdGhpcy5sYXN0ID0gdGhpcy5sYXN0IS5nZXROZXh0KCk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGV2ZW50Q29tcGxldGUoKTogdm9pZCB7XG4gICAgdGhpcy5maXJzdCA9IHRoaXMuZmlyc3QhLmdldE5leHQoKTtcbiAgICBpZiAodGhpcy5maXJzdCA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5sYXN0ID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5maXJzdC5leGVjdXRlKCk7XG4gICAgfVxuICB9XG5cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/events/eventQueue.ts\n");

/***/ }),

/***/ "./src/events/mouseHandler.ts":
/*!************************************!*\
  !*** ./src/events/mouseHandler.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MouseHandler: () => (/* binding */ MouseHandler)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass MouseHandler {\n    constructor() {\n        this.mousePos = [-1, -1];\n        this.mouseDown = false;\n        this.shiftDown = false;\n        this.controlDown = false;\n        this.metaDown = false;\n        this.drag = null;\n    }\n    onMouseMove(event) {\n        var _a;\n        this.mousePos = [event.clientX, event.clientY];\n        (_a = this.drag) === null || _a === void 0 ? void 0 : _a.update(event.clientX, event.clientY);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleMouseMove();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().onMouseMove();\n    }\n    onMouseDown(event) {\n        if (event.button == 0) { // left click\n            if (!_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().hasActiveCommand()) {\n                // forward clicked id to mover incase mover was clicked\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getIdAtPixel(event.clientX, event.clientY).then((id) => {\n                    if (id === 0) {\n                        this.drag = new Drag(event.clientX, event.clientY);\n                        this.mouseDown = true;\n                        this.shiftDown = event.shiftKey;\n                        this.controlDown = event.ctrlKey;\n                        this.metaDown = event.metaKey;\n                    }\n                    else {\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().idClicked(id);\n                    }\n                });\n            }\n            else {\n                this.drag = new Drag(event.clientX, event.clientY);\n                this.mouseDown = true;\n                this.shiftDown = event.shiftKey;\n                this.controlDown = event.ctrlKey;\n                this.metaDown = event.metaKey;\n            }\n        }\n    }\n    onMouseUp(event) {\n        var _a;\n        if (event.button === 0) { // left button\n            if (this.drag && !this.drag.isDrag()) { // click\n                if (_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().hasActiveCommand()) { // forward click to active command\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleClickInput();\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCli().render();\n                }\n                else {\n                    if (!_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().isActive()) {\n                        if (!this.shiftDown)\n                            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().toggleSelectionAtPixel(event.clientX, event.clientY, this.metaDown);\n                    }\n                }\n            }\n            else { // drag\n                if (!_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().isActive() && !_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().hasActiveCommand()) {\n                    if (this.drag) { // should be set unless i inspected element\n                        if (!this.shiftDown)\n                            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n                        const inclusive = this.drag.isLeftward();\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().selectInRectangle(...this.drag.getBounds(), inclusive, this.metaDown);\n                    }\n                }\n            }\n            (_a = this.drag) === null || _a === void 0 ? void 0 : _a.destroy();\n            this.drag = null;\n            this.mouseDown = false;\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().onMouseUp();\n    }\n    getMousePos() {\n        return this.mousePos;\n    }\n}\nclass Drag {\n    constructor(x1, y1) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.element = document.getElementById(\"selection-rectangle\");\n        this.update(this.x1, this.y1);\n        this.element.hidden = false;\n    }\n    update(x, y) {\n        this.x2 = x;\n        this.y2 = y;\n        const top = Math.min(this.y1, this.y2);\n        const bottom = Math.max(this.y1, this.y2);\n        const left = Math.min(this.x1, this.x2);\n        const right = Math.max(this.x1, this.x2);\n        this.element.style.left = `${left}px`;\n        this.element.style.top = `${top}px`;\n        this.element.style.width = `${right - left}px`;\n        this.element.style.height = `${bottom - top}px`;\n    }\n    isDrag() {\n        return this.x1 != this.x2 || this.y1 != this.y2;\n    }\n    isLeftward() {\n        return this.x2 < this.x1;\n    }\n    getBounds() {\n        return [\n            Math.min(this.x1, this.x2),\n            Math.max(this.x1, this.x2),\n            Math.min(this.y1, this.y2),\n            Math.max(this.y1, this.y2),\n        ];\n    }\n    destroy() {\n        this.element.hidden = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/events/mouseHandler.ts\n");

/***/ }),

/***/ "./src/geometry/boundingBox.ts":
/*!*************************************!*\
  !*** ./src/geometry/boundingBox.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoundingBox: () => (/* binding */ BoundingBox)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass BoundingBox {\n    constructor(xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, zMin = Infinity, zMax = -Infinity) {\n        this.xMin = xMin;\n        this.xMax = xMax;\n        this.yMin = yMin;\n        this.yMax = yMax;\n        this.zMin = zMin;\n        this.zMax = zMax;\n    }\n    getXMin() { return this.xMin; }\n    getYMin() { return this.yMin; }\n    getZMin() { return this.zMin; }\n    getXMax() { return this.xMax; }\n    getYMax() { return this.yMax; }\n    getZMax() { return this.zMax; }\n    print() {\n        console.log(`BB: x: [${this.xMin}, ${this.xMax}], y: [${this.yMin}, ${this.yMax}], z: [${this.zMin}, ${this.zMax}];`);\n    }\n    addVec3(v) {\n        this.xMin = Math.min(this.xMin, v[0]);\n        this.yMin = Math.min(this.yMin, v[1]);\n        this.zMin = Math.min(this.zMin, v[2]);\n        this.xMax = Math.max(this.xMax, v[0]);\n        this.yMax = Math.max(this.yMax, v[1]);\n        this.zMax = Math.max(this.zMax, v[2]);\n    }\n    addBoundingBox(bb) {\n        this.xMin = Math.min(this.xMin, bb.xMin);\n        this.yMin = Math.min(this.yMin, bb.yMin);\n        this.zMin = Math.min(this.zMin, bb.zMin);\n        this.xMax = Math.max(this.xMax, bb.xMax);\n        this.yMax = Math.max(this.yMax, bb.yMax);\n        this.zMax = Math.max(this.zMax, bb.zMax);\n    }\n    hasNoVolume() {\n        return this.xMin === this.xMax &&\n            this.yMin === this.yMax &&\n            this.zMin === this.zMax;\n    }\n    getCenter() {\n        const res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create((this.xMin + this.xMax) / 2, (this.yMin + this.yMax) / 2, (this.zMin + this.zMax) / 2);\n        if (isNaN(res[0]))\n            res[0] = 0;\n        if (isNaN(res[1]))\n            res[1] = 0;\n        if (isNaN(res[2]))\n            res[2] = 0;\n        return res;\n    }\n    contains(bb) {\n        return this.xMin <= bb.xMin &&\n            this.yMin <= bb.yMin &&\n            this.zMin <= bb.zMin &&\n            this.xMax >= bb.xMax &&\n            this.yMax >= bb.yMax &&\n            this.zMax >= bb.zMax;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvYm91bmRpbmdCb3gudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFFbEMsTUFBTSxXQUFXO0lBRXRCLFlBQ1UsT0FBZSxRQUFRLEVBQ3ZCLE9BQWUsQ0FBQyxRQUFRLEVBQ3hCLE9BQWUsUUFBUSxFQUN2QixPQUFlLENBQUMsUUFBUSxFQUN4QixPQUFlLFFBQVEsRUFDdkIsT0FBZSxDQUFDLFFBQVE7UUFMeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7UUFDeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7UUFDeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7SUFHbEMsQ0FBQztJQUVNLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBRXZDLEtBQUs7UUFDVixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxVQUFVLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUksVUFBVSxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDO0lBQ3hILENBQUM7SUFFTSxPQUFPLENBQUMsQ0FBTztRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRU0sY0FBYyxDQUFDLEVBQWU7UUFDbkMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVNLFdBQVc7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJO1lBQzVCLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUk7WUFDdkIsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQzVCLENBQUM7SUFFTSxTQUFTO1FBQ2QsTUFBTSxHQUFHLEdBQVMsNkNBQUksQ0FBQyxNQUFNLENBQzNCLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUMzQixDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFDM0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQzVCLENBQUM7UUFDRixJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUIsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QixPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFFTSxRQUFRLENBQUMsRUFBZTtRQUM3QixPQUFPLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLElBQUk7WUFDekIsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsSUFBSTtZQUNwQixJQUFJLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxJQUFJO1lBQ3BCLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLElBQUk7WUFDcEIsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsSUFBSTtZQUNwQixJQUFJLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUM7SUFDekIsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvYm91bmRpbmdCb3gudHM/ODcxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5cbmV4cG9ydCBjbGFzcyBCb3VuZGluZ0JveCB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB4TWluOiBudW1iZXIgPSBJbmZpbml0eSxcbiAgICBwcml2YXRlIHhNYXg6IG51bWJlciA9IC1JbmZpbml0eSxcbiAgICBwcml2YXRlIHlNaW46IG51bWJlciA9IEluZmluaXR5LFxuICAgIHByaXZhdGUgeU1heDogbnVtYmVyID0gLUluZmluaXR5LFxuICAgIHByaXZhdGUgek1pbjogbnVtYmVyID0gSW5maW5pdHksXG4gICAgcHJpdmF0ZSB6TWF4OiBudW1iZXIgPSAtSW5maW5pdHlcbiAgKSB7XG5cbiAgfVxuXG4gIHB1YmxpYyBnZXRYTWluKCk6IG51bWJlciB7IHJldHVybiB0aGlzLnhNaW47IH1cbiAgcHVibGljIGdldFlNaW4oKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMueU1pbjsgfVxuICBwdWJsaWMgZ2V0Wk1pbigpOiBudW1iZXIgeyByZXR1cm4gdGhpcy56TWluOyB9XG4gIHB1YmxpYyBnZXRYTWF4KCk6IG51bWJlciB7IHJldHVybiB0aGlzLnhNYXg7IH1cbiAgcHVibGljIGdldFlNYXgoKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMueU1heDsgfVxuICBwdWJsaWMgZ2V0Wk1heCgpOiBudW1iZXIgeyByZXR1cm4gdGhpcy56TWF4OyB9XG5cbiAgcHVibGljIHByaW50KCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKGBCQjogeDogWyR7dGhpcy54TWlufSwgJHt0aGlzLnhNYXh9XSwgeTogWyR7dGhpcy55TWlufSwgJHt0aGlzLnlNYXh9XSwgejogWyR7dGhpcy56TWlufSwgJHt0aGlzLnpNYXh9XTtgKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRWZWMzKHY6IFZlYzMpOiB2b2lkIHtcbiAgICB0aGlzLnhNaW4gPSBNYXRoLm1pbih0aGlzLnhNaW4sIHZbMF0pO1xuICAgIHRoaXMueU1pbiA9IE1hdGgubWluKHRoaXMueU1pbiwgdlsxXSk7XG4gICAgdGhpcy56TWluID0gTWF0aC5taW4odGhpcy56TWluLCB2WzJdKTtcbiAgICB0aGlzLnhNYXggPSBNYXRoLm1heCh0aGlzLnhNYXgsIHZbMF0pO1xuICAgIHRoaXMueU1heCA9IE1hdGgubWF4KHRoaXMueU1heCwgdlsxXSk7XG4gICAgdGhpcy56TWF4ID0gTWF0aC5tYXgodGhpcy56TWF4LCB2WzJdKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRCb3VuZGluZ0JveChiYjogQm91bmRpbmdCb3gpOiB2b2lkIHtcbiAgICB0aGlzLnhNaW4gPSBNYXRoLm1pbih0aGlzLnhNaW4sIGJiLnhNaW4pO1xuICAgIHRoaXMueU1pbiA9IE1hdGgubWluKHRoaXMueU1pbiwgYmIueU1pbik7XG4gICAgdGhpcy56TWluID0gTWF0aC5taW4odGhpcy56TWluLCBiYi56TWluKTtcbiAgICB0aGlzLnhNYXggPSBNYXRoLm1heCh0aGlzLnhNYXgsIGJiLnhNYXgpO1xuICAgIHRoaXMueU1heCA9IE1hdGgubWF4KHRoaXMueU1heCwgYmIueU1heCk7XG4gICAgdGhpcy56TWF4ID0gTWF0aC5tYXgodGhpcy56TWF4LCBiYi56TWF4KTtcbiAgfVxuXG4gIHB1YmxpYyBoYXNOb1ZvbHVtZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy54TWluID09PSB0aGlzLnhNYXggJiZcbiAgICAgIHRoaXMueU1pbiA9PT0gdGhpcy55TWF4ICYmXG4gICAgICB0aGlzLnpNaW4gPT09IHRoaXMuek1heDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDZW50ZXIoKTogVmVjMyB7XG4gICAgY29uc3QgcmVzOiBWZWMzID0gdmVjMy5jcmVhdGUoXG4gICAgICAodGhpcy54TWluICsgdGhpcy54TWF4KSAvIDIsXG4gICAgICAodGhpcy55TWluICsgdGhpcy55TWF4KSAvIDIsXG4gICAgICAodGhpcy56TWluICsgdGhpcy56TWF4KSAvIDIsXG4gICAgKTtcbiAgICBpZiAoaXNOYU4ocmVzWzBdKSkgcmVzWzBdID0gMDtcbiAgICBpZiAoaXNOYU4ocmVzWzFdKSkgcmVzWzFdID0gMDtcbiAgICBpZiAoaXNOYU4ocmVzWzJdKSkgcmVzWzJdID0gMDtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cbiAgcHVibGljIGNvbnRhaW5zKGJiOiBCb3VuZGluZ0JveCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnhNaW4gPD0gYmIueE1pbiAmJlxuICAgICAgdGhpcy55TWluIDw9IGJiLnlNaW4gJiZcbiAgICAgIHRoaXMuek1pbiA8PSBiYi56TWluICYmXG4gICAgICB0aGlzLnhNYXggPj0gYmIueE1heCAmJlxuICAgICAgdGhpcy55TWF4ID49IGJiLnlNYXggJiZcbiAgICAgIHRoaXMuek1heCA+PSBiYi56TWF4O1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/boundingBox.ts\n");

/***/ }),

/***/ "./src/geometry/controlCage1D.ts":
/*!***************************************!*\
  !*** ./src/geometry/controlCage1D.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControlCage1D: () => (/* binding */ ControlCage1D)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/renterMeshInstanced */ \"./src/render/renterMeshInstanced.ts\");\n/* harmony import */ var _utils_clone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/clone */ \"./src/utils/clone.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lineBoundingBoxHeirarchy */ \"./src/geometry/lineBoundingBoxHeirarchy.ts\");\n/* harmony import */ var _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pointBoundingBoxHeirarchy */ \"./src/geometry/pointBoundingBoxHeirarchy.ts\");\n/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./points */ \"./src/geometry/points.ts\");\n\n\n\n\n\n\n\n\n\n\n\nclass ControlCage1D extends _geometry__WEBPACK_IMPORTED_MODULE_6__.Geometry {\n    constructor(parent, verts, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.identity(), materialName = null) {\n        super(parent, model, materialName);\n        this.verts = verts;\n        this.vertexSubSelection = [];\n        this.segmentSubSelection = [];\n        this.accumulatedSubSelection = [];\n        this.subSelectedVertCount = 0;\n        this.subSelectedSegmentCount = 0;\n        for (let i = 0; i < this.verts.length; i++) {\n            this.vertexSubSelection.push(false);\n            this.accumulatedSubSelection.push(false);\n            this.segmentSubSelection.push(false);\n        }\n        this.segmentSubSelection.pop();\n        const modelR = this.getModelRecursive();\n        const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.getTranslation(modelR);\n        const modelNoTranslation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.vec3.scale(translation, -1)), modelR);\n        const transforms = this.verts.map((pos) => {\n            return (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.swizzleYZ)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.translation(pos), wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.inverse(modelNoTranslation), _points__WEBPACK_IMPORTED_MODULE_9__.POINT_MODEL)));\n        });\n        this.points = new _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_2__.RenderMeshInstanced(this, _points__WEBPACK_IMPORTED_MODULE_9__.POINT_VERTS, _points__WEBPACK_IMPORTED_MODULE_9__.POINT_VERTS, _points__WEBPACK_IMPORTED_MODULE_9__.POINT_INDICES, transforms, this.accumulatedSubSelection, true);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderMeshInstanced(this.points);\n        this.indices = [];\n        for (let i = 0; i < this.verts.length - 1; i++) {\n            this.indices.push(i, i + 1);\n        }\n        this.renderLines = new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(this, this.verts, this.indices, this.accumulatedSubSelection);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(this.renderLines);\n        this.pointBBH = new _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_8__.PointBoundingBoxHeirarchy(this, this.verts);\n        this.lineBBH = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_7__.LineBoundingBoxHeirarchy(this, this.verts, this.indices);\n        this.hide();\n    }\n    showControls(on) {\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        if (this.isHidden())\n            return [];\n        const res = this.lineBBH.getWithinFrustumSub(frustum, inclusive).map((n) => {\n            return n + this.verts.length;\n        });\n        const model = this.getModelRecursive();\n        for (let i = 0; i < this.verts.length; i++) {\n            if (frustum.containsPoint(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.vec3.transformMat4(this.verts[i], model))) {\n                res.push(i);\n            }\n        }\n        return res;\n    }\n    getBoundingBox() {\n        const res = new _boundingBox__WEBPACK_IMPORTED_MODULE_5__.BoundingBox();\n        const model = this.getModelRecursive();\n        for (const v of this.verts) {\n            res.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.vec3.transformMat4(v, model));\n        }\n        return res;\n    }\n    getTypeName() {\n        return \"control cage 1d\";\n    }\n    intersect(ray, sub) {\n        if (this.isHidden())\n            return null;\n        let intersection = this.pointBBH.almostIntersect(ray, 10);\n        if (intersection === null) {\n            intersection = this.lineBBH.almostIntersect(ray, 10);\n            if (intersection !== null) {\n                intersection.objectSubID += this.verts.length;\n            }\n        }\n        return intersection;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        return this.lineBBH.isWithinFrustum(frustum, inclusive);\n    }\n    addToSubSelection(...subIDs) {\n        for (let subID of subIDs) {\n            if (subID >= this.verts.length) {\n                subID -= this.verts.length;\n                // Line Sub ID\n                if (!this.segmentSubSelection[subID]) {\n                    this.segmentSubSelection[subID] = true;\n                    this.subSelectedSegmentCount++;\n                    this.accumulatedSubSelection[subID] = true;\n                    this.accumulatedSubSelection[subID + 1] = true;\n                }\n            }\n            else {\n                // Point Sub ID\n                console.log(\"sub selecting vert\", subID);\n                if (!this.vertexSubSelection[subID]) {\n                    this.vertexSubSelection[subID] = true;\n                    this.subSelectedVertCount++;\n                    this.accumulatedSubSelection[subID] = true;\n                }\n            }\n        }\n        this.points.updateSubSelection(this.vertexSubSelection);\n        this.renderLines.updateSubSelection(this.accumulatedSubSelection);\n    }\n    removeFromSubSelection(...subIDs) {\n        for (let subID of subIDs) {\n            if (subID >= this.verts.length) {\n                subID -= this.verts.length;\n                // Line Sub ID\n                if (this.segmentSubSelection[subID]) {\n                    this.segmentSubSelection[subID] = false;\n                    this.subSelectedSegmentCount--;\n                    if (!this.vertexSubSelection[subID] &&\n                        (subID === 0 || !this.segmentSubSelection[subID - 1])) {\n                        this.accumulatedSubSelection[subID] = false;\n                    }\n                    if (!this.vertexSubSelection[subID + 1] &&\n                        (subID === this.verts.length - 1 || !this.segmentSubSelection[subID + 1])) {\n                        this.accumulatedSubSelection[subID + 1] = false;\n                    }\n                }\n            }\n            else {\n                // Point Sub ID\n                if (this.vertexSubSelection[subID]) {\n                    this.vertexSubSelection[subID] = false;\n                    this.subSelectedVertCount--;\n                    if ((subID == this.verts.length - 1 || !this.segmentSubSelection[subID]) &&\n                        (subID === 0 || !this.segmentSubSelection[subID - 1])) {\n                        this.accumulatedSubSelection[subID] = false;\n                    }\n                }\n            }\n        }\n        this.points.updateSubSelection(this.vertexSubSelection);\n        this.renderLines.updateSubSelection(this.accumulatedSubSelection);\n    }\n    getVertsSubSelectionTransformed() {\n        if (!this.hasSubSelection()) {\n            return (0,_utils_clone__WEBPACK_IMPORTED_MODULE_3__.cloneVec3List)(this.verts);\n        }\n        const res = [];\n        var t = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform();\n        const model = this.getModelRecursive();\n        t = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.inverse(model), t), model);\n        for (let i = 0; i < this.verts.length; i++) {\n            if (this.accumulatedSubSelection[i]) {\n                res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.vec3.transformMat4(this.verts[i], t));\n            }\n            else {\n                res.push(this.verts[i]);\n            }\n        }\n        this.updatePoints(res);\n        this.renderLines.updateVerts(res);\n        return (0,_utils_clone__WEBPACK_IMPORTED_MODULE_3__.cloneVec3List)(res);\n    }\n    bakeSelectionTransform() {\n        if (this.isSelected()) {\n            this.updatePoints(this.verts);\n        }\n        else if (this.hasSubSelection()) {\n            let t = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform();\n            const model = this.getModelRecursive();\n            t = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.inverse(model), t), model);\n            for (let i = 0; i < this.verts.length; i++) {\n                if (this.accumulatedSubSelection[i]) {\n                    this.verts[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.vec3.transformMat4(this.verts[i], t);\n                }\n            }\n            this.renderLines.updateVerts(this.verts);\n            this.lineBBH = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_7__.LineBoundingBoxHeirarchy(this, this.verts, this.indices);\n            this.pointBBH = new _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_8__.PointBoundingBoxHeirarchy(this, this.verts);\n            this.updatePoints(this.verts);\n        }\n    }\n    updatePoints(points) {\n        const model = this.getModelRecursive();\n        const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.getTranslation(model);\n        const modelNoTranslation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.vec3.scale(translation, -1)), model);\n        this.points.updateTransforms(points.map((pos) => {\n            return (0,_utils_math__WEBPACK_IMPORTED_MODULE_4__.swizzleYZ)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.translation(pos), wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.inverse(modelNoTranslation), _points__WEBPACK_IMPORTED_MODULE_9__.POINT_MODEL)));\n        }));\n    }\n    isSubSelected(subID) {\n        if (subID >= this.verts.length) {\n            subID -= this.verts.length;\n            // Line Sub ID\n            return this.segmentSubSelection[subID];\n        }\n        else {\n            // Point Sub ID\n            return this.vertexSubSelection[subID];\n        }\n    }\n    hasSubSelection() {\n        return this.subSelectedSegmentCount > 0 ||\n            this.subSelectedVertCount > 0;\n    }\n    getSubSelectionBoundingBox() {\n        const res = new _boundingBox__WEBPACK_IMPORTED_MODULE_5__.BoundingBox();\n        const model = this.getModelRecursive();\n        if (!this.hasSubSelection())\n            return res;\n        for (let i = 0; i < this.verts.length; i++) {\n            if (this.accumulatedSubSelection[i]) {\n                res.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.vec3.transformMat4(this.verts[i], model));\n            }\n        }\n        return res;\n    }\n    clearSubSelection() {\n        if (this.hasSubSelection()) {\n            this.accumulatedSubSelection = this.accumulatedSubSelection.map(() => { return false; });\n            this.vertexSubSelection = this.vertexSubSelection.map(() => { return false; });\n            this.segmentSubSelection = this.segmentSubSelection.map(() => { return false; });\n            this.points.updateSubSelection(this.vertexSubSelection);\n            this.renderLines.updateSubSelection(this.accumulatedSubSelection);\n        }\n    }\n    onSelectionMoved() {\n        this.parent.onSelectionMoved();\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeMeshInstanced(this.points);\n    }\n    clone() {\n        return new ControlCage1D(this.parent, [...this.verts], wgpu_matrix__WEBPACK_IMPORTED_MODULE_10__.mat4.clone(this.model), this.materialName);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/controlCage1D.ts\n");

/***/ }),

/***/ "./src/geometry/controlCage2D.ts":
/*!***************************************!*\
  !*** ./src/geometry/controlCage2D.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ControlCage2D: () => (/* binding */ ControlCage2D)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/renterMeshInstanced */ \"./src/render/renterMeshInstanced.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lineBoundingBoxHeirarchy */ \"./src/geometry/lineBoundingBoxHeirarchy.ts\");\n/* harmony import */ var _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pointBoundingBoxHeirarchy */ \"./src/geometry/pointBoundingBoxHeirarchy.ts\");\n/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./points */ \"./src/geometry/points.ts\");\n\n\n\n\n\n\n\n\n\n\nclass ControlCage2D extends _geometry__WEBPACK_IMPORTED_MODULE_5__.Geometry {\n    constructor(parent, points, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.identity(), materialName = null) {\n        super(parent, model, materialName);\n        this.vertexSubSelection = [];\n        this.segmentSubSelection = [];\n        this.accumulatedSubSelection = [];\n        this.subSelectedVertCount = 0;\n        this.subSelectedSegmentCount = 0;\n        this.u = points.length;\n        this.v = points[0].length;\n        for (let i = 0; i < this.u * this.v; i++) {\n            this.vertexSubSelection.push(false);\n            this.accumulatedSubSelection.push(false);\n        }\n        for (let i = 0; i < (this.u - 1) * this.v + this.u * (this.v - 1); i++) {\n            this.segmentSubSelection.push(false);\n        }\n        this.verts = [];\n        for (const list of points)\n            for (const point of list)\n                this.verts.push(point);\n        const modelR = this.getModelRecursive();\n        const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.getTranslation(modelR);\n        const modelNoTranslation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.scale(translation, -1)), modelR);\n        const transforms = this.verts.map((pos) => {\n            return (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.swizzleYZ)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.translation(pos), wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.inverse(modelNoTranslation), _points__WEBPACK_IMPORTED_MODULE_8__.POINT_MODEL)));\n        });\n        this.points = new _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_2__.RenderMeshInstanced(this, _points__WEBPACK_IMPORTED_MODULE_8__.POINT_VERTS, _points__WEBPACK_IMPORTED_MODULE_8__.POINT_VERTS, _points__WEBPACK_IMPORTED_MODULE_8__.POINT_INDICES, transforms, this.accumulatedSubSelection, true);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderMeshInstanced(this.points);\n        this.indices = [];\n        for (let i = 0; i < this.u; i++) {\n            for (let j = 0; j < this.v - 1; j++) {\n                this.indices.push(i * this.v + j, i * this.v + j + 1);\n            }\n        }\n        for (let i = 0; i < this.u - 1; i++) {\n            for (let j = 0; j < this.v; j++) {\n                this.indices.push(i * this.v + j, (i + 1) * this.v + j);\n            }\n        }\n        this.renderLines = new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(this, this.verts, this.indices, this.accumulatedSubSelection);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(this.renderLines);\n        this.pointBBH = new _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_7__.PointBoundingBoxHeirarchy(this, this.verts);\n        this.lineBBH = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_6__.LineBoundingBoxHeirarchy(this, this.verts, this.indices);\n        this.hide();\n    }\n    showControls(on) {\n    }\n    getBoundingBox() {\n        const res = new _boundingBox__WEBPACK_IMPORTED_MODULE_4__.BoundingBox();\n        const model = this.getModelRecursive();\n        for (const v of this.verts) {\n            res.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.transformMat4(v, model));\n        }\n        return res;\n    }\n    getTypeName() {\n        return \"Control cage 2d\";\n    }\n    intersect(ray, sub) {\n        if (this.isHidden())\n            return null;\n        let intersection = this.pointBBH.almostIntersect(ray, 10);\n        if (intersection === null) {\n            intersection = this.lineBBH.almostIntersect(ray, 10);\n            if (intersection !== null) {\n                intersection.objectSubID += this.u * this.v;\n            }\n        }\n        return intersection;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        return this.lineBBH.isWithinFrustum(frustum, inclusive);\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        if (this.isHidden())\n            return [];\n        const res = this.lineBBH.getWithinFrustumSub(frustum, inclusive).map((n) => {\n            return n + this.u * this.v;\n        });\n        const model = this.getModelRecursive();\n        for (let i = 0; i < this.verts.length; i++) {\n            if (frustum.containsPoint(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.transformMat4(this.verts[i], model))) {\n                res.push(i);\n            }\n        }\n        return res;\n    }\n    addToSubSelection(...subIDs) {\n        for (let subID of subIDs) {\n            if (subID >= this.u * this.v) {\n                subID -= this.u * this.v;\n                // Line Sub ID\n                if (!this.segmentSubSelection[subID]) {\n                    this.segmentSubSelection[subID] = true;\n                    this.subSelectedSegmentCount++;\n                    this.segmentSelectionChanged(subID);\n                }\n            }\n            else {\n                // Point Sub ID\n                if (!this.vertexSubSelection[subID]) {\n                    console.log(\"subSelect vert\", subID);\n                    this.vertexSubSelection[subID] = true;\n                    this.subSelectedVertCount++;\n                    this.vertSelectionChanged(subID);\n                }\n            }\n        }\n        this.onSubSelectionUpdated();\n    }\n    removeFromSubSelection(...subIDs) {\n        for (let subID of subIDs) {\n            if (subID >= this.u * this.v) {\n                subID -= this.u * this.v;\n                // Line Sub ID\n                if (this.segmentSubSelection[subID]) {\n                    this.segmentSubSelection[subID] = false;\n                    this.subSelectedSegmentCount--;\n                    this.segmentSelectionChanged(subID);\n                }\n            }\n            else {\n                // Point Sub ID\n                if (this.vertexSubSelection[subID]) {\n                    this.vertexSubSelection[subID] = false;\n                    this.subSelectedVertCount--;\n                    this.vertSelectionChanged(subID);\n                }\n            }\n        }\n        this.onSubSelectionUpdated();\n    }\n    vertSelectionChanged(id) {\n        // modify accumulated accordingly\n        const selected = this.vertexSubSelection[id];\n        if (selected) {\n            this.accumulatedSubSelection[id] = true;\n        }\n        else {\n            const vertRow = Math.floor(id / this.v);\n            const vertCol = id % this.v;\n            // left\n            if (vertCol !== 0 && this.segmentSubSelection[id - vertRow - 1]) {\n                this.accumulatedSubSelection[id] = true;\n            }\n            // right\n            else if (vertCol !== this.v - 1 && this.segmentSubSelection[id - vertRow]) {\n                this.accumulatedSubSelection[id] = true;\n            }\n            // up\n            else if (vertRow !== 0 && this.segmentSubSelection[id - this.v + this.u * (this.v - 1)]) {\n                this.accumulatedSubSelection[id] = true;\n            }\n            // down\n            else if (vertCol !== this.u - 1 && this.segmentSubSelection[id + this.u * (this.v - 1)]) {\n                this.accumulatedSubSelection[id] = true;\n            }\n            else {\n                this.accumulatedSubSelection[id] = false;\n            }\n        }\n    }\n    segmentSelectionChanged(id) {\n        const selected = this.segmentSubSelection[id];\n        let vert1Index;\n        let vert2Index;\n        if (id >= this.u * (this.v - 1)) {\n            // vertical\n            id -= this.u * (this.v - 1);\n            vert1Index = id;\n            vert2Index = id + this.v;\n        }\n        else {\n            // horizontal\n            const vertRow = Math.floor(id / (this.v - 1));\n            vert1Index = id + vertRow + 1;\n            vert2Index = id + vertRow;\n        }\n        if (selected || this.vertexSubSelection[vert1Index] || this.vertexSubSelection[vert2Index]) {\n            this.accumulatedSubSelection[vert1Index] = true;\n            this.accumulatedSubSelection[vert2Index] = true;\n        }\n        else {\n            this.accumulatedSubSelection[vert1Index] = false;\n            this.accumulatedSubSelection[vert2Index] = false;\n        }\n    }\n    onSubSelectionUpdated() {\n        this.points.updateSubSelection(this.vertexSubSelection);\n        this.renderLines.updateSubSelection(this.accumulatedSubSelection);\n    }\n    isSubSelected(subID) {\n        if (subID >= this.u * this.v) {\n            subID -= this.u * this.v;\n            // Line Sub ID\n            return this.segmentSubSelection[subID];\n        }\n        else {\n            // Point Sub ID\n            return this.vertexSubSelection[subID];\n        }\n    }\n    clearSubSelection() {\n        if (this.hasSubSelection()) {\n            this.accumulatedSubSelection = this.accumulatedSubSelection.map(() => { return false; });\n            this.vertexSubSelection = this.vertexSubSelection.map(() => { return false; });\n            this.segmentSubSelection = this.segmentSubSelection.map(() => { return false; });\n            this.onSubSelectionUpdated();\n        }\n    }\n    onSelectionMoved() {\n        this.parent.onSelectionMoved();\n    }\n    getSubSelectionBoundingBox() {\n        const res = new _boundingBox__WEBPACK_IMPORTED_MODULE_4__.BoundingBox();\n        const model = this.getModelRecursive();\n        if (!this.hasSubSelection()) {\n            console.log(\"early return\");\n            return res;\n        }\n        for (let i = 0; i < this.u * this.v; i++) {\n            if (this.accumulatedSubSelection[i]) {\n                res.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.transformMat4(this.verts[i], model));\n            }\n        }\n        return res;\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeMeshInstanced(this.points);\n    }\n    getVertsSubSelectionTransformed() {\n        var t = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform();\n        const model = this.getModelRecursive();\n        t = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.inverse(model), t), model);\n        const transformed = [];\n        for (let i = 0; i < this.u; i++) {\n            const temp = [];\n            for (let j = 0; j < this.v; j++) {\n                const idx = i * this.v + j;\n                if (this.accumulatedSubSelection[idx]) {\n                    temp.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.transformMat4(this.verts[idx], t));\n                }\n                else {\n                    temp.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.clone(this.verts[idx]));\n                }\n            }\n            transformed.push(temp);\n        }\n        const flattened = [];\n        for (const l of transformed)\n            for (const v of l)\n                flattened.push(v);\n        this.updatePoints(flattened);\n        this.renderLines.updateVerts(flattened);\n        return transformed;\n    }\n    updatePoints(points) {\n        if (points === undefined)\n            points = this.verts;\n        const model = this.getModelRecursive();\n        const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.getTranslation(model);\n        const modelNoTranslation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.scale(translation, -1)), model);\n        this.points.updateTransforms(points.map((pos) => {\n            return (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.swizzleYZ)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.translation(pos), wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.inverse(modelNoTranslation), _points__WEBPACK_IMPORTED_MODULE_8__.POINT_MODEL)));\n        }));\n    }\n    bakeSelectionTransform() {\n        if (this.isSelected()) {\n            this.updatePoints(this.verts);\n        }\n        else if (this.hasSubSelection()) {\n            var t = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform();\n            const model = this.getModelRecursive();\n            t = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.mat4.inverse(model), t), model);\n            for (let i = 0; i < this.u * this.v; i++) {\n                if (this.accumulatedSubSelection[i]) {\n                    this.verts[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_9__.vec3.transformMat4(this.verts[i], t);\n                }\n            }\n            this.renderLines.updateVerts(this.verts);\n            this.lineBBH = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_6__.LineBoundingBoxHeirarchy(this, this.verts, this.indices);\n            this.pointBBH = new _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_7__.PointBoundingBoxHeirarchy(this, this.verts);\n            this.updatePoints(this.verts);\n        }\n    }\n    hasSubSelection() {\n        return this.subSelectedSegmentCount > 0 ||\n            this.subSelectedVertCount > 0;\n    }\n    clone() {\n        const controlPoints = [];\n        for (let i = 0; i < this.u; i++) {\n            const temp = [];\n            for (let j = 0; j < this.v; j++) {\n                temp.push(this.verts[i * this.v + j]);\n            }\n            controlPoints.push(temp);\n        }\n        return new ControlCage2D(this.parent, controlPoints, this.model, this.materialName);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/controlCage2D.ts\n");

/***/ }),

/***/ "./src/geometry/frustum.ts":
/*!*********************************!*\
  !*** ./src/geometry/frustum.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Frustum: () => (/* binding */ Frustum)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\n\nclass Frustum {\n    constructor(left, right, top, bottom) {\n        this.origin = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPosition();\n        this.topLeft = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(left, top);\n        this.topRight = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(right, top);\n        this.bottomLeft = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(left, bottom);\n        this.bottomRight = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(right, bottom);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.topLeft.getDirection(), this.topRight.getDirection()));\n        this.right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.topRight.getDirection(), this.bottomRight.getDirection()));\n        this.down = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.bottomRight.getDirection(), this.bottomLeft.getDirection()));\n        this.left = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.bottomLeft.getDirection(), this.topLeft.getDirection()));\n    }\n    containsPoint(point) {\n        const v = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, this.origin);\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.up, v) > 0 &&\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.right, v) > 0 &&\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.down, v) > 0 &&\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.left, v) > 0;\n    }\n    transform(transform) {\n        this.origin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...this.origin, 1), transform);\n        this.topLeft = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.topLeft, transform);\n        this.topRight = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.topRight, transform);\n        this.bottomLeft = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.bottomLeft, transform);\n        this.bottomRight = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.bottomRight, transform);\n        const forward = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.topLeft.getDirection(), this.topRight.getDirection()), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.bottomLeft.getDirection(), this.bottomRight.getDirection()));\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.topLeft.getDirection(), this.topRight.getDirection()));\n        this.right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.topRight.getDirection(), this.bottomRight.getDirection()));\n        this.down = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.bottomRight.getDirection(), this.bottomLeft.getDirection()));\n        this.left = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.bottomLeft.getDirection(), this.topLeft.getDirection()));\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.up, forward) < 0) {\n            this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.up, -1);\n            this.down = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.down, -1);\n        }\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.left, forward) < 0) {\n            this.left = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.left, -1);\n            this.right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.right, -1);\n        }\n    }\n    containsLineFully(a, b) {\n        return this.containsPoint(a) && this.containsPoint(b);\n    }\n    containsLinePartially(a, b) {\n        var _a, _b, _c, _d;\n        var dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(b, a);\n        const size = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.length(dir);\n        dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(dir, 1 / size);\n        const r = new _ray__WEBPACK_IMPORTED_MODULE_2__.Ray(a, dir);\n        const tUp = (_a = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.up), true)) !== null && _a !== void 0 ? _a : 0;\n        const tRight = (_b = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.right), true)) !== null && _b !== void 0 ? _b : 0;\n        const tDown = (_c = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.down), true)) !== null && _c !== void 0 ? _c : 0;\n        const tLeft = (_d = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.left), true)) !== null && _d !== void 0 ? _d : 0;\n        var near = 0;\n        var far = size;\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.up, dir) < 0)\n            far = Math.min(far, tUp);\n        else\n            near = Math.max(near, tUp);\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.right, dir) < 0)\n            far = Math.min(far, tRight);\n        else\n            near = Math.max(near, tRight);\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.down, dir) < 0)\n            far = Math.min(far, tDown);\n        else\n            near = Math.max(near, tDown);\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.left, dir) < 0)\n            far = Math.min(far, tLeft);\n        else\n            near = Math.max(near, tLeft);\n        return near <= far;\n    }\n    containsTriangle(p1, p2, p3, inclusive) {\n        if (inclusive) {\n            if (this.topRight.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.bottomRight.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.bottomLeft.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.topLeft.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.containsLinePartially(p1, p2))\n                return true;\n            if (this.containsLinePartially(p2, p3))\n                return true;\n            if (this.containsLinePartially(p3, p1))\n                return true;\n            return false;\n        }\n        else {\n            return this.containsPoint(p1) && this.containsPoint(p2) && this.containsPoint(p3);\n        }\n    }\n    intersectsBoundingBox(bb) {\n        if (this.topRight.intersectBoundingBox(bb) !== null)\n            return true;\n        if (this.bottomRight.intersectBoundingBox(bb) !== null)\n            return true;\n        if (this.bottomLeft.intersectBoundingBox(bb) !== null)\n            return true;\n        if (this.topLeft.intersectBoundingBox(bb) !== null)\n            return true;\n        const p000 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMin());\n        const p001 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMax());\n        const p010 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMin());\n        const p011 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMax());\n        const p100 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMin());\n        const p101 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMax());\n        const p110 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMin());\n        const p111 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMax());\n        return this.containsLinePartially(p000, p100) ||\n            this.containsLinePartially(p000, p010) ||\n            this.containsLinePartially(p000, p001) ||\n            this.containsLinePartially(p110, p010) ||\n            this.containsLinePartially(p110, p100) ||\n            this.containsLinePartially(p110, p111) ||\n            this.containsLinePartially(p011, p111) ||\n            this.containsLinePartially(p011, p001) ||\n            this.containsLinePartially(p011, p010) ||\n            this.containsLinePartially(p101, p001) ||\n            this.containsLinePartially(p101, p111) ||\n            this.containsLinePartially(p101, p100);\n    }\n    containsBoundingBoxFully(bb) {\n        const p000 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMin());\n        const p001 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMax());\n        const p010 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMin());\n        const p011 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMax());\n        const p100 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMin());\n        const p101 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMax());\n        const p110 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMin());\n        const p111 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMax());\n        return this.containsPoint(p000) &&\n            this.containsPoint(p001) &&\n            this.containsPoint(p010) &&\n            this.containsPoint(p011) &&\n            this.containsPoint(p100) &&\n            this.containsPoint(p101) &&\n            this.containsPoint(p110) &&\n            this.containsPoint(p111);\n    }\n    print() {\n        console.log(\"Frustum:\");\n        console.log(\"\\torigin: \", this.origin);\n        console.log(\"\\ttop: \", this.up);\n        console.log(\"\\tright: \", this.right);\n        console.log(\"\\tbottom: \", this.down);\n        console.log(\"\\tleft: \", this.left);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/frustum.ts\n");

/***/ }),

/***/ "./src/geometry/geometry.ts":
/*!**********************************!*\
  !*** ./src/geometry/geometry.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Geometry: () => (/* binding */ Geometry)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\n\nclass Geometry {\n    static getNewID() { return this.idGenerator++; }\n    constructor(parent = null, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.identity(), materialName) {\n        this.parent = parent;\n        this.model = model;\n        this.materialName = materialName;\n        this.selected = false;\n        this.hovered = false;\n        this.showing = true;\n        this.overlay = false;\n        this.id = Geometry.idGenerator++;\n    }\n    getID() {\n        return this.id;\n    }\n    getMaterial() {\n        return this.materialName;\n    }\n    isOverlay() {\n        return this.overlay || (this.parent && this.parent.isOverlay()) || false;\n    }\n    setOverlay(option) {\n        this.overlay = option;\n    }\n    setModel(model) {\n        this.model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.clone(model);\n    }\n    getModel() {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.clone(this.model);\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    getModelRecursive() {\n        if (this.parent) {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.mul(this.parent.getModelRecursive(), this.model);\n        }\n        else {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.clone(this.model);\n        }\n    }\n    getParent() {\n        return this.parent;\n    }\n    isSelected() {\n        if (this.selected)\n            return true;\n        if (this.parent && this.parent.isSelected())\n            return true;\n        return false;\n    }\n    select() {\n        this.selected = true;\n        this.clearSubSelection();\n    }\n    unSelect() {\n        this.selected = false;\n        this.clearSubSelection();\n    }\n    isHovered() {\n        if (this.hovered)\n            return true;\n        if (this.parent && this.parent.isHovered())\n            return true;\n        return false;\n    }\n    hover() {\n        this.hovered = true;\n    }\n    unHover() {\n        this.hovered = false;\n    }\n    hide() {\n        this.showing = false;\n    }\n    show() {\n        this.showing = true;\n    }\n    isHidden() {\n        return !this.showing || (this.parent && this.parent.isHidden()) || false;\n    }\n    setMaterial(name) {\n        this.materialName = name;\n    }\n    getColorBuffer() {\n        if (this.materialName) {\n            const mat = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getMaterial(this.materialName);\n            if (mat && mat.getColor()) {\n                return mat.getColorBuffer();\n            }\n        }\n        if (this.parent) {\n            return this.parent.getColorBuffer();\n        }\n        return _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getDefaultMaterial().getColorBuffer();\n    }\n    getColor() {\n        if (this.materialName) {\n            const mat = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getMaterial(this.materialName);\n            if (mat && mat.getColor()) {\n                return mat.getColor();\n            }\n        }\n        if (this.parent) {\n            return this.parent.getColor();\n        }\n        return _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getDefaultMaterial().getColor();\n    }\n    transform(transform) {\n        this.model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.mul(transform, this.model);\n    }\n}\nGeometry.idGenerator = 1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/geometry.ts\n");

/***/ }),

/***/ "./src/geometry/group.ts":
/*!*******************************!*\
  !*** ./src/geometry/group.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Group: () => (/* binding */ Group)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n\n\n\nclass Group extends _geometry__WEBPACK_IMPORTED_MODULE_1__.Geometry {\n    constructor(children, parent = null, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.identity(), material = null) {\n        super(parent, model, material);\n        this.children = children;\n        for (const child of children) {\n            child.setParent(this);\n        }\n    }\n    addToSubSelection(...subIDs) {\n        alert(\"todo group\");\n    }\n    removeFromSubSelection(...subIDs) {\n        alert(\"todo group\");\n    }\n    isSubSelected(subID) {\n        alert(\"todo group\");\n        return false;\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        alert(\"todo group\");\n        return [];\n    }\n    hasSubSelection() {\n        alert(\"todo group\");\n        return false;\n    }\n    clearSubSelection() {\n        for (const geo of this.children)\n            geo.clearSubSelection();\n    }\n    getSubSelectionBoundingBox() {\n        const res = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (const geo of this.children)\n            res.addBoundingBox(geo.getSubSelectionBoundingBox());\n        return res;\n    }\n    onSelectionMoved() {\n        for (const geo of this.children)\n            geo.onSelectionMoved();\n    }\n    bakeSelectionTransform() {\n        for (const geo of this.children)\n            geo.bakeSelectionTransform();\n    }\n    showControls(on) {\n        for (const geo of this.children)\n            geo.showControls(on);\n    }\n    getBoundingBox() {\n        const boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (let child of this.children) {\n            boundingBox.addBoundingBox(child.getBoundingBox());\n        }\n        return boundingBox;\n    }\n    getTypeName() {\n        return \"Group\";\n    }\n    delete() {\n        for (const child of this.children) {\n            child.delete();\n        }\n    }\n    clone() {\n        return new Group(this.children.map((geo) => { return geo.clone(); }), this.parent, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.clone(this.model), this.materialName);\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        if (inclusive) {\n            for (const geo of this.children) {\n                if (geo.isWithinFrustum(frustum, inclusive))\n                    return true;\n            }\n            return false;\n        }\n        else {\n            for (const geo of this.children) {\n                if (!geo.isWithinFrustum(frustum, inclusive))\n                    return false;\n            }\n            return true;\n        }\n    }\n    intersect(ray, sub) {\n        if (this.isHidden())\n            return null;\n        var res = null;\n        for (const child of this.children) {\n            const intersection = child.intersect(ray, sub);\n            if (intersection) {\n                if (!res)\n                    res = intersection;\n                else if (intersection.time < res.time)\n                    res = intersection;\n            }\n        }\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/group.ts\n");

/***/ }),

/***/ "./src/geometry/intersection.ts":
/*!**************************************!*\
  !*** ./src/geometry/intersection.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Intersection: () => (/* binding */ Intersection)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass Intersection {\n    constructor(time, description, geometry, objectSubID, point, dist, screenSpaceDist) {\n        this.time = time;\n        this.description = description;\n        this.geometry = geometry;\n        this.objectSubID = objectSubID;\n        this.point = point;\n        this.dist = dist;\n        this.screenSpaceDist = screenSpaceDist;\n    }\n    transform(transform, ray) {\n        const newDirection = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec4.create(...ray.getDirection(), 0), transform);\n        const scale = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec4.length(newDirection);\n        this.time *= scale;\n        this.dist *= scale;\n        this.screenSpaceDist /= scale; // Maybe?\n        this.point = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.transformMat4(this.point, transform);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvaW50ZXJzZWN0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlFO0FBSTFELE1BQU0sWUFBWTtJQUd2QixZQUNTLElBQVksRUFDWixXQUFtQixFQUNuQixRQUF5QixFQUN6QixXQUFtQixFQUNuQixLQUFXLEVBQ1gsSUFBWSxFQUNaLGVBQXVCO1FBTnZCLFNBQUksR0FBSixJQUFJLENBQVE7UUFDWixnQkFBVyxHQUFYLFdBQVcsQ0FBUTtRQUNuQixhQUFRLEdBQVIsUUFBUSxDQUFpQjtRQUN6QixnQkFBVyxHQUFYLFdBQVcsQ0FBUTtRQUNuQixVQUFLLEdBQUwsS0FBSyxDQUFNO1FBQ1gsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNaLG9CQUFlLEdBQWYsZUFBZSxDQUFRO0lBQzVCLENBQUM7SUFFRSxTQUFTLENBQUMsU0FBZSxFQUFFLEdBQVE7UUFFeEMsTUFBTSxZQUFZLEdBQVMsNkNBQUksQ0FBQyxhQUFhLENBQUMsNkNBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDaEcsTUFBTSxLQUFLLEdBQVcsNkNBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7UUFHaEQsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLENBQUM7UUFFbkIsSUFBSSxDQUFDLGVBQWUsSUFBSSxLQUFLLENBQUMsQ0FBQyxTQUFTO1FBRXhDLElBQUksQ0FBQyxLQUFLLEdBQUcsNkNBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN6RCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9pbnRlcnNlY3Rpb24udHM/YWU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzLCBWZWM0LCB2ZWM0IH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi9yYXlcIjtcblxuZXhwb3J0IGNsYXNzIEludGVyc2VjdGlvbiB7XG5cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgdGltZTogbnVtYmVyLFxuICAgIHB1YmxpYyBkZXNjcmlwdGlvbjogc3RyaW5nLFxuICAgIHB1YmxpYyBnZW9tZXRyeTogR2VvbWV0cnkgfCBudWxsLFxuICAgIHB1YmxpYyBvYmplY3RTdWJJRDogbnVtYmVyLFxuICAgIHB1YmxpYyBwb2ludDogVmVjMyxcbiAgICBwdWJsaWMgZGlzdDogbnVtYmVyLFxuICAgIHB1YmxpYyBzY3JlZW5TcGFjZURpc3Q6IG51bWJlclxuICApIHsgfVxuXG4gIHB1YmxpYyB0cmFuc2Zvcm0odHJhbnNmb3JtOiBNYXQ0LCByYXk6IFJheSk6IHZvaWQge1xuXG4gICAgY29uc3QgbmV3RGlyZWN0aW9uOiBWZWM0ID0gdmVjNC50cmFuc2Zvcm1NYXQ0KHZlYzQuY3JlYXRlKC4uLnJheS5nZXREaXJlY3Rpb24oKSwgMCksIHRyYW5zZm9ybSk7XG4gICAgY29uc3Qgc2NhbGU6IG51bWJlciA9IHZlYzQubGVuZ3RoKG5ld0RpcmVjdGlvbik7XG5cblxuICAgIHRoaXMudGltZSAqPSBzY2FsZTtcbiAgICB0aGlzLmRpc3QgKj0gc2NhbGU7XG5cbiAgICB0aGlzLnNjcmVlblNwYWNlRGlzdCAvPSBzY2FsZTsgLy8gTWF5YmU/XG5cbiAgICB0aGlzLnBvaW50ID0gdmVjMy50cmFuc2Zvcm1NYXQ0KHRoaXMucG9pbnQsIHRyYW5zZm9ybSk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/intersection.ts\n");

/***/ }),

/***/ "./src/geometry/lineBoundingBoxHeirarchy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/lineBoundingBoxHeirarchy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineBoundingBoxHeirarchy: () => (/* binding */ LineBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass LineBoundingBoxHeirarchyNode {\n    constructor(geometry, verts, indices, lines, depth = 0) {\n        this.geometry = geometry;\n        this.verts = verts;\n        this.indices = indices;\n        this.depth = depth;\n        this.setup(lines);\n    }\n    setup(lines) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (const line of lines) {\n            this.boundingBox.addVec3(this.verts[this.indices[line * 2]]);\n            this.boundingBox.addVec3(this.verts[this.indices[line * 2 + 1]]);\n        }\n        if (lines.length <= LineBoundingBoxHeirarchy.MAX_LINES_PER_LEAF) {\n            // leaf\n            this.lines = lines;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // non leaf\n            this.lines = null;\n            let child1Lines = [];\n            let child2Lines = [];\n            for (const line of lines) {\n                const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(this.verts[this.indices[2 * line]], this.verts[this.indices[2 * line + 1]]), 0.5);\n                if (center[this.axis] < this.boundingBox.getCenter()[this.axis]) {\n                    child1Lines.push(line);\n                }\n                else {\n                    child2Lines.push(line);\n                }\n            }\n            if (child1Lines.length === 0 || child2Lines.length === 0) {\n                child1Lines = lines.slice(0, lines.length / 2);\n                child2Lines = lines.slice(lines.length / 2, -1);\n            }\n            this.child1 = new LineBoundingBoxHeirarchyNode(this.geometry, this.verts, this.indices, child1Lines, this.depth + 1);\n            this.child2 = new LineBoundingBoxHeirarchyNode(this.geometry, this.verts, this.indices, child2Lines, this.depth + 1);\n        }\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox))\n            return this.getAllLines();\n        if (!frustum.intersectsBoundingBox(this.boundingBox))\n            return [];\n        if (this.isLeaf()) {\n            const res = [];\n            if (inclusive) {\n                for (const line of this.lines) {\n                    if (frustum.containsLinePartially(this.verts[this.indices[line * 2]], this.verts[this.indices[line * 2 + 1]])) {\n                        res.push(line);\n                    }\n                }\n            }\n            else {\n                for (const line of this.lines) {\n                    if (frustum.containsLineFully(this.verts[this.indices[line * 2]], this.verts[this.indices[line * 2 + 1]])) {\n                        res.push(line);\n                    }\n                }\n            }\n            return res;\n        }\n        else {\n            const res = this.child1.getWithinFrustumSub(frustum, inclusive);\n            res.push(...this.child2.getWithinFrustumSub(frustum, inclusive));\n            return res;\n        }\n    }\n    getAllLines() {\n        if (this.isLeaf()) {\n            return [...this.lines];\n        }\n        else {\n            const res = this.child1.getAllLines();\n            res.push(...this.child2.getAllLines());\n            return res;\n        }\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox))\n            return true;\n        if (!frustum.intersectsBoundingBox(this.boundingBox))\n            return false;\n        if (this.isLeaf()) {\n            if (inclusive) {\n                for (const line of this.lines) {\n                    if (frustum.containsLinePartially(this.verts[this.indices[line * 2]], this.verts[this.indices[line * 2 + 1]])) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            else {\n                for (const line of this.lines) {\n                    if (!frustum.containsLineFully(this.verts[this.indices[line * 2]], this.verts[this.indices[line * 2 + 1]])) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        else {\n            if (inclusive) {\n                return this.child1.isWithinFrustum(frustum, inclusive) || this.child2.isWithinFrustum(frustum, inclusive);\n            }\n            else {\n                return this.child1.isWithinFrustum(frustum, inclusive) && this.child2.isWithinFrustum(frustum, inclusive);\n            }\n        }\n    }\n    almostIntersect(ray, pixels) {\n        if (ray.almostIntersectBoundingBox(this.boundingBox, pixels) === null)\n            return null;\n        if (this.isLeaf()) {\n            // time, dist\n            let closestIntersection = null;\n            for (const line of this.lines) {\n                let intersection = ray.almostIntersectLine(this.geometry, line, this.verts[this.indices[line * 2]], this.verts[this.indices[line * 2 + 1]], pixels);\n                if (intersection !== null) {\n                    if (closestIntersection === null || intersection.screenSpaceDist < closestIntersection.screenSpaceDist) {\n                        closestIntersection = intersection;\n                    }\n                }\n            }\n            return closestIntersection;\n        }\n        else {\n            const t1 = this.child1.almostIntersect(ray, pixels);\n            const t2 = this.child2.almostIntersect(ray, pixels);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return (t1.time < t2.time) ? t1 : t2;\n        }\n    }\n    isLeaf() {\n        return this.lines !== null;\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.indices)\n            str += `${this.indices.length / 2}lines`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n}\nclass LineBoundingBoxHeirarchy {\n    constructor(geometry, verts, indices) {\n        this.geometry = geometry;\n        const lines = [];\n        for (let i = 0; i < indices.length / 2; i++) {\n            lines.push(i);\n        }\n        this.root = new LineBoundingBoxHeirarchyNode(this.geometry, verts, indices, lines);\n    }\n    print() {\n        console.log(\"========Line-BBH========\");\n        this.root.print();\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(this.geometry.getModelRecursive()));\n        const res = this.root.getWithinFrustumSub(frustum, inclusive);\n        frustum.transform(this.geometry.getModelRecursive());\n        return res;\n    }\n    almostIntersect(ray, pixels) {\n        const model = this.geometry.getModelRecursive();\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_1__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(model));\n        const res = this.root.almostIntersect(objectSpaceRay, pixels);\n        res === null || res === void 0 ? void 0 : res.transform(model, objectSpaceRay);\n        return res;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        // BUG: some transforms cannot be inverted\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(this.geometry.getModelRecursive()));\n        const res = this.root.isWithinFrustum(frustum, inclusive);\n        frustum.transform(this.geometry.getModelRecursive());\n        return res;\n    }\n}\nLineBoundingBoxHeirarchy.MAX_LINES_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/lineBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/mesh.ts":
/*!******************************!*\
  !*** ./src/geometry/mesh.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mesh: () => (/* binding */ Mesh)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderMesh */ \"./src/render/renderMesh.ts\");\n/* harmony import */ var _utils_clone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/clone */ \"./src/utils/clone.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./meshBoundingBoxHeirarchy */ \"./src/geometry/meshBoundingBoxHeirarchy.ts\");\n\n\n\n\n\n\n\nclass Mesh extends _geometry__WEBPACK_IMPORTED_MODULE_4__.Geometry {\n    constructor(parent, verts, normals, indices, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity(), material = null, constantScreenSpaceSize = false) {\n        super(parent, model, material);\n        this.verts = verts;\n        this.normals = normals;\n        this.indices = indices;\n        this.subSelection = [];\n        this.subSelectionCount = 0;\n        for (let i = 0; i < this.indices.length / 3; i++) {\n            this.subSelection.push(false);\n        }\n        this.renderMesh = new _render_renderMesh__WEBPACK_IMPORTED_MODULE_1__.RenderMesh(this, this.verts, this.normals, this.indices, this.subSelection, constantScreenSpaceSize);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderMesh(this.renderMesh);\n        this.boundingBoxHeirarchy = new _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_5__.MeshBoundingBoxHeirarchy(this, this.verts, this.indices);\n    }\n    addToSubSelection(...subIDs) {\n        for (const subID of subIDs) {\n            if (!this.subSelection[subID]) {\n                this.subSelection[subID] = true;\n                this.subSelectionCount++;\n            }\n        }\n        this.renderMesh.updateSubSelection(this.subSelection);\n    }\n    removeFromSubSelection(...subIDs) {\n        for (const subID of subIDs) {\n            if (this.subSelection[subID]) {\n                this.subSelection[subID] = false;\n                this.subSelectionCount--;\n            }\n        }\n        this.renderMesh.updateSubSelection(this.subSelection);\n    }\n    isSubSelected(subID) {\n        return this.subSelection[subID];\n    }\n    hasSubSelection() {\n        return this.subSelectionCount > 0;\n    }\n    clearSubSelection() {\n        this.subSelection.map(() => { return false; });\n        this.renderMesh.updateSubSelection(this.subSelection);\n    }\n    getSubSelectionBoundingBox() {\n        return new _boundingBox__WEBPACK_IMPORTED_MODULE_3__.BoundingBox();\n        // TODO: \n    }\n    onSelectionMoved() {\n        // TODO:\n    }\n    bakeSelectionTransform() {\n        // TODO:\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        alert(\"todo mesh\");\n        return [];\n    }\n    showControls(on) {\n        alert(\"todo mesh\");\n    }\n    setConstantScreenSpaceSize(on) {\n        this.renderMesh.setConstantScreenSpaceSize(on);\n    }\n    clone() {\n        return new Mesh(this.parent, (0,_utils_clone__WEBPACK_IMPORTED_MODULE_2__.cloneVec3List)(this.verts), (0,_utils_clone__WEBPACK_IMPORTED_MODULE_2__.cloneVec3List)(this.normals), [...this.indices], wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.clone(this.model), this.materialName);\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeMesh(this.renderMesh);\n    }\n    getVerts() {\n        return this.verts;\n    }\n    getIndices() {\n        return this.indices;\n    }\n    intersect(ray, sub) {\n        if (this.isHidden())\n            return null;\n        return this.boundingBoxHeirarchy.firstIntersection(ray);\n    }\n    getTypeName() {\n        return \"Mesh\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.boundingBoxHeirarchy.isWithinFrustum(frustum, inclusive);\n    }\n    getBoundingBox() {\n        const bb = new _boundingBox__WEBPACK_IMPORTED_MODULE_3__.BoundingBox();\n        const model = this.getModelRecursive();\n        this.verts.forEach((vert) => {\n            bb.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.transformMat4(vert, model));\n        });\n        return bb;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O1FBQ2pDLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFZSxXQUFXO1FBQ3pCLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxlQUFlLENBQUMsT0FBZ0IsRUFBRSxTQUFrQjtRQUN6RCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFBRSxPQUFPLEtBQUssQ0FBQztRQUNsQyxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFTSxjQUFjO1FBQ25CLE1BQU0sRUFBRSxHQUFnQixJQUFJLHFEQUFXLEVBQUUsQ0FBQztRQUMxQyxNQUFNLEtBQUssR0FBUyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVUsRUFBRSxFQUFFO1lBQ2hDLEVBQUUsQ0FBQyxPQUFPLENBQUMsNkNBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDOUMsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L21lc2gudHM/YzA0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYmtkZjIgfSBmcm9tIFwiY3J5cHRvXCI7XG5pbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcbmltcG9ydCB7IE1hdGVyaWFsTmFtZSB9IGZyb20gXCIuLi9tYXRlcmlhbHMvbWF0ZXJpYWxcIjtcbmltcG9ydCB7IFJlbmRlck1lc2ggfSBmcm9tIFwiLi4vcmVuZGVyL3JlbmRlck1lc2hcIjtcbmltcG9ydCB7IGNsb25lVmVjM0xpc3QgfSBmcm9tIFwiLi4vdXRpbHMvY2xvbmVcIjtcbmltcG9ydCB7IEJvdW5kaW5nQm94IH0gZnJvbSBcIi4vYm91bmRpbmdCb3hcIjtcbmltcG9ydCB7IEZydXN0dW0gfSBmcm9tIFwiLi9mcnVzdHVtXCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeSB9IGZyb20gXCIuL21lc2hCb3VuZGluZ0JveEhlaXJhcmNoeVwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4vcmF5XCI7XG5cblxuXG5leHBvcnQgY2xhc3MgTWVzaCBleHRlbmRzIEdlb21ldHJ5IHtcblxuICBwcml2YXRlIHJlbmRlck1lc2g6IFJlbmRlck1lc2g7XG4gIHByaXZhdGUgYm91bmRpbmdCb3hIZWlyYXJjaHk6IE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeTtcbiAgcHJpdmF0ZSBzdWJTZWxlY3Rpb246IGJvb2xlYW5bXTtcbiAgcHJpdmF0ZSBzdWJTZWxlY3Rpb25Db3VudDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHBhcmVudDogR2VvbWV0cnkgfCBudWxsLFxuICAgIHByaXZhdGUgdmVydHM6IFZlYzNbXSxcbiAgICBwcml2YXRlIG5vcm1hbHM6IFZlYzNbXSxcbiAgICBwcml2YXRlIGluZGljZXM6IG51bWJlcltdLFxuICAgIG1vZGVsOiBNYXQ0ID0gbWF0NC5pZGVudGl0eSgpLFxuICAgIG1hdGVyaWFsOiBNYXRlcmlhbE5hbWUgfCBudWxsID0gbnVsbCxcbiAgICBjb25zdGFudFNjcmVlblNwYWNlU2l6ZTogYm9vbGVhbiA9IGZhbHNlXG4gICkge1xuICAgIHN1cGVyKHBhcmVudCwgbW9kZWwsIG1hdGVyaWFsKTtcblxuICAgIHRoaXMuc3ViU2VsZWN0aW9uID0gW107XG4gICAgdGhpcy5zdWJTZWxlY3Rpb25Db3VudCA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmluZGljZXMubGVuZ3RoIC8gMzsgaSsrKSB7XG4gICAgICB0aGlzLnN1YlNlbGVjdGlvbi5wdXNoKGZhbHNlKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlbmRlck1lc2ggPSBuZXcgUmVuZGVyTWVzaCh0aGlzLCB0aGlzLnZlcnRzLCB0aGlzLm5vcm1hbHMsIHRoaXMuaW5kaWNlcywgdGhpcy5zdWJTZWxlY3Rpb24sIGNvbnN0YW50U2NyZWVuU3BhY2VTaXplKTtcbiAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmFkZFJlbmRlck1lc2godGhpcy5yZW5kZXJNZXNoKTtcbiAgICB0aGlzLmJvdW5kaW5nQm94SGVpcmFyY2h5ID0gbmV3IE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeSh0aGlzLCB0aGlzLnZlcnRzLCB0aGlzLmluZGljZXMpO1xuICB9XG5cbiAgcHVibGljIGFkZFRvU3ViU2VsZWN0aW9uKC4uLnN1YklEczogbnVtYmVyW10pOiB2b2lkIHtcbiAgICBmb3IgKGNvbnN0IHN1YklEIG9mIHN1YklEcykge1xuICAgICAgaWYgKCF0aGlzLnN1YlNlbGVjdGlvbltzdWJJRF0pIHtcbiAgICAgICAgdGhpcy5zdWJTZWxlY3Rpb25bc3ViSURdID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zdWJTZWxlY3Rpb25Db3VudCsrO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLnJlbmRlck1lc2gudXBkYXRlU3ViU2VsZWN0aW9uKHRoaXMuc3ViU2VsZWN0aW9uKTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVGcm9tU3ViU2VsZWN0aW9uKC4uLnN1YklEczogbnVtYmVyW10pOiB2b2lkIHtcbiAgICBmb3IgKGNvbnN0IHN1YklEIG9mIHN1YklEcykge1xuICAgICAgaWYgKHRoaXMuc3ViU2VsZWN0aW9uW3N1YklEXSkge1xuICAgICAgICB0aGlzLnN1YlNlbGVjdGlvbltzdWJJRF0gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zdWJTZWxlY3Rpb25Db3VudC0tO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLnJlbmRlck1lc2gudXBkYXRlU3ViU2VsZWN0aW9uKHRoaXMuc3ViU2VsZWN0aW9uKTtcbiAgfVxuXG4gIHB1YmxpYyBpc1N1YlNlbGVjdGVkKHN1YklEOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdWJTZWxlY3Rpb25bc3ViSURdO1xuICB9XG5cbiAgcHVibGljIGhhc1N1YlNlbGVjdGlvbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdWJTZWxlY3Rpb25Db3VudCA+IDA7XG4gIH1cblxuICBwdWJsaWMgY2xlYXJTdWJTZWxlY3Rpb24oKTogdm9pZCB7XG4gICAgdGhpcy5zdWJTZWxlY3Rpb24ubWFwKCgpID0+IHsgcmV0dXJuIGZhbHNlOyB9KTtcbiAgICB0aGlzLnJlbmRlck1lc2gudXBkYXRlU3ViU2VsZWN0aW9uKHRoaXMuc3ViU2VsZWN0aW9uKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdWJTZWxlY3Rpb25Cb3VuZGluZ0JveCgpOiBCb3VuZGluZ0JveCB7XG4gICAgcmV0dXJuIG5ldyBCb3VuZGluZ0JveCgpO1xuICAgIC8vIFRPRE86IFxuICB9XG5cbiAgcHVibGljIG9uU2VsZWN0aW9uTW92ZWQoKTogdm9pZCB7XG4gICAgLy8gVE9ETzpcbiAgfVxuXG4gIHB1YmxpYyBiYWtlU2VsZWN0aW9uVHJhbnNmb3JtKCk6IHZvaWQge1xuICAgIC8vIFRPRE86XG4gIH1cblxuICBwdWJsaWMgZ2V0V2l0aGluRnJ1c3R1bVN1YihmcnVzdHVtOiBGcnVzdHVtLCBpbmNsdXNpdmU6IGJvb2xlYW4pOiBudW1iZXJbXSB7XG4gICAgYWxlcnQoXCJ0b2RvIG1lc2hcIik7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgcHVibGljIHNob3dDb250cm9scyhvbjogYm9vbGVhbik6IHZvaWQge1xuICAgIGFsZXJ0KFwidG9kbyBtZXNoXCIpO1xuICB9XG5cbiAgcHVibGljIHNldENvbnN0YW50U2NyZWVuU3BhY2VTaXplKG9uOiBib29sZWFuKSB7XG4gICAgdGhpcy5yZW5kZXJNZXNoLnNldENvbnN0YW50U2NyZWVuU3BhY2VTaXplKG9uKTtcbiAgfVxuXG4gIHB1YmxpYyBjbG9uZSgpOiBHZW9tZXRyeSB7XG4gICAgcmV0dXJuIG5ldyBNZXNoKHRoaXMucGFyZW50LCBjbG9uZVZlYzNMaXN0KHRoaXMudmVydHMpLCBjbG9uZVZlYzNMaXN0KHRoaXMubm9ybWFscyksIFsuLi50aGlzLmluZGljZXNdLCBtYXQ0LmNsb25lKHRoaXMubW9kZWwpLCB0aGlzLm1hdGVyaWFsTmFtZSk7XG4gIH1cblxuICBwdWJsaWMgZGVsZXRlKCk6IHZvaWQge1xuICAgIElOU1RBTkNFLmdldFNjZW5lKCkucmVtb3ZlTWVzaCh0aGlzLnJlbmRlck1lc2gpO1xuICB9XG5cbiAgcHVibGljIGdldFZlcnRzKCk6IFZlYzNbXSB7XG4gICAgcmV0dXJuIHRoaXMudmVydHM7XG4gIH1cblxuICBwdWJsaWMgZ2V0SW5kaWNlcygpOiBudW1iZXJbXSB7XG4gICAgcmV0dXJuIHRoaXMuaW5kaWNlcztcbiAgfVxuXG4gIHB1YmxpYyBpbnRlcnNlY3QocmF5OiBSYXksIHN1YjogYm9vbGVhbik6IEludGVyc2VjdGlvbiB8IG51bGwge1xuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB0aGlzLmJvdW5kaW5nQm94SGVpcmFyY2h5LmZpcnN0SW50ZXJzZWN0aW9uKHJheSk7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0VHlwZU5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJNZXNoXCI7XG4gIH1cblxuICBwdWJsaWMgaXNXaXRoaW5GcnVzdHVtKGZydXN0dW06IEZydXN0dW0sIGluY2x1c2l2ZTogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeS5pc1dpdGhpbkZydXN0dW0oZnJ1c3R1bSwgaW5jbHVzaXZlKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCb3VuZGluZ0JveCgpOiBCb3VuZGluZ0JveCB7XG4gICAgY29uc3QgYmI6IEJvdW5kaW5nQm94ID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgY29uc3QgbW9kZWw6IE1hdDQgPSB0aGlzLmdldE1vZGVsUmVjdXJzaXZlKCk7XG4gICAgdGhpcy52ZXJ0cy5mb3JFYWNoKCh2ZXJ0OiBWZWMzKSA9PiB7XG4gICAgICBiYi5hZGRWZWMzKHZlYzMudHJhbnNmb3JtTWF0NCh2ZXJ0LCBtb2RlbCkpO1xuICAgIH0pO1xuICAgIHJldHVybiBiYjtcbiAgfVxuXG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/mesh.ts\n");

/***/ }),

/***/ "./src/geometry/meshBoundingBoxHeirarchy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/meshBoundingBoxHeirarchy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MeshBoundingBoxHeirarchy: () => (/* binding */ MeshBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _intersection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intersection */ \"./src/geometry/intersection.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass MeshBoundingBoxHeirarchyNode {\n    constructor(mesh, verts, indices, triangles, depth = 0) {\n        this.mesh = mesh;\n        this.verts = verts;\n        this.indices = indices;\n        this.depth = depth;\n        this.setup(triangles);\n    }\n    setup(triangles) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (const tri of triangles) {\n            this.boundingBox.addVec3(this.verts[this.indices[tri * 3]]);\n            this.boundingBox.addVec3(this.verts[this.indices[tri * 3 + 1]]);\n            this.boundingBox.addVec3(this.verts[this.indices[tri * 3 + 2]]);\n        }\n        if (triangles.length <= MeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF) {\n            // leaf\n            this.triangles = triangles;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // non leaf\n            this.triangles = null;\n            var child1Tris = [];\n            var child2Tris = [];\n            for (const tri of triangles) {\n                const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.verts[this.indices[tri * 3]], wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.verts[this.indices[tri * 3 + 1]], this.verts[this.indices[tri * 3 + 2]])), 1 / 3);\n                if (center[this.axis] < this.boundingBox.getCenter()[this.axis]) {\n                    child1Tris.push(tri);\n                }\n                else {\n                    child2Tris.push(tri);\n                }\n            }\n            if (child1Tris.length === 0 || child2Tris.length === 0) {\n                child1Tris = triangles.slice(0, triangles.length / 2);\n                child2Tris = triangles.slice(triangles.length / 2, -1);\n            }\n            this.child1 = new MeshBoundingBoxHeirarchyNode(this.mesh, this.verts, this.indices, child1Tris, this.depth + 1);\n            this.child2 = new MeshBoundingBoxHeirarchyNode(this.mesh, this.verts, this.indices, child2Tris, this.depth + 1);\n        }\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox))\n            return true;\n        if (!frustum.intersectsBoundingBox(this.boundingBox))\n            return false;\n        if (this.isLeaf()) {\n            if (inclusive) {\n                for (const tri of this.triangles) {\n                    if (frustum.containsTriangle(this.verts[this.indices[tri * 3]], this.verts[this.indices[tri * 3 + 1]], this.verts[this.indices[tri * 3 + 2]], inclusive)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            else {\n                for (let tri of this.triangles) {\n                    if (!frustum.containsTriangle(this.verts[this.indices[tri * 3]], this.verts[this.indices[tri * 3 + 1]], this.verts[this.indices[tri * 3 + 2]], inclusive)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        else {\n            if (inclusive) {\n                return this.child1.isWithinFrustum(frustum, inclusive) || this.child2.isWithinFrustum(frustum, inclusive);\n            }\n            else {\n                return this.child1.isWithinFrustum(frustum, inclusive) && this.child2.isWithinFrustum(frustum, inclusive);\n            }\n        }\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox))\n            return this.getAllTris();\n        if (!frustum.intersectsBoundingBox(this.boundingBox))\n            return [];\n        if (this.isLeaf()) {\n            const res = [];\n            for (const tri of this.triangles) {\n                if (frustum.containsTriangle(this.verts[this.indices[tri * 3]], this.verts[this.indices[tri * 3 + 1]], this.verts[this.indices[tri * 3 + 2]], inclusive)) {\n                    res.push(tri);\n                }\n            }\n            return res;\n        }\n        else {\n            const res = this.child1.getWithinFrustumSub(frustum, inclusive);\n            res.push(...this.child2.getWithinFrustumSub(frustum, inclusive));\n            return res;\n        }\n    }\n    getAllTris() {\n        if (this.isLeaf()) {\n            return [...this.triangles];\n        }\n        else {\n            const res = this.child1.getAllTris();\n            res.push(...this.child2.getAllTris());\n            return res;\n        }\n    }\n    intersect(ray) {\n        if (ray.intersectBoundingBox(this.boundingBox) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            var subID = null;\n            for (const tri of this.triangles) {\n                var t = ray.intersectTriangle(this.verts[this.indices[tri * 3]], this.verts[this.indices[tri * 3 + 1]], this.verts[this.indices[tri * 3 + 2]]);\n                if (t !== null) {\n                    if (res === null || t < res) {\n                        res = t;\n                        subID = tri;\n                    }\n                }\n            }\n            if (res == null)\n                return res;\n            return new _intersection__WEBPACK_IMPORTED_MODULE_1__.Intersection(res, \"mesh\", this.mesh, subID, ray.at(res), 0, 0);\n        }\n        else {\n            const i1 = this.child1.intersect(ray);\n            const i2 = this.child2.intersect(ray);\n            if (i1 === null)\n                return i2;\n            if (i2 === null)\n                return i1;\n            return (i1.time < i2.time) ? i1 : i2;\n        }\n    }\n    isLeaf() {\n        return this.triangles !== null;\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.triangles)\n            str += `${this.triangles.length / 3}triangles`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n}\nclass MeshBoundingBoxHeirarchy {\n    constructor(mesh, verts, indices) {\n        this.mesh = mesh;\n        const triangles = [];\n        for (let i = 0; i < indices.length; i += 3) {\n            triangles.push(i / 3);\n        }\n        this.root = new MeshBoundingBoxHeirarchyNode(this.mesh, verts, indices, triangles);\n    }\n    print() {\n        console.log(\"========Mesh-BBH========\");\n        this.root.print();\n    }\n    firstIntersection(ray) {\n        var model = this.mesh.getModelRecursive();\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(model));\n        const res = this.root.intersect(objectSpaceRay);\n        res === null || res === void 0 ? void 0 : res.transform(model, objectSpaceRay);\n        return res;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        // BUG: some transforms cannot be inverted\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(this.mesh.getModelRecursive()));\n        const res = this.root.isWithinFrustum(frustum, inclusive);\n        frustum.transform(this.mesh.getModelRecursive());\n        return res;\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        // BUG: some transforms cannot be inverted\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(this.mesh.getModelRecursive()));\n        const res = this.root.getWithinFrustumSub(frustum, inclusive);\n        frustum.transform(this.mesh.getModelRecursive());\n        return res;\n    }\n}\nMeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/meshBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/arc.ts":
/*!***********************************!*\
  !*** ./src/geometry/nurbs/arc.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createArc: () => (/* binding */ createArc)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve */ \"./src/geometry/nurbs/curve.ts\");\n\n\n\nconst createArc = function (origin, xAxis, yAxis, radius, thetaStart, thetaEnd) {\n    if (thetaEnd < thetaStart)\n        thetaEnd += 360;\n    const theta = thetaEnd - thetaStart;\n    let arcCount;\n    if (theta <= Math.PI / 2)\n        arcCount = 1;\n    else if (theta <= Math.PI)\n        arcCount = 2;\n    else if (theta <= 3 * Math.PI / 2)\n        arcCount = 3;\n    else\n        arcCount = 4;\n    const dTheta = theta / arcCount;\n    const weight = Math.cos(dTheta / 2);\n    var point0 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, radius * Math.cos(thetaStart)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, radius * Math.sin(thetaStart))));\n    var tangent0 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, -Math.sin(thetaStart)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, Math.cos(thetaStart)));\n    const weightedControls = [wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(...point0, 1)];\n    const knots = [];\n    var angle = thetaStart;\n    for (let i = 1; i <= arcCount; i++) {\n        angle += dTheta;\n        const point2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, radius * Math.cos(angle)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, radius * Math.sin(angle))));\n        const tangent2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, -Math.sin(angle)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, Math.cos(angle)));\n        const ray0 = new _ray__WEBPACK_IMPORTED_MODULE_0__.Ray(point0, tangent0);\n        const ray1 = new _ray__WEBPACK_IMPORTED_MODULE_0__.Ray(point2, tangent2);\n        const point1 = ray0.closestPointToLine(ray1.getOrigin(), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(ray1.getDirection(), ray1.getOrigin()));\n        weightedControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(...wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(point1, weight), weight), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(...point2, 1));\n        if (i < arcCount) {\n            point0 = point2;\n            tangent0 = tangent2;\n        }\n    }\n    knots.push(0, 0, 0);\n    switch (arcCount) {\n        case 1:\n            break;\n        case 2:\n            knots.push(1 / 2, 1 / 2);\n            break;\n        case 3:\n            knots.push(1 / 3, 1 / 3, 2 / 3, 2 / 3);\n            break;\n        case 4:\n            knots.push(1 / 4, 1 / 4, 2 / 4, 2 / 4, 3 / 4, 3 / 4);\n            break;\n    }\n    knots.push(1, 1, 1);\n    return new _curve__WEBPACK_IMPORTED_MODULE_1__.Curve(null, weightedControls, 2, knots);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDckQsTUFBTTtLQUNUO0lBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXBCLE9BQU8sSUFBSSx5Q0FBSyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDckQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L251cmJzL2FyYy50cz81ZTlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlYzMsIFZlYzMsIHZlYzQsIFZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuLi9yYXlcIjtcbmltcG9ydCB7IEN1cnZlIH0gZnJvbSBcIi4vY3VydmVcIjtcblxuXG5leHBvcnQgY29uc3QgY3JlYXRlQXJjID0gZnVuY3Rpb24oXG4gIG9yaWdpbjogVmVjMyxcbiAgeEF4aXM6IFZlYzMsXG4gIHlBeGlzOiBWZWMzLFxuICByYWRpdXM6IG51bWJlcixcbiAgdGhldGFTdGFydDogbnVtYmVyLFxuICB0aGV0YUVuZDogbnVtYmVyKTogQ3VydmUge1xuXG4gIGlmICh0aGV0YUVuZCA8IHRoZXRhU3RhcnQpIHRoZXRhRW5kICs9IDM2MDtcblxuICBjb25zdCB0aGV0YTogbnVtYmVyID0gdGhldGFFbmQgLSB0aGV0YVN0YXJ0O1xuXG4gIGxldCBhcmNDb3VudDogbnVtYmVyO1xuICBpZiAodGhldGEgPD0gTWF0aC5QSSAvIDIpIGFyY0NvdW50ID0gMTtcbiAgZWxzZSBpZiAodGhldGEgPD0gTWF0aC5QSSkgYXJjQ291bnQgPSAyO1xuICBlbHNlIGlmICh0aGV0YSA8PSAzICogTWF0aC5QSSAvIDIpIGFyY0NvdW50ID0gMztcbiAgZWxzZSBhcmNDb3VudCA9IDQ7XG5cbiAgY29uc3QgZFRoZXRhOiBudW1iZXIgPSB0aGV0YSAvIGFyY0NvdW50O1xuXG4gIGNvbnN0IHdlaWdodDogbnVtYmVyID0gTWF0aC5jb3MoZFRoZXRhIC8gMik7XG5cbiAgdmFyIHBvaW50MDogVmVjMyA9IHZlYzMuYWRkKG9yaWdpbiwgdmVjMy5hZGQoXG4gICAgdmVjMy5zY2FsZSh4QXhpcywgcmFkaXVzICogTWF0aC5jb3ModGhldGFTdGFydCkpLFxuICAgIHZlYzMuc2NhbGUoeUF4aXMsIHJhZGl1cyAqIE1hdGguc2luKHRoZXRhU3RhcnQpKSxcbiAgKSk7XG5cbiAgdmFyIHRhbmdlbnQwOiBWZWMzID0gdmVjMy5hZGQoXG4gICAgdmVjMy5zY2FsZSh4QXhpcywgLU1hdGguc2luKHRoZXRhU3RhcnQpKSxcbiAgICB2ZWMzLnNjYWxlKHlBeGlzLCBNYXRoLmNvcyh0aGV0YVN0YXJ0KSlcbiAgKTtcblxuICBjb25zdCB3ZWlnaHRlZENvbnRyb2xzOiBWZWM0W10gPSBbdmVjNC5jcmVhdGUoLi4ucG9pbnQwLCAxKV07XG4gIGNvbnN0IGtub3RzOiBudW1iZXJbXSA9IFtdO1xuXG4gIHZhciBhbmdsZTogbnVtYmVyID0gdGhldGFTdGFydDtcblxuICBmb3IgKGxldCBpID0gMTsgaSA8PSBhcmNDb3VudDsgaSsrKSB7XG4gICAgYW5nbGUgKz0gZFRoZXRhO1xuXG4gICAgY29uc3QgcG9pbnQyOiBWZWMzID0gdmVjMy5hZGQob3JpZ2luLCB2ZWMzLmFkZChcbiAgICAgIHZlYzMuc2NhbGUoeEF4aXMsIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKSksXG4gICAgICB2ZWMzLnNjYWxlKHlBeGlzLCByYWRpdXMgKiBNYXRoLnNpbihhbmdsZSkpLFxuICAgICkpO1xuXG4gICAgY29uc3QgdGFuZ2VudDI6IFZlYzMgPSB2ZWMzLmFkZChcbiAgICAgIHZlYzMuc2NhbGUoeEF4aXMsIC1NYXRoLnNpbihhbmdsZSkpLFxuICAgICAgdmVjMy5zY2FsZSh5QXhpcywgTWF0aC5jb3MoYW5nbGUpKVxuICAgICk7XG5cbiAgICBjb25zdCByYXkwOiBSYXkgPSBuZXcgUmF5KHBvaW50MCwgdGFuZ2VudDApO1xuICAgIGNvbnN0IHJheTE6IFJheSA9IG5ldyBSYXkocG9pbnQyLCB0YW5nZW50Mik7XG4gICAgY29uc3QgcG9pbnQxOiBWZWMzID0gcmF5MC5jbG9zZXN0UG9pbnRUb0xpbmUocmF5MS5nZXRPcmlnaW4oKSwgdmVjMy5hZGQocmF5MS5nZXREaXJlY3Rpb24oKSwgcmF5MS5nZXRPcmlnaW4oKSkpO1xuXG4gICAgd2VpZ2h0ZWRDb250cm9scy5wdXNoKFxuICAgICAgdmVjNC5jcmVhdGUoLi4udmVjMy5zY2FsZShwb2ludDEsIHdlaWdodCksIHdlaWdodCksXG4gICAgICB2ZWM0LmNyZWF0ZSguLi5wb2ludDIsIDEpXG4gICAgKTtcblxuICAgIGlmIChpIDwgYXJjQ291bnQpIHtcbiAgICAgIHBvaW50MCA9IHBvaW50MjtcbiAgICAgIHRhbmdlbnQwID0gdGFuZ2VudDI7XG4gICAgfVxuXG4gIH1cblxuICBrbm90cy5wdXNoKDAsIDAsIDApO1xuICBzd2l0Y2ggKGFyY0NvdW50KSB7XG4gICAgY2FzZSAxOlxuICAgICAgYnJlYWs7XG4gICAgY2FzZSAyOlxuICAgICAga25vdHMucHVzaCgxIC8gMiwgMSAvIDIpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAzOlxuICAgICAga25vdHMucHVzaCgxIC8gMywgMSAvIDMsIDIgLyAzLCAyIC8gMyk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDQ6XG4gICAgICBrbm90cy5wdXNoKDEgLyA0LCAxIC8gNCwgMiAvIDQsIDIgLyA0LCAzIC8gNCwgMyAvIDQpO1xuICAgICAgYnJlYWs7XG4gIH1cbiAga25vdHMucHVzaCgxLCAxLCAxKTtcblxuICByZXR1cm4gbmV3IEN1cnZlKG51bGwsIHdlaWdodGVkQ29udHJvbHMsIDIsIGtub3RzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/arc.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/circle.ts":
/*!**************************************!*\
  !*** ./src/geometry/nurbs/circle.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCircleCenterNormalRadius: () => (/* binding */ createCircleCenterNormalRadius),\n/* harmony export */   createCircleThreePoints: () => (/* binding */ createCircleThreePoints)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve */ \"./src/geometry/nurbs/curve.ts\");\n\n\n\n\nconst UNIT_CIRCLE_DEGREE = 2;\nconst UNIT_CIRCLE_KNOTS = [\n    0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4\n];\nconst w = Math.SQRT2 / 2;\nconst UNIT_CIRCLE_POINTS = [\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(1, 0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(w, w, 0, w), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(0, 1, 0, 1),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-w, w, 0, w), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-1, 0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-w, -w, 0, w),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(0, -1, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(w, -w, 0, w), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(1, 0, 0, 1)\n];\nconst createCircleThreePoints = function (a, b, c) {\n    const ab = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(b, a);\n    const ac = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(c, a);\n    const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(ab, ac));\n    const ro = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(a, b), 0.5);\n    const rd = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(ab, normal));\n    const r = new _ray__WEBPACK_IMPORTED_MODULE_1__.Ray(ro, rd);\n    const po = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(a, c), 0.5);\n    const pn = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(ac);\n    const p = new _plane__WEBPACK_IMPORTED_MODULE_0__.Plane(po, pn);\n    const t = r.intersectPlane(p, true);\n    const center = r.at(t);\n    const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(a, center);\n    return createCircleCenterNormalRadius(center, normal, radius);\n};\nconst createCircleCenterNormalRadius = function (center, normal, radius) {\n    if (normal[2] < 0)\n        normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(normal, -1);\n    const unitZ = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1);\n    var x;\n    var y;\n    if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(normal, unitZ) < 0.00001) {\n        x = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(radius, 0, 0);\n        y = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, radius, 0);\n    }\n    else {\n        x = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(normal, unitZ)), radius);\n        y = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(normal, x)), radius);\n    }\n    normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(normal, radius);\n    // swizzle y and z in the matrix\n    // why did they choose this rediculous clipspace\n    const model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.create(x[0], x[1], x[2], 0, y[0], y[1], y[2], 0, normal[0], normal[1], normal[2], 0, center[0], center[1], center[2], 1);\n    return new _curve__WEBPACK_IMPORTED_MODULE_2__.Curve(null, UNIT_CIRCLE_POINTS, UNIT_CIRCLE_DEGREE, UNIT_CIRCLE_KNOTS, model);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvbnVyYnMvY2lyY2xlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRTtBQUNoQztBQUNKO0FBQ0c7QUFFaEMsTUFBTSxrQkFBa0IsR0FBVyxDQUFDLENBQUM7QUFDckMsTUFBTSxpQkFBaUIsR0FBYTtJQUNsQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7Q0FDbkMsQ0FBQztBQUNGLE1BQU0sQ0FBQyxHQUFXLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0FBQ2pDLE1BQU0sa0JBQWtCLEdBQVc7SUFDakMsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzdFLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7Q0FDNUUsQ0FBQztBQUVLLE1BQU0sdUJBQXVCLEdBQUcsVUFBUyxDQUFPLEVBQUUsQ0FBTyxFQUFFLENBQU87SUFDdkUsTUFBTSxFQUFFLEdBQVMsNkNBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLE1BQU0sRUFBRSxHQUFTLDZDQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoQyxNQUFNLE1BQU0sR0FBUyw2Q0FBSSxDQUFDLFNBQVMsQ0FBQyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUV4RCxNQUFNLEVBQUUsR0FBUyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyw2Q0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDakQsTUFBTSxFQUFFLEdBQVMsNkNBQUksQ0FBQyxTQUFTLENBQUMsNkNBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDeEQsTUFBTSxDQUFDLEdBQVEsSUFBSSxxQ0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUUvQixNQUFNLEVBQUUsR0FBUyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyw2Q0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDakQsTUFBTSxFQUFFLEdBQVMsNkNBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDcEMsTUFBTSxDQUFDLEdBQVUsSUFBSSx5Q0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUVuQyxNQUFNLENBQUMsR0FBVyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUUsQ0FBQztJQUM3QyxNQUFNLE1BQU0sR0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzdCLE1BQU0sTUFBTSxHQUFXLDZDQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUVoRCxPQUFPLDhCQUE4QixDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDaEUsQ0FBQztBQUVNLE1BQU0sOEJBQThCLEdBQUcsVUFBUyxNQUFZLEVBQUUsTUFBWSxFQUFFLE1BQWM7SUFDL0YsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztRQUFFLE1BQU0sR0FBRyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuRCxNQUFNLEtBQUssR0FBUyw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLElBQUksQ0FBTyxDQUFDO0lBQ1osSUFBSSxDQUFPLENBQUM7SUFDWixJQUFJLDZDQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsR0FBRyxPQUFPLEVBQUU7UUFDMUMsQ0FBQyxHQUFHLDZDQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUIsQ0FBQyxHQUFHLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDL0I7U0FBTTtRQUNMLENBQUMsR0FBRyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyw2Q0FBSSxDQUFDLFNBQVMsQ0FBQyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNsRSxDQUFDLEdBQUcsNkNBQUksQ0FBQyxLQUFLLENBQUMsNkNBQUksQ0FBQyxTQUFTLENBQUMsNkNBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDL0Q7SUFDRCxNQUFNLEdBQUcsNkNBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXBDLGdDQUFnQztJQUNoQyxnREFBZ0Q7SUFDaEQsTUFBTSxLQUFLLEdBQVMsNkNBQUksQ0FBQyxNQUFNLENBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFDbkIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUNuQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQ2xDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FDbkMsQ0FBQztJQUNGLE9BQU8sSUFBSSx5Q0FBSyxDQUFDLElBQUksRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxpQkFBaUIsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUUzRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvbnVyYnMvY2lyY2xlLnRzPzRlNzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0NCwgTWF0NCwgdmVjMywgVmVjMywgVmVjNCwgdmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgUGxhbmUgfSBmcm9tIFwiLi4vcGxhbmVcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuLi9yYXlcIjtcbmltcG9ydCB7IEN1cnZlIH0gZnJvbSBcIi4vY3VydmVcIjtcblxuY29uc3QgVU5JVF9DSVJDTEVfREVHUkVFOiBudW1iZXIgPSAyO1xuY29uc3QgVU5JVF9DSVJDTEVfS05PVFM6IG51bWJlcltdID0gW1xuICAwLCAwLCAwLCAxLCAxLCAyLCAyLCAzLCAzLCA0LCA0LCA0XG5dO1xuY29uc3QgdzogbnVtYmVyID0gTWF0aC5TUVJUMiAvIDI7XG5jb25zdCBVTklUX0NJUkNMRV9QT0lOVFM6IFZlYzRbXSA9IFtcbiAgdmVjNC5jcmVhdGUoMSwgMCwgMCwgMSksIHZlYzQuY3JlYXRlKHcsIHcsIDAsIHcpLCB2ZWM0LmNyZWF0ZSgwLCAxLCAwLCAxKSxcbiAgdmVjNC5jcmVhdGUoLXcsIHcsIDAsIHcpLCB2ZWM0LmNyZWF0ZSgtMSwgMCwgMCwgMSksIHZlYzQuY3JlYXRlKC13LCAtdywgMCwgdyksXG4gIHZlYzQuY3JlYXRlKDAsIC0xLCAwLCAxKSwgdmVjNC5jcmVhdGUodywgLXcsIDAsIHcpLCB2ZWM0LmNyZWF0ZSgxLCAwLCAwLCAxKVxuXTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUNpcmNsZVRocmVlUG9pbnRzID0gZnVuY3Rpb24oYTogVmVjMywgYjogVmVjMywgYzogVmVjMyk6IEN1cnZlIHtcbiAgY29uc3QgYWI6IFZlYzMgPSB2ZWMzLnN1YihiLCBhKTtcbiAgY29uc3QgYWM6IFZlYzMgPSB2ZWMzLnN1YihjLCBhKTtcbiAgY29uc3Qgbm9ybWFsOiBWZWMzID0gdmVjMy5ub3JtYWxpemUodmVjMy5jcm9zcyhhYiwgYWMpKTtcblxuICBjb25zdCBybzogVmVjMyA9IHZlYzMuc2NhbGUodmVjMy5hZGQoYSwgYiksIDAuNSk7XG4gIGNvbnN0IHJkOiBWZWMzID0gdmVjMy5ub3JtYWxpemUodmVjMy5jcm9zcyhhYiwgbm9ybWFsKSk7XG4gIGNvbnN0IHI6IFJheSA9IG5ldyBSYXkocm8sIHJkKTtcblxuICBjb25zdCBwbzogVmVjMyA9IHZlYzMuc2NhbGUodmVjMy5hZGQoYSwgYyksIDAuNSk7XG4gIGNvbnN0IHBuOiBWZWMzID0gdmVjMy5ub3JtYWxpemUoYWMpO1xuICBjb25zdCBwOiBQbGFuZSA9IG5ldyBQbGFuZShwbywgcG4pO1xuXG4gIGNvbnN0IHQ6IG51bWJlciA9IHIuaW50ZXJzZWN0UGxhbmUocCwgdHJ1ZSkhO1xuICBjb25zdCBjZW50ZXI6IFZlYzMgPSByLmF0KHQpO1xuICBjb25zdCByYWRpdXM6IG51bWJlciA9IHZlYzMuZGlzdGFuY2UoYSwgY2VudGVyKTtcblxuICByZXR1cm4gY3JlYXRlQ2lyY2xlQ2VudGVyTm9ybWFsUmFkaXVzKGNlbnRlciwgbm9ybWFsLCByYWRpdXMpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlQ2lyY2xlQ2VudGVyTm9ybWFsUmFkaXVzID0gZnVuY3Rpb24oY2VudGVyOiBWZWMzLCBub3JtYWw6IFZlYzMsIHJhZGl1czogbnVtYmVyKTogQ3VydmUge1xuICBpZiAobm9ybWFsWzJdIDwgMCkgbm9ybWFsID0gdmVjMy5zY2FsZShub3JtYWwsIC0xKTtcbiAgY29uc3QgdW5pdFo6IFZlYzMgPSB2ZWMzLmNyZWF0ZSgwLCAwLCAxKTtcbiAgdmFyIHg6IFZlYzM7XG4gIHZhciB5OiBWZWMzO1xuICBpZiAodmVjMy5kaXN0YW5jZShub3JtYWwsIHVuaXRaKSA8IDAuMDAwMDEpIHtcbiAgICB4ID0gdmVjMy5jcmVhdGUocmFkaXVzLCAwLCAwKTtcbiAgICB5ID0gdmVjMy5jcmVhdGUoMCwgcmFkaXVzLCAwKTtcbiAgfSBlbHNlIHtcbiAgICB4ID0gdmVjMy5zY2FsZSh2ZWMzLm5vcm1hbGl6ZSh2ZWMzLmNyb3NzKG5vcm1hbCwgdW5pdFopKSwgcmFkaXVzKTtcbiAgICB5ID0gdmVjMy5zY2FsZSh2ZWMzLm5vcm1hbGl6ZSh2ZWMzLmNyb3NzKG5vcm1hbCwgeCkpLCByYWRpdXMpO1xuICB9XG4gIG5vcm1hbCA9IHZlYzMuc2NhbGUobm9ybWFsLCByYWRpdXMpO1xuXG4gIC8vIHN3aXp6bGUgeSBhbmQgeiBpbiB0aGUgbWF0cml4XG4gIC8vIHdoeSBkaWQgdGhleSBjaG9vc2UgdGhpcyByZWRpY3Vsb3VzIGNsaXBzcGFjZVxuICBjb25zdCBtb2RlbDogTWF0NCA9IG1hdDQuY3JlYXRlKFxuICAgIHhbMF0sIHhbMV0sIHhbMl0sIDAsXG4gICAgeVswXSwgeVsxXSwgeVsyXSwgMCxcbiAgICBub3JtYWxbMF0sIG5vcm1hbFsxXSwgbm9ybWFsWzJdLCAwLFxuICAgIGNlbnRlclswXSwgY2VudGVyWzFdLCBjZW50ZXJbMl0sIDFcbiAgKTtcbiAgcmV0dXJuIG5ldyBDdXJ2ZShudWxsLCBVTklUX0NJUkNMRV9QT0lOVFMsIFVOSVRfQ0lSQ0xFX0RFR1JFRSwgVU5JVF9DSVJDTEVfS05PVFMsIG1vZGVsKTtcblxufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/circle.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/curve.ts":
/*!*************************************!*\
  !*** ./src/geometry/nurbs/curve.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Curve: () => (/* binding */ Curve)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _utils_clone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/clone */ \"./src/utils/clone.ts\");\n/* harmony import */ var _controlCage1D__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../controlCage1D */ \"./src/geometry/controlCage1D.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lineBoundingBoxHeirarchy */ \"./src/geometry/lineBoundingBoxHeirarchy.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./src/geometry/nurbs/utils.ts\");\n\n\n\n\n\n\n\n\n\nclass Curve extends _geometry__WEBPACK_IMPORTED_MODULE_4__.Geometry {\n    constructor(parent, weightedControlPoints, degree, knots = [], model, material = null) {\n        super(parent, model, material);\n        this.weightedControlPoints = weightedControlPoints;\n        this.degree = degree;\n        this.knots = knots;\n        if (this.knots.length == 0) {\n            this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        }\n        this.uPerSample = [];\n        this.controlCage = null;\n        this.lines = null;\n        this.linesBBH = null;\n        this.updateSamples();\n    }\n    reverse() {\n        this.weightedControlPoints.reverse();\n        this.knots.reverse();\n        for (let i = this.knots.length - 1; i >= 0; i--) {\n            this.knots[i] -= this.knots[0];\n            this.knots[i] *= -1;\n        }\n    }\n    showControls(on) {\n        if (on)\n            this.controlCage.show();\n        else\n            this.controlCage.hide();\n    }\n    getStartRay() {\n        const p1 = this.weightedControlPoints[0];\n        const p2 = this.weightedControlPoints[1];\n        const startPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(p1[0] / p1[3], p1[1] / p1[3], p1[2] / p1[3]);\n        const nextPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(p2[0] / p2[3], p2[1] / p2[3], p2[2] / p2[3]);\n        const model = this.getModelRecursive();\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.transformMat4(startPoint, model, startPoint);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.transformMat4(nextPoint, model, nextPoint);\n        return new _ray__WEBPACK_IMPORTED_MODULE_6__.Ray(startPoint, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(startPoint, nextPoint));\n    }\n    getEndRay() {\n        const p1 = this.weightedControlPoints[this.getControlPointCount() - 1];\n        const p2 = this.weightedControlPoints[this.getControlPointCount() - 2];\n        const endPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(p1[0] / p1[3], p1[1] / p1[3], p1[2] / p1[3]);\n        const prevPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(p2[0] / p2[3], p2[1] / p2[3], p2[2] / p2[3]);\n        const model = this.getModelRecursive();\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.transformMat4(endPoint, model, endPoint);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.transformMat4(prevPoint, model, prevPoint);\n        return new _ray__WEBPACK_IMPORTED_MODULE_6__.Ray(endPoint, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(endPoint, prevPoint));\n    }\n    getControlPoint(i) {\n        const pw = this.weightedControlPoints.at(i);\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(pw[0] / pw[3], pw[1] / pw[3], pw[2] / pw[3]), this.getModelRecursive());\n    }\n    getControlPoints() {\n        const res = [];\n        for (let i = 0; i < this.weightedControlPoints.length; i++) {\n            res.push(this.getControlPoint(i));\n        }\n        return res;\n    }\n    getEndPoint() {\n        return this.getControlPoint(-1);\n    }\n    getStartPoint() {\n        return this.getControlPoint(0);\n    }\n    addToSubSelection(...subIDs) {\n        this.controlCage.addToSubSelection(...subIDs);\n    }\n    removeFromSubSelection(...subIDs) {\n        this.controlCage.removeFromSubSelection(...subIDs);\n    }\n    isSubSelected(subID) {\n        return this.controlCage.isSubSelected(subID);\n    }\n    hasSubSelection() {\n        return this.controlCage.hasSubSelection();\n    }\n    clearSubSelection() {\n        this.controlCage.clearSubSelection();\n    }\n    getSubSelectionBoundingBox() {\n        return this.controlCage.getSubSelectionBoundingBox();\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        return this.controlCage.getWithinFrustumSub(frustum, inclusive);\n    }\n    onSelectionMoved() {\n        if (this.controlCage.hasSubSelection()) {\n            const newVerts = this.controlCage.getVertsSubSelectionTransformed();\n            this.weightedControlPoints = this.weightedControlPoints.map((p, index) => {\n                const newVert = newVerts[index];\n                return wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create(newVert[0] * p[3], newVert[1] * p[3], newVert[2] * p[3], p[3]);\n            });\n            this.updateSamples(false);\n        }\n    }\n    bakeSelectionTransform() {\n        if (this.isSelected()) {\n            this.model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform(), this.model);\n        }\n        this.controlCage.bakeSelectionTransform();\n    }\n    getU(intersection) {\n        const uBefore = this.uPerSample[intersection.objectSubID];\n        const uAfter = this.uPerSample[intersection.objectSubID + 1];\n        const pBefore = this.sample(uBefore);\n        const pAfter = this.sample(uAfter);\n        const dBefore = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.distance(pBefore, intersection.point);\n        const dAfter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.distance(pAfter, intersection.point);\n        const ratio = dBefore / (dBefore + dAfter);\n        return ratio * uAfter + (1 - ratio) * uBefore;\n    }\n    clone() {\n        const res = new Curve(this.parent, (0,_utils_clone__WEBPACK_IMPORTED_MODULE_2__.cloneVec4List)(this.weightedControlPoints), this.degree, [...this.knots], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.clone(this.model), this.materialName);\n        if (!this.controlCage.isHidden()) {\n            res.showControls(true);\n        }\n        return res;\n    }\n    delete() {\n        this.controlCage.delete();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.lines);\n    }\n    getKnots() {\n        return this.knots;\n    }\n    getWeightedControlPoints() {\n        return this.weightedControlPoints;\n    }\n    getKnotCount() {\n        return this.knots.length;\n    }\n    intersect(ray, sub) {\n        if (this.isHidden())\n            return null;\n        let intersection = null;\n        intersection = this.controlCage.intersect(ray, sub);\n        if (intersection) {\n            intersection.description = \"control cage\";\n            intersection.geometry = this;\n            return intersection;\n        }\n        intersection = this.linesBBH.almostIntersect(ray, 10);\n        if (intersection) {\n            intersection.description = \"curve\";\n            intersection.geometry = this;\n            return intersection;\n        }\n        return intersection;\n    }\n    getBoundingBox() {\n        return this.controlCage.getBoundingBox();\n    }\n    getDegree() {\n        return this.degree;\n    }\n    addControlPoint(point, weight) {\n        this.weightedControlPoints.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create(...point, weight));\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    updateLastControlPoint(point, weight) {\n        this.weightedControlPoints[this.weightedControlPoints.length - 1] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create(...point, weight);\n        this.updateSamples();\n    }\n    removeLastControlPoint() {\n        this.weightedControlPoints.pop();\n        if (this.degree === this.weightedControlPoints.length)\n            this.degree--;\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    changeDegree(degree) {\n        while (degree >= this.weightedControlPoints.length)\n            degree--;\n        this.degree = degree;\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    getControlPointCount() {\n        return this.weightedControlPoints.length;\n    }\n    updateSamples(updateCage = true) {\n        var _a, _b, _c;\n        const cagePreviouslyShowing = (_b = !((_a = this.controlCage) === null || _a === void 0 ? void 0 : _a.isHidden())) !== null && _b !== void 0 ? _b : false;\n        if (updateCage)\n            (_c = this.controlCage) === null || _c === void 0 ? void 0 : _c.delete();\n        if (this.lines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.lines);\n        this.uPerSample = [];\n        const sampleCount = Curve.SAMPLES_PER_EDGE * (this.weightedControlPoints.length - 1);\n        const samples = [];\n        const indices = [];\n        const subSelection = [];\n        for (let i = 0; i <= sampleCount; i++) {\n            const u = (i / sampleCount) * this.knots.at(-1);\n            this.uPerSample.push(u);\n            samples.push(this.sample(u));\n            subSelection.push(false);\n            indices.push(i, i + 1);\n        }\n        indices.pop();\n        indices.pop();\n        const controlPointArray = this.weightedControlPoints.map((point) => {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(point[0] / point[3], point[1] / point[3], point[2] / point[3]);\n        });\n        this.lines = new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(this, samples, indices, subSelection);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(this.lines);\n        this.linesBBH = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_5__.LineBoundingBoxHeirarchy(this, samples, indices);\n        if (updateCage)\n            this.controlCage = new _controlCage1D__WEBPACK_IMPORTED_MODULE_3__.ControlCage1D(this, controlPointArray);\n        if (cagePreviouslyShowing)\n            this.controlCage.show();\n    }\n    sample(u) {\n        const knotSpan = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.span)(this.knots, u, this.degree);\n        const funcs = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.basisFuncs)(this.knots, u, this.degree);\n        let res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create(0, 0, 0, 0);\n        for (let i = 0; i <= this.degree; i++) {\n            res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.add(res, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(this.weightedControlPoints[knotSpan - this.degree + i], funcs[i]));\n        }\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(res[0] / res[3], res[1] / res[3], res[2] / res[3]);\n    }\n    normalizeKnots() {\n        const start = this.knots[0];\n        const end = this.knots[this.knots.length - 1];\n        const dist = end - start;\n        for (let i = 0; i < this.knots.length; i++) {\n            this.knots[i] = (this.knots[i] - start) / dist;\n        }\n    }\n    insertKnot(knot) {\n        console.log(\"insserting knot at\", knot);\n        console.log(\"knots before\", ...this.knots);\n        const idx = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.span)(this.knots, knot, this.degree);\n        const newWeightedControlPoints = [];\n        newWeightedControlPoints.push(this.weightedControlPoints[0]);\n        for (let i = 1; i < this.weightedControlPoints.length; i++) {\n            let alpha;\n            if (i <= idx - this.degree)\n                alpha = 1;\n            else if (i >= idx + 1)\n                alpha = 0;\n            else\n                alpha = (knot - this.knots[i]) / (this.knots[i + this.degree] - this.knots[i]);\n            newWeightedControlPoints.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(this.weightedControlPoints[i], alpha), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(this.weightedControlPoints[i - 1], 1 - alpha)));\n        }\n        newWeightedControlPoints.push(this.weightedControlPoints[this.weightedControlPoints.length - 1]);\n        this.weightedControlPoints = newWeightedControlPoints;\n        this.knots.push(knot);\n        this.knots.sort();\n        console.log(\"knots after\", ...this.knots);\n        this.updateSamples();\n    }\n    getTypeName() {\n        return \"Curve\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.linesBBH.isWithinFrustum(frustum, inclusive) ||\n            (!this.controlCage.isHidden() && this.controlCage.isWithinFrustum(frustum, inclusive));\n    }\n    elevateDegree(n) {\n        // TODO: clean up\n        const newDegree = this.degree + n;\n        const bezierAlphas = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.calcBezierAlphas)(this.degree, newDegree);\n        const bezierControls = [];\n        for (let i = 0; i < this.degree + 1; i++)\n            bezierControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create());\n        const elevatedBezierControls = [];\n        for (let i = 0; i < this.degree + n + 1; i++)\n            elevatedBezierControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create());\n        const nextBezierControls = [];\n        const alphas = [];\n        for (let i = 0; i < this.degree - 1; i++) {\n            nextBezierControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create());\n            alphas.push(0);\n        }\n        let distinctKnots = 1;\n        for (let i = 1; i < this.knots.length; i++) {\n            if (this.knots[i] != this.knots[i - 1])\n                distinctKnots++;\n        }\n        const newControlPoints = [];\n        for (let i = 0; i < this.weightedControlPoints.length + n * (distinctKnots - 1); i++) {\n            newControlPoints.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create());\n        }\n        const newKnots = [];\n        for (let i = 0; i < this.knots.length + n * distinctKnots; i++)\n            newKnots.push(0);\n        // Initialize First Segment\n        let mh = newDegree;\n        let kind = newDegree + 1;\n        let r = -1;\n        let a = this.degree;\n        let b = this.degree + 1;\n        let cind = 1;\n        let ua = this.knots[0];\n        newControlPoints[0] = this.weightedControlPoints[0];\n        for (let i = 0; i <= newDegree; i++)\n            newKnots[i] = ua;\n        for (let i = 0; i <= this.degree; i++)\n            bezierControls[i] = this.weightedControlPoints[i];\n        //main loop\n        while (b < this.knots.length - 1) {\n            const IDK = b;\n            while (b < this.knots.length - 1 && this.knots[b] == this.knots[b + 1])\n                b++;\n            const mul = b - IDK + 1;\n            mh += mul + n;\n            const ub = this.knots[b];\n            const oldr = r;\n            r = this.degree - mul;\n            const lbz = (oldr > 0) ? Math.floor((oldr + 2) / 2) : 1;\n            const rbz = (r > 0) ? newDegree - Math.floor((r + 1) / 2) : newDegree;\n            // insert knots  \n            if (r > 0) {\n                const num = ub - ua;\n                for (let k = this.degree; k > mul; k--)\n                    alphas[k - mul - 1] = num / (this.knots[a + k] - ua);\n                for (let j = 1; j <= r; j++) {\n                    const save = r - j;\n                    const s = mul + j;\n                    for (let k = this.degree; k >= s; k--) {\n                        bezierControls[k] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(bezierControls[k], alphas[k - s]), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(bezierControls[k - 1], 1 - alphas[k - s]));\n                    }\n                    nextBezierControls[save] = bezierControls[this.degree];\n                }\n            }\n            // Elevate Bezier \n            for (let i = lbz; i <= newDegree; i++) {\n                elevatedBezierControls[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.create(0, 0, 0, 0);\n                for (let j = Math.max(0, i - n); j <= Math.min(this.degree, i); j++) {\n                    elevatedBezierControls[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.add(elevatedBezierControls[i], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(bezierControls[j], bezierAlphas[i][j]));\n                }\n            }\n            //  Remove knots\n            if (oldr > 1) {\n                var first = kind - 2;\n                var last = kind;\n                const den = ub - ua;\n                const bet = (ub - newKnots[kind - 1]) / den;\n                for (let tr = 1; tr < oldr; tr++) {\n                    let i = first;\n                    let j = last;\n                    let kj = j - kind + 1;\n                    while (j - i > tr) {\n                        if (i < cind) {\n                            const alf = (ub - newKnots[i]) / (ua - newKnots[i]);\n                            newControlPoints[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(newControlPoints[i], alf), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(newControlPoints[i - 1], 1 - alf));\n                        }\n                        if (j >= lbz) {\n                            if (j - tr <= kind - newDegree - oldr) {\n                                const gam = (ub - newKnots[j - tr]) / den;\n                                elevatedBezierControls[kj] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(elevatedBezierControls[kj], gam), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(elevatedBezierControls[kj + 1], 1 - gam));\n                            }\n                            else {\n                                elevatedBezierControls[kj] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(elevatedBezierControls[kj], bet), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec4.scale(elevatedBezierControls[kj + 1], 1 - bet));\n                            }\n                        }\n                        i++;\n                        j--;\n                        kj--;\n                    }\n                    first--;\n                    last++;\n                }\n            }\n            if (a != this.degree) {\n                for (let i = 0; i < newDegree - oldr; i++) {\n                    newKnots[kind++] = ua;\n                }\n            }\n            for (let j = lbz; j <= rbz; j++) {\n                newControlPoints[cind++] = elevatedBezierControls[j];\n            }\n            if (b < this.knots.length - 1) {\n                for (let j = 0; j < r; j++)\n                    bezierControls[j] = nextBezierControls[j];\n                for (let j = r; j <= this.degree; j++) {\n                    bezierControls[j] = this.weightedControlPoints[b - this.degree + j];\n                }\n                a = b++;\n                ua = ub;\n            }\n            else {\n                for (let i = 0; i <= newDegree; i++) {\n                    newKnots[kind + i] = ub;\n                }\n            }\n        }\n        this.weightedControlPoints = newControlPoints;\n        this.knots = newKnots;\n        this.degree = newDegree;\n        this.updateSamples();\n    }\n}\nCurve.SAMPLES_PER_EDGE = 20;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/curve.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/loft.ts":
/*!************************************!*\
  !*** ./src/geometry/nurbs/loft.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loft: () => (/* binding */ loft)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _surface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./surface */ \"./src/geometry/nurbs/surface.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/geometry/nurbs/utils.ts\");\n\n\n\nconst loft = function (curves, degree) {\n    const duplicates = [];\n    for (const c of curves)\n        duplicates.push(c.clone());\n    const degreeU = Math.min(degree, duplicates.length - 1);\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.matchDegrees)(duplicates);\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.matchKnots)(duplicates);\n    let degreeV = duplicates[0].getDegree();\n    const points = [];\n    for (let i = 0; i < duplicates.length; i++) {\n        const curve = duplicates[i];\n        const curveControls = curve.getWeightedControlPoints();\n        points.push([]);\n        for (let j = 0; j < curveControls.length; j++) {\n            const model = curve.getModelRecursive();\n            const weight = curveControls[j][3];\n            var point = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(curveControls[j][0] / weight, curveControls[j][1] / weight, curveControls[j][2] / weight);\n            point = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.transformMat4(point, model);\n            points[i].push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(point[0] * weight, point[1] * weight, point[2] * weight, weight));\n        }\n    }\n    const knotsU = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.genericKnotVector)(duplicates.length, degreeU);\n    const res = new _surface__WEBPACK_IMPORTED_MODULE_0__.Surface(points, knotsU, duplicates[0].getKnots(), degreeU, degreeV);\n    for (const c of duplicates)\n        c.delete();\n    return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvbnVyYnMvbG9mdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJEO0FBRXZCO0FBQ2tDO0FBSy9ELE1BQU0sSUFBSSxHQUFHLFVBQVMsTUFBZSxFQUFFLE1BQWM7SUFFMUQsTUFBTSxVQUFVLEdBQVksRUFBRSxDQUFDO0lBQy9CLEtBQUssTUFBTSxDQUFDLElBQUksTUFBTTtRQUFFLFVBQVUsQ0FBQyxJQUFJLENBQVEsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFFMUQsTUFBTSxPQUFPLEdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNoRSxvREFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3pCLGtEQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdkIsSUFBSSxPQUFPLEdBQVcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBRWhELE1BQU0sTUFBTSxHQUFhLEVBQUUsQ0FBQztJQUM1QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMxQyxNQUFNLEtBQUssR0FBVSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkMsTUFBTSxhQUFhLEdBQVcsS0FBSyxDQUFDLHdCQUF3QixFQUFFLENBQUM7UUFDL0QsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNoQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM3QyxNQUFNLEtBQUssR0FBUyxLQUFLLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUM5QyxNQUFNLE1BQU0sR0FBVyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0MsSUFBSSxLQUFLLEdBQVMsNkNBQUksQ0FBQyxNQUFNLENBQzNCLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEVBQzVCLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEVBQzVCLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQzdCLENBQUM7WUFDRixLQUFLLEdBQUcsNkNBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3pDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsNkNBQUksQ0FBQyxNQUFNLENBQ3hCLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEVBQ2pCLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEVBQ2pCLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEVBQ2pCLE1BQU0sQ0FDUCxDQUFDLENBQUM7U0FDSjtLQUNGO0lBRUQsTUFBTSxNQUFNLEdBQWEseURBQWlCLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV2RSxNQUFNLEdBQUcsR0FBWSxJQUFJLDZDQUFPLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTdGLEtBQUssTUFBTSxDQUFDLElBQUksVUFBVTtRQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUV2QyxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9udXJicy9sb2Z0LnRzP2U1NDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0NCwgVmVjMywgdmVjMywgdmVjNCwgVmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgQ3VydmUgfSBmcm9tIFwiLi9jdXJ2ZVwiO1xuaW1wb3J0IHsgU3VyZmFjZSB9IGZyb20gXCIuL3N1cmZhY2VcIjtcbmltcG9ydCB7IGdlbmVyaWNLbm90VmVjdG9yLCBtYXRjaERlZ3JlZXMsIG1hdGNoS25vdHMgfSBmcm9tIFwiLi91dGlsc1wiO1xuXG5cblxuXG5leHBvcnQgY29uc3QgbG9mdCA9IGZ1bmN0aW9uKGN1cnZlczogQ3VydmVbXSwgZGVncmVlOiBudW1iZXIpOiBTdXJmYWNlIHtcblxuICBjb25zdCBkdXBsaWNhdGVzOiBDdXJ2ZVtdID0gW107XG4gIGZvciAoY29uc3QgYyBvZiBjdXJ2ZXMpIGR1cGxpY2F0ZXMucHVzaCg8Q3VydmU+Yy5jbG9uZSgpKTtcblxuICBjb25zdCBkZWdyZWVVOiBudW1iZXIgPSBNYXRoLm1pbihkZWdyZWUsIGR1cGxpY2F0ZXMubGVuZ3RoIC0gMSk7XG4gIG1hdGNoRGVncmVlcyhkdXBsaWNhdGVzKTtcbiAgbWF0Y2hLbm90cyhkdXBsaWNhdGVzKTtcbiAgbGV0IGRlZ3JlZVY6IG51bWJlciA9IGR1cGxpY2F0ZXNbMF0uZ2V0RGVncmVlKCk7XG5cbiAgY29uc3QgcG9pbnRzOiBWZWM0W11bXSA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGR1cGxpY2F0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBjdXJ2ZTogQ3VydmUgPSBkdXBsaWNhdGVzW2ldO1xuICAgIGNvbnN0IGN1cnZlQ29udHJvbHM6IFZlYzRbXSA9IGN1cnZlLmdldFdlaWdodGVkQ29udHJvbFBvaW50cygpO1xuICAgIHBvaW50cy5wdXNoKFtdKTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGN1cnZlQ29udHJvbHMubGVuZ3RoOyBqKyspIHtcbiAgICAgIGNvbnN0IG1vZGVsOiBNYXQ0ID0gY3VydmUuZ2V0TW9kZWxSZWN1cnNpdmUoKTtcbiAgICAgIGNvbnN0IHdlaWdodDogbnVtYmVyID0gY3VydmVDb250cm9sc1tqXVszXTtcbiAgICAgIHZhciBwb2ludDogVmVjMyA9IHZlYzMuY3JlYXRlKFxuICAgICAgICBjdXJ2ZUNvbnRyb2xzW2pdWzBdIC8gd2VpZ2h0LFxuICAgICAgICBjdXJ2ZUNvbnRyb2xzW2pdWzFdIC8gd2VpZ2h0LFxuICAgICAgICBjdXJ2ZUNvbnRyb2xzW2pdWzJdIC8gd2VpZ2h0LFxuICAgICAgKTtcbiAgICAgIHBvaW50ID0gdmVjMy50cmFuc2Zvcm1NYXQ0KHBvaW50LCBtb2RlbCk7XG4gICAgICBwb2ludHNbaV0ucHVzaCh2ZWM0LmNyZWF0ZShcbiAgICAgICAgcG9pbnRbMF0gKiB3ZWlnaHQsXG4gICAgICAgIHBvaW50WzFdICogd2VpZ2h0LFxuICAgICAgICBwb2ludFsyXSAqIHdlaWdodCxcbiAgICAgICAgd2VpZ2h0XG4gICAgICApKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBrbm90c1U6IG51bWJlcltdID0gZ2VuZXJpY0tub3RWZWN0b3IoZHVwbGljYXRlcy5sZW5ndGgsIGRlZ3JlZVUpO1xuXG4gIGNvbnN0IHJlczogU3VyZmFjZSA9IG5ldyBTdXJmYWNlKHBvaW50cywga25vdHNVLCBkdXBsaWNhdGVzWzBdLmdldEtub3RzKCksIGRlZ3JlZVUsIGRlZ3JlZVYpO1xuXG4gIGZvciAoY29uc3QgYyBvZiBkdXBsaWNhdGVzKSBjLmRlbGV0ZSgpO1xuXG4gIHJldHVybiByZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/loft.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/revolve.ts":
/*!***************************************!*\
  !*** ./src/geometry/nurbs/revolve.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   revolve: () => (/* binding */ revolve)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _surface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./surface */ \"./src/geometry/nurbs/surface.ts\");\n\n\n\nconst revolve = function (axis, curve, theta) {\n    if (theta < 0 || theta > Math.PI * 2)\n        throw new Error(\"Invalid params\");\n    const outKnots = [];\n    var narcs;\n    if (theta <= Math.PI / 2) {\n        narcs = 1;\n        outKnots.push(0, 0, 0, 1, 1, 1);\n    }\n    else if (theta <= Math.PI) {\n        narcs = 2;\n        outKnots.push(0, 0, 0, 0.5, 0.5, 1, 1, 1);\n    }\n    else if (theta <= 3 * Math.PI / 2) {\n        narcs = 3;\n        outKnots.push(0, 0, 0, 1 / 3, 1 / 3, 2 / 3, 2 / 3, 1, 1, 1);\n    }\n    else {\n        narcs = 4;\n        outKnots.push(0, 0, 0, 1 / 4, 1 / 4, 2 / 4, 2 / 4, 3 / 4, 3 / 4, 1, 1, 1);\n    }\n    const outControls = [];\n    const outWeights = [];\n    for (let i = 0; i <= 2 * narcs; i++) {\n        outControls.push([]);\n        outWeights.push([]);\n    }\n    const dTheta = theta / narcs;\n    const wm = Math.cos(dTheta / 2);\n    const cosCash = [];\n    const sinCash = [];\n    for (let i = 0, angle = 0; i < narcs; i++) {\n        angle += dTheta;\n        cosCash.push(Math.cos(angle));\n        sinCash.push(Math.sin(angle));\n    }\n    const model = curve.getModelRecursive();\n    const points = [];\n    const weights = [];\n    for (const point of curve.getWeightedControlPoints()) {\n        weights.push(point[3]);\n        const p = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(point[0] / point[3], point[1] / point[3], point[2] / point[3]);\n        points.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.transformMat4(p, model));\n    }\n    for (let j = 0; j < points.length; j++) {\n        var P0 = points[j];\n        const W0 = weights[j];\n        const O = axis.closestPointToPoint(P0);\n        if (isNaN(O[0]))\n            alert(1);\n        var X = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(P0, O);\n        const r = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.length(X);\n        if (X[0] === 0 && X[1] === 0 && X[2] === 0) {\n            X = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(1, 0, 0);\n        }\n        else {\n            X = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(X, 1 / r);\n        }\n        const Y = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.cross(axis.getDirection(), X);\n        if (isNaN(Y[0]))\n            alert(2);\n        outControls[0].push(P0);\n        outWeights[0].push(W0);\n        var T0 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.clone(Y);\n        var index = 0;\n        for (let i = 0; i < narcs; i++) {\n            const P2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(O, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(X, r * cosCash[i]), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(Y, r * sinCash[i])));\n            if (isNaN(P2[0]))\n                alert(3);\n            const T2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(Y, cosCash[i]), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(X, sinCash[i]));\n            if (isNaN(T2[0]))\n                alert(4);\n            const ray = new _ray__WEBPACK_IMPORTED_MODULE_0__.Ray(P0, T0);\n            outControls[index + 1].push(ray.closestPointOnLine(P2, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(P2, T2)));\n            outWeights[index + 1].push(wm * weights[j]);\n            outControls[index + 2].push(P2);\n            outWeights[index + 2].push(weights[j]);\n            index += 2;\n            if (i < narcs - 1) {\n                P0 = P2;\n                T0 = T2;\n            }\n        }\n    }\n    const outWeightedControls = [];\n    for (let i = 0; i < outControls.length; i++) {\n        const temp = [];\n        for (let j = 0; j < outControls[0].length; j++) {\n            temp.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(...wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(outControls[i][j], outWeights[i][j]), outWeights[i][j]));\n            if (isNaN(outWeights[i][j])) {\n                alert(5);\n            }\n            if (isNaN(outControls[i][j][0])) {\n                alert(6);\n            }\n        }\n        outWeightedControls.push(temp);\n    }\n    return new _surface__WEBPACK_IMPORTED_MODULE_1__.Surface(outWeightedControls, outKnots, [...curve.getKnots()], 2, curve.getDegree());\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/revolve.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/sphere.ts":
/*!**************************************!*\
  !*** ./src/geometry/nurbs/sphere.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSphere: () => (/* binding */ createSphere)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arc */ \"./src/geometry/nurbs/arc.ts\");\n/* harmony import */ var _revolve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./revolve */ \"./src/geometry/nurbs/revolve.ts\");\n\n\n\n\nconst createSphere = function (center, radius) {\n    const arc = (0,_arc__WEBPACK_IMPORTED_MODULE_1__.createArc)(center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0), radius, 0, Math.PI);\n    const res = (0,_revolve__WEBPACK_IMPORTED_MODULE_2__.revolve)(new _ray__WEBPACK_IMPORTED_MODULE_0__.Ray(center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), arc, Math.PI * 2);\n    arc.delete();\n    return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvbnVyYnMvc3BoZXJlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlDO0FBQ1o7QUFDSztBQUVFO0FBSTdCLE1BQU0sWUFBWSxHQUFHLFVBQVMsTUFBWSxFQUFFLE1BQWM7SUFFL0QsTUFBTSxHQUFHLEdBQVUsK0NBQVMsQ0FBQyxNQUFNLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JHLE1BQU0sR0FBRyxHQUFZLGlEQUFPLENBQUMsSUFBSSxxQ0FBRyxDQUFDLE1BQU0sRUFBRSw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdEYsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2IsT0FBTyxHQUFHLENBQUM7QUFFYixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvbnVyYnMvc3BoZXJlLnRzPzFmODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4uL3JheVwiO1xuaW1wb3J0IHsgY3JlYXRlQXJjIH0gZnJvbSBcIi4vYXJjXCI7XG5pbXBvcnQgeyBDdXJ2ZSB9IGZyb20gXCIuL2N1cnZlXCI7XG5pbXBvcnQgeyByZXZvbHZlIH0gZnJvbSBcIi4vcmV2b2x2ZVwiO1xuaW1wb3J0IHsgU3VyZmFjZSB9IGZyb20gXCIuL3N1cmZhY2VcIjtcblxuXG5leHBvcnQgY29uc3QgY3JlYXRlU3BoZXJlID0gZnVuY3Rpb24oY2VudGVyOiBWZWMzLCByYWRpdXM6IG51bWJlcik6IFN1cmZhY2Uge1xuXG4gIGNvbnN0IGFyYzogQ3VydmUgPSBjcmVhdGVBcmMoY2VudGVyLCB2ZWMzLmNyZWF0ZSgxLCAwLCAwKSwgdmVjMy5jcmVhdGUoMCwgMSwgMCksIHJhZGl1cywgMCwgTWF0aC5QSSk7XG4gIGNvbnN0IHJlczogU3VyZmFjZSA9IHJldm9sdmUobmV3IFJheShjZW50ZXIsIHZlYzMuY3JlYXRlKDEsIDAsIDApKSwgYXJjLCBNYXRoLlBJICogMik7XG4gIGFyYy5kZWxldGUoKTtcbiAgcmV0dXJuIHJlcztcblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/sphere.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/splitCurve.ts":
/*!******************************************!*\
  !*** ./src/geometry/nurbs/splitCurve.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitCurve: () => (/* binding */ splitCurve)\n/* harmony export */ });\n/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve */ \"./src/geometry/nurbs/curve.ts\");\n\nconst splitCurve = function (curve, u) {\n    const temp = curve.clone();\n    const knots = temp.getKnots();\n    let count = 0;\n    for (let knot of knots) {\n        if (knot === u)\n            count++;\n    }\n    for (let i = 0; i < temp.getDegree() - count; i++) {\n        temp.insertKnot(u);\n    }\n    let first = 0;\n    while (knots[first] != u)\n        first++;\n    const knots1 = knots.slice(0, first + curve.getDegree());\n    knots1.push(u);\n    const knots2 = [u, ...knots.slice(first, knots.length)];\n    for (let i = 1; i < knots2.length; i++) {\n        knots2[i] -= knots2[0];\n    }\n    const points = temp.getWeightedControlPoints();\n    const points1 = points.slice(0, knots1.length - curve.getDegree() - 1);\n    const points2 = points.slice(points1.length - 1, points.length);\n    temp.delete();\n    return [\n        new _curve__WEBPACK_IMPORTED_MODULE_0__.Curve(curve.getParent(), points1, curve.getDegree(), knots1, curve.getModel(), curve.getMaterial()),\n        new _curve__WEBPACK_IMPORTED_MODULE_0__.Curve(curve.getParent(), points2, curve.getDegree(), knots2, curve.getModel(), curve.getMaterial()),\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvbnVyYnMvc3BsaXRDdXJ2ZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUNnQztBQUV6QixNQUFNLFVBQVUsR0FBRyxVQUFTLEtBQVksRUFBRSxDQUFTO0lBRXhELE1BQU0sSUFBSSxHQUFpQixLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFFekMsTUFBTSxLQUFLLEdBQWEsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBRXhDLElBQUksS0FBSyxHQUFXLENBQUMsQ0FBQztJQUN0QixLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssRUFBRTtRQUFFLElBQUksSUFBSSxLQUFLLENBQUM7WUFBRSxLQUFLLEVBQUUsQ0FBQztLQUFFO0lBRXBELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxFQUFFLEdBQUcsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ2pELElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDcEI7SUFHRCxJQUFJLEtBQUssR0FBVyxDQUFDLENBQUM7SUFDdEIsT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUFFLEtBQUssRUFBRSxDQUFDO0lBR2xDLE1BQU0sTUFBTSxHQUFhLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEtBQUssR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNuRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRWYsTUFBTSxNQUFNLEdBQWEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNsRSxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN0QyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3hCO0lBR0QsTUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUM7SUFDdkQsTUFBTSxPQUFPLEdBQVcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0UsTUFBTSxPQUFPLEdBQVcsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFHeEUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBRWQsT0FBTztRQUNMLElBQUkseUNBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN2RyxJQUFJLHlDQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBRSxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDeEcsQ0FBQztBQUdKLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9udXJicy9zcGxpdEN1cnZlLnRzPzdkZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgQ3VydmUgfSBmcm9tIFwiLi9jdXJ2ZVwiO1xuXG5leHBvcnQgY29uc3Qgc3BsaXRDdXJ2ZSA9IGZ1bmN0aW9uKGN1cnZlOiBDdXJ2ZSwgdTogbnVtYmVyKTogW0N1cnZlLCBDdXJ2ZV0ge1xuXG4gIGNvbnN0IHRlbXA6IEN1cnZlID0gPEN1cnZlPmN1cnZlLmNsb25lKCk7XG5cbiAgY29uc3Qga25vdHM6IG51bWJlcltdID0gdGVtcC5nZXRLbm90cygpO1xuXG4gIGxldCBjb3VudDogbnVtYmVyID0gMDtcbiAgZm9yIChsZXQga25vdCBvZiBrbm90cykgeyBpZiAoa25vdCA9PT0gdSkgY291bnQrKzsgfVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGVtcC5nZXREZWdyZWUoKSAtIGNvdW50OyBpKyspIHtcbiAgICB0ZW1wLmluc2VydEtub3QodSk7XG4gIH1cblxuXG4gIGxldCBmaXJzdDogbnVtYmVyID0gMDtcbiAgd2hpbGUgKGtub3RzW2ZpcnN0XSAhPSB1KSBmaXJzdCsrO1xuXG5cbiAgY29uc3Qga25vdHMxOiBudW1iZXJbXSA9IGtub3RzLnNsaWNlKDAsIGZpcnN0ICsgY3VydmUuZ2V0RGVncmVlKCkpO1xuICBrbm90czEucHVzaCh1KTtcblxuICBjb25zdCBrbm90czI6IG51bWJlcltdID0gW3UsIC4uLmtub3RzLnNsaWNlKGZpcnN0LCBrbm90cy5sZW5ndGgpXTtcbiAgZm9yIChsZXQgaSA9IDE7IGkgPCBrbm90czIubGVuZ3RoOyBpKyspIHtcbiAgICBrbm90czJbaV0gLT0ga25vdHMyWzBdO1xuICB9XG5cblxuICBjb25zdCBwb2ludHM6IFZlYzRbXSA9IHRlbXAuZ2V0V2VpZ2h0ZWRDb250cm9sUG9pbnRzKCk7XG4gIGNvbnN0IHBvaW50czE6IFZlYzRbXSA9IHBvaW50cy5zbGljZSgwLCBrbm90czEubGVuZ3RoIC0gY3VydmUuZ2V0RGVncmVlKCkgLSAxKTtcbiAgY29uc3QgcG9pbnRzMjogVmVjNFtdID0gcG9pbnRzLnNsaWNlKHBvaW50czEubGVuZ3RoIC0gMSwgcG9pbnRzLmxlbmd0aCk7XG5cblxuICB0ZW1wLmRlbGV0ZSgpO1xuXG4gIHJldHVybiBbXG4gICAgbmV3IEN1cnZlKGN1cnZlLmdldFBhcmVudCgpLCBwb2ludHMxLCBjdXJ2ZS5nZXREZWdyZWUoKSwga25vdHMxLCBjdXJ2ZS5nZXRNb2RlbCgpLCBjdXJ2ZS5nZXRNYXRlcmlhbCgpKSxcbiAgICBuZXcgQ3VydmUoY3VydmUuZ2V0UGFyZW50KCksIHBvaW50czIsIGN1cnZlLmdldERlZ3JlZSgpLCBrbm90czIsIGN1cnZlLmdldE1vZGVsKCksIGN1cnZlLmdldE1hdGVyaWFsKCkpLFxuICBdO1xuXG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/splitCurve.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/surface.ts":
/*!***************************************!*\
  !*** ./src/geometry/nurbs/surface.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Surface: () => (/* binding */ Surface)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _utils_clone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/clone */ \"./src/utils/clone.ts\");\n/* harmony import */ var _controlCage2D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controlCage2D */ \"./src/geometry/controlCage2D.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mesh */ \"./src/geometry/mesh.ts\");\n/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ \"./src/geometry/nurbs/utils.ts\");\n\n\n\n\n\n\n\n\nclass Surface extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(weightedControlPoints, uKnots, vKnots, degreeU, degreeV, parent = null, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.identity(), material = null) {\n        super(parent, model, material);\n        this.weightedControlPoints = weightedControlPoints;\n        this.uKnots = uKnots;\n        this.vKnots = vKnots;\n        this.degreeU = degreeU;\n        this.degreeV = degreeV;\n        this.mesh = null;\n        this.controlCage = null;\n        this.update();\n    }\n    showControls(on) {\n        if (on)\n            this.controlCage.show();\n        else\n            this.controlCage.hide();\n    }\n    addToSubSelection(...subIDs) {\n        this.controlCage.addToSubSelection(...subIDs);\n    }\n    removeFromSubSelection(...subIDs) {\n        this.controlCage.removeFromSubSelection(...subIDs);\n    }\n    isSubSelected(subID) {\n        return this.controlCage.isSubSelected(subID);\n    }\n    hasSubSelection() {\n        return this.controlCage.hasSubSelection();\n    }\n    clearSubSelection() {\n        this.controlCage.clearSubSelection();\n    }\n    getSubSelectionBoundingBox() {\n        return this.controlCage.getSubSelectionBoundingBox();\n    }\n    getControlCage() {\n        return this.controlCage;\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        return this.controlCage.getWithinFrustumSub(frustum, inclusive);\n    }\n    onSelectionMoved() {\n        if (this.controlCage.hasSubSelection()) {\n            const newVerts = this.controlCage.getVertsSubSelectionTransformed();\n            for (let i = 0; i < this.weightedControlPoints.length; i++) {\n                for (let j = 0; j < this.weightedControlPoints[0].length; j++) {\n                    const newVert = newVerts[i][j];\n                    const weight = this.weightedControlPoints[i][j][3];\n                    this.weightedControlPoints[i][j] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec4.create(newVert[0] * weight, newVert[1] * weight, newVert[2] * weight, weight);\n                }\n            }\n            this.update(false);\n        }\n    }\n    bakeSelectionTransform() {\n        if (this.isSelected()) {\n            this.model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform(), this.model);\n        }\n        this.controlCage.bakeSelectionTransform();\n    }\n    delete() {\n        var _a, _b;\n        (_a = this.mesh) === null || _a === void 0 ? void 0 : _a.delete();\n        (_b = this.controlCage) === null || _b === void 0 ? void 0 : _b.delete();\n    }\n    clone() {\n        const res = new Surface((0,_utils_clone__WEBPACK_IMPORTED_MODULE_1__.cloneVec4ListList)(this.weightedControlPoints), [...this.uKnots], [...this.vKnots], this.degreeU, this.degreeV, this.parent, wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.clone(this.model), this.materialName);\n        if (!this.controlCage.isHidden()) {\n            res.showControls(true);\n        }\n        return res;\n    }\n    getMesh() {\n        return this.mesh;\n    }\n    getBoundingBox() {\n        return this.controlCage.getBoundingBox();\n    }\n    intersect(ray, sub) {\n        if (this.isHidden())\n            return null;\n        let intersection = null;\n        intersection = this.controlCage.intersect(ray, sub);\n        if (intersection) {\n            intersection.description = \"control cage\";\n            intersection.geometry = this;\n            return intersection;\n        }\n        intersection = this.mesh.intersect(ray, sub);\n        if (intersection) {\n            intersection.description = \"surface\";\n            intersection.geometry = this;\n            return intersection;\n        }\n        return intersection;\n    }\n    getTypeName() {\n        return \"Surface\";\n    }\n    update(updateCage = true) {\n        var _a, _b;\n        if (updateCage)\n            (_a = this.controlCage) === null || _a === void 0 ? void 0 : _a.delete();\n        (_b = this.mesh) === null || _b === void 0 ? void 0 : _b.delete();\n        const sampleCountU = _curve__WEBPACK_IMPORTED_MODULE_5__.Curve.SAMPLES_PER_EDGE * (this.weightedControlPoints.length - 1);\n        const sampleCountV = _curve__WEBPACK_IMPORTED_MODULE_5__.Curve.SAMPLES_PER_EDGE * (this.weightedControlPoints[0].length - 1);\n        const firstKnotU = this.uKnots[0];\n        const firstKnotV = this.vKnots[0];\n        const knotSizeU = this.uKnots[this.uKnots.length - 1] - firstKnotU;\n        const knotSizeV = this.vKnots[this.vKnots.length - 1] - firstKnotV;\n        const stepU = knotSizeU / sampleCountU;\n        const stepV = knotSizeV / sampleCountV;\n        const meshVerts = [];\n        const meshNormals = [];\n        const meshIndices = [];\n        for (let i = 0; i <= sampleCountU; i++) {\n            for (let j = 0; j <= sampleCountV; j++) {\n                meshVerts.push(this.sample(firstKnotU + i * stepU, firstKnotV + j * stepV));\n            }\n        }\n        for (let i = 0; i < sampleCountU; i++) {\n            for (let j = 0; j < sampleCountV; j++) {\n                meshIndices.push(i * (sampleCountV + 1) + j);\n                meshIndices.push(i * (sampleCountV + 1) + j + 1);\n                meshIndices.push((i + 1) * (sampleCountV + 1) + j);\n                meshIndices.push(i * (sampleCountV + 1) + j + 1);\n                meshIndices.push((i + 1) * (sampleCountV + 1) + j + 1);\n                meshIndices.push((i + 1) * (sampleCountV + 1) + j);\n            }\n        }\n        for (let i = 0; i <= sampleCountU; i++) {\n            for (let j = 0; j <= sampleCountV; j++) {\n                const v1 = (i == 0)\n                    ? wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[(i + 1) * (sampleCountV + 1) + j])\n                    : wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[(i - 1) * (sampleCountV + 1) + j]);\n                const v2 = (j == 0)\n                    ? wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[i * (sampleCountV + 1) + j + 1])\n                    : wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[i * (sampleCountV + 1) + j - 1]);\n                var normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.cross(v1, v2));\n                if (i == 0)\n                    normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(normal, -1);\n                if (j == 0)\n                    normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(normal, -1);\n                meshNormals.push(normal);\n            }\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getStats().onTrianglesCreated(meshIndices.length / 3);\n        this.mesh = new _mesh__WEBPACK_IMPORTED_MODULE_4__.Mesh(this, meshVerts, meshNormals, meshIndices);\n        if (updateCage)\n            this.controlCage = new _controlCage2D__WEBPACK_IMPORTED_MODULE_2__.ControlCage2D(this, this.weightedControlPoints.map((points) => {\n                return points.map((point) => {\n                    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(point[0] / point[3], point[1] / point[3], point[2] / point[3]);\n                });\n            }));\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.mesh.isWithinFrustum(frustum, inclusive) ||\n            (!this.controlCage.isHidden() && this.controlCage.isWithinFrustum(frustum, inclusive));\n    }\n    sample(u, v) {\n        const uSpan = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.span)(this.uKnots, u, this.degreeU);\n        const vSpan = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.span)(this.vKnots, v, this.degreeV);\n        const basisFuncsU = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.basisFuncs)(this.uKnots, u, this.degreeU);\n        const basisFuncsV = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.basisFuncs)(this.vKnots, v, this.degreeV);\n        var res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec4.create(0, 0, 0, 0);\n        for (let i = 0; i <= this.degreeU; i++) {\n            for (let j = 0; j <= this.degreeV; j++) {\n                res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec4.add(res, wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec4.scale(this.weightedControlPoints[uSpan - this.degreeU + i][vSpan - this.degreeV + j], basisFuncsV[j] * basisFuncsU[i]));\n            }\n        }\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(res[0] / res[3], res[1] / res[3], res[2] / res[3]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/surface.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/utils.ts":
/*!*************************************!*\
  !*** ./src/geometry/nurbs/utils.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   basisFuncs: () => (/* binding */ basisFuncs),\n/* harmony export */   calcBezierAlphas: () => (/* binding */ calcBezierAlphas),\n/* harmony export */   genericKnotVector: () => (/* binding */ genericKnotVector),\n/* harmony export */   matchDegrees: () => (/* binding */ matchDegrees),\n/* harmony export */   matchKnots: () => (/* binding */ matchKnots),\n/* harmony export */   span: () => (/* binding */ span),\n/* harmony export */   toWeightedControlPoints: () => (/* binding */ toWeightedControlPoints)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n\n\nconst span = function (knots, u, p) {\n    const n = knots.length - p - 2;\n    let l = p;\n    let h = n;\n    let m;\n    while (l < h) {\n        m = Math.floor((l + h) / 2);\n        if (u >= knots[m + 1])\n            l = m + 1;\n        else\n            h = m;\n    }\n    return l;\n};\nconst basisFuncs = function (knots, u, p) {\n    const funcs = [1];\n    const i = span(knots, u, p);\n    const left = (i, j) => { return u - knots[i - j + 1]; };\n    const right = (i, j) => { return knots[i + j] - u; };\n    for (let j = 1; j <= p; j++) {\n        let saved = 0;\n        for (let r = 0; r < j; r++) {\n            const temp = funcs[r] / (right(i, r + 1) + left(i, j - r));\n            funcs[r] = saved + right(i, r + 1) * temp;\n            saved = left(i, j - r) * temp;\n        }\n        funcs.push(saved);\n    }\n    return funcs;\n};\nconst genericKnotVector = function (pointCount, degree) {\n    const res = [];\n    for (let i = 0; i <= degree; i++)\n        res.push(0);\n    for (let i = 1; i < pointCount - degree; i++)\n        res.push(i);\n    for (let i = 0; i <= degree; i++)\n        res.push(pointCount - degree);\n    return res;\n};\nconst toWeightedControlPoints = function (points, weights) {\n    const res = [];\n    if (weights) {\n        for (let i = 0; i < weights.length; i++) {\n            const point = points[i];\n            res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(point[0] * weights[i], point[1] * weights[i], point[2] * weights[i], weights[i]));\n        }\n    }\n    else {\n        for (let point of points) {\n            res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(...point, 1));\n        }\n    }\n    return res;\n};\nconst calcBezierAlphas = function (startDegree, endDegree) {\n    const bezierAlphas = [];\n    for (let i = 0; i < endDegree + 1; i++) {\n        const temp = [];\n        for (let j = 0; j < startDegree + 1; j++) {\n            temp.push(0);\n        }\n        bezierAlphas.push(temp);\n    }\n    bezierAlphas[0][0] = bezierAlphas[endDegree][startDegree] = 1;\n    for (let i = 1; i <= Math.floor(endDegree / 2); i++) {\n        const inv = 1 / (0,_utils_math__WEBPACK_IMPORTED_MODULE_0__.bin)(endDegree, i);\n        const mpi = Math.min(startDegree, i);\n        for (let j = Math.max(0, i - endDegree + startDegree); j <= mpi; j++)\n            bezierAlphas[i][j] = inv * (0,_utils_math__WEBPACK_IMPORTED_MODULE_0__.bin)(startDegree, j) * (0,_utils_math__WEBPACK_IMPORTED_MODULE_0__.bin)(endDegree - startDegree, i - j);\n    }\n    for (let i = Math.floor(endDegree / 2) + 1; i <= endDegree - 1; i++) {\n        const mpi = Math.min(startDegree, i);\n        for (let j = Math.max(0, i - endDegree + startDegree); j <= mpi; j++)\n            bezierAlphas[i][j] = bezierAlphas[endDegree - i][startDegree - j];\n    }\n    return bezierAlphas;\n};\nconst equals = function (a, b, e = 0.000001) { return Math.abs(a - b) < e; };\nconst matchDegrees = function (curves) {\n    let maxDegree = 0;\n    for (let curve of curves)\n        maxDegree = Math.max(maxDegree, curve.getDegree());\n    for (let curve of curves)\n        if (curve.getDegree() < maxDegree)\n            curve.elevateDegree(maxDegree - curve.getDegree());\n};\nconst matchKnots = function (curves) {\n    for (let curve of curves)\n        curve.normalizeKnots();\n    for (let i = 0; i < curves[0].getKnotCount(); i++) {\n        var smallest = Number.POSITIVE_INFINITY;\n        var finished = true;\n        for (let curve of curves) {\n            if (i < curve.getKnotCount()) {\n                finished = false;\n                smallest = Math.min(smallest, curve.getKnots()[i]);\n            }\n        }\n        if (finished)\n            break;\n        for (let curve of curves) {\n            if (!equals(curve.getKnots()[i], smallest))\n                curve.insertKnot(smallest);\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/utils.ts\n");

/***/ }),

/***/ "./src/geometry/plane.ts":
/*!*******************************!*\
  !*** ./src/geometry/plane.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Plane: () => (/* binding */ Plane)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass Plane {\n    constructor(origin, normal) {\n        this.origin = origin;\n        this.normal = normal;\n        this.normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.normalize(this.normal);\n    }\n    getOrigin() {\n        return this.origin;\n    }\n    getNormal() {\n        return this.normal;\n    }\n    getXY() {\n        // NOTE: could break, probably wont.\n        const perturbed = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.clone(this.normal);\n        perturbed[0] *= 0.043283;\n        perturbed[1] += 4.33423;\n        perturbed[2] /= 32.324;\n        const yAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.cross(perturbed, this.normal));\n        const xAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.cross(yAxis, this.getNormal());\n        return [xAxis, yAxis];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvcGxhbmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFHakMsTUFBTSxLQUFLO0lBRWhCLFlBQ1UsTUFBWSxFQUNaLE1BQVk7UUFEWixXQUFNLEdBQU4sTUFBTSxDQUFNO1FBQ1osV0FBTSxHQUFOLE1BQU0sQ0FBTTtRQUVwQixJQUFJLENBQUMsTUFBTSxHQUFHLDZDQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRU0sU0FBUztRQUNkLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRU0sU0FBUztRQUNkLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRU0sS0FBSztRQUNWLG9DQUFvQztRQUNwQyxNQUFNLFNBQVMsR0FBUyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEQsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQztRQUN6QixTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksT0FBTyxDQUFDO1FBQ3hCLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUM7UUFDdkIsTUFBTSxLQUFLLEdBQVMsNkNBQUksQ0FBQyxTQUFTLENBQUMsNkNBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3ZFLE1BQU0sS0FBSyxHQUFTLDZDQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUN4RCxPQUFPLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L3BsYW5lLnRzPzg2M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiXG5cblxuZXhwb3J0IGNsYXNzIFBsYW5lIHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIG9yaWdpbjogVmVjMyxcbiAgICBwcml2YXRlIG5vcm1hbDogVmVjM1xuICApIHtcbiAgICB0aGlzLm5vcm1hbCA9IHZlYzMubm9ybWFsaXplKHRoaXMubm9ybWFsKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRPcmlnaW4oKTogVmVjMyB7XG4gICAgcmV0dXJuIHRoaXMub3JpZ2luO1xuICB9XG5cbiAgcHVibGljIGdldE5vcm1hbCgpOiBWZWMzIHtcbiAgICByZXR1cm4gdGhpcy5ub3JtYWw7XG4gIH1cblxuICBwdWJsaWMgZ2V0WFkoKTogW1ZlYzMsIFZlYzNdIHtcbiAgICAvLyBOT1RFOiBjb3VsZCBicmVhaywgcHJvYmFibHkgd29udC5cbiAgICBjb25zdCBwZXJ0dXJiZWQ6IFZlYzMgPSB2ZWMzLmNsb25lKHRoaXMubm9ybWFsKTtcbiAgICBwZXJ0dXJiZWRbMF0gKj0gMC4wNDMyODM7XG4gICAgcGVydHVyYmVkWzFdICs9IDQuMzM0MjM7XG4gICAgcGVydHVyYmVkWzJdIC89IDMyLjMyNDtcbiAgICBjb25zdCB5QXhpczogVmVjMyA9IHZlYzMubm9ybWFsaXplKHZlYzMuY3Jvc3MocGVydHVyYmVkLCB0aGlzLm5vcm1hbCkpO1xuICAgIGNvbnN0IHhBeGlzOiBWZWMzID0gdmVjMy5jcm9zcyh5QXhpcywgdGhpcy5nZXROb3JtYWwoKSk7XG4gICAgcmV0dXJuIFt4QXhpcywgeUF4aXNdO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/plane.ts\n");

/***/ }),

/***/ "./src/geometry/pointBoundingBoxHeirarchy.ts":
/*!***************************************************!*\
  !*** ./src/geometry/pointBoundingBoxHeirarchy.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointBoundingBoxHeirarchy: () => (/* binding */ PointBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass PointBoundingBoxHeirarchyNode {\n    constructor(geometry, verts, indices, depth = 0) {\n        this.geometry = geometry;\n        this.verts = verts;\n        this.depth = depth;\n        this.setup(indices);\n    }\n    setup(indices) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        let average = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 0);\n        for (const index of indices) {\n            this.boundingBox.addVec3(this.verts[index]);\n            average = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(average, this.verts[index]);\n        }\n        average = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(average, 1 / (indices.length));\n        if (indices.length < PointBoundingBoxHeirarchy.MAX_POINTS_PER_LEAF ||\n            this.boundingBox.hasNoVolume()) {\n            this.indices = indices;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            this.indices = null;\n            var child1Indices = [];\n            var child2Indices = [];\n            for (const index of indices) {\n                if (this.verts[index][this.axis] < average[this.axis]) {\n                    child1Indices.push(index);\n                }\n                else {\n                    child2Indices.push(index);\n                }\n            }\n            if (child1Indices.length === 0 || child2Indices.length === 0) {\n                child1Indices = indices.slice(0, indices.length / 2);\n                child2Indices = indices.slice(indices.length / 2, -1);\n            }\n            this.child1 = new PointBoundingBoxHeirarchyNode(this.geometry, this.verts, child1Indices, this.depth + 1);\n            this.child2 = new PointBoundingBoxHeirarchyNode(this.geometry, this.verts, child2Indices, this.depth + 1);\n        }\n    }\n    almostIntersect(ray, pixels) {\n        if (ray.almostIntersectBoundingBox(this.boundingBox, pixels) === null) {\n            return null;\n        }\n        if (this.isLeaf()) {\n            let closestIntersection = null;\n            for (const index of this.indices) {\n                let intersection = ray.almostIntersectPoint(this.geometry, index, this.verts[index], pixels);\n                if (intersection !== null) {\n                    if (closestIntersection === null || intersection.screenSpaceDist < closestIntersection.screenSpaceDist) {\n                        closestIntersection = intersection;\n                    }\n                }\n            }\n            return closestIntersection;\n        }\n        else {\n            const t1 = this.child1.almostIntersect(ray, pixels);\n            const t2 = this.child2.almostIntersect(ray, pixels);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return (t1.time < t2.time) ? t1 : t2;\n        }\n    }\n    isLeaf() {\n        return this.indices !== null;\n    }\n    print() {\n        var str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.isLeaf()) {\n            str += this.indices.length.toString();\n            console.log(str);\n        }\n        else {\n            console.log(str);\n            this.child1.print();\n            this.child2.print();\n        }\n    }\n}\nclass PointBoundingBoxHeirarchy {\n    constructor(geometry, verts) {\n        this.geometry = geometry;\n        const indices = [];\n        for (let i = 0; i < verts.length; i++)\n            indices.push(i);\n        this.root = new PointBoundingBoxHeirarchyNode(this.geometry, verts, indices);\n    }\n    print() {\n        console.log(\"========point bbh========\");\n        this.root.print();\n        console.log(\"=========================\");\n    }\n    almostIntersect(ray, pixels) {\n        const model = this.geometry.getModelRecursive();\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_1__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(model));\n        var res = this.root.almostIntersect(objectSpaceRay, pixels);\n        res === null || res === void 0 ? void 0 : res.transform(model, objectSpaceRay);\n        return res;\n    }\n}\nPointBoundingBoxHeirarchy.MAX_POINTS_PER_LEAF = 5; // TODO: tune\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/pointBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/points.ts":
/*!********************************!*\
  !*** ./src/geometry/points.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POINT_INDICES: () => (/* binding */ POINT_INDICES),\n/* harmony export */   POINT_MODEL: () => (/* binding */ POINT_MODEL),\n/* harmony export */   POINT_VERTS: () => (/* binding */ POINT_VERTS),\n/* harmony export */   Points: () => (/* binding */ Points)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renterMeshInstanced */ \"./src/render/renterMeshInstanced.ts\");\n/* harmony import */ var _utils_clone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/clone */ \"./src/utils/clone.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pointBoundingBoxHeirarchy */ \"./src/geometry/pointBoundingBoxHeirarchy.ts\");\n\n\n\n\n\n\n\n\nconst POINT_VERTS = [\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(1, 0, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(0, 1, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(0, 0, 1),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(-1, 0, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(0, -1, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.create(0, 0, -1),\n];\nconst POINT_INDICES = [\n    0, 1, 2,\n    0, 2, 4,\n    0, 4, 5,\n    0, 5, 1,\n    3, 1, 5,\n    3, 5, 4,\n    3, 4, 2,\n    3, 2, 1,\n];\nconst POINT_MODEL = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.uniformScaling(0.01);\nconst controlPointModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.uniformScaling(0.01);\nclass Points extends _geometry__WEBPACK_IMPORTED_MODULE_5__.Geometry {\n    constructor(parent, verts, model, material = null) {\n        super(parent, model, material);\n        this.verts = verts;\n        this.pointBBH = new _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_6__.PointBoundingBoxHeirarchy(this, this.verts);\n        this.subSelection = [];\n        for (let i = 0; i < this.verts.length; i++)\n            this.subSelection.push(false);\n        this.subSelectionCount = 0;\n        const transforms = [];\n        for (const vert of this.verts) {\n            transforms.push((0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.swizzleYZ)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.translation(vert), POINT_MODEL)));\n        }\n        this.points = new _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_1__.RenderMeshInstanced(this, POINT_VERTS, POINT_VERTS, POINT_INDICES, transforms, this.subSelection, true);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderMeshInstanced(this.points);\n    }\n    getBoundingBox() {\n        const res = new _boundingBox__WEBPACK_IMPORTED_MODULE_4__.BoundingBox();\n        const model = this.getModelRecursive();\n        for (const vert of this.verts) {\n            res.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(vert, model));\n        }\n        return res;\n    }\n    getTypeName() {\n        return \"Points\";\n    }\n    intersect(ray, sub) {\n        if (this.isHidden())\n            return null;\n        return this.pointBBH.almostIntersect(ray, 10);\n    }\n    isWithinFrustum(frustum, inclusive) {\n        const bb = this.getBoundingBox();\n        if (frustum.containsBoundingBoxFully(bb)) {\n            return true;\n        }\n        if (!frustum.intersectsBoundingBox(bb)) {\n            return false;\n        }\n        const model = this.getModelRecursive();\n        for (const vert of this.verts) {\n            if (!frustum.containsPoint(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(vert, model))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    addToSubSelection(...subIDs) {\n        for (const subID of subIDs) {\n            if (!this.subSelection[subID]) {\n                this.subSelectionCount++;\n                this.subSelection[subID] = true;\n            }\n        }\n        this.points.updateSubSelection(this.subSelection);\n    }\n    removeFromSubSelection(...subIDs) {\n        for (const subID of subIDs) {\n            if (this.subSelection[subID]) {\n                this.subSelectionCount--;\n                this.subSelection[subID] = false;\n            }\n        }\n        this.points.updateSubSelection(this.subSelection);\n    }\n    clearSubSelection() {\n        for (let i = 0; i < this.subSelection.length; i++) {\n            this.subSelection[i] = false;\n        }\n        this.points.updateSubSelection(this.subSelection);\n    }\n    getWithinFrustumSub(frustum, _) {\n        if (this.isHidden())\n            return [];\n        const res = [];\n        const model = this.getModelRecursive();\n        for (let i = 0; i < this.verts.length; i++) {\n            if (frustum.containsPoint(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(this.verts[i], model))) {\n                res.push(i);\n            }\n        }\n        return res;\n    }\n    isSubSelected(subID) {\n        return this.subSelection[subID];\n    }\n    hasSubSelection() {\n        return this.subSelectionCount > 0;\n    }\n    getSubSelectionBoundingBox() {\n        const bb = new _boundingBox__WEBPACK_IMPORTED_MODULE_4__.BoundingBox();\n        if (this.subSelectionCount == 0)\n            return bb;\n        const model = this.getModelRecursive();\n        for (let i = 0; i < this.verts.length; i++) {\n            if (this.subSelection[i]) {\n                bb.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(this.verts[i], model));\n            }\n        }\n        return bb;\n    }\n    showControls(on) {\n    }\n    onSelectionMoved() {\n        if (this.subSelectionCount > 0) {\n            const subSelectionTransform = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform();\n            const newTranslations = [];\n            for (let i = 0; i < this.verts.length; i++) {\n                if (this.subSelection[i]) {\n                    newTranslations.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(this.verts[i], subSelectionTransform)));\n                }\n                else {\n                    newTranslations.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.translation(this.verts[i]));\n                }\n            }\n            this.points.updateTransforms(newTranslations);\n        }\n        else {\n            const model = this.getModelRecursive();\n            const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.getTranslation(model);\n            const modelNoTranslation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(translation, -1)), model);\n            this.points.updateTransforms(this.verts.map((pos) => {\n                return (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.swizzleYZ)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.translation(pos), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.inverse(modelNoTranslation), POINT_MODEL)));\n            }));\n        }\n    }\n    bakeSelectionTransform() {\n        if (this.subSelectionCount > 0) {\n            const subSelectionTransform = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform();\n            const newVerts = [];\n            for (let i = 0; i < this.verts.length; i++) {\n                let newVert;\n                if (this.subSelection[i]) {\n                    newVert = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.transformMat4(this.verts[i], subSelectionTransform);\n                }\n                else {\n                    newVert = this.verts[i];\n                }\n                newVerts.push(newVert);\n            }\n            this.verts = newVerts;\n            this.pointBBH = new _pointBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_6__.PointBoundingBoxHeirarchy(this, this.verts);\n        }\n        else {\n            const model = this.getModelRecursive();\n            const translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.getTranslation(model);\n            const modelNoTranslation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.vec3.scale(translation, -1)), model);\n            this.points.updateTransforms(this.verts.map((pos) => {\n                return (0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.swizzleYZ)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.translation(pos), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.inverse(modelNoTranslation), POINT_MODEL)));\n            }));\n        }\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeMeshInstanced(this.points);\n    }\n    clone() {\n        return new Points(this.parent, (0,_utils_clone__WEBPACK_IMPORTED_MODULE_2__.cloneVec3List)(this.verts), wgpu_matrix__WEBPACK_IMPORTED_MODULE_7__.mat4.clone(this.model), this.materialName);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/points.ts\n");

/***/ }),

/***/ "./src/geometry/ray.ts":
/*!*****************************!*\
  !*** ./src/geometry/ray.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ray: () => (/* binding */ Ray)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _intersection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intersection */ \"./src/geometry/intersection.ts\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plane */ \"./src/geometry/plane.ts\");\n\n\n\n\nclass Ray {\n    constructor(origin, direction) {\n        this.origin = origin;\n        this.direction = direction;\n        this.direction = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(this.direction);\n    }\n    print() {\n        console.log(`RAY: origin: ${this.origin.toString()}, direction: ${this.direction.map((n) => {\n            return Math.round(n * 100);\n        }).toString()}`);\n    }\n    getOrigin() {\n        return this.origin;\n    }\n    getDirection() {\n        return this.direction;\n    }\n    at(time) {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.direction, time));\n    }\n    intersectPlane(plane, allowNegative = false) {\n        const numerator = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(plane.getOrigin(), this.origin), plane.getNormal());\n        const denominator = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.direction, plane.getNormal());\n        if (denominator === 0) { // parallel case\n            // NOTE: might need to look into this\n            return null;\n        }\n        const t = numerator / denominator;\n        if (allowNegative)\n            return t;\n        if (t < 0)\n            return null;\n        return t;\n    }\n    almostIntersectBoundingBox(bb, pixels) {\n        var _a, _b, _c, _d, _e, _f;\n        const dxMin = Math.abs(this.origin[0] - bb.getXMin());\n        const dyMin = Math.abs(this.origin[1] - bb.getYMin());\n        const dzMin = Math.abs(this.origin[2] - bb.getZMin());\n        const dxMax = Math.abs(this.origin[0] - bb.getXMax());\n        const dyMax = Math.abs(this.origin[1] - bb.getYMax());\n        const dzMax = Math.abs(this.origin[2] - bb.getZMax());\n        const farthest = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(dxMin < dxMax ? bb.getXMax() : bb.getXMin(), dyMin < dyMax ? bb.getYMax() : bb.getYMin(), dzMin < dzMax ? bb.getZMax() : bb.getZMin());\n        const dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(this.origin, farthest);\n        const maxDist = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().pixelSizeAtDist(dist) * pixels;\n        const min = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin() - maxDist, bb.getYMin() - maxDist, bb.getZMin() - maxDist);\n        const max = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax() + maxDist, bb.getYMax() + maxDist, bb.getZMax() + maxDist);\n        if (this.direction[0] < 0)\n            [min[0], max[0]] = [max[0], min[0]];\n        if (this.direction[1] < 0)\n            [min[1], max[1]] = [max[1], min[1]];\n        if (this.direction[2] < 0)\n            [min[2], max[2]] = [max[2], min[2]];\n        var xMin = (_a = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _a !== void 0 ? _a : -Infinity;\n        var yMin = (_b = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _b !== void 0 ? _b : -Infinity;\n        var zMin = (_c = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _c !== void 0 ? _c : -Infinity;\n        var xMax = (_d = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _d !== void 0 ? _d : Infinity;\n        var yMax = (_e = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _e !== void 0 ? _e : Infinity;\n        var zMax = (_f = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _f !== void 0 ? _f : Infinity;\n        const end = Math.min(xMax, Math.min(yMax, zMax));\n        const start = Math.max(xMin, Math.max(yMin, zMin));\n        if (end < 0 || start > end)\n            return null;\n        return Math.max(start, 0.00001); // so its truthy\n    }\n    // always posotive\n    intersectBoundingBox(bb) {\n        var _a, _b, _c, _d, _e, _f;\n        const min = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMin());\n        const max = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMax());\n        if (this.direction[0] < 0)\n            [min[0], max[0]] = [max[0], min[0]];\n        if (this.direction[1] < 0)\n            [min[1], max[1]] = [max[1], min[1]];\n        if (this.direction[2] < 0)\n            [min[2], max[2]] = [max[2], min[2]];\n        var xMin = (_a = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _a !== void 0 ? _a : -Infinity;\n        var yMin = (_b = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _b !== void 0 ? _b : -Infinity;\n        var zMin = (_c = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _c !== void 0 ? _c : -Infinity;\n        var xMax = (_d = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _d !== void 0 ? _d : Infinity;\n        var yMax = (_e = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _e !== void 0 ? _e : Infinity;\n        var zMax = (_f = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _f !== void 0 ? _f : Infinity;\n        const end = Math.min(xMax, Math.min(yMax, zMax));\n        const start = Math.max(xMin, Math.max(yMin, zMin));\n        if (end < 0 || start > end)\n            return null;\n        return Math.max(start, 0.00001); // so its truthy\n    }\n    intersectTriangle(p1, p2, p3) {\n        const v12 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p2, p1);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p3, p1);\n        const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(v12, v13));\n        const denom = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, this.direction);\n        if (denom === 0)\n            return null;\n        const t = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p1, this.origin), normal) / denom;\n        if (t < 0)\n            return null;\n        const point = this.at(t);\n        const d1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, p1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p2, p1)));\n        const d2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, p2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p3, p2)));\n        const d3 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, p3), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p1, p3)));\n        if (\n        // remove one of these lines for back face culling.\n        d1 > 0 && d2 > 0 && d3 > 0 ||\n            d1 < 0 && d2 < 0 && d3 < 0)\n            return t;\n        else\n            return null;\n    }\n    static transform(ray, mat) {\n        const newOrigin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...ray.origin, 1), mat);\n        const newDirection = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...ray.direction, 0), mat);\n        return new Ray(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newOrigin[0], newOrigin[1], newOrigin[2]), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newDirection[0], newDirection[1], newDirection[2]));\n    }\n    almostIntersectLine(geo, subID, start, end, pixels) {\n        const p = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, this.direction);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(start, this.origin);\n        const v43 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p, this.origin);\n        const v21 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(end, start);\n        const d1343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v43);\n        const d4321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v21);\n        const d1321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v21);\n        const d4343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v43);\n        const d2121 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v21, v21);\n        var mua = (d1343 * d4321 - d1321 * d4343) / (d2121 * d4343 - d4321 * d4321);\n        const mub = (d1343 + mua * d4321) / d4343;\n        mua = Math.max(Math.min(mua, 1), 0);\n        // p line\n        const pLine = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(start, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(v21, mua));\n        //p ray\n        const pRay = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(v43, mub));\n        const distToIntersection = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(this.origin, pLine);\n        const closest = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(pLine, pRay);\n        const sizeOfPixel = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().pixelSizeAtDist(distToIntersection);\n        if (closest < sizeOfPixel * pixels) {\n            return new _intersection__WEBPACK_IMPORTED_MODULE_1__.Intersection(mub, \"line\", geo, subID, pLine, closest, closest * sizeOfPixel);\n        }\n        else {\n            return null;\n        }\n    }\n    almostIntersectPoint(geometry, subID, point, pixels) {\n        const toPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, this.origin);\n        const time = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(toPoint, this.direction);\n        if (time <= 0)\n            return null;\n        const pointOnRay = this.at(time);\n        const dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(pointOnRay, point);\n        const sizeOfPixel = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().pixelSizeAtDist(time);\n        if (dist < sizeOfPixel * pixels) {\n            return new _intersection__WEBPACK_IMPORTED_MODULE_1__.Intersection(time, \"point\", geometry, subID, point, dist, dist * sizeOfPixel);\n        }\n        else {\n            return null;\n        }\n    }\n    closestPointOnLine(start, end) {\n        const p = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, this.direction);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(start, this.origin);\n        const v43 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p, this.origin);\n        const v21 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(end, start);\n        const d1343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v43);\n        const d4321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v21);\n        const d1321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v21);\n        const d4343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v43);\n        const d2121 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v21, v21);\n        const denom = d2121 * d4343 - d4321 * d4321;\n        if (denom === 0)\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.clone(start);\n        var mua = (d1343 * d4321 - d1321 * d4343) / denom;\n        const res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(start, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(v21, mua));\n        return res;\n    }\n    closestPointToLine(start, end) {\n        const p = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, this.direction);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(start, this.origin);\n        const v43 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p, this.origin);\n        const v21 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(end, start);\n        const d1343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v43);\n        const d4321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v21);\n        const d1321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v21);\n        const d4343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v43);\n        const d2121 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v21, v21);\n        var mua = (d1343 * d4321 - d1321 * d4343) / (d2121 * d4343 - d4321 * d4321);\n        const mub = (d1343 + mua * d4321) / d4343;\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(v43, mub));\n    }\n    closestDistanceToPoint(point) {\n        const op = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, this.origin);\n        const a = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(op, this.direction);\n        const b = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.length(op);\n        return Math.sqrt(b * b + a * a);\n    }\n    closestPointToPoint(point) {\n        const op = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, this.origin);\n        const a = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(op, this.direction);\n        return this.at(a);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/ray.ts\n");

/***/ }),

/***/ "./src/geometry/sceneBoundingBoxHeirarcy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/sceneBoundingBoxHeirarcy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SceneBoundingBoxHeirarchy: () => (/* binding */ SceneBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass BBHNode {\n    constructor(geometry, depth) {\n        this.depth = depth;\n        this.setup(geometry, depth);\n    }\n    setup(geometry, depth) {\n        this.axis = depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_1__.BoundingBox();\n        geometry.forEach((geo) => { this.boundingBox.addBoundingBox(geo.getBoundingBox()); });\n        if (geometry.length <= SceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF) {\n            // leaf\n            this.geometry = geometry;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // not a leaf\n            this.geometry = null;\n            const center = this.boundingBox.getCenter()[this.axis];\n            var child1Geometry = [];\n            var child2Geometry = [];\n            geometry.forEach((geo) => {\n                if (geo.getBoundingBox().getCenter()[this.axis] < center) {\n                    child1Geometry.push(geo);\n                }\n                else {\n                    child2Geometry.push(geo);\n                }\n            });\n            if (child1Geometry.length === 0 || child2Geometry.length === 0) {\n                child1Geometry = geometry.slice(0, geometry.length / 2);\n                child2Geometry = geometry.slice(geometry.length / 2, geometry.length);\n            }\n            this.child1 = new BBHNode(child1Geometry, depth + 1);\n            this.child2 = new BBHNode(child2Geometry, depth + 1);\n        }\n    }\n    firstIntersectionsWithinMargin(ray, margin, sub) {\n        const intersections = [];\n        if (ray.almostIntersectBoundingBox(this.boundingBox, 10) === null)\n            return intersections;\n        if (this.isLeaf()) {\n            this.geometry.forEach((geo) => {\n                const intersection = geo.intersect(ray, sub);\n                if (intersection !== null)\n                    intersections.push(intersection);\n            });\n        }\n        else {\n            intersections.push(...this.child1.firstIntersectionsWithinMargin(ray, margin, sub));\n            intersections.push(...this.child2.firstIntersectionsWithinMargin(ray, margin, sub));\n        }\n        intersections.sort((a, b) => {\n            // TODO: think about this\n            return a.time - b.time;\n        });\n        const nearIntersections = [];\n        for (const intersection of intersections) {\n            if (intersection.time <= intersections[0].time * (1 + margin / 100)) {\n                nearIntersections.push(intersection);\n            }\n        }\n        return nearIntersections;\n    }\n    getAllGeometry() {\n        if (this.isLeaf())\n            return this.geometry;\n        return [...this.child1.getAllGeometry(), ...this.child2.getAllGeometry()];\n    }\n    getWithinFrustum(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox)) {\n            return this.getAllGeometry();\n        }\n        if (!frustum.intersectsBoundingBox(this.boundingBox)) {\n            return [];\n        }\n        if (this.isLeaf()) {\n            const res = [];\n            for (const geo of this.geometry) {\n                if (geo.isWithinFrustum(frustum, inclusive)) {\n                    res.push(geo);\n                }\n            }\n            return res;\n        }\n        else {\n            return [\n                ...this.child1.getWithinFrustum(frustum, inclusive),\n                ...this.child2.getWithinFrustum(frustum, inclusive)\n            ];\n        }\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox)) {\n            const geos = this.getAllGeometry();\n            const subs = [];\n            for (let i = 0; i < geos.length; i++)\n                subs.push([-1]);\n            return [geos, subs];\n        }\n        if (!frustum.intersectsBoundingBox(this.boundingBox)) {\n            return [[], []];\n        }\n        if (this.isLeaf()) {\n            const res = [[], []];\n            for (const geo of this.geometry) {\n                const sub = geo.getWithinFrustumSub(frustum, inclusive);\n                if (sub.length > 0) {\n                    res[0].push(geo);\n                    res[1].push(sub);\n                }\n            }\n            return res;\n        }\n        else {\n            const res1 = this.child1.getWithinFrustumSub(frustum, inclusive);\n            const res2 = this.child2.getWithinFrustumSub(frustum, inclusive);\n            res1[0].push(...res2[0]);\n            res1[1].push(...res2[1]);\n            return res1;\n        }\n    }\n    firstPositiveIntersection(ray, sub) {\n        if (ray.almostIntersectBoundingBox(this.boundingBox, 10) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            this.geometry.forEach((geo) => {\n                var t = geo.intersect(ray, sub);\n                if (t !== null && t.time > 0) {\n                    if (res === null)\n                        res = t;\n                    else\n                        res = res.time < t.time ? res : t;\n                }\n            });\n            return res;\n        }\n        else {\n            const t1 = this.child1.firstPositiveIntersection(ray, sub);\n            const t2 = this.child2.firstPositiveIntersection(ray, sub);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return t1.time < t2.time ? t1 : t2;\n        }\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.geometry) {\n            for (const geo of this.geometry) {\n                str += `[${geo.getID()},${geo.getTypeName()}]`;\n            }\n        }\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n    remove(geo) {\n        // TODO: after a few removals, should rebalance / shrink\n        if (!this.boundingBox.contains(geo.getBoundingBox()))\n            return;\n        if (this.isLeaf()) {\n            for (let i = 0; i < this.geometry.length; i++) {\n                if (this.geometry[i] === geo) {\n                    this.geometry.splice(i, 1);\n                }\n            }\n        }\n        else {\n            this.child1.remove(geo);\n            this.child2.remove(geo);\n        }\n    }\n    tighten() {\n        // tighten up bbs after removals\n        throw new Error(\"not implemented\");\n    }\n    add(geo) {\n        this.boundingBox.addBoundingBox(geo.getBoundingBox());\n        if (this.isLeaf()) {\n            if (this.geometry.length < SceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF) {\n                // leaf node with space\n                this.geometry.push(geo);\n            }\n            else {\n                this.geometry.push(geo);\n                this.setup(this.geometry, this.depth);\n            }\n        }\n        else {\n            // non leaf node\n            const nodeCenter = this.boundingBox.getCenter()[this.axis];\n            const geoCenter = geo.getBoundingBox().getCenter()[this.axis];\n            if (geoCenter < nodeCenter) {\n                this.child1.add(geo);\n            }\n            else {\n                this.child2.add(geo);\n            }\n        }\n    }\n    getDepth() {\n        return this.depth;\n    }\n    getChild1() {\n        return this.child1;\n    }\n    getChild2() {\n        return this.child2;\n    }\n    isLeaf() {\n        return this.geometry != null;\n    }\n}\nclass SceneBoundingBoxHeirarchy {\n    constructor(geometry) {\n        this.root = new BBHNode(geometry, 0);\n    }\n    add(geo) {\n        this.root.add(geo);\n    }\n    remove(geo) {\n        this.root.remove(geo);\n    }\n    getRoot() {\n        return this.root;\n    }\n    firstPositiveIntersection(ray, sub) {\n        const sceneIntersection = this.root.firstPositiveIntersection(ray, sub);\n        if (sceneIntersection)\n            return sceneIntersection;\n        return _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().intersect(ray);\n    }\n    // margin is max percentage of distance from camera behind first intersection\n    firstIntersectionsWithinMargin(ray, margin, sub) {\n        const res = this.root.firstIntersectionsWithinMargin(ray, margin, sub);\n        const iGroundPlane = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().intersect(ray);\n        if (res.length === 0)\n            return iGroundPlane ? [iGroundPlane] : [];\n        if (iGroundPlane && iGroundPlane.time < res[0].time * (1 + (margin / 100))) {\n            res.push(iGroundPlane);\n        }\n        return res;\n    }\n    getWithinFrustum(frustum, inclusive) {\n        return this.root.getWithinFrustum(frustum, inclusive);\n    }\n    getWithinFrustumSub(frustum, inclusive) {\n        return this.root.getWithinFrustumSub(frustum, inclusive);\n    }\n    print() {\n        console.log(\"==========Scene-BBH===========\");\n        this.root.print();\n    }\n}\nSceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/sceneBoundingBoxHeirarcy.ts\n");

/***/ }),

/***/ "./src/log.ts":
/*!********************!*\
  !*** ./src/log.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Log: () => (/* binding */ Log)\n/* harmony export */ });\nclass Log {\n    constructor() {\n        this.logs = \"<u>LOGS:</u>\";\n    }\n    log(text) {\n        this.logs += \"<br>\" + text;\n    }\n    getLogs() {\n        return this.logs;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9nLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxNQUFNLEdBQUc7SUFJZDtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFTSxHQUFHLENBQUMsSUFBWTtRQUNyQixJQUFJLENBQUMsSUFBSSxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvbG9nLnRzP2RkMzciXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjbGFzcyBMb2cge1xuXG4gIHByaXZhdGUgbG9nczogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubG9ncyA9IFwiPHU+TE9HUzo8L3U+XCI7XG4gIH1cblxuICBwdWJsaWMgbG9nKHRleHQ6IHN0cmluZykge1xuICAgIHRoaXMubG9ncyArPSBcIjxicj5cIiArIHRleHQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0TG9ncygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmxvZ3M7XG4gIH1cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/log.ts\n");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cad */ \"./src/cad.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst main = function () {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.init();\n        yield _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.run();\n    });\n};\nmain();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUVnQztBQUVoQyxNQUFNLElBQUksR0FBRzs7UUFFVCxNQUFNLDBDQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdEIsTUFBTSwwQ0FBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBRXpCLENBQUM7Q0FBQTtBQUVELElBQUksRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvbWFpbi50cz9jZDQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuL2NhZFwiXG5cbmNvbnN0IG1haW4gPSBhc3luYyBmdW5jdGlvbigpIHtcblxuICAgIGF3YWl0IElOU1RBTkNFLmluaXQoKTtcbiAgICBhd2FpdCBJTlNUQU5DRS5ydW4oKTtcblxufVxuXG5tYWluKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/main.ts\n");

/***/ }),

/***/ "./src/materials/material.ts":
/*!***********************************!*\
  !*** ./src/materials/material.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Material: () => (/* binding */ Material)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\n\nclass Material {\n    constructor(name, color = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.5, 0.5, 0.5, 1), emissive = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0, 0, 0, 0), ambientIntensity = 0.1, pseudoDiffuseIntensity = 0.7, specularity = 12, specularIntensity = 0.3) {\n        this.name = name;\n        this.color = color;\n        this.emissive = emissive;\n        this.ambientIntensity = ambientIntensity;\n        this.pseudoDiffuseIntensity = pseudoDiffuseIntensity;\n        this.specularity = specularity;\n        this.specularIntensity = specularIntensity;\n        this.buffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"color buffer for material \" + this.name,\n            size: 48,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.updateBuffer();\n    }\n    updateColor(color) {\n        this.color = color;\n        this.updateBuffer();\n    }\n    setName(name) {\n        this.name = name;\n    }\n    updateBuffer() {\n        const data = new Float32Array([\n            ...this.color,\n            ...this.emissive,\n            this.ambientIntensity,\n            this.pseudoDiffuseIntensity,\n            this.specularity,\n            this.specularIntensity,\n        ]);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.buffer, 0, data);\n    }\n    getColorBuffer() {\n        return this.buffer;\n    }\n    getName() {\n        return this.name;\n    }\n    getColor() {\n        return this.color;\n    }\n    getEmissive() {\n        return this.emissive;\n    }\n    getAmbientIntensity() {\n        return this.ambientIntensity;\n    }\n    getPseudoDiffuseIntensity() {\n        return this.pseudoDiffuseIntensity;\n    }\n    getSpecularity() {\n        return this.specularity;\n    }\n    getSpecularIntensity() {\n        return this.specularIntensity;\n    }\n    updateEmissive(val) {\n        this.emissive = val;\n        this.updateBuffer();\n    }\n    updateAmbientIntensity(val) {\n        this.ambientIntensity = val;\n        this.updateBuffer();\n    }\n    updatePseudoDiffuseIntensity(val) {\n        this.pseudoDiffuseIntensity = val;\n        this.updateBuffer();\n    }\n    updateSpecularity(val) {\n        this.specularity = val;\n        this.updateBuffer();\n    }\n    updateSpecularIntensity(val) {\n        this.specularIntensity = val;\n        this.updateBuffer();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxHQUFXO1FBQ3ZDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLENBQUM7UUFDNUIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFDTSw0QkFBNEIsQ0FBQyxHQUFXO1FBQzdDLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxHQUFHLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFDTSxpQkFBaUIsQ0FBQyxHQUFXO1FBQ2xDLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBQ00sdUJBQXVCLENBQUMsR0FBVztRQUN4QyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsR0FBRyxDQUFDO1FBQzdCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0NBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9tYXRlcmlhbHMvbWF0ZXJpYWwudHM/MmYzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZWM0LCBWZWM0IH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcblxuZXhwb3J0IHR5cGUgTWF0ZXJpYWxOYW1lID0gc3RyaW5nO1xuXG5leHBvcnQgY2xhc3MgTWF0ZXJpYWwge1xuXG4gIHByaXZhdGUgYnVmZmVyOiBHUFVCdWZmZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBuYW1lOiBzdHJpbmcsXG4gICAgcHJpdmF0ZSBjb2xvcjogVmVjNCA9IHZlYzQuY3JlYXRlKDAuNSwgMC41LCAwLjUsIDEpLFxuICAgIHByaXZhdGUgZW1pc3NpdmU6IFZlYzQgPSB2ZWM0LmNyZWF0ZSgwLCAwLCAwLCAwKSxcbiAgICBwcml2YXRlIGFtYmllbnRJbnRlbnNpdHk6IG51bWJlciA9IDAuMSxcbiAgICBwcml2YXRlIHBzZXVkb0RpZmZ1c2VJbnRlbnNpdHk6IG51bWJlciA9IDAuNyxcbiAgICBwcml2YXRlIHNwZWN1bGFyaXR5OiBudW1iZXIgPSAxMixcbiAgICBwcml2YXRlIHNwZWN1bGFySW50ZW5zaXR5OiBudW1iZXIgPSAwLjMsXG4gICkge1xuXG4gICAgdGhpcy5idWZmZXIgPSBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLmNyZWF0ZUJ1ZmZlcih7XG4gICAgICBsYWJlbDogXCJjb2xvciBidWZmZXIgZm9yIG1hdGVyaWFsIFwiICsgdGhpcy5uYW1lLFxuICAgICAgc2l6ZTogNDgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVU5JRk9STSB8IEdQVUJ1ZmZlclVzYWdlLkNPUFlfRFNULFxuICAgIH0pO1xuXG4gICAgdGhpcy51cGRhdGVCdWZmZXIoKTtcblxuICB9XG5cbiAgcHVibGljIHVwZGF0ZUNvbG9yKGNvbG9yOiBWZWM0KTogdm9pZCB7XG4gICAgdGhpcy5jb2xvciA9IGNvbG9yO1xuICAgIHRoaXMudXBkYXRlQnVmZmVyKCk7XG4gIH1cblxuICBwdWJsaWMgc2V0TmFtZShuYW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGVCdWZmZXIoKTogdm9pZCB7XG4gICAgY29uc3QgZGF0YTogRmxvYXQzMkFycmF5ID0gbmV3IEZsb2F0MzJBcnJheShbXG4gICAgICAuLi50aGlzLmNvbG9yLFxuICAgICAgLi4udGhpcy5lbWlzc2l2ZSxcbiAgICAgIHRoaXMuYW1iaWVudEludGVuc2l0eSxcbiAgICAgIHRoaXMucHNldWRvRGlmZnVzZUludGVuc2l0eSxcbiAgICAgIHRoaXMuc3BlY3VsYXJpdHksXG4gICAgICB0aGlzLnNwZWN1bGFySW50ZW5zaXR5LFxuICAgIF0pO1xuICAgIElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkucXVldWUud3JpdGVCdWZmZXIodGhpcy5idWZmZXIsIDAsIGRhdGEpO1xuICB9XG5cbiAgcHVibGljIGdldENvbG9yQnVmZmVyKCk6IEdQVUJ1ZmZlciB7XG4gICAgcmV0dXJuIHRoaXMuYnVmZmVyO1xuICB9XG5cbiAgcHVibGljIGdldE5hbWUoKTogTWF0ZXJpYWxOYW1lIHtcbiAgICByZXR1cm4gdGhpcy5uYW1lO1xuICB9XG5cbiAgcHVibGljIGdldENvbG9yKCk6IFZlYzQge1xuICAgIHJldHVybiB0aGlzLmNvbG9yO1xuICB9XG4gIHB1YmxpYyBnZXRFbWlzc2l2ZSgpOiBWZWM0IHtcbiAgICByZXR1cm4gdGhpcy5lbWlzc2l2ZTtcbiAgfVxuICBwdWJsaWMgZ2V0QW1iaWVudEludGVuc2l0eSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmFtYmllbnRJbnRlbnNpdHk7XG4gIH1cbiAgcHVibGljIGdldFBzZXVkb0RpZmZ1c2VJbnRlbnNpdHkoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5wc2V1ZG9EaWZmdXNlSW50ZW5zaXR5O1xuICB9XG4gIHB1YmxpYyBnZXRTcGVjdWxhcml0eSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNwZWN1bGFyaXR5O1xuICB9XG4gIHB1YmxpYyBnZXRTcGVjdWxhckludGVuc2l0eSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNwZWN1bGFySW50ZW5zaXR5O1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZUVtaXNzaXZlKHZhbDogVmVjNCk6IHZvaWQge1xuICAgIHRoaXMuZW1pc3NpdmUgPSB2YWw7XG4gICAgdGhpcy51cGRhdGVCdWZmZXIoKTtcbiAgfVxuICBwdWJsaWMgdXBkYXRlQW1iaWVudEludGVuc2l0eSh2YWw6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuYW1iaWVudEludGVuc2l0eSA9IHZhbDtcbiAgICB0aGlzLnVwZGF0ZUJ1ZmZlcigpO1xuICB9XG4gIHB1YmxpYyB1cGRhdGVQc2V1ZG9EaWZmdXNlSW50ZW5zaXR5KHZhbDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5wc2V1ZG9EaWZmdXNlSW50ZW5zaXR5ID0gdmFsO1xuICAgIHRoaXMudXBkYXRlQnVmZmVyKCk7XG4gIH1cbiAgcHVibGljIHVwZGF0ZVNwZWN1bGFyaXR5KHZhbDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5zcGVjdWxhcml0eSA9IHZhbDtcbiAgICB0aGlzLnVwZGF0ZUJ1ZmZlcigpO1xuICB9XG4gIHB1YmxpYyB1cGRhdGVTcGVjdWxhckludGVuc2l0eSh2YWw6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuc3BlY3VsYXJJbnRlbnNpdHkgPSB2YWw7XG4gICAgdGhpcy51cGRhdGVCdWZmZXIoKTtcbiAgfVxuXG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/material.ts\n");

/***/ }),

/***/ "./src/materials/materialManager.ts":
/*!******************************************!*\
  !*** ./src/materials/materialManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaterialManager: () => (/* binding */ MaterialManager)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./material */ \"./src/materials/material.ts\");\n\n\nclass MaterialManager {\n    constructor() {\n        this.materials = new Map();\n        this.createDefaultMaterial();\n    }\n    createDefaultMaterial() {\n        this.materials.set(\"default\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"default\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(1.0, 1.0, 1.0, 1.0)));\n        this.materials.set(\"darker grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"darker grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.1, 0.1, 0.1, 1.0)));\n        this.materials.set(\"dark grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"dark grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.3, 0.3, 0.3, 1.0)));\n        this.materials.set(\"lighter grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"lighter grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.9, 0.9, 0.9, 1.0)));\n        this.materials.set(\"light grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"light grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.7, 0.7, 0.7, 1.0)));\n        this.materials.set(\"mid grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"mid grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.5, 0.5, 0.5, 1.0)));\n        this.materials.set(\"red\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"red\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(1, 0, 0, 1)));\n        this.materials.set(\"green\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"green\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0, 1, 0, 1)));\n        this.materials.set(\"blue\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"blue\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0, 0, 1, 1)));\n        this.materials.set(\"white\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"white\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(1, 1, 1, 1)));\n    }\n    getDefaultMaterial() {\n        if (!this.materials.has(\"default\"))\n            this.createDefaultMaterial();\n        return this.materials.get(\"default\");\n    }\n    getMaterials() {\n        return this.materials;\n    }\n    addMaterial(name, mat) {\n        this.materials.set(name, mat);\n    }\n    removeMaterial(name) {\n        this.materials.delete(name);\n        if (this.materials.size === 0)\n            this.createDefaultMaterial();\n    }\n    getMaterial(name) {\n        return this.materials.get(name);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QztRQUNqRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBRSxDQUFDO0lBQ3hDLENBQUM7SUFFTSxZQUFZO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRU0sV0FBVyxDQUFDLElBQWtCLEVBQUUsR0FBYTtRQUNsRCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLGNBQWMsQ0FBQyxJQUFrQjtRQUN0QyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxLQUFLLENBQUM7WUFBRSxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUM5RCxDQUFDO0lBRU0sV0FBVyxDQUFDLElBQWtCO1FBQ25DLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvbWF0ZXJpYWxzL21hdGVyaWFsTWFuYWdlci50cz83N2ZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IE1hdGVyaWFsLCBNYXRlcmlhbE5hbWUgfSBmcm9tIFwiLi9tYXRlcmlhbFwiO1xuXG5leHBvcnQgY2xhc3MgTWF0ZXJpYWxNYW5hZ2VyIHtcblxuICBwcml2YXRlIG1hdGVyaWFsczogTWFwPE1hdGVyaWFsTmFtZSwgTWF0ZXJpYWw+O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubWF0ZXJpYWxzID0gbmV3IE1hcDxNYXRlcmlhbE5hbWUsIE1hdGVyaWFsPigpO1xuICAgIHRoaXMuY3JlYXRlRGVmYXVsdE1hdGVyaWFsKCk7XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZURlZmF1bHRNYXRlcmlhbCgpOiB2b2lkIHtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJkZWZhdWx0XCIsIG5ldyBNYXRlcmlhbChcImRlZmF1bHRcIiwgdmVjNC5jcmVhdGUoMS4wLCAxLjAsIDEuMCwgMS4wKSkpO1xuICAgIHRoaXMubWF0ZXJpYWxzLnNldChcImRhcmtlciBncmV5XCIsIG5ldyBNYXRlcmlhbChcImRhcmtlciBncmV5XCIsIHZlYzQuY3JlYXRlKDAuMSwgMC4xLCAwLjEsIDEuMCkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJkYXJrIGdyZXlcIiwgbmV3IE1hdGVyaWFsKFwiZGFyayBncmV5XCIsIHZlYzQuY3JlYXRlKDAuMywgMC4zLCAwLjMsIDEuMCkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJsaWdodGVyIGdyZXlcIiwgbmV3IE1hdGVyaWFsKFwibGlnaHRlciBncmV5XCIsIHZlYzQuY3JlYXRlKDAuOSwgMC45LCAwLjksIDEuMCkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJsaWdodCBncmV5XCIsIG5ldyBNYXRlcmlhbChcImxpZ2h0IGdyZXlcIiwgdmVjNC5jcmVhdGUoMC43LCAwLjcsIDAuNywgMS4wKSkpO1xuICAgIHRoaXMubWF0ZXJpYWxzLnNldChcIm1pZCBncmV5XCIsIG5ldyBNYXRlcmlhbChcIm1pZCBncmV5XCIsIHZlYzQuY3JlYXRlKDAuNSwgMC41LCAwLjUsIDEuMCkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJyZWRcIiwgbmV3IE1hdGVyaWFsKFwicmVkXCIsIHZlYzQuY3JlYXRlKDEsIDAsIDAsIDEpKSk7XG4gICAgdGhpcy5tYXRlcmlhbHMuc2V0KFwiZ3JlZW5cIiwgbmV3IE1hdGVyaWFsKFwiZ3JlZW5cIiwgdmVjNC5jcmVhdGUoMCwgMSwgMCwgMSkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJibHVlXCIsIG5ldyBNYXRlcmlhbChcImJsdWVcIiwgdmVjNC5jcmVhdGUoMCwgMCwgMSwgMSkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJ3aGl0ZVwiLCBuZXcgTWF0ZXJpYWwoXCJ3aGl0ZVwiLCB2ZWM0LmNyZWF0ZSgxLCAxLCAxLCAxKSkpO1xuICB9XG5cbiAgcHVibGljIGdldERlZmF1bHRNYXRlcmlhbCgpOiBNYXRlcmlhbCB7XG4gICAgaWYgKCF0aGlzLm1hdGVyaWFscy5oYXMoXCJkZWZhdWx0XCIpKSB0aGlzLmNyZWF0ZURlZmF1bHRNYXRlcmlhbCgpO1xuICAgIHJldHVybiB0aGlzLm1hdGVyaWFscy5nZXQoXCJkZWZhdWx0XCIpITtcbiAgfVxuXG4gIHB1YmxpYyBnZXRNYXRlcmlhbHMoKTogTWFwPE1hdGVyaWFsTmFtZSwgTWF0ZXJpYWw+IHtcbiAgICByZXR1cm4gdGhpcy5tYXRlcmlhbHM7XG4gIH1cblxuICBwdWJsaWMgYWRkTWF0ZXJpYWwobmFtZTogTWF0ZXJpYWxOYW1lLCBtYXQ6IE1hdGVyaWFsKSB7XG4gICAgdGhpcy5tYXRlcmlhbHMuc2V0KG5hbWUsIG1hdCk7XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlTWF0ZXJpYWwobmFtZTogTWF0ZXJpYWxOYW1lKTogdm9pZCB7XG4gICAgdGhpcy5tYXRlcmlhbHMuZGVsZXRlKG5hbWUpO1xuICAgIGlmICh0aGlzLm1hdGVyaWFscy5zaXplID09PSAwKSB0aGlzLmNyZWF0ZURlZmF1bHRNYXRlcmlhbCgpO1xuICB9XG5cbiAgcHVibGljIGdldE1hdGVyaWFsKG5hbWU6IE1hdGVyaWFsTmFtZSk6IE1hdGVyaWFsIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5tYXRlcmlhbHMuZ2V0KG5hbWUpO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/materialManager.ts\n");

/***/ }),

/***/ "./src/mode.ts":
/*!*********************!*\
  !*** ./src/mode.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperatingMode: () => (/* binding */ OperatingMode)\n/* harmony export */ });\nvar OperatingMode;\n(function (OperatingMode) {\n    OperatingMode[OperatingMode[\"Navigation\"] = 0] = \"Navigation\";\n    OperatingMode[OperatingMode[\"Command\"] = 1] = \"Command\";\n})(OperatingMode || (OperatingMode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRUEsSUFBWSxhQUdYO0FBSEQsV0FBWSxhQUFhO0lBQ3JCLDZEQUFVO0lBQ1YsdURBQU87QUFDWCxDQUFDLEVBSFcsYUFBYSxLQUFiLGFBQWEsUUFHeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9tb2RlLnRzP2RlMGQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBlbnVtIE9wZXJhdGluZ01vZGUge1xuICAgIE5hdmlnYXRpb24sIC8vIEtleXMgY29udHJvbCBjYW1lcmEgbW90aW9uXG4gICAgQ29tbWFuZCwgLy8gS2V5cyBjb250cm9sIGNvbW1hbmQgaW5wdXRcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mode.ts\n");

/***/ }),

/***/ "./src/render/flags.ts":
/*!*****************************!*\
  !*** ./src/render/flags.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONSTANT_SCREEN_SIZE_BIT: () => (/* binding */ CONSTANT_SCREEN_SIZE_BIT),\n/* harmony export */   HOVER_BIT: () => (/* binding */ HOVER_BIT),\n/* harmony export */   SELECTED_BIT: () => (/* binding */ SELECTED_BIT)\n/* harmony export */ });\nconst CONSTANT_SCREEN_SIZE_BIT = 1 << 0;\nconst HOVER_BIT = 1 << 1;\nconst SELECTED_BIT = 1 << 2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL2ZsYWdzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUdPLE1BQU0sd0JBQXdCLEdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxNQUFNLFNBQVMsR0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLE1BQU0sWUFBWSxHQUFXLENBQUMsSUFBSSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvZmxhZ3MudHM/NDczZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5leHBvcnQgY29uc3QgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUOiBudW1iZXIgPSAxIDw8IDA7XG5leHBvcnQgY29uc3QgSE9WRVJfQklUOiBudW1iZXIgPSAxIDw8IDE7XG5leHBvcnQgY29uc3QgU0VMRUNURURfQklUOiBudW1iZXIgPSAxIDw8IDI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/flags.ts\n");

/***/ }),

/***/ "./src/render/globalUniforms.ts":
/*!**************************************!*\
  !*** ./src/render/globalUniforms.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalUniforms: () => (/* binding */ GlobalUniforms)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math */ \"./src/utils/math.ts\");\n\n\n\nvar ShadingMode;\n(function (ShadingMode) {\n    ShadingMode[ShadingMode[\"Default\"] = 0] = \"Default\";\n    ShadingMode[ShadingMode[\"Ghosted\"] = 1] = \"Ghosted\";\n})(ShadingMode || (ShadingMode = {}));\nclass GlobalUniforms {\n    constructor(device) {\n        this.device = device;\n        this.cameraPositionBuffer = this.device.createBuffer({\n            label: \"camera position buffer\",\n            size: 12,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.cameraViewProjBuffer = this.device.createBuffer({\n            label: \"camera view proj buffer\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.selectionTransformBuffer = this.device.createBuffer({\n            label: \"selection transform buffer\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.selectionTransformBufferInverseTranspose = this.device.createBuffer({\n            label: \"selection trasform buffer inverse transpose\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.resolutionBuffer = this.device.createBuffer({\n            label: \"resolutionBuffer\",\n            size: 8,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.layout = this.device.createBindGroupLayout({\n            label: \"global uniforms layout\",\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n                    buffer: {}\n                }, {\n                    binding: 1,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 2,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 3,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 4,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    buffer: {}\n                }\n            ]\n        });\n        this.bindGroup = this.device.createBindGroup({\n            label: \"global uniforms\",\n            layout: this.layout,\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.cameraPositionBuffer },\n                }, {\n                    binding: 1,\n                    resource: { buffer: this.cameraViewProjBuffer },\n                }, {\n                    binding: 2,\n                    resource: { buffer: this.selectionTransformBuffer }\n                }, {\n                    binding: 3,\n                    resource: { buffer: this.selectionTransformBufferInverseTranspose }\n                }, {\n                    binding: 4,\n                    resource: { buffer: this.resolutionBuffer }\n                }\n            ]\n        });\n    }\n    getLayout() {\n        return this.layout;\n    }\n    tick() {\n        this.device.queue.writeBuffer(this.cameraPositionBuffer, 0, (0,_utils_math__WEBPACK_IMPORTED_MODULE_1__.swizzleYZVec3)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.clone(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPosition())));\n        this.device.queue.writeBuffer(this.cameraViewProjBuffer, 0, _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getViewProj());\n        const selectionTrasform = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().getTransform();\n        const selectionTrasformInverseTraspose = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.transpose(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(selectionTrasform));\n        this.device.queue.writeBuffer(this.selectionTransformBuffer, 0, (0,_utils_math__WEBPACK_IMPORTED_MODULE_1__.swizzleYZ)(selectionTrasform));\n        this.device.queue.writeBuffer(this.selectionTransformBufferInverseTranspose, 0, (0,_utils_math__WEBPACK_IMPORTED_MODULE_1__.swizzleYZ)(selectionTrasformInverseTraspose));\n        const resolutionArray = new Float32Array([window.innerWidth, window.innerHeight]);\n        this.device.queue.writeBuffer(this.resolutionBuffer, 0, resolutionArray);\n    }\n    bind(pass) {\n        pass.setBindGroup(1, this.bindGroup);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/render/globalUniforms.ts\n");

/***/ }),

/***/ "./src/render/pipeline.ts":
/*!********************************!*\
  !*** ./src/render/pipeline.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pipeline: () => (/* binding */ Pipeline),\n/* harmony export */   PipelinePrimitive: () => (/* binding */ PipelinePrimitive)\n/* harmony export */ });\n/* harmony import */ var _renderMesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./renderMesh */ \"./src/render/renderMesh.ts\");\n/* harmony import */ var _renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _renderPoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderPoints */ \"./src/render/renderPoints.ts\");\n\n\n\nvar PipelinePrimitive;\n(function (PipelinePrimitive) {\n    PipelinePrimitive[PipelinePrimitive[\"Triangle\"] = 0] = \"Triangle\";\n    PipelinePrimitive[PipelinePrimitive[\"Line\"] = 1] = \"Line\";\n    PipelinePrimitive[PipelinePrimitive[\"Point\"] = 2] = \"Point\";\n})(PipelinePrimitive || (PipelinePrimitive = {}));\nclass Pipeline {\n    constructor(device, format, layouts, shaderModule, primitive, samples) {\n        const pipelineLayout = device.createPipelineLayout({\n            label: getLabel(primitive) + \" label\",\n            bindGroupLayouts: layouts,\n        });\n        this.gpuPipeline = device.createRenderPipeline({\n            label: getLabel(primitive),\n            primitive: {\n                topology: getTopology(primitive),\n                cullMode: \"none\"\n            },\n            layout: pipelineLayout,\n            depthStencil: {\n                depthWriteEnabled: true,\n                depthCompare: \"less\",\n                format: \"depth24plus\"\n            },\n            vertex: {\n                module: shaderModule,\n                entryPoint: \"vertexMain\",\n                buffers: [getVertexBufferLayout(primitive)]\n            },\n            fragment: {\n                module: shaderModule,\n                entryPoint: \"fragmentMain\",\n                targets: [\n                    getTarget(format)\n                ]\n            },\n            multisample: {\n                count: samples\n            }\n        });\n    }\n    get() {\n        return this.gpuPipeline;\n    }\n}\nfunction getTopology(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return \"triangle-list\";\n        case PipelinePrimitive.Line: return \"line-list\";\n        case PipelinePrimitive.Point: return \"point-list\";\n        default:\n            console.error(\"unimplemented primitive\");\n            return \"triangle-list\";\n    }\n}\nfunction getVertexBufferLayout(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return _renderMesh__WEBPACK_IMPORTED_MODULE_0__.RenderMesh.getVertexBufferLayout();\n        case PipelinePrimitive.Line: return _renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines.getVertexBufferLayout();\n        case PipelinePrimitive.Point: return _renderPoints__WEBPACK_IMPORTED_MODULE_2__.RenderPoints.getVertexBufferLayout();\n        default:\n            console.error(\"unimplemented primitive\");\n            return _renderMesh__WEBPACK_IMPORTED_MODULE_0__.RenderMesh.getVertexBufferLayout();\n    }\n}\nfunction getLabel(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return \"trinagle pipeline\";\n        case PipelinePrimitive.Line: return \"line pipeline\";\n        case PipelinePrimitive.Point: return \"point pipeline\";\n        default: throw new Error(\"not implemented\");\n    }\n}\nfunction getTarget(format) {\n    if (true) {\n        //if (format === \"r32sint\") { // TODO:\n        return {\n            format: format\n        };\n    }\n    return {\n        format: format,\n        blend: {\n            color: {\n                operation: 'add',\n                srcFactor: 'src-alpha',\n                dstFactor: 'one-minus-src-alpha',\n            },\n            alpha: {\n                operation: 'add',\n                srcFactor: 'one',\n                dstFactor: 'one-minus-src-alpha',\n            },\n        },\n        writeMask: GPUColorWrite.ALL,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLGVBQWUsQ0FBQztRQUNwRCxLQUFLLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sZ0JBQWdCLENBQUM7UUFDdEQsT0FBTyxDQUFDLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0tBQzdDO0FBQ0gsQ0FBQztBQUVELFNBQVMsU0FBUyxDQUFDLE1BQXdCO0lBQ3pDLElBQUksSUFBSSxFQUFFO1FBQ1Isc0NBQXNDO1FBQ3RDLE9BQU87WUFDTCxNQUFNLEVBQUUsTUFBTTtTQUNmO0tBQ0Y7SUFDRCxPQUFPO1FBQ0wsTUFBTSxFQUFFLE1BQU07UUFDZCxLQUFLLEVBQUU7WUFDTCxLQUFLLEVBQUU7Z0JBQ0wsU0FBUyxFQUFFLEtBQUs7Z0JBQ2hCLFNBQVMsRUFBRSxXQUFXO2dCQUN0QixTQUFTLEVBQUUscUJBQXFCO2FBQ2pDO1lBQ0QsS0FBSyxFQUFFO2dCQUNMLFNBQVMsRUFBRSxLQUFLO2dCQUNoQixTQUFTLEVBQUUsS0FBSztnQkFDaEIsU0FBUyxFQUFFLHFCQUFxQjthQUNqQztTQUNGO1FBQ0QsU0FBUyxFQUFFLGFBQWEsQ0FBQyxHQUFHO0tBQzdCO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9waXBlbGluZS50cz9iMzBmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlbmRlck1lc2ggfSBmcm9tIFwiLi9yZW5kZXJNZXNoXCJcbmltcG9ydCB7IFJlbmRlckxpbmVzIH0gZnJvbSBcIi4vcmVuZGVyTGluZXNcIlxuaW1wb3J0IHsgUmVuZGVyUG9pbnRzIH0gZnJvbSBcIi4vcmVuZGVyUG9pbnRzXCI7XG5cbmV4cG9ydCBlbnVtIFBpcGVsaW5lUHJpbWl0aXZlIHtcbiAgVHJpYW5nbGUsXG4gIExpbmUsXG4gIFBvaW50LFxufVxuXG5leHBvcnQgY2xhc3MgUGlwZWxpbmUge1xuXG5cbiAgcHJpdmF0ZSBncHVQaXBlbGluZTogR1BVUmVuZGVyUGlwZWxpbmU7XG5cbiAgY29uc3RydWN0b3IoZGV2aWNlOiBHUFVEZXZpY2UsIGZvcm1hdDogR1BVVGV4dHVyZUZvcm1hdCwgbGF5b3V0czogR1BVQmluZEdyb3VwTGF5b3V0W10sIHNoYWRlck1vZHVsZTogR1BVU2hhZGVyTW9kdWxlLCBwcmltaXRpdmU6IFBpcGVsaW5lUHJpbWl0aXZlLCBzYW1wbGVzOiBudW1iZXIpIHtcblxuXG4gICAgY29uc3QgcGlwZWxpbmVMYXlvdXQ6IEdQVVBpcGVsaW5lTGF5b3V0ID0gZGV2aWNlLmNyZWF0ZVBpcGVsaW5lTGF5b3V0KHtcbiAgICAgIGxhYmVsOiBnZXRMYWJlbChwcmltaXRpdmUpICsgXCIgbGFiZWxcIixcbiAgICAgIGJpbmRHcm91cExheW91dHM6IGxheW91dHMsXG4gICAgfSk7XG5cbiAgICB0aGlzLmdwdVBpcGVsaW5lID0gZGV2aWNlLmNyZWF0ZVJlbmRlclBpcGVsaW5lKHtcbiAgICAgIGxhYmVsOiBnZXRMYWJlbChwcmltaXRpdmUpLFxuICAgICAgcHJpbWl0aXZlOiB7XG4gICAgICAgIHRvcG9sb2d5OiBnZXRUb3BvbG9neShwcmltaXRpdmUpLFxuICAgICAgICBjdWxsTW9kZTogXCJub25lXCJcbiAgICAgIH0sXG4gICAgICBsYXlvdXQ6IHBpcGVsaW5lTGF5b3V0LFxuICAgICAgZGVwdGhTdGVuY2lsOiB7XG4gICAgICAgIGRlcHRoV3JpdGVFbmFibGVkOiB0cnVlLFxuICAgICAgICBkZXB0aENvbXBhcmU6IFwibGVzc1wiLFxuICAgICAgICBmb3JtYXQ6IFwiZGVwdGgyNHBsdXNcIlxuICAgICAgfSxcbiAgICAgIHZlcnRleDoge1xuICAgICAgICBtb2R1bGU6IHNoYWRlck1vZHVsZSxcbiAgICAgICAgZW50cnlQb2ludDogXCJ2ZXJ0ZXhNYWluXCIsXG4gICAgICAgIGJ1ZmZlcnM6IFtnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQocHJpbWl0aXZlKV1cbiAgICAgIH0sXG4gICAgICBmcmFnbWVudDoge1xuICAgICAgICBtb2R1bGU6IHNoYWRlck1vZHVsZSxcbiAgICAgICAgZW50cnlQb2ludDogXCJmcmFnbWVudE1haW5cIixcbiAgICAgICAgdGFyZ2V0czogW1xuICAgICAgICAgIGdldFRhcmdldChmb3JtYXQpXG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBtdWx0aXNhbXBsZToge1xuICAgICAgICBjb3VudDogc2FtcGxlc1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGdldCgpOiBHUFVSZW5kZXJQaXBlbGluZSB7XG4gICAgcmV0dXJuIHRoaXMuZ3B1UGlwZWxpbmU7XG4gIH1cblxufVxuXG5mdW5jdGlvbiBnZXRUb3BvbG9neShwcmltaXRpdmU6IFBpcGVsaW5lUHJpbWl0aXZlKTogR1BVUHJpbWl0aXZlVG9wb2xvZ3kge1xuICBzd2l0Y2ggKHByaW1pdGl2ZSkge1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuVHJpYW5nbGU6IHJldHVybiBcInRyaWFuZ2xlLWxpc3RcIjtcbiAgICBjYXNlIFBpcGVsaW5lUHJpbWl0aXZlLkxpbmU6IHJldHVybiBcImxpbmUtbGlzdFwiO1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuUG9pbnQ6IHJldHVybiBcInBvaW50LWxpc3RcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS5lcnJvcihcInVuaW1wbGVtZW50ZWQgcHJpbWl0aXZlXCIpO1xuICAgICAgcmV0dXJuIFwidHJpYW5nbGUtbGlzdFwiO1xuICB9XG59XG5mdW5jdGlvbiBnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQocHJpbWl0aXZlOiBQaXBlbGluZVByaW1pdGl2ZSk6IEdQVVZlcnRleEJ1ZmZlckxheW91dCB7XG4gIHN3aXRjaCAocHJpbWl0aXZlKSB7XG4gICAgY2FzZSBQaXBlbGluZVByaW1pdGl2ZS5UcmlhbmdsZTogcmV0dXJuIFJlbmRlck1lc2guZ2V0VmVydGV4QnVmZmVyTGF5b3V0KCk7XG4gICAgY2FzZSBQaXBlbGluZVByaW1pdGl2ZS5MaW5lOiByZXR1cm4gUmVuZGVyTGluZXMuZ2V0VmVydGV4QnVmZmVyTGF5b3V0KCk7XG4gICAgY2FzZSBQaXBlbGluZVByaW1pdGl2ZS5Qb2ludDogcmV0dXJuIFJlbmRlclBvaW50cy5nZXRWZXJ0ZXhCdWZmZXJMYXlvdXQoKTtcbiAgICBkZWZhdWx0OlxuICAgICAgY29uc29sZS5lcnJvcihcInVuaW1wbGVtZW50ZWQgcHJpbWl0aXZlXCIpO1xuICAgICAgcmV0dXJuIFJlbmRlck1lc2guZ2V0VmVydGV4QnVmZmVyTGF5b3V0KCk7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldExhYmVsKHByaW1pdGl2ZTogUGlwZWxpbmVQcmltaXRpdmUpOiBzdHJpbmcge1xuICBzd2l0Y2ggKHByaW1pdGl2ZSkge1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuVHJpYW5nbGU6IHJldHVybiBcInRyaW5hZ2xlIHBpcGVsaW5lXCI7XG4gICAgY2FzZSBQaXBlbGluZVByaW1pdGl2ZS5MaW5lOiByZXR1cm4gXCJsaW5lIHBpcGVsaW5lXCI7XG4gICAgY2FzZSBQaXBlbGluZVByaW1pdGl2ZS5Qb2ludDogcmV0dXJuIFwicG9pbnQgcGlwZWxpbmVcIjtcbiAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoXCJub3QgaW1wbGVtZW50ZWRcIik7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KGZvcm1hdDogR1BVVGV4dHVyZUZvcm1hdCk6IEdQVUNvbG9yVGFyZ2V0U3RhdGUge1xuICBpZiAodHJ1ZSkge1xuICAgIC8vaWYgKGZvcm1hdCA9PT0gXCJyMzJzaW50XCIpIHsgLy8gVE9ETzpcbiAgICByZXR1cm4ge1xuICAgICAgZm9ybWF0OiBmb3JtYXRcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBmb3JtYXQ6IGZvcm1hdCxcbiAgICBibGVuZDoge1xuICAgICAgY29sb3I6IHtcbiAgICAgICAgb3BlcmF0aW9uOiAnYWRkJyxcbiAgICAgICAgc3JjRmFjdG9yOiAnc3JjLWFscGhhJyxcbiAgICAgICAgZHN0RmFjdG9yOiAnb25lLW1pbnVzLXNyYy1hbHBoYScsXG4gICAgICB9LFxuICAgICAgYWxwaGE6IHtcbiAgICAgICAgb3BlcmF0aW9uOiAnYWRkJyxcbiAgICAgICAgc3JjRmFjdG9yOiAnb25lJyxcbiAgICAgICAgZHN0RmFjdG9yOiAnb25lLW1pbnVzLXNyYy1hbHBoYScsXG4gICAgICB9LFxuICAgIH0sXG4gICAgd3JpdGVNYXNrOiBHUFVDb2xvcldyaXRlLkFMTCxcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/pipeline.ts\n");

/***/ }),

/***/ "./src/render/renderLines.ts":
/*!***********************************!*\
  !*** ./src/render/renderLines.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderLines: () => (/* binding */ RenderLines)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderable */ \"./src/render/renderable.ts\");\n\n\nclass RenderLines extends _renderable__WEBPACK_IMPORTED_MODULE_1__.Renderable {\n    constructor(parent, vertices, indices, subSelection) {\n        super(parent, subSelection);\n        // vertex\n        const vertexList = [];\n        for (const vert of vertices) {\n            vertexList.push(...vert, 1);\n        }\n        const vertexArray = new Float32Array(vertexList);\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"vertex buffer\",\n            size: vertexArray.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertexArray);\n        // index\n        const indexArray = new Uint32Array(indices);\n        this.indexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"index buffer\",\n            size: indexArray.byteLength,\n            usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.indexBuffer, 0, indexArray);\n        this.indexCount = indices.length;\n    }\n    updateVerts(verts) {\n        const vertexList = [];\n        for (const vert of verts) {\n            vertexList.push(...vert, 1);\n        }\n        const vertexArray = new Float32Array(vertexList);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertexArray);\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount);\n    }\n    static getVertexBufferLayout() {\n        return RenderLines.vertexBufferLayout;\n    }\n}\nRenderLines.vertexBufferLayout = {\n    arrayStride: 16,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWtCLENBQUM7SUFDeEMsQ0FBQzs7QUFyRXVCLDhCQUFrQixHQUEwQjtJQUNsRSxXQUFXLEVBQUUsRUFBRTtJQUNmLFVBQVUsRUFBRTtRQUNWO1lBQ0UsTUFBTSxFQUFFLFdBQVc7WUFDbkIsTUFBTSxFQUFFLENBQUM7WUFDVCxjQUFjLEVBQUUsQ0FBQztTQUNsQjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9yZW5kZXJMaW5lcy50cz9kYjUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiXG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi9nZW9tZXRyeS9nZW9tZXRyeVwiO1xuaW1wb3J0IHsgUmVuZGVyYWJsZSB9IGZyb20gXCIuL3JlbmRlcmFibGVcIjtcblxuZXhwb3J0IGNsYXNzIFJlbmRlckxpbmVzIGV4dGVuZHMgUmVuZGVyYWJsZSB7XG5cbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgdmVydGV4QnVmZmVyTGF5b3V0OiBHUFVWZXJ0ZXhCdWZmZXJMYXlvdXQgPSB7XG4gICAgYXJyYXlTdHJpZGU6IDE2LFxuICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgIHsgLy8gbG9jYXRpb25cbiAgICAgICAgZm9ybWF0OiBcImZsb2F0MzJ4NFwiLFxuICAgICAgICBvZmZzZXQ6IDAsXG4gICAgICAgIHNoYWRlckxvY2F0aW9uOiAwLFxuICAgICAgfVxuICAgIF1cbiAgfTtcblxuICBwcml2YXRlIHZlcnRleEJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcml2YXRlIGluZGV4QnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByaXZhdGUgaW5kZXhDb3VudDogbnVtYmVyO1xuXG5cbiAgY29uc3RydWN0b3IoXG4gICAgcGFyZW50OiBHZW9tZXRyeSxcbiAgICB2ZXJ0aWNlczogVmVjM1tdLFxuICAgIGluZGljZXM6IG51bWJlcltdLFxuICAgIHN1YlNlbGVjdGlvbjogYm9vbGVhbltdXG4gICkge1xuXG4gICAgc3VwZXIocGFyZW50LCBzdWJTZWxlY3Rpb24pO1xuXG4gICAgLy8gdmVydGV4XG4gICAgY29uc3QgdmVydGV4TGlzdDogbnVtYmVyW10gPSBbXVxuICAgIGZvciAoY29uc3QgdmVydCBvZiB2ZXJ0aWNlcykge1xuICAgICAgdmVydGV4TGlzdC5wdXNoKC4uLnZlcnQsIDEpO1xuICAgIH1cbiAgICBjb25zdCB2ZXJ0ZXhBcnJheTogRmxvYXQzMkFycmF5ID0gbmV3IEZsb2F0MzJBcnJheSh2ZXJ0ZXhMaXN0KTtcbiAgICB0aGlzLnZlcnRleEJ1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcInZlcnRleCBidWZmZXJcIixcbiAgICAgIHNpemU6IHZlcnRleEFycmF5LmJ5dGVMZW5ndGgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVkVSVEVYIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLnZlcnRleEJ1ZmZlciwgMCwgdmVydGV4QXJyYXkpO1xuXG4gICAgLy8gaW5kZXhcbiAgICBjb25zdCBpbmRleEFycmF5OiBVaW50MzJBcnJheSA9IG5ldyBVaW50MzJBcnJheShpbmRpY2VzKTtcbiAgICB0aGlzLmluZGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwiaW5kZXggYnVmZmVyXCIsXG4gICAgICBzaXplOiBpbmRleEFycmF5LmJ5dGVMZW5ndGgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuSU5ERVggfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMuaW5kZXhCdWZmZXIsIDAsIGluZGV4QXJyYXkpO1xuICAgIHRoaXMuaW5kZXhDb3VudCA9IGluZGljZXMubGVuZ3RoO1xuXG4gIH1cblxuICB1cGRhdGVWZXJ0cyh2ZXJ0czogVmVjM1tdKSB7XG4gICAgY29uc3QgdmVydGV4TGlzdDogbnVtYmVyW10gPSBbXVxuICAgIGZvciAoY29uc3QgdmVydCBvZiB2ZXJ0cykge1xuICAgICAgdmVydGV4TGlzdC5wdXNoKC4uLnZlcnQsIDEpO1xuICAgIH1cbiAgICBjb25zdCB2ZXJ0ZXhBcnJheTogRmxvYXQzMkFycmF5ID0gbmV3IEZsb2F0MzJBcnJheSh2ZXJ0ZXhMaXN0KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMudmVydGV4QnVmZmVyLCAwLCB2ZXJ0ZXhBcnJheSk7XG4gIH1cblxuICBwdWJsaWMgZHJhdyhwYXNzOiBHUFVSZW5kZXJQYXNzRW5jb2Rlcik6IHZvaWQge1xuICAgIGlmICh0aGlzLnBhcmVudC5pc0hpZGRlbigpKSByZXR1cm47XG4gICAgcGFzcy5zZXRCaW5kR3JvdXAoMCwgdGhpcy5iaW5kR3JvdXApO1xuICAgIHBhc3Muc2V0VmVydGV4QnVmZmVyKDAsIHRoaXMudmVydGV4QnVmZmVyKTtcbiAgICBwYXNzLnNldEluZGV4QnVmZmVyKHRoaXMuaW5kZXhCdWZmZXIsIFwidWludDMyXCIpO1xuICAgIHBhc3MuZHJhd0luZGV4ZWQodGhpcy5pbmRleENvdW50KTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZ2V0VmVydGV4QnVmZmVyTGF5b3V0KCk6IEdQVVZlcnRleEJ1ZmZlckxheW91dCB7XG4gICAgcmV0dXJuIFJlbmRlckxpbmVzLnZlcnRleEJ1ZmZlckxheW91dDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renderLines.ts\n");

/***/ }),

/***/ "./src/render/renderMesh.ts":
/*!**********************************!*\
  !*** ./src/render/renderMesh.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderMesh: () => (/* binding */ RenderMesh)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderable */ \"./src/render/renderable.ts\");\n\n\nclass RenderMesh extends _renderable__WEBPACK_IMPORTED_MODULE_1__.Renderable {\n    constructor(parent, vertices, normals, indices, subSelection, constantScreenSize = false) {\n        super(parent, subSelection, constantScreenSize);\n        //vertex\n        const vertexList = [];\n        for (let i = 0; i < vertices.length; i++) {\n            vertexList.push(...vertices[i], 1, ...normals[i], 0);\n        }\n        const vertexArray = new Float32Array(vertexList);\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"vertex buffer\",\n            size: vertexArray.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertexArray);\n        //index\n        const indexArray = new Uint32Array(indices);\n        this.indexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"index buffer\",\n            size: indexArray.byteLength,\n            usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.indexBuffer, 0, indexArray);\n        this.indexCount = indices.length;\n    }\n    isOverlay() {\n        return this.parent.isOverlay();\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount);\n    }\n    static getVertexBufferLayout() {\n        return this.vertexBufferLayout;\n    }\n}\nRenderMesh.vertexBufferLayout = {\n    arrayStride: 32,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }, {\n            format: \"float32x4\",\n            offset: 16,\n            shaderLocation: 1,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBTSxFQUFFLENBQUM7WUFDVCxjQUFjLEVBQUUsQ0FBQztTQUNsQixFQUFFO1lBQ0QsTUFBTSxFQUFFLFdBQVc7WUFDbkIsTUFBTSxFQUFFLEVBQUU7WUFDVixjQUFjLEVBQUUsQ0FBQztTQUNsQjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9yZW5kZXJNZXNoLnRzPzRmMjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL2dlb21ldHJ5L2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBSZW5kZXJhYmxlIH0gZnJvbSBcIi4vcmVuZGVyYWJsZVwiO1xuXG5leHBvcnQgY2xhc3MgUmVuZGVyTWVzaCBleHRlbmRzIFJlbmRlcmFibGUge1xuXG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IHZlcnRleEJ1ZmZlckxheW91dDogR1BVVmVydGV4QnVmZmVyTGF5b3V0ID0ge1xuICAgIGFycmF5U3RyaWRlOiAzMixcbiAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICB7IC8vIGxvY2F0aW9uXG4gICAgICAgIGZvcm1hdDogXCJmbG9hdDMyeDRcIixcbiAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICBzaGFkZXJMb2NhdGlvbjogMCxcbiAgICAgIH0sIHsgLy8gbm9ybWFsXG4gICAgICAgIGZvcm1hdDogXCJmbG9hdDMyeDRcIixcbiAgICAgICAgb2Zmc2V0OiAxNixcbiAgICAgICAgc2hhZGVyTG9jYXRpb246IDEsXG4gICAgICB9XG4gICAgXVxuICB9O1xuXG4gIHByb3RlY3RlZCB2ZXJ0ZXhCdWZmZXI6IEdQVUJ1ZmZlcjtcbiAgcHJvdGVjdGVkIGluZGV4QnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByb3RlY3RlZCBpbmRleENvdW50OiBudW1iZXI7XG5cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwYXJlbnQ6IEdlb21ldHJ5LFxuICAgIHZlcnRpY2VzOiBWZWMzW10sXG4gICAgbm9ybWFsczogVmVjM1tdLFxuICAgIGluZGljZXM6IG51bWJlcltdLFxuICAgIHN1YlNlbGVjdGlvbjogYm9vbGVhbltdLFxuICAgIGNvbnN0YW50U2NyZWVuU2l6ZTogYm9vbGVhbiA9IGZhbHNlXG4gICkge1xuICAgIHN1cGVyKHBhcmVudCwgc3ViU2VsZWN0aW9uLCBjb25zdGFudFNjcmVlblNpemUpO1xuXG4gICAgLy92ZXJ0ZXhcbiAgICBjb25zdCB2ZXJ0ZXhMaXN0OiBudW1iZXJbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZlcnRleExpc3QucHVzaCguLi52ZXJ0aWNlc1tpXSwgMSwgLi4ubm9ybWFsc1tpXSwgMCk7XG4gICAgfVxuICAgIGNvbnN0IHZlcnRleEFycmF5OiBGbG9hdDMyQXJyYXkgPSBuZXcgRmxvYXQzMkFycmF5KHZlcnRleExpc3QpO1xuICAgIHRoaXMudmVydGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwidmVydGV4IGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogdmVydGV4QXJyYXkuYnl0ZUxlbmd0aCxcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5WRVJURVggfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMudmVydGV4QnVmZmVyLCAwLCB2ZXJ0ZXhBcnJheSk7XG5cbiAgICAvL2luZGV4XG4gICAgY29uc3QgaW5kZXhBcnJheTogVWludDMyQXJyYXkgPSBuZXcgVWludDMyQXJyYXkoaW5kaWNlcyk7XG4gICAgdGhpcy5pbmRleEJ1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcImluZGV4IGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogaW5kZXhBcnJheS5ieXRlTGVuZ3RoLFxuICAgICAgdXNhZ2U6IEdQVUJ1ZmZlclVzYWdlLklOREVYIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLmluZGV4QnVmZmVyLCAwLCBpbmRleEFycmF5KTtcbiAgICB0aGlzLmluZGV4Q291bnQgPSBpbmRpY2VzLmxlbmd0aDtcblxuICB9XG5cbiAgcHVibGljIGlzT3ZlcmxheSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnQuaXNPdmVybGF5KCk7XG4gIH1cblxuICBwdWJsaWMgZHJhdyhwYXNzOiBHUFVSZW5kZXJQYXNzRW5jb2Rlcik6IHZvaWQge1xuICAgIGlmICh0aGlzLnBhcmVudC5pc0hpZGRlbigpKSByZXR1cm47XG4gICAgcGFzcy5zZXRCaW5kR3JvdXAoMCwgdGhpcy5iaW5kR3JvdXApO1xuICAgIHBhc3Muc2V0VmVydGV4QnVmZmVyKDAsIHRoaXMudmVydGV4QnVmZmVyKTtcbiAgICBwYXNzLnNldEluZGV4QnVmZmVyKHRoaXMuaW5kZXhCdWZmZXIsIFwidWludDMyXCIpO1xuICAgIHBhc3MuZHJhd0luZGV4ZWQodGhpcy5pbmRleENvdW50KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQoKTogR1BVVmVydGV4QnVmZmVyTGF5b3V0IHtcbiAgICByZXR1cm4gdGhpcy52ZXJ0ZXhCdWZmZXJMYXlvdXQ7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/renderMesh.ts\n");

/***/ }),

/***/ "./src/render/renderPoints.ts":
/*!************************************!*\
  !*** ./src/render/renderPoints.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderPoints: () => (/* binding */ RenderPoints)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderable */ \"./src/render/renderable.ts\");\n\n\nclass RenderPoints extends _renderable__WEBPACK_IMPORTED_MODULE_1__.Renderable {\n    constructor(parent, points, subSelection) {\n        super(parent, subSelection);\n        // vertex\n        const verts = [];\n        for (let i = 0; i < points.length; i++)\n            verts.push(...points[i], 1);\n        const vertexArray = new Float32Array(verts);\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"points vertex buffer\",\n            size: vertexArray.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertexArray);\n        this.vertexCount = vertexArray.length / 4;\n        this.update();\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.draw(this.vertexCount);\n    }\n    static getVertexBufferLayout() {\n        return RenderPoints.vertexBufferLayout;\n    }\n}\nRenderPoints.vertexBufferLayout = {\n    arrayStride: 16,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3JlbmRlclBvaW50cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDaUM7QUFJUztBQUVuQyxNQUFNLFlBQWEsU0FBUSxtREFBVTtJQWdCMUMsWUFDRSxNQUFnQixFQUNoQixNQUFjLEVBQ2QsWUFBdUI7UUFHdkIsS0FBSyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztRQUU1QixTQUFTO1FBQ1QsTUFBTSxLQUFLLEdBQWEsRUFBRSxDQUFDO1FBQzNCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRTtZQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDcEUsTUFBTSxXQUFXLEdBQWlCLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxZQUFZLEdBQUcsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDbEUsS0FBSyxFQUFFLHNCQUFzQjtZQUM3QixJQUFJLEVBQUUsV0FBVyxDQUFDLFVBQVU7WUFDNUIsS0FBSyxFQUFFLGNBQWMsQ0FBQyxNQUFNLEdBQUcsY0FBYyxDQUFDLFFBQVE7U0FDdkQsQ0FBQyxDQUFDO1FBQ0gsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ3hGLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFFMUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFHTSxJQUFJLENBQUMsSUFBMEI7UUFDcEMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUFFLE9BQU87UUFDbkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sTUFBTSxDQUFDLHFCQUFxQjtRQUNqQyxPQUFPLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQztJQUN6QyxDQUFDOztBQS9DdUIsK0JBQWtCLEdBQTBCO0lBQ2xFLFdBQVcsRUFBRSxFQUFFO0lBQ2YsVUFBVSxFQUFFO1FBQ1Y7WUFDRSxNQUFNLEVBQUUsV0FBVztZQUNuQixNQUFNLEVBQUUsQ0FBQztZQUNULGNBQWMsRUFBRSxDQUFDO1NBQ2xCO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3JlbmRlclBvaW50cy50cz9kMWY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hdDQsIG1hdDQsIFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL2dlb21ldHJ5L2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBzd2l6emxlWVogfSBmcm9tIFwiLi4vdXRpbHMvbWF0aFwiO1xuaW1wb3J0IHsgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklULCBIT1ZFUl9CSVQsIFNFTEVDVEVEX0JJVCB9IGZyb20gXCIuL2ZsYWdzXCI7XG5pbXBvcnQgeyBSZW5kZXJhYmxlIH0gZnJvbSBcIi4vcmVuZGVyYWJsZVwiO1xuXG5leHBvcnQgY2xhc3MgUmVuZGVyUG9pbnRzIGV4dGVuZHMgUmVuZGVyYWJsZSB7XG5cbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgdmVydGV4QnVmZmVyTGF5b3V0OiBHUFVWZXJ0ZXhCdWZmZXJMYXlvdXQgPSB7XG4gICAgYXJyYXlTdHJpZGU6IDE2LFxuICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgIHsgLy8gbG9jYXRpb25cbiAgICAgICAgZm9ybWF0OiBcImZsb2F0MzJ4NFwiLFxuICAgICAgICBvZmZzZXQ6IDAsXG4gICAgICAgIHNoYWRlckxvY2F0aW9uOiAwLFxuICAgICAgfVxuICAgIF1cbiAgfTtcblxuICBwcml2YXRlIHZlcnRleEJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcml2YXRlIHZlcnRleENvdW50OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcGFyZW50OiBHZW9tZXRyeSxcbiAgICBwb2ludHM6IFZlYzNbXSxcbiAgICBzdWJTZWxlY3Rpb246IGJvb2xlYW5bXVxuICApIHtcblxuICAgIHN1cGVyKHBhcmVudCwgc3ViU2VsZWN0aW9uKTtcblxuICAgIC8vIHZlcnRleFxuICAgIGNvbnN0IHZlcnRzOiBudW1iZXJbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRzLmxlbmd0aDsgaSsrKSB2ZXJ0cy5wdXNoKC4uLnBvaW50c1tpXSwgMSk7XG4gICAgY29uc3QgdmVydGV4QXJyYXk6IEZsb2F0MzJBcnJheSA9IG5ldyBGbG9hdDMyQXJyYXkodmVydHMpO1xuICAgIHRoaXMudmVydGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwicG9pbnRzIHZlcnRleCBidWZmZXJcIixcbiAgICAgIHNpemU6IHZlcnRleEFycmF5LmJ5dGVMZW5ndGgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVkVSVEVYIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLnZlcnRleEJ1ZmZlciwgMCwgdmVydGV4QXJyYXkpO1xuICAgIHRoaXMudmVydGV4Q291bnQgPSB2ZXJ0ZXhBcnJheS5sZW5ndGggLyA0O1xuXG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxuXG5cbiAgcHVibGljIGRyYXcocGFzczogR1BVUmVuZGVyUGFzc0VuY29kZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wYXJlbnQuaXNIaWRkZW4oKSkgcmV0dXJuO1xuICAgIHBhc3Muc2V0QmluZEdyb3VwKDAsIHRoaXMuYmluZEdyb3VwKTtcbiAgICBwYXNzLnNldFZlcnRleEJ1ZmZlcigwLCB0aGlzLnZlcnRleEJ1ZmZlcik7XG4gICAgcGFzcy5kcmF3KHRoaXMudmVydGV4Q291bnQpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQoKTogR1BVVmVydGV4QnVmZmVyTGF5b3V0IHtcbiAgICByZXR1cm4gUmVuZGVyUG9pbnRzLnZlcnRleEJ1ZmZlckxheW91dDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renderPoints.ts\n");

/***/ }),

/***/ "./src/render/renderable.ts":
/*!**********************************!*\
  !*** ./src/render/renderable.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Renderable: () => (/* binding */ Renderable)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flags */ \"./src/render/flags.ts\");\n\n\n\n\nclass Renderable {\n    constructor(parent, subSelection, constantScreenSize = false) {\n        this.parent = parent;\n        this.constantScreenSize = constantScreenSize;\n        //model\n        this.modelBufferPoints = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"model points\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.modelBufferNormals = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"model normals\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        // id\n        this.objectIDBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"id buffer\",\n            size: 4,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        const objectIDArray = new Int32Array([this.parent.getID()]);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.objectIDBuffer, 0, objectIDArray);\n        //flags\n        this.flagsBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"renderable flag buffer\",\n            size: 4,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.flags = new Int32Array([0]);\n        if (this.constantScreenSize)\n            this.flags[0] |= _flags__WEBPACK_IMPORTED_MODULE_2__.CONSTANT_SCREEN_SIZE_BIT;\n        this.subSelectionBuffer = null;\n        this.updateSubSelection(subSelection);\n    }\n    setConstantScreenSpaceSize(on) {\n        if (on) {\n            this.flags[0] |= _flags__WEBPACK_IMPORTED_MODULE_2__.CONSTANT_SCREEN_SIZE_BIT;\n        }\n        else {\n            this.flags[0] &= ~_flags__WEBPACK_IMPORTED_MODULE_2__.CONSTANT_SCREEN_SIZE_BIT;\n        }\n    }\n    update() {\n        this.updateFlags();\n        this.updateModel();\n        this.updateBindGroup();\n    }\n    updateSubSelection(subSelection) {\n        const subSelectionList = [];\n        for (let i = 0; i < subSelection.length; i++) {\n            if (i % 32 === 0) {\n                subSelectionList.push(0);\n            }\n            if (subSelection[i]) {\n                subSelectionList[Math.floor(i / 32)] |= 1 << (i % 32);\n            }\n        }\n        const subSelectionArray = new Uint32Array(subSelectionList);\n        if (this.subSelectionBuffer === null) {\n            this.subSelectionBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n                label: \"sub selection buffer\",\n                size: subSelectionArray.byteLength,\n                usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n            });\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.subSelectionBuffer, 0, subSelectionArray);\n    }\n    updateFlags() {\n        if (this.parent.isSelected())\n            this.flags[0] |= _flags__WEBPACK_IMPORTED_MODULE_2__.SELECTED_BIT;\n        else\n            this.flags[0] &= ~_flags__WEBPACK_IMPORTED_MODULE_2__.SELECTED_BIT;\n        if (this.parent.isHovered())\n            this.flags[0] |= _flags__WEBPACK_IMPORTED_MODULE_2__.HOVER_BIT;\n        else\n            this.flags[0] &= ~_flags__WEBPACK_IMPORTED_MODULE_2__.HOVER_BIT;\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.flagsBuffer, 0, this.flags);\n    }\n    updateModel() {\n        const modelForPoints = this.parent.getModelRecursive();\n        const modelForNormals = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.transpose(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(modelForPoints));\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue\n            .writeBuffer(this.modelBufferPoints, 0, (0,_utils_math__WEBPACK_IMPORTED_MODULE_1__.swizzleYZ)(modelForPoints));\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue\n            .writeBuffer(this.modelBufferNormals, 0, (0,_utils_math__WEBPACK_IMPORTED_MODULE_1__.swizzleYZ)(modelForNormals));\n    }\n    updateBindGroup() {\n        this.bindGroup = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBindGroup({\n            label: \"renderable bind group\",\n            layout: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getBindGroupLayout(),\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.modelBufferPoints },\n                }, {\n                    binding: 1,\n                    resource: { buffer: this.modelBufferNormals },\n                }, {\n                    binding: 2,\n                    resource: { buffer: this.parent.getColorBuffer() },\n                }, {\n                    binding: 3,\n                    resource: { buffer: this.flagsBuffer }\n                }, {\n                    binding: 4,\n                    resource: { buffer: this.objectIDBuffer }\n                }, {\n                    binding: 5,\n                    resource: { buffer: this.subSelectionBuffer }\n                }\n            ]\n        });\n    }\n    getParent() {\n        return this.parent;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/render/renderable.ts\n");

/***/ }),

/***/ "./src/render/renderer.ts":
/*!********************************!*\
  !*** ./src/render/renderer.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Renderer: () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var _shaders_triangleShader_wgsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shaders/triangleShader.wgsl */ \"./src/render/shaders/triangleShader.wgsl\");\n/* harmony import */ var _shaders_lineShader_wgsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shaders/lineShader.wgsl */ \"./src/render/shaders/lineShader.wgsl\");\n/* harmony import */ var _shaders_pointShader_wgsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shaders/pointShader.wgsl */ \"./src/render/shaders/pointShader.wgsl\");\n/* harmony import */ var _shaders_instancedTriangleShader_wgsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shaders/instancedTriangleShader.wgsl */ \"./src/render/shaders/instancedTriangleShader.wgsl\");\n/* harmony import */ var _shaders_overlayMeshShader_wgsl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shaders/overlayMeshShader.wgsl */ \"./src/render/shaders/overlayMeshShader.wgsl\");\n/* harmony import */ var _shaders_idShader_wgsl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shaders/idShader.wgsl */ \"./src/render/shaders/idShader.wgsl\");\n/* harmony import */ var _pipeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pipeline */ \"./src/render/pipeline.ts\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _globalUniforms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./globalUniforms */ \"./src/render/globalUniforms.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\nconst compatibilityCheck = document.getElementById(\"compatibility-check\");\nclass Renderer {\n    constructor() {\n        this.clearColor = [0.1, 0.1, 0.1, 1.0];\n    }\n    getDevice() {\n        return this.device;\n    }\n    getBindGroupLayout() {\n        return this.bindGroupLayout;\n    }\n    getBindGroupLayoutInstanced() {\n        return this.bindGroupLayoutInstanced;\n    }\n    setClearColor(color) {\n        this.clearColor = color;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createDevice();\n            this.createResources();\n            this.createPipelines();\n            this.updateScreenSize();\n        });\n    }\n    createDevice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!navigator.gpu) {\n                alert(\"Your browser / computer does not support WebGPU.\");\n                compatibilityCheck.innerText = \"This browser does not support WebGPU. Check here for a list of supported browsers https://caniuse.com/webgpu\";\n                return;\n            }\n            var adapter;\n            try {\n                adapter = yield navigator.gpu.requestAdapter();\n            }\n            catch (error) {\n                console.log(error);\n            }\n            if (adapter == null) {\n                alert(\"Your browser / computer does not support WebGPU.\");\n                compatibilityCheck.innerText = \"No valid gpu adapter. Check here for a list of supported browsers https://caniuse.com/webgpu\";\n                return;\n            }\n            this.device = (yield adapter.requestDevice());\n            this.canvas = document.getElementById(\"screen\");\n            this.context = this.canvas.getContext(\"webgpu\");\n            this.canvasFormat = navigator.gpu.getPreferredCanvasFormat();\n            this.context.configure({\n                device: this.device,\n                format: this.canvasFormat,\n            });\n        });\n    }\n    getIdAtPixel(x, y) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // window is mirrored\n            x = window.innerWidth - x;\n            // TODO: factor buffer out\n            const idBuffer = this.device.createBuffer({\n                label: \"id dst buffer\",\n                size: 4,\n                usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ\n            });\n            const encoder = this.device.createCommandEncoder();\n            encoder.copyTextureToBuffer({ texture: this.idTexture, mipLevel: 0, origin: [x, y, 0] }, { buffer: idBuffer, bytesPerRow: 256, rowsPerImage: 1 }, [1, 1, 1]);\n            this.device.queue.submit([encoder.finish()]);\n            yield this.device.queue.onSubmittedWorkDone();\n            yield idBuffer.mapAsync(GPUMapMode.READ);\n            const data = new Int32Array(idBuffer.getMappedRange());\n            return data[0];\n        });\n    }\n    createResources() {\n        this.triangleShaderModule = this.device.createShaderModule({\n            label: \"triangle shader module\",\n            code: _shaders_triangleShader_wgsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        });\n        this.lineShaderModule = this.device.createShaderModule({\n            label: \"line shader module\",\n            code: _shaders_lineShader_wgsl__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        });\n        this.pointShaderModule = this.device.createShaderModule({\n            label: \"point shader module\",\n            code: _shaders_pointShader_wgsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        });\n        this.instancedTriangleShaderModule = this.device.createShaderModule({\n            label: \"instanced triangle shader module\",\n            code: _shaders_instancedTriangleShader_wgsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n        });\n        this.overlayMeshShaderModule = this.device.createShaderModule({\n            label: \"overlay mesh shader module\",\n            code: _shaders_overlayMeshShader_wgsl__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        });\n        this.idShaderModule = this.device.createShaderModule({\n            label: \"id shader module\",\n            code: _shaders_idShader_wgsl__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n        });\n        this.bindGroupLayout = this.device.createBindGroupLayout({\n            label: \"bind group layout\",\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 1,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {},\n                }, {\n                    binding: 2,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    buffer: {},\n                }, {\n                    binding: 3,\n                    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n                    buffer: {},\n                }, {\n                    binding: 4,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    buffer: {},\n                }, {\n                    binding: 5,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: { type: \"read-only-storage\" },\n                }\n            ]\n        });\n        // TODO: factor\n        this.bindGroupLayoutInstanced = this.device.createBindGroupLayout({\n            label: \"bind group layout instanced\",\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: { type: \"read-only-storage\" },\n                }\n            ]\n        });\n        this.globalUniforms = new _globalUniforms__WEBPACK_IMPORTED_MODULE_8__.GlobalUniforms(this.device);\n        this.updateScreenSize();\n    }\n    createPipelines() {\n        this.trianglePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_6__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.triangleShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_6__.PipelinePrimitive.Triangle, 4);\n        this.linePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_6__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.lineShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_6__.PipelinePrimitive.Line, 4);\n        this.pointPipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_6__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.pointShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_6__.PipelinePrimitive.Point, 4);\n        this.instancedTrianglePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_6__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout(), this.bindGroupLayoutInstanced], this.instancedTriangleShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_6__.PipelinePrimitive.Triangle, 4);\n        this.overlayMeshPipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_6__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.overlayMeshShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_6__.PipelinePrimitive.Triangle, 4);\n        this.idRasterPipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_6__.Pipeline(this.device, \"r32sint\", [this.bindGroupLayout, this.globalUniforms.getLayout()], this.idShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_6__.PipelinePrimitive.Triangle, 1);\n    }\n    updateScreenSize() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n        this.depthTextureSuperSample = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 4,\n            format: \"depth24plus\",\n            usage: GPUTextureUsage.RENDER_ATTACHMENT\n        });\n        this.renderTarget = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 4,\n            format: this.canvasFormat,\n            usage: GPUTextureUsage.RENDER_ATTACHMENT\n        });\n        this.idTexture = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 1,\n            format: \"r32sint\",\n            usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\n        });\n        this.depthTexture = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 1,\n            format: \"depth24plus\",\n            usage: GPUTextureUsage.RENDER_ATTACHMENT\n        });\n    }\n    render(scene) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Factor this stuff out of main loop\n            this.globalUniforms.tick();\n            var drawCallCounter = 0;\n            const encoder = this.device.createCommandEncoder();\n            // mainPass  ================================\n            const mainPass = encoder.beginRenderPass({\n                label: \"main pass\",\n                colorAttachments: [\n                    {\n                        view: this.renderTarget.createView(),\n                        resolveTarget: this.context.getCurrentTexture().createView(),\n                        loadOp: \"clear\",\n                        clearValue: this.clearColor,\n                        storeOp: \"store\",\n                    },\n                ],\n                depthStencilAttachment: {\n                    view: this.depthTextureSuperSample.createView(),\n                    depthClearValue: 1.0,\n                    depthLoadOp: \"clear\",\n                    depthStoreOp: \"store\"\n                }\n            });\n            this.globalUniforms.bind(mainPass);\n            mainPass.setPipeline(this.trianglePipeline.get());\n            for (let mesh of scene.getAllMeshes()) {\n                if (!mesh.isOverlay()) {\n                    mesh.draw(mainPass);\n                    drawCallCounter++;\n                }\n            }\n            ;\n            mainPass.setPipeline(this.linePipeline.get());\n            for (let lines of scene.getAllLines()) {\n                lines.draw(mainPass);\n                drawCallCounter++;\n            }\n            ;\n            mainPass.setPipeline(this.pointPipeline.get());\n            for (let points of scene.getAllPoints()) {\n                points.draw(mainPass);\n                drawCallCounter++;\n            }\n            mainPass.setPipeline(this.instancedTrianglePipeline.get());\n            for (let mesh of scene.getAllMeshesInstanced()) {\n                mesh.draw(mainPass);\n                drawCallCounter++;\n            }\n            mainPass.end();\n            // Overlay Pass ================================\n            const overlayPass = encoder.beginRenderPass({\n                label: \"overlay pass\",\n                colorAttachments: [\n                    {\n                        view: this.renderTarget.createView(),\n                        resolveTarget: this.context.getCurrentTexture().createView(),\n                        loadOp: \"load\",\n                        clearValue: this.clearColor,\n                        storeOp: \"store\",\n                    },\n                ],\n                depthStencilAttachment: {\n                    view: this.depthTextureSuperSample.createView(),\n                    depthClearValue: 1.0,\n                    depthLoadOp: \"clear\",\n                    depthStoreOp: \"store\"\n                }\n            });\n            overlayPass.setPipeline(this.overlayMeshPipeline.get());\n            this.globalUniforms.bind(overlayPass);\n            for (let mesh of scene.getAllMeshes()) {\n                if (mesh.isOverlay()) {\n                    mesh.draw(overlayPass);\n                    drawCallCounter++;\n                }\n            }\n            overlayPass.end();\n            // ID Pass ================================\n            // rasterize ids for mouse picking\n            const idPass = encoder.beginRenderPass({\n                label: \"id pass\",\n                colorAttachments: [\n                    {\n                        view: this.idTexture.createView(),\n                        loadOp: \"clear\",\n                        clearValue: [0, 0, 0, 0],\n                        storeOp: \"store\",\n                    },\n                ],\n                depthStencilAttachment: {\n                    view: this.depthTexture.createView(),\n                    depthClearValue: 1.0,\n                    depthLoadOp: \"clear\",\n                    depthStoreOp: \"store\" // prolly dont need to store this TODO:\n                }\n            });\n            idPass.setPipeline(this.idRasterPipeline.get());\n            this.globalUniforms.bind(idPass);\n            for (let mesh of scene.getAllMeshes()) {\n                if (mesh.isOverlay()) {\n                    mesh.draw(idPass);\n                    drawCallCounter++;\n                }\n            }\n            idPass.end();\n            const commandBuffer = encoder.finish();\n            this.device.queue.submit([commandBuffer]);\n            _cad__WEBPACK_IMPORTED_MODULE_7__.INSTANCE.getStats().setDrawCalls(drawCallCounter);\n            yield this.device.queue.onSubmittedWorkDone();\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/render/renderer.ts\n");

/***/ }),

/***/ "./src/render/renterMeshInstanced.ts":
/*!*******************************************!*\
  !*** ./src/render/renterMeshInstanced.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderMeshInstanced: () => (/* binding */ RenderMeshInstanced)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderMesh */ \"./src/render/renderMesh.ts\");\n\n\nclass RenderMeshInstanced extends _renderMesh__WEBPACK_IMPORTED_MODULE_1__.RenderMesh {\n    constructor(parent, vertices, normals, indices, transforms, subSelection, constantScreenSpaceSize = false) {\n        super(parent, vertices, normals, indices, subSelection, constantScreenSpaceSize);\n        this.instanceCount = transforms.length;\n        const transformsList = [];\n        for (let i = 0; i < transforms.length; i++)\n            transformsList.push(...transforms[i]);\n        const transformsArray = new Float32Array(transformsList);\n        this.transformBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"transform array\",\n            size: transformsArray.byteLength,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.transformBuffer, 0, transformsArray);\n    }\n    updateTransforms(transforms) {\n        const transformsList = [];\n        for (let i = 0; i < transforms.length; i++)\n            transformsList.push(...transforms[i]);\n        const transformsArray = new Float32Array(transformsList);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.transformBuffer, 0, transformsArray);\n    }\n    updateBindGroup() {\n        super.updateBindGroup();\n        this.instanceBindGroup = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBindGroup({\n            label: \"bind group instanced mesh\",\n            layout: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getBindGroupLayoutInstanced(),\n            entries: [{\n                    binding: 0,\n                    resource: { buffer: this.transformBuffer }\n                }]\n        });\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setBindGroup(2, this.instanceBindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount, this.instanceCount);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDeEQsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3JlbnRlck1lc2hJbnN0YW5jZWQudHM/OGFjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiXG5pbXBvcnQgeyBtYXQ0LCBNYXQ0LCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL2dlb21ldHJ5L2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBSZW5kZXJNZXNoIH0gZnJvbSBcIi4vcmVuZGVyTWVzaFwiO1xuXG5leHBvcnQgY2xhc3MgUmVuZGVyTWVzaEluc3RhbmNlZCBleHRlbmRzIFJlbmRlck1lc2gge1xuXG4gIHByaXZhdGUgaW5zdGFuY2VDb3VudDogbnVtYmVyO1xuICBwcml2YXRlIHRyYW5zZm9ybUJ1ZmZlciE6IEdQVUJ1ZmZlcjtcbiAgcHJpdmF0ZSBpbnN0YW5jZUJpbmRHcm91cCE6IEdQVUJpbmRHcm91cDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwYXJlbnQ6IEdlb21ldHJ5LFxuICAgIHZlcnRpY2VzOiBWZWMzW10sXG4gICAgbm9ybWFsczogVmVjM1tdLFxuICAgIGluZGljZXM6IG51bWJlcltdLFxuICAgIHRyYW5zZm9ybXM6IE1hdDRbXSxcbiAgICBzdWJTZWxlY3Rpb246IGJvb2xlYW5bXSxcbiAgICBjb25zdGFudFNjcmVlblNwYWNlU2l6ZTogYm9vbGVhbiA9IGZhbHNlLFxuICApIHtcbiAgICBzdXBlcihwYXJlbnQsIHZlcnRpY2VzLCBub3JtYWxzLCBpbmRpY2VzLCBzdWJTZWxlY3Rpb24sIGNvbnN0YW50U2NyZWVuU3BhY2VTaXplKTtcblxuICAgIHRoaXMuaW5zdGFuY2VDb3VudCA9IHRyYW5zZm9ybXMubGVuZ3RoO1xuXG4gICAgY29uc3QgdHJhbnNmb3Jtc0xpc3Q6IG51bWJlcltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmFuc2Zvcm1zLmxlbmd0aDsgaSsrKSB0cmFuc2Zvcm1zTGlzdC5wdXNoKC4uLnRyYW5zZm9ybXNbaV0pO1xuICAgIGNvbnN0IHRyYW5zZm9ybXNBcnJheTogRmxvYXQzMkFycmF5ID0gbmV3IEZsb2F0MzJBcnJheSh0cmFuc2Zvcm1zTGlzdCk7XG4gICAgdGhpcy50cmFuc2Zvcm1CdWZmZXIgPSBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLmNyZWF0ZUJ1ZmZlcih7XG4gICAgICBsYWJlbDogXCJ0cmFuc2Zvcm0gYXJyYXlcIixcbiAgICAgIHNpemU6IHRyYW5zZm9ybXNBcnJheS5ieXRlTGVuZ3RoLFxuICAgICAgdXNhZ2U6IEdQVUJ1ZmZlclVzYWdlLlNUT1JBR0UgfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMudHJhbnNmb3JtQnVmZmVyLCAwLCB0cmFuc2Zvcm1zQXJyYXkpO1xuXG4gIH1cblxuICBwdWJsaWMgdXBkYXRlVHJhbnNmb3Jtcyh0cmFuc2Zvcm1zOiBNYXQ0W10pIHtcbiAgICBjb25zdCB0cmFuc2Zvcm1zTGlzdDogbnVtYmVyW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRyYW5zZm9ybXMubGVuZ3RoOyBpKyspIHRyYW5zZm9ybXNMaXN0LnB1c2goLi4udHJhbnNmb3Jtc1tpXSk7XG4gICAgY29uc3QgdHJhbnNmb3Jtc0FycmF5OiBGbG9hdDMyQXJyYXkgPSBuZXcgRmxvYXQzMkFycmF5KHRyYW5zZm9ybXNMaXN0KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMudHJhbnNmb3JtQnVmZmVyLCAwLCB0cmFuc2Zvcm1zQXJyYXkpO1xuICB9XG5cblxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgdXBkYXRlQmluZEdyb3VwKCk6IHZvaWQge1xuICAgIHN1cGVyLnVwZGF0ZUJpbmRHcm91cCgpO1xuICAgIHRoaXMuaW5zdGFuY2VCaW5kR3JvdXAgPSBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLmNyZWF0ZUJpbmRHcm91cCh7XG4gICAgICBsYWJlbDogXCJiaW5kIGdyb3VwIGluc3RhbmNlZCBtZXNoXCIsXG4gICAgICBsYXlvdXQ6IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0QmluZEdyb3VwTGF5b3V0SW5zdGFuY2VkKCksXG4gICAgICBlbnRyaWVzOiBbe1xuICAgICAgICBiaW5kaW5nOiAwLFxuICAgICAgICByZXNvdXJjZTogeyBidWZmZXI6IHRoaXMudHJhbnNmb3JtQnVmZmVyIH1cbiAgICAgIH1dXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgZHJhdyhwYXNzOiBHUFVSZW5kZXJQYXNzRW5jb2Rlcik6IHZvaWQge1xuICAgIGlmICh0aGlzLnBhcmVudC5pc0hpZGRlbigpKSByZXR1cm47XG4gICAgcGFzcy5zZXRCaW5kR3JvdXAoMCwgdGhpcy5iaW5kR3JvdXApO1xuICAgIHBhc3Muc2V0QmluZEdyb3VwKDIsIHRoaXMuaW5zdGFuY2VCaW5kR3JvdXApO1xuICAgIHBhc3Muc2V0VmVydGV4QnVmZmVyKDAsIHRoaXMudmVydGV4QnVmZmVyKTtcbiAgICBwYXNzLnNldEluZGV4QnVmZmVyKHRoaXMuaW5kZXhCdWZmZXIsIFwidWludDMyXCIpO1xuICAgIHBhc3MuZHJhd0luZGV4ZWQodGhpcy5pbmRleENvdW50LCB0aGlzLmluc3RhbmNlQ291bnQpO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/render/renterMeshInstanced.ts\n");

/***/ }),

/***/ "./src/scene/camera.ts":
/*!*****************************!*\
  !*** ./src/scene/camera.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Camera: () => (/* binding */ Camera)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mode */ \"./src/mode.ts\");\n\n\n\n\n\nclass Camera {\n    constructor(position, up, forward, fovy, screen) {\n        this.position = position;\n        this.up = up;\n        this.forward = forward;\n        this.fovy = fovy;\n        this.screen = screen;\n        this.isTurningRight = false;\n        this.isTurningLeft = false;\n        this.isMovingForward = false;\n        this.isMovingBackward = false;\n        this.isLookingUp = false;\n        this.isLookingDown = false;\n        this.isMovingLeft = false;\n        this.isMovingRight = false;\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(this.up);\n        this.lastFrameTime = performance.now();\n        this.viewProj = new Float32Array(16);\n        this.addEvents();\n    }\n    getViewProj() {\n        return this.viewProj;\n    }\n    getPosition() {\n        return this.position;\n    }\n    getFovy() {\n        return this.fovy;\n    }\n    setFovy(newFovy) {\n        this.fovy = newFovy;\n        this.updateViewProj();\n    }\n    getPixelAtPoint(point) {\n        const dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(point, this.position));\n        const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(this.position, this.forward);\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.forward, this.up);\n        const xRes = window.innerWidth;\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        const sizeX = sizeY / yRes * xRes;\n        const ray = new _geometry_ray__WEBPACK_IMPORTED_MODULE_2__.Ray(this.position, dir);\n        const tScreen = ray.intersectPlane(new _geometry_plane__WEBPACK_IMPORTED_MODULE_1__.Plane(center, this.forward), true);\n        const pScreen = ray.at(tScreen);\n        const topLeft = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(this.up, sizeY / 2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(right, sizeX / -2)));\n        const topLeftToPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(pScreen, topLeft);\n        const x = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.dot(topLeftToPoint, right);\n        const y = -wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.dot(topLeftToPoint, this.up);\n        return [\n            Math.floor(x / sizeX * xRes),\n            Math.floor(y / sizeY * yRes)\n        ];\n    }\n    getRayAtPixel(x, y) {\n        const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(this.position, this.forward);\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.forward, this.up);\n        const xRes = window.innerWidth;\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        const sizeX = sizeY / yRes * xRes;\n        const screenPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(right, sizeX / xRes * (x - xRes / 2.0)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(this.up, sizeY / yRes * (y - yRes / 2.0))));\n        return new _geometry_ray__WEBPACK_IMPORTED_MODULE_2__.Ray(this.position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(screenPoint, this.position));\n    }\n    pixelSizeAtDist(dist) {\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        return sizeY / yRes * dist;\n    }\n    addEvents() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.isTurningLeft = true;\n                    break;\n                case 'ArrowRight':\n                    this.isTurningRight = true;\n                    break;\n                case 'ArrowUp':\n                    this.isLookingUp = true;\n                    break;\n                case 'ArrowDown':\n                    this.isLookingDown = true;\n                    break;\n                case 'KeyW':\n                    this.isMovingForward = true;\n                    break;\n                case 'KeyS':\n                    this.isMovingBackward = true;\n                    break;\n                case 'KeyA':\n                    this.isMovingLeft = true;\n                    break;\n                case 'KeyD':\n                    this.isMovingRight = true;\n                    break;\n            }\n        }, false);\n        document.addEventListener('keyup', (event) => {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.isTurningLeft = false;\n                    break;\n                case 'ArrowRight':\n                    this.isTurningRight = false;\n                    break;\n                case 'ArrowUp':\n                    this.isLookingUp = false;\n                    break;\n                case 'ArrowDown':\n                    this.isLookingDown = false;\n                    break;\n                case 'KeyW':\n                    this.isMovingForward = false;\n                    break;\n                case 'KeyS':\n                    this.isMovingBackward = false;\n                    break;\n                case 'KeyA':\n                    this.isMovingLeft = false;\n                    break;\n                case 'KeyD':\n                    this.isMovingRight = false;\n                    break;\n            }\n        }, false);\n    }\n    tick() {\n        var now = performance.now();\n        if (_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_3__.OperatingMode.Navigation) {\n            if (this.isTurningLeft) {\n                this.turnRight((this.lastFrameTime - now) / 500);\n            }\n            else if (this.isTurningRight == true) {\n                this.turnRight((now - this.lastFrameTime) / 500);\n            }\n            if (this.isLookingUp) {\n                this.lookUp((now - this.lastFrameTime) / 500);\n            }\n            else if (this.isLookingDown) {\n                this.lookUp((this.lastFrameTime - now) / 500);\n            }\n            if (this.isMovingForward) {\n                this.goForward((now - this.lastFrameTime) / 20);\n            }\n            else if (this.isMovingBackward) {\n                this.goForward((this.lastFrameTime - now) / 20);\n            }\n            if (this.isMovingRight) {\n                this.goRight((now - this.lastFrameTime) / 20);\n            }\n            else if (this.isMovingLeft) {\n                this.goRight((this.lastFrameTime - now) / 20);\n            }\n        }\n        this.updateViewProj();\n        this.lastFrameTime = now;\n    }\n    turnRight(amount) {\n        const rotation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.rotateZ(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.identity(), -amount);\n        this.forward = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.forward, rotation);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.up, rotation);\n    }\n    lookUp(amount) {\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.forward, this.up);\n        const rotation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.axisRotate(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.identity(), right, amount);\n        this.forward = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.forward, rotation);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.up, rotation);\n    }\n    goForward(amount) {\n        this.position = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(this.forward, amount), this.position);\n    }\n    goRight(amount) {\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.up, this.forward);\n        this.position = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(this.position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(right, -amount));\n    }\n    updateViewProj() {\n        const view = new Float32Array(16);\n        const proj = new Float32Array(16);\n        const swapYZ = (v) => {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(v[0], v[2], v[1]);\n        };\n        const forward = swapYZ(this.forward);\n        const position = swapYZ(this.position);\n        const up = swapYZ(this.up);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.lookAt(position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(position, forward), up, view);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.perspective(this.fovy, this.screen.width / this.screen.height, 0.1, 10000.0, proj);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.multiply(proj, view, this.viewProj);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NlbmUvY2FtZXJhLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRDtBQUNuQjtBQUNTO0FBQ0o7QUFDQztBQUdoQyxNQUFNLE1BQU07SUFhakIsWUFDVSxRQUFjLEVBQ2QsRUFBUSxFQUNSLE9BQWEsRUFDYixJQUFZLEVBQ1osTUFBeUI7UUFKekIsYUFBUSxHQUFSLFFBQVEsQ0FBTTtRQUNkLE9BQUUsR0FBRixFQUFFLENBQU07UUFDUixZQUFPLEdBQVAsT0FBTyxDQUFNO1FBQ2IsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNaLFdBQU0sR0FBTixNQUFNLENBQW1CO1FBZDNCLG1CQUFjLEdBQVksS0FBSyxDQUFDO1FBQ2hDLGtCQUFhLEdBQVksS0FBSyxDQUFDO1FBQy9CLG9CQUFlLEdBQVksS0FBSyxDQUFDO1FBQ2pDLHFCQUFnQixHQUFZLEtBQUssQ0FBQztRQUNsQyxnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUM3QixrQkFBYSxHQUFZLEtBQUssQ0FBQztRQUMvQixpQkFBWSxHQUFZLEtBQUssQ0FBQztRQUM5QixrQkFBYSxHQUFZLEtBQUssQ0FBQztRQVFyQyxJQUFJLENBQUMsRUFBRSxHQUFHLDZDQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsYUFBYSxHQUFHLFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN2QyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQsV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQsT0FBTztRQUNMLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDO0lBRUQsT0FBTyxDQUFDLE9BQWU7UUFDckIsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7UUFDcEIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFTSxlQUFlLENBQUMsS0FBVztRQUVoQyxNQUFNLEdBQUcsR0FBUyw2Q0FBSSxDQUFDLFNBQVMsQ0FBQyw2Q0FBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDakUsTUFBTSxNQUFNLEdBQVMsNkNBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0QsTUFBTSxLQUFLLEdBQVMsNkNBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdEQsTUFBTSxJQUFJLEdBQVcsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUN2QyxNQUFNLElBQUksR0FBVyxNQUFNLENBQUMsV0FBVyxDQUFDO1FBQ3hDLE1BQU0sS0FBSyxHQUFXLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDdEQsTUFBTSxLQUFLLEdBQVcsS0FBSyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUM7UUFFMUMsTUFBTSxHQUFHLEdBQVEsSUFBSSw4Q0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDN0MsTUFBTSxPQUFPLEdBQVcsR0FBRyxDQUFDLGNBQWMsQ0FBQyxJQUFJLGtEQUFLLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLENBQUUsQ0FBQztRQUNuRixNQUFNLE9BQU8sR0FBUyxHQUFHLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXRDLE1BQU0sT0FBTyxHQUFTLDZDQUFJLENBQUMsR0FBRyxDQUM1QixNQUFNLEVBQ04sNkNBQUksQ0FBQyxHQUFHLENBQ04sNkNBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQzlCLDZDQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FDOUIsQ0FDRixDQUFDO1FBRUYsTUFBTSxjQUFjLEdBQUcsNkNBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ2xELE1BQU0sQ0FBQyxHQUFXLDZDQUFJLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNsRCxNQUFNLENBQUMsR0FBVyxDQUFDLDZDQUFJLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFckQsT0FBTztZQUNMLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxJQUFJLENBQUM7WUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQztTQUM3QixDQUFDO0lBQ0osQ0FBQztJQUVNLGFBQWEsQ0FBQyxDQUFTLEVBQUUsQ0FBUztRQUN2QyxNQUFNLE1BQU0sR0FBUyw2Q0FBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzRCxNQUFNLEtBQUssR0FBUyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN0RCxNQUFNLElBQUksR0FBVyxNQUFNLENBQUMsVUFBVSxDQUFDO1FBQ3ZDLE1BQU0sSUFBSSxHQUFXLE1BQU0sQ0FBQyxXQUFXLENBQUM7UUFDeEMsTUFBTSxLQUFLLEdBQVcsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztRQUN0RCxNQUFNLEtBQUssR0FBVyxLQUFLLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQztRQUMxQyxNQUFNLFdBQVcsR0FBUyw2Q0FBSSxDQUFDLEdBQUcsQ0FDaEMsTUFBTSxFQUNOLDZDQUFJLENBQUMsR0FBRyxDQUNOLDZDQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUNsRCw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQ3JELENBQ0YsQ0FBQztRQUNGLE9BQU8sSUFBSSw4Q0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsNkNBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFTSxlQUFlLENBQUMsSUFBWTtRQUNqQyxNQUFNLElBQUksR0FBVyxNQUFNLENBQUMsV0FBVyxDQUFDO1FBQ3hDLE1BQU0sS0FBSyxHQUFXLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDdEQsT0FBTyxLQUFLLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQztJQUM3QixDQUFDO0lBRU8sU0FBUztRQUVmLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUM3QyxRQUFRLEtBQUssQ0FBQyxJQUFJLEVBQUU7Z0JBQ2xCLEtBQUssV0FBVztvQkFBRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztvQkFBQyxNQUFNO2dCQUNuRCxLQUFLLFlBQVk7b0JBQUUsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7b0JBQUMsTUFBTTtnQkFDckQsS0FBSyxTQUFTO29CQUFFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO29CQUFDLE1BQU07Z0JBQy9DLEtBQUssV0FBVztvQkFBRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztvQkFBQyxNQUFNO2dCQUNuRCxLQUFLLE1BQU07b0JBQUUsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7b0JBQUMsTUFBTTtnQkFDaEQsS0FBSyxNQUFNO29CQUFFLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7b0JBQUMsTUFBTTtnQkFDakQsS0FBSyxNQUFNO29CQUFFLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO29CQUFDLE1BQU07Z0JBQzdDLEtBQUssTUFBTTtvQkFBRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztvQkFBQyxNQUFNO2FBQy9DO1FBQ0gsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRVYsUUFBUSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQzNDLFFBQVEsS0FBSyxDQUFDLElBQUksRUFBRTtnQkFDbEIsS0FBSyxXQUFXO29CQUFFLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO29CQUFDLE1BQU07Z0JBQ3BELEtBQUssWUFBWTtvQkFBRSxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztvQkFBQyxNQUFNO2dCQUN0RCxLQUFLLFNBQVM7b0JBQUUsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7b0JBQUMsTUFBTTtnQkFDaEQsS0FBSyxXQUFXO29CQUFFLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO29CQUFDLE1BQU07Z0JBQ3BELEtBQUssTUFBTTtvQkFBRSxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztvQkFBQyxNQUFNO2dCQUNqRCxLQUFLLE1BQU07b0JBQUUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztvQkFBQyxNQUFNO2dCQUNsRCxLQUFLLE1BQU07b0JBQUUsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7b0JBQUMsTUFBTTtnQkFDOUMsS0FBSyxNQUFNO29CQUFFLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO29CQUFDLE1BQU07YUFDaEQ7UUFDSCxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFWixDQUFDO0lBR0QsSUFBSTtRQUdGLElBQUksR0FBRyxHQUFXLFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUVwQyxJQUFJLDBDQUFRLENBQUMsT0FBTyxFQUFFLElBQUksZ0RBQWEsQ0FBQyxVQUFVLEVBQUU7WUFDbEQsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO2dCQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQzthQUNsRDtpQkFBTSxJQUFJLElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxFQUFFO2dCQUN0QyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQzthQUNsRDtZQUVELElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDcEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7YUFDL0M7aUJBQU0sSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO2dCQUM3QixJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQzthQUMvQztZQUVELElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtnQkFDeEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7YUFDakQ7aUJBQU0sSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7Z0JBQ2hDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO2FBQ2pEO1lBRUQsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO2dCQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQzthQUMvQztpQkFBTSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7Z0JBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO2FBQy9DO1NBQ0Y7UUFDRCxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUM7SUFDM0IsQ0FBQztJQUVPLFNBQVMsQ0FBQyxNQUFjO1FBQzlCLE1BQU0sUUFBUSxHQUFTLDZDQUFJLENBQUMsT0FBTyxDQUFDLDZDQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsT0FBTyxHQUFHLDZDQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLEVBQUUsR0FBRyw2Q0FBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFDTyxNQUFNLENBQUMsTUFBYztRQUMzQixNQUFNLEtBQUssR0FBUyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN0RCxNQUFNLFFBQVEsR0FBUyw2Q0FBSSxDQUFDLFVBQVUsQ0FBQyw2Q0FBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN2RSxJQUFJLENBQUMsT0FBTyxHQUFHLDZDQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLEVBQUUsR0FBRyw2Q0FBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTyxTQUFTLENBQUMsTUFBYztRQUM5QixJQUFJLENBQUMsUUFBUSxHQUFHLDZDQUFJLENBQUMsR0FBRyxDQUFDLDZDQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFTyxPQUFPLENBQUMsTUFBYztRQUM1QixNQUFNLEtBQUssR0FBUyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsUUFBUSxHQUFHLDZDQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsNkNBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRU8sY0FBYztRQUNwQixNQUFNLElBQUksR0FBRyxJQUFJLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNsQyxNQUFNLElBQUksR0FBRyxJQUFJLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVsQyxNQUFNLE1BQU0sR0FBRyxDQUFDLENBQU8sRUFBRSxFQUFFO1lBQ3pCLE9BQU8sNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2QyxDQUFDO1FBRUQsTUFBTSxPQUFPLEdBQVMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzQyxNQUFNLFFBQVEsR0FBUyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzdDLE1BQU0sRUFBRSxHQUFTLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFakMsNkNBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLDZDQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDN0QsNkNBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3hGLDZDQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTNDLENBQUM7Q0FDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3NjZW5lL2NhbWVyYS50cz8xNWFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hdDQsIHZlYzMsIE1hdDQsIFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IFBsYW5lIH0gZnJvbSBcIi4uL2dlb21ldHJ5L3BsYW5lXCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi4vZ2VvbWV0cnkvcmF5XCI7XG5pbXBvcnQgeyBPcGVyYXRpbmdNb2RlIH0gZnJvbSBcIi4uL21vZGVcIlxuaW1wb3J0IHsgc3dpenpsZVlaIH0gZnJvbSBcIi4uL3V0aWxzL21hdGhcIjtcblxuZXhwb3J0IGNsYXNzIENhbWVyYSB7XG5cbiAgcHJpdmF0ZSB2aWV3UHJvajogRmxvYXQzMkFycmF5O1xuICBwcml2YXRlIGxhc3RGcmFtZVRpbWU6IG51bWJlcjtcbiAgcHJpdmF0ZSBpc1R1cm5pbmdSaWdodDogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIGlzVHVybmluZ0xlZnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBpc01vdmluZ0ZvcndhcmQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBpc01vdmluZ0JhY2t3YXJkOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgaXNMb29raW5nVXA6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBpc0xvb2tpbmdEb3duOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgaXNNb3ZpbmdMZWZ0OiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgaXNNb3ZpbmdSaWdodDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcG9zaXRpb246IFZlYzMsXG4gICAgcHJpdmF0ZSB1cDogVmVjMyxcbiAgICBwcml2YXRlIGZvcndhcmQ6IFZlYzMsXG4gICAgcHJpdmF0ZSBmb3Z5OiBudW1iZXIsXG4gICAgcHJpdmF0ZSBzY3JlZW46IEhUTUxDYW52YXNFbGVtZW50KSB7XG4gICAgdGhpcy51cCA9IHZlYzMubm9ybWFsaXplKHRoaXMudXApO1xuICAgIHRoaXMubGFzdEZyYW1lVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIHRoaXMudmlld1Byb2ogPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcbiAgICB0aGlzLmFkZEV2ZW50cygpO1xuICB9XG5cbiAgZ2V0Vmlld1Byb2ooKTogRmxvYXQzMkFycmF5IHtcbiAgICByZXR1cm4gdGhpcy52aWV3UHJvajtcbiAgfVxuXG4gIGdldFBvc2l0aW9uKCk6IFZlYzMge1xuICAgIHJldHVybiB0aGlzLnBvc2l0aW9uO1xuICB9XG5cbiAgZ2V0Rm92eSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmZvdnk7XG4gIH1cblxuICBzZXRGb3Z5KG5ld0Zvdnk6IG51bWJlcikge1xuICAgIHRoaXMuZm92eSA9IG5ld0Zvdnk7XG4gICAgdGhpcy51cGRhdGVWaWV3UHJvaigpO1xuICB9XG5cbiAgcHVibGljIGdldFBpeGVsQXRQb2ludChwb2ludDogVmVjMyk6IFtudW1iZXIsIG51bWJlcl0ge1xuXG4gICAgY29uc3QgZGlyOiBWZWMzID0gdmVjMy5ub3JtYWxpemUodmVjMy5zdWIocG9pbnQsIHRoaXMucG9zaXRpb24pKTtcbiAgICBjb25zdCBjZW50ZXI6IFZlYzMgPSB2ZWMzLmFkZCh0aGlzLnBvc2l0aW9uLCB0aGlzLmZvcndhcmQpO1xuICAgIGNvbnN0IHJpZ2h0OiBWZWMzID0gdmVjMy5jcm9zcyh0aGlzLmZvcndhcmQsIHRoaXMudXApO1xuICAgIGNvbnN0IHhSZXM6IG51bWJlciA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgIGNvbnN0IHlSZXM6IG51bWJlciA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICBjb25zdCBzaXplWTogbnVtYmVyID0gMi4wICogTWF0aC50YW4odGhpcy5mb3Z5IC8gMi4wKTtcbiAgICBjb25zdCBzaXplWDogbnVtYmVyID0gc2l6ZVkgLyB5UmVzICogeFJlcztcblxuICAgIGNvbnN0IHJheTogUmF5ID0gbmV3IFJheSh0aGlzLnBvc2l0aW9uLCBkaXIpO1xuICAgIGNvbnN0IHRTY3JlZW46IG51bWJlciA9IHJheS5pbnRlcnNlY3RQbGFuZShuZXcgUGxhbmUoY2VudGVyLCB0aGlzLmZvcndhcmQpLCB0cnVlKSE7XG4gICAgY29uc3QgcFNjcmVlbjogVmVjMyA9IHJheS5hdCh0U2NyZWVuKTtcblxuICAgIGNvbnN0IHRvcExlZnQ6IFZlYzMgPSB2ZWMzLmFkZChcbiAgICAgIGNlbnRlcixcbiAgICAgIHZlYzMuYWRkKFxuICAgICAgICB2ZWMzLnNjYWxlKHRoaXMudXAsIHNpemVZIC8gMiksXG4gICAgICAgIHZlYzMuc2NhbGUocmlnaHQsIHNpemVYIC8gLTIpXG4gICAgICApXG4gICAgKTtcblxuICAgIGNvbnN0IHRvcExlZnRUb1BvaW50ID0gdmVjMy5zdWIocFNjcmVlbiwgdG9wTGVmdCk7XG4gICAgY29uc3QgeDogbnVtYmVyID0gdmVjMy5kb3QodG9wTGVmdFRvUG9pbnQsIHJpZ2h0KTtcbiAgICBjb25zdCB5OiBudW1iZXIgPSAtdmVjMy5kb3QodG9wTGVmdFRvUG9pbnQsIHRoaXMudXApO1xuXG4gICAgcmV0dXJuIFtcbiAgICAgIE1hdGguZmxvb3IoeCAvIHNpemVYICogeFJlcyksXG4gICAgICBNYXRoLmZsb29yKHkgLyBzaXplWSAqIHlSZXMpXG4gICAgXTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRSYXlBdFBpeGVsKHg6IG51bWJlciwgeTogbnVtYmVyKTogUmF5IHtcbiAgICBjb25zdCBjZW50ZXI6IFZlYzMgPSB2ZWMzLmFkZCh0aGlzLnBvc2l0aW9uLCB0aGlzLmZvcndhcmQpO1xuICAgIGNvbnN0IHJpZ2h0OiBWZWMzID0gdmVjMy5jcm9zcyh0aGlzLmZvcndhcmQsIHRoaXMudXApO1xuICAgIGNvbnN0IHhSZXM6IG51bWJlciA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgIGNvbnN0IHlSZXM6IG51bWJlciA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICBjb25zdCBzaXplWTogbnVtYmVyID0gMi4wICogTWF0aC50YW4odGhpcy5mb3Z5IC8gMi4wKTtcbiAgICBjb25zdCBzaXplWDogbnVtYmVyID0gc2l6ZVkgLyB5UmVzICogeFJlcztcbiAgICBjb25zdCBzY3JlZW5Qb2ludDogVmVjMyA9IHZlYzMuYWRkKFxuICAgICAgY2VudGVyLFxuICAgICAgdmVjMy5zdWIoXG4gICAgICAgIHZlYzMuc2NhbGUocmlnaHQsIHNpemVYIC8geFJlcyAqICh4IC0geFJlcyAvIDIuMCkpLFxuICAgICAgICB2ZWMzLnNjYWxlKHRoaXMudXAsIHNpemVZIC8geVJlcyAqICh5IC0geVJlcyAvIDIuMCkpXG4gICAgICApXG4gICAgKTtcbiAgICByZXR1cm4gbmV3IFJheSh0aGlzLnBvc2l0aW9uLCB2ZWMzLnN1YihzY3JlZW5Qb2ludCwgdGhpcy5wb3NpdGlvbikpO1xuICB9XG5cbiAgcHVibGljIHBpeGVsU2l6ZUF0RGlzdChkaXN0OiBudW1iZXIpOiBudW1iZXIge1xuICAgIGNvbnN0IHlSZXM6IG51bWJlciA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICBjb25zdCBzaXplWTogbnVtYmVyID0gMi4wICogTWF0aC50YW4odGhpcy5mb3Z5IC8gMi4wKTtcbiAgICByZXR1cm4gc2l6ZVkgLyB5UmVzICogZGlzdDtcbiAgfVxuXG4gIHByaXZhdGUgYWRkRXZlbnRzKCkge1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICAgICAgc3dpdGNoIChldmVudC5jb2RlKSB7XG4gICAgICAgIGNhc2UgJ0Fycm93TGVmdCc6IHRoaXMuaXNUdXJuaW5nTGVmdCA9IHRydWU7IGJyZWFrO1xuICAgICAgICBjYXNlICdBcnJvd1JpZ2h0JzogdGhpcy5pc1R1cm5pbmdSaWdodCA9IHRydWU7IGJyZWFrO1xuICAgICAgICBjYXNlICdBcnJvd1VwJzogdGhpcy5pc0xvb2tpbmdVcCA9IHRydWU7IGJyZWFrO1xuICAgICAgICBjYXNlICdBcnJvd0Rvd24nOiB0aGlzLmlzTG9va2luZ0Rvd24gPSB0cnVlOyBicmVhaztcbiAgICAgICAgY2FzZSAnS2V5Vyc6IHRoaXMuaXNNb3ZpbmdGb3J3YXJkID0gdHJ1ZTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0tleVMnOiB0aGlzLmlzTW92aW5nQmFja3dhcmQgPSB0cnVlOyBicmVhaztcbiAgICAgICAgY2FzZSAnS2V5QSc6IHRoaXMuaXNNb3ZpbmdMZWZ0ID0gdHJ1ZTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0tleUQnOiB0aGlzLmlzTW92aW5nUmlnaHQgPSB0cnVlOyBicmVhaztcbiAgICAgIH1cbiAgICB9LCBmYWxzZSk7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChldmVudCkgPT4ge1xuICAgICAgc3dpdGNoIChldmVudC5jb2RlKSB7XG4gICAgICAgIGNhc2UgJ0Fycm93TGVmdCc6IHRoaXMuaXNUdXJuaW5nTGVmdCA9IGZhbHNlOyBicmVhaztcbiAgICAgICAgY2FzZSAnQXJyb3dSaWdodCc6IHRoaXMuaXNUdXJuaW5nUmlnaHQgPSBmYWxzZTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0Fycm93VXAnOiB0aGlzLmlzTG9va2luZ1VwID0gZmFsc2U7IGJyZWFrO1xuICAgICAgICBjYXNlICdBcnJvd0Rvd24nOiB0aGlzLmlzTG9va2luZ0Rvd24gPSBmYWxzZTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0tleVcnOiB0aGlzLmlzTW92aW5nRm9yd2FyZCA9IGZhbHNlOyBicmVhaztcbiAgICAgICAgY2FzZSAnS2V5Uyc6IHRoaXMuaXNNb3ZpbmdCYWNrd2FyZCA9IGZhbHNlOyBicmVhaztcbiAgICAgICAgY2FzZSAnS2V5QSc6IHRoaXMuaXNNb3ZpbmdMZWZ0ID0gZmFsc2U7IGJyZWFrO1xuICAgICAgICBjYXNlICdLZXlEJzogdGhpcy5pc01vdmluZ1JpZ2h0ID0gZmFsc2U7IGJyZWFrO1xuICAgICAgfVxuICAgIH0sIGZhbHNlKTtcblxuICB9XG5cblxuICB0aWNrKCk6IHZvaWQge1xuXG5cbiAgICB2YXIgbm93OiBudW1iZXIgPSBwZXJmb3JtYW5jZS5ub3coKTtcblxuICAgIGlmIChJTlNUQU5DRS5nZXRNb2RlKCkgPT0gT3BlcmF0aW5nTW9kZS5OYXZpZ2F0aW9uKSB7XG4gICAgICBpZiAodGhpcy5pc1R1cm5pbmdMZWZ0KSB7XG4gICAgICAgIHRoaXMudHVyblJpZ2h0KCh0aGlzLmxhc3RGcmFtZVRpbWUgLSBub3cpIC8gNTAwKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5pc1R1cm5pbmdSaWdodCA9PSB0cnVlKSB7XG4gICAgICAgIHRoaXMudHVyblJpZ2h0KChub3cgLSB0aGlzLmxhc3RGcmFtZVRpbWUpIC8gNTAwKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuaXNMb29raW5nVXApIHtcbiAgICAgICAgdGhpcy5sb29rVXAoKG5vdyAtIHRoaXMubGFzdEZyYW1lVGltZSkgLyA1MDApO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmlzTG9va2luZ0Rvd24pIHtcbiAgICAgICAgdGhpcy5sb29rVXAoKHRoaXMubGFzdEZyYW1lVGltZSAtIG5vdykgLyA1MDApO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5pc01vdmluZ0ZvcndhcmQpIHtcbiAgICAgICAgdGhpcy5nb0ZvcndhcmQoKG5vdyAtIHRoaXMubGFzdEZyYW1lVGltZSkgLyAyMCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNNb3ZpbmdCYWNrd2FyZCkge1xuICAgICAgICB0aGlzLmdvRm9yd2FyZCgodGhpcy5sYXN0RnJhbWVUaW1lIC0gbm93KSAvIDIwKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuaXNNb3ZpbmdSaWdodCkge1xuICAgICAgICB0aGlzLmdvUmlnaHQoKG5vdyAtIHRoaXMubGFzdEZyYW1lVGltZSkgLyAyMCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNNb3ZpbmdMZWZ0KSB7XG4gICAgICAgIHRoaXMuZ29SaWdodCgodGhpcy5sYXN0RnJhbWVUaW1lIC0gbm93KSAvIDIwKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy51cGRhdGVWaWV3UHJvaigpO1xuICAgIHRoaXMubGFzdEZyYW1lVGltZSA9IG5vdztcbiAgfVxuXG4gIHByaXZhdGUgdHVyblJpZ2h0KGFtb3VudDogbnVtYmVyKTogdm9pZCB7XG4gICAgY29uc3Qgcm90YXRpb246IE1hdDQgPSBtYXQ0LnJvdGF0ZVoobWF0NC5pZGVudGl0eSgpLCAtYW1vdW50KTtcbiAgICB0aGlzLmZvcndhcmQgPSB2ZWMzLnRyYW5zZm9ybU1hdDQodGhpcy5mb3J3YXJkLCByb3RhdGlvbik7XG4gICAgdGhpcy51cCA9IHZlYzMudHJhbnNmb3JtTWF0NCh0aGlzLnVwLCByb3RhdGlvbik7XG4gIH1cbiAgcHJpdmF0ZSBsb29rVXAoYW1vdW50OiBudW1iZXIpOiB2b2lkIHtcbiAgICBjb25zdCByaWdodDogVmVjMyA9IHZlYzMuY3Jvc3ModGhpcy5mb3J3YXJkLCB0aGlzLnVwKTtcbiAgICBjb25zdCByb3RhdGlvbjogTWF0NCA9IG1hdDQuYXhpc1JvdGF0ZShtYXQ0LmlkZW50aXR5KCksIHJpZ2h0LCBhbW91bnQpO1xuICAgIHRoaXMuZm9yd2FyZCA9IHZlYzMudHJhbnNmb3JtTWF0NCh0aGlzLmZvcndhcmQsIHJvdGF0aW9uKTtcbiAgICB0aGlzLnVwID0gdmVjMy50cmFuc2Zvcm1NYXQ0KHRoaXMudXAsIHJvdGF0aW9uKTtcbiAgfVxuXG4gIHByaXZhdGUgZ29Gb3J3YXJkKGFtb3VudDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5wb3NpdGlvbiA9IHZlYzMuYWRkKHZlYzMuc2NhbGUodGhpcy5mb3J3YXJkLCBhbW91bnQpLCB0aGlzLnBvc2l0aW9uKTtcbiAgfVxuXG4gIHByaXZhdGUgZ29SaWdodChhbW91bnQ6IG51bWJlcik6IHZvaWQge1xuICAgIGNvbnN0IHJpZ2h0OiBWZWMzID0gdmVjMy5jcm9zcyh0aGlzLnVwLCB0aGlzLmZvcndhcmQpO1xuICAgIHRoaXMucG9zaXRpb24gPSB2ZWMzLmFkZCh0aGlzLnBvc2l0aW9uLCB2ZWMzLnNjYWxlKHJpZ2h0LCAtYW1vdW50KSk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZVZpZXdQcm9qKCk6IHZvaWQge1xuICAgIGNvbnN0IHZpZXcgPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcbiAgICBjb25zdCBwcm9qID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XG5cbiAgICBjb25zdCBzd2FwWVogPSAodjogVmVjMykgPT4ge1xuICAgICAgcmV0dXJuIHZlYzMuY3JlYXRlKHZbMF0sIHZbMl0sIHZbMV0pO1xuICAgIH1cblxuICAgIGNvbnN0IGZvcndhcmQ6IFZlYzMgPSBzd2FwWVoodGhpcy5mb3J3YXJkKTtcbiAgICBjb25zdCBwb3NpdGlvbjogVmVjMyA9IHN3YXBZWih0aGlzLnBvc2l0aW9uKTtcbiAgICBjb25zdCB1cDogVmVjMyA9IHN3YXBZWih0aGlzLnVwKTtcblxuICAgIG1hdDQubG9va0F0KHBvc2l0aW9uLCB2ZWMzLmFkZChwb3NpdGlvbiwgZm9yd2FyZCksIHVwLCB2aWV3KTtcbiAgICBtYXQ0LnBlcnNwZWN0aXZlKHRoaXMuZm92eSwgdGhpcy5zY3JlZW4ud2lkdGggLyB0aGlzLnNjcmVlbi5oZWlnaHQsIDAuMSwgMTAwMDAuMCwgcHJvaik7XG4gICAgbWF0NC5tdWx0aXBseShwcm9qLCB2aWV3LCB0aGlzLnZpZXdQcm9qKTtcblxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scene/camera.ts\n");

/***/ }),

/***/ "./src/scene/constructionPlane.ts":
/*!****************************************!*\
  !*** ./src/scene/constructionPlane.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConstructionPlane: () => (/* binding */ ConstructionPlane)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/group */ \"./src/geometry/group.ts\");\n/* harmony import */ var _geometry_intersection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/intersection */ \"./src/geometry/intersection.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n\n\n\n\n\n\n// TODO: draw this first, disable depth buffer while drawing\nclass ConstructionPlane {\n    constructor(majorCount = 10, minorCount = 10, cellSize = 1) {\n        this.majorCount = majorCount;\n        this.minorCount = minorCount;\n        this.cellSize = cellSize;\n        this.majorLines = null;\n        this.minorLines = null;\n        this.xAxis = null;\n        this.yAxis = null;\n        this.minorLinesParent = new _geometry_group__WEBPACK_IMPORTED_MODULE_1__.Group([], null, undefined, \"mid grey\");\n        this.majorLinesParent = new _geometry_group__WEBPACK_IMPORTED_MODULE_1__.Group([], null, undefined, \"lighter grey\");\n        this.xAxisParent = new _geometry_group__WEBPACK_IMPORTED_MODULE_1__.Group([], null, undefined, \"red\");\n        this.yAxisParent = new _geometry_group__WEBPACK_IMPORTED_MODULE_1__.Group([], null, undefined, \"green\");\n        this.setup();\n    }\n    setup() {\n        const cellCount = this.majorCount * this.minorCount;\n        const size = cellCount * this.cellSize;\n        const majorVerts = [];\n        const minorVerts = [];\n        const majorIndices = [];\n        const minorIndices = [];\n        const majorSubSelection = [];\n        const minorSubSelection = [];\n        var majorIndex = 0;\n        var minorIndex = 0;\n        const halfSize = size / 2.0;\n        const start = -halfSize;\n        const z = -0.001;\n        for (var i = 0; i <= cellCount; i++) {\n            let midOrEnd = (i === cellCount / 2) ? 0 : halfSize;\n            if (i % this.minorCount === 0) { // major line\n                majorVerts.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, -halfSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, midOrEnd, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(-halfSize, start + i * this.cellSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(midOrEnd, start + i * this.cellSize));\n                majorSubSelection.push(false, false, false, false);\n                majorIndices.push(majorIndex, majorIndex + 1, majorIndex + 2, majorIndex + 3);\n                majorIndex += 4;\n            }\n            else { // minor line\n                minorVerts.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, -halfSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, midOrEnd, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(-halfSize, start + i * this.cellSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(midOrEnd, start + i * this.cellSize, z));\n                minorSubSelection.push(false, false, false, false);\n                minorIndices.push(minorIndex, minorIndex + 1, minorIndex + 2, minorIndex + 3);\n                minorIndex += 4;\n            }\n        }\n        if (this.majorLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.majorLines);\n        if (this.minorLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.minorLines);\n        if (this.xAxis)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.xAxis);\n        if (this.yAxis)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.yAxis);\n        this.majorLines = new _render_renderLines__WEBPACK_IMPORTED_MODULE_4__.RenderLines(this.majorLinesParent, majorVerts, majorIndices, majorSubSelection);\n        this.minorLines = new _render_renderLines__WEBPACK_IMPORTED_MODULE_4__.RenderLines(this.minorLinesParent, minorVerts, minorIndices, minorSubSelection);\n        this.xAxis = new _render_renderLines__WEBPACK_IMPORTED_MODULE_4__.RenderLines(this.xAxisParent, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(halfSize, 0, 0)], [0, 1], [false, false]);\n        this.yAxis = new _render_renderLines__WEBPACK_IMPORTED_MODULE_4__.RenderLines(this.yAxisParent, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, halfSize, 0)], [0, 1], [false, false]);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(this.majorLines);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(this.minorLines);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(this.xAxis);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(this.yAxis);\n    }\n    snapToGrid(point) {\n        const alignedWithOrigin = ((this.minorCount * this.majorCount) & 1) === 0;\n        var dx = point[0] % this.cellSize;\n        var dy = point[1] % this.cellSize;\n        if (dx < 0)\n            dx += this.cellSize;\n        if (dy < 0)\n            dy += this.cellSize;\n        if (!alignedWithOrigin) {\n            point[0] += this.cellSize / 2;\n            point[1] += this.cellSize / 2;\n        }\n        if (dx < this.cellSize / 2)\n            point[0] -= dx;\n        else\n            point[0] += this.cellSize - dx;\n        if (dy < this.cellSize / 2)\n            point[1] -= dy;\n        else\n            point[1] += this.cellSize - dy;\n        if (!alignedWithOrigin) {\n            point[0] -= this.cellSize / 2;\n            point[1] -= this.cellSize / 2;\n        }\n        return point;\n    }\n    intersect(ray) {\n        const tGroundPlane = ray.intersectPlane(new _geometry_plane__WEBPACK_IMPORTED_MODULE_3__.Plane(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 1)));\n        if (tGroundPlane) { // intrsected ground plane;\n            var pGroundPlane = tGroundPlane ? ray.at(tGroundPlane) : null;\n            if (pGroundPlane && _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getSnapSettings().snapGrid) {\n                pGroundPlane = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().snapToGrid(pGroundPlane);\n            }\n            if (pGroundPlane) {\n                return new _geometry_intersection__WEBPACK_IMPORTED_MODULE_2__.Intersection(tGroundPlane, \"ground plane\", null, 0, pGroundPlane, 0, 0);\n            }\n        }\n        return null;\n    }\n    getMinorCount() {\n        return this.minorCount;\n    }\n    getMajorCount() {\n        return this.majorCount;\n    }\n    getCellSize() {\n        return this.cellSize;\n    }\n    setMajorMaterial(mat) {\n        this.majorLinesParent.setMaterial(mat);\n    }\n    setMinorMaterial(mat) {\n        this.minorLinesParent.setMaterial(mat);\n    }\n    setMinorCount(count) {\n        this.minorCount = count;\n        this.setup();\n    }\n    setMajorCount(count) {\n        this.majorCount = count;\n        this.setup();\n    }\n    setCellSize(size) {\n        this.cellSize = size;\n        this.setup();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scene/constructionPlane.ts\n");

/***/ }),

/***/ "./src/scene/scene.ts":
/*!****************************!*\
  !*** ./src/scene/scene.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scene: () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./camera */ \"./src/scene/camera.ts\");\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _constructionPlane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constructionPlane */ \"./src/scene/constructionPlane.ts\");\n/* harmony import */ var _geometry_sceneBoundingBoxHeirarcy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/sceneBoundingBoxHeirarcy */ \"./src/geometry/sceneBoundingBoxHeirarcy.ts\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\n\n\n\n\nclass Scene {\n    constructor() {\n        this.renderLines = new Set();\n        this.renderMeshes = new Set();\n        this.renderPoints = new Set();\n        this.renderMeshesInstanced = new Set();\n        this.rootGeometry = new Set(); // stores geometry with no parents\n        this.geometry = new Set(); // stores all geometry\n        this.boundingBoxHeirarchy = new _geometry_sceneBoundingBoxHeirarcy__WEBPACK_IMPORTED_MODULE_2__.SceneBoundingBoxHeirarchy([]);\n        this.camera = new _camera__WEBPACK_IMPORTED_MODULE_0__.Camera(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0.0, -80.0, 20.0), //position\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0.0, 0.0, 1.0), //up\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0.0, 1.0, 0.0), //forward\n        1, //fovy\n        document.getElementById(\"screen\"));\n    }\n    getRootGeometry() {\n        return this.rootGeometry.values();\n    }\n    containsGeometry(geo) {\n        return this.geometry.has(geo);\n    }\n    getConstructionPlane() {\n        return this.constructionPlane;\n    }\n    getBoundingBoxHeirarchy() {\n        return this.boundingBoxHeirarchy;\n    }\n    init() {\n        this.constructionPlane = new _constructionPlane__WEBPACK_IMPORTED_MODULE_1__.ConstructionPlane();\n    }\n    addGeometry(geo) {\n        this.boundingBoxHeirarchy.add(geo);\n        this.rootGeometry.add(geo);\n    }\n    removeGeometry(geo) {\n        this.boundingBoxHeirarchy.remove(geo);\n        this.rootGeometry.delete(geo);\n    }\n    addRenderMesh(mesh) { this.renderMeshes.add(mesh); }\n    addRenderMeshInstanced(mesh) { this.renderMeshesInstanced.add(mesh); }\n    addRenderLines(lines) { this.renderLines.add(lines); }\n    addRenderPoints(points) { this.renderPoints.add(points); }\n    getAllLines() { return this.renderLines.values(); }\n    getAllMeshes() { return this.renderMeshes.values(); }\n    getAllPoints() { return this.renderPoints.values(); }\n    getAllMeshesInstanced() { return this.renderMeshesInstanced.values(); }\n    removeMesh(renderMesh) { this.renderMeshes.delete(renderMesh); }\n    removeLines(renderLines) { this.renderLines.delete(renderLines); }\n    removePoints(renderPoints) { this.renderPoints.delete(renderPoints); }\n    removeMeshInstanced(renderMeshInstanced) { this.renderMeshesInstanced.delete(renderMeshInstanced); }\n    deleteSelected() {\n        for (const geo of this.rootGeometry.values()) {\n            if (geo.isSelected()) {\n                this.boundingBoxHeirarchy.remove(geo);\n                this.rootGeometry.delete(geo);\n                geo.delete();\n            }\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_3__.INSTANCE.getSelector().reset();\n    }\n    tick() {\n        this.camera.tick();\n        for (const line of this.renderLines.values()) {\n            line.update();\n        }\n        for (const mesh of this.renderMeshes.values()) {\n            mesh.update();\n        }\n        for (const point of this.renderPoints.values()) {\n            point.update();\n        }\n        for (const mesh of this.renderMeshesInstanced.values()) {\n            mesh.update();\n        }\n    }\n    getCamera() {\n        return this.camera;\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scene/scene.ts\n");

/***/ }),

/***/ "./src/settings/settingsManager.ts":
/*!*****************************************!*\
  !*** ./src/settings/settingsManager.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsManager: () => (/* binding */ SettingsManager)\n/* harmony export */ });\n/* harmony import */ var _snapsManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./snapsManager */ \"./src/settings/snapsManager.ts\");\n\nclass SettingsManager {\n    constructor() {\n        this.snapSettingsManager = new _snapsManager__WEBPACK_IMPORTED_MODULE_0__.SnapSettingsManager();\n    }\n    getSnapSettingsManager() {\n        return this.snapSettingsManager;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2V0dGluZ3Mvc2V0dGluZ3NNYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBRTlDLE1BQU0sZUFBZTtJQUkxQjtRQUNFLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLDhEQUFtQixFQUFFLENBQUM7SUFDdkQsQ0FBQztJQUVNLHNCQUFzQjtRQUMzQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztJQUNsQyxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9zZXR0aW5ncy9zZXR0aW5nc01hbmFnZXIudHM/ZjBmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTbmFwU2V0dGluZ3NNYW5hZ2VyIH0gZnJvbSBcIi4vc25hcHNNYW5hZ2VyXCI7XG5cbmV4cG9ydCBjbGFzcyBTZXR0aW5nc01hbmFnZXIge1xuXG4gIHByaXZhdGUgc25hcFNldHRpbmdzTWFuYWdlcjogU25hcFNldHRpbmdzTWFuYWdlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnNuYXBTZXR0aW5nc01hbmFnZXIgPSBuZXcgU25hcFNldHRpbmdzTWFuYWdlcigpO1xuICB9XG5cbiAgcHVibGljIGdldFNuYXBTZXR0aW5nc01hbmFnZXIoKTogU25hcFNldHRpbmdzTWFuYWdlciB7XG4gICAgcmV0dXJuIHRoaXMuc25hcFNldHRpbmdzTWFuYWdlcjtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/settings/settingsManager.ts\n");

/***/ }),

/***/ "./src/settings/snapsManager.ts":
/*!**************************************!*\
  !*** ./src/settings/snapsManager.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapSettings: () => (/* binding */ SnapSettings),\n/* harmony export */   SnapSettingsManager: () => (/* binding */ SnapSettingsManager)\n/* harmony export */ });\nclass SnapSettings {\n    constructor(snapGrid = true, snapLine = true, snapPoint = true, snapScreenPercent = false) {\n        this.snapGrid = snapGrid;\n        this.snapLine = snapLine;\n        this.snapPoint = snapPoint;\n        this.snapScreenPercent = snapScreenPercent;\n    }\n}\nclass SnapSettingsManager {\n    constructor() {\n        this.stack = [new SnapSettings()];\n    }\n    push(settings) {\n        this.stack.push(settings);\n    }\n    pop() {\n        this.stack.pop();\n    }\n    getSnapSettings() {\n        return this.stack.at(-1);\n    }\n    getHTML() {\n        const settings = this.stack.at(-1);\n        return `\n      <u>SNAPS:</u><br>\n      <br>\n      grid(${settings.snapGrid ? \"on\" : \"off\"})<br>\n      line(${settings.snapLine ? \"on\" : \"off\"})<br>\n      point(${settings.snapPoint ? \"on\" : \"off\"})<br>\n    `;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2V0dGluZ3Mvc25hcHNNYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRU8sTUFBTSxZQUFZO0lBRXZCLFlBQ1MsV0FBb0IsSUFBSSxFQUN4QixXQUFvQixJQUFJLEVBQ3hCLFlBQXFCLElBQUksRUFDekIsb0JBQTZCLEtBQUs7UUFIbEMsYUFBUSxHQUFSLFFBQVEsQ0FBZ0I7UUFDeEIsYUFBUSxHQUFSLFFBQVEsQ0FBZ0I7UUFDeEIsY0FBUyxHQUFULFNBQVMsQ0FBZ0I7UUFDekIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFpQjtJQUczQyxDQUFDO0NBRUY7QUFHTSxNQUFNLG1CQUFtQjtJQUk5QjtRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLFlBQVksRUFBRSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVNLElBQUksQ0FBQyxRQUFzQjtRQUNoQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU0sR0FBRztRQUNSLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUVNLGVBQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDO0lBQzVCLENBQUM7SUFFTSxPQUFPO1FBQ1osTUFBTSxRQUFRLEdBQWlCLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7UUFDbEQsT0FBTzs7O2FBR0UsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO2FBQ2hDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSztjQUMvQixRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUs7S0FDMUMsQ0FBQztJQUNKLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3NldHRpbmdzL3NuYXBzTWFuYWdlci50cz9kMzVlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgY2xhc3MgU25hcFNldHRpbmdzIHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgc25hcEdyaWQ6IGJvb2xlYW4gPSB0cnVlLFxuICAgIHB1YmxpYyBzbmFwTGluZTogYm9vbGVhbiA9IHRydWUsXG4gICAgcHVibGljIHNuYXBQb2ludDogYm9vbGVhbiA9IHRydWUsXG4gICAgcHVibGljIHNuYXBTY3JlZW5QZXJjZW50OiBib29sZWFuID0gZmFsc2UsXG4gICkge1xuXG4gIH1cblxufVxuXG5cbmV4cG9ydCBjbGFzcyBTbmFwU2V0dGluZ3NNYW5hZ2VyIHtcblxuICBwcml2YXRlIHN0YWNrOiBTbmFwU2V0dGluZ3NbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnN0YWNrID0gW25ldyBTbmFwU2V0dGluZ3MoKV07XG4gIH1cblxuICBwdWJsaWMgcHVzaChzZXR0aW5nczogU25hcFNldHRpbmdzKTogdm9pZCB7XG4gICAgdGhpcy5zdGFjay5wdXNoKHNldHRpbmdzKTtcbiAgfVxuXG4gIHB1YmxpYyBwb3AoKTogdm9pZCB7XG4gICAgdGhpcy5zdGFjay5wb3AoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTbmFwU2V0dGluZ3MoKTogU25hcFNldHRpbmdzIHtcbiAgICByZXR1cm4gdGhpcy5zdGFjay5hdCgtMSkhO1xuICB9XG5cbiAgcHVibGljIGdldEhUTUwoKTogc3RyaW5nIHtcbiAgICBjb25zdCBzZXR0aW5nczogU25hcFNldHRpbmdzID0gdGhpcy5zdGFjay5hdCgtMSkhO1xuICAgIHJldHVybiBgXG4gICAgICA8dT5TTkFQUzo8L3U+PGJyPlxuICAgICAgPGJyPlxuICAgICAgZ3JpZCgke3NldHRpbmdzLnNuYXBHcmlkID8gXCJvblwiIDogXCJvZmZcIn0pPGJyPlxuICAgICAgbGluZSgke3NldHRpbmdzLnNuYXBMaW5lID8gXCJvblwiIDogXCJvZmZcIn0pPGJyPlxuICAgICAgcG9pbnQoJHtzZXR0aW5ncy5zbmFwUG9pbnQgPyBcIm9uXCIgOiBcIm9mZlwifSk8YnI+XG4gICAgYDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/settings/snapsManager.ts\n");

/***/ }),

/***/ "./src/stats.ts":
/*!**********************!*\
  !*** ./src/stats.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderStats: () => (/* binding */ RenderStats)\n/* harmony export */ });\nclass RenderStats {\n    constructor() {\n        this.framesOver100ms = 0;\n        this.trianglesCreated = 0;\n        this.drawCalls = 0;\n        this.reset();\n    }\n    reset() {\n        this.renderTime = NaN;\n        this.frameTime = NaN;\n        this.sceneTime = NaN;\n        this.startTime = Date.now();\n        this.totalFrames = 0;\n    }\n    setRenderTime(renderTime) {\n        this.renderTime = renderTime;\n    }\n    setFrameTime(frameTime) {\n        this.totalFrames++;\n        if (frameTime > 0.1)\n            this.framesOver100ms++;\n        this.frameTime = frameTime;\n    }\n    setSceneTime(sceneTime) {\n        this.sceneTime = sceneTime;\n    }\n    setDrawCalls(count) {\n        this.drawCalls = count;\n    }\n    onTrianglesCreated(count) {\n        this.trianglesCreated += count;\n    }\n    getInnerHTML() {\n        const fps = (1.0 / this.frameTime).toFixed(3);\n        const averageFps = (1000.0 * this.totalFrames / (Date.now() - this.startTime)).toFixed(3);\n        const html = \"<u>STATS:</u><br>\" +\n            \"<br>\" +\n            \"FPS: \" + fps + \"<br>\" +\n            \"Average FPS: \" + averageFps + \"<br>\" +\n            \"<br>\" +\n            \"Frame Time: \" + this.frameTime.toFixed(3) + \"<br>\" +\n            \"Render Time: \" + this.renderTime.toFixed(3) + \"<br>\" +\n            \"Scene Time: \" + this.sceneTime.toFixed(3) + \"<br>\" +\n            \"<br>\" +\n            \"Frames Over 100ms: \" + this.framesOver100ms.toString() + \"<br>\" +\n            \"<br>\" +\n            \"Draw Calls: \" + this.drawCalls.toString() + \"<br>\" +\n            \"Tris Created: \" + (this.trianglesCreated / 1000000).toFixed(2) + \"m\";\n        return html;\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3RhdHMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUNPLE1BQU0sV0FBVztJQVl0QjtRQUNFLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2YsQ0FBQztJQUVNLEtBQUs7UUFDVixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUM1QixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRU0sYUFBYSxDQUFDLFVBQWtCO1FBQ3JDLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7SUFFTSxZQUFZLENBQUMsU0FBaUI7UUFDbkMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25CLElBQUksU0FBUyxHQUFHLEdBQUc7WUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDNUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDN0IsQ0FBQztJQUVNLFlBQVksQ0FBQyxTQUFpQjtRQUNuQyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUM3QixDQUFDO0lBRU0sWUFBWSxDQUFDLEtBQWE7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUVNLGtCQUFrQixDQUFDLEtBQWE7UUFDckMsSUFBSSxDQUFDLGdCQUFnQixJQUFJLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBRU0sWUFBWTtRQUNqQixNQUFNLEdBQUcsR0FBVyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RELE1BQU0sVUFBVSxHQUFXLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xHLE1BQU0sSUFBSSxHQUFXLG1CQUFtQjtZQUN0QyxNQUFNO1lBQ04sT0FBTyxHQUFHLEdBQUcsR0FBRyxNQUFNO1lBQ3RCLGVBQWUsR0FBRyxVQUFVLEdBQUcsTUFBTTtZQUNyQyxNQUFNO1lBQ04sY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU07WUFDbkQsZUFBZSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU07WUFDckQsY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU07WUFDbkQsTUFBTTtZQUNOLHFCQUFxQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLEdBQUcsTUFBTTtZQUNoRSxNQUFNO1lBQ04sY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLEdBQUcsTUFBTTtZQUNuRCxnQkFBZ0IsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBQ3hFLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUVGO0FBQUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3N0YXRzLnRzPzAyNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgY2xhc3MgUmVuZGVyU3RhdHMge1xuXG4gIC8vcHJpdmF0ZSBlbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcbiAgcHJpdmF0ZSByZW5kZXJUaW1lITogbnVtYmVyO1xuICBwcml2YXRlIGZyYW1lVGltZSE6IG51bWJlcjtcbiAgcHJpdmF0ZSBzY2VuZVRpbWUhOiBudW1iZXI7XG4gIHByaXZhdGUgZnJhbWVzT3ZlcjEwMG1zITogbnVtYmVyO1xuICBwcml2YXRlIHRvdGFsRnJhbWVzITogbnVtYmVyO1xuICBwcml2YXRlIHN0YXJ0VGltZSE6IG51bWJlcjtcbiAgcHJpdmF0ZSBkcmF3Q2FsbHMhOiBudW1iZXI7XG4gIHByaXZhdGUgdHJpYW5nbGVzQ3JlYXRlZCE6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmZyYW1lc092ZXIxMDBtcyA9IDA7XG4gICAgdGhpcy50cmlhbmdsZXNDcmVhdGVkID0gMDtcbiAgICB0aGlzLmRyYXdDYWxscyA9IDA7XG4gICAgdGhpcy5yZXNldCgpO1xuICB9XG5cbiAgcHVibGljIHJlc2V0KCk6IHZvaWQge1xuICAgIHRoaXMucmVuZGVyVGltZSA9IE5hTjtcbiAgICB0aGlzLmZyYW1lVGltZSA9IE5hTjtcbiAgICB0aGlzLnNjZW5lVGltZSA9IE5hTjtcbiAgICB0aGlzLnN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgdGhpcy50b3RhbEZyYW1lcyA9IDA7XG4gIH1cblxuICBwdWJsaWMgc2V0UmVuZGVyVGltZShyZW5kZXJUaW1lOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLnJlbmRlclRpbWUgPSByZW5kZXJUaW1lO1xuICB9XG5cbiAgcHVibGljIHNldEZyYW1lVGltZShmcmFtZVRpbWU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMudG90YWxGcmFtZXMrKztcbiAgICBpZiAoZnJhbWVUaW1lID4gMC4xKSB0aGlzLmZyYW1lc092ZXIxMDBtcysrO1xuICAgIHRoaXMuZnJhbWVUaW1lID0gZnJhbWVUaW1lO1xuICB9XG5cbiAgcHVibGljIHNldFNjZW5lVGltZShzY2VuZVRpbWU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuc2NlbmVUaW1lID0gc2NlbmVUaW1lO1xuICB9XG5cbiAgcHVibGljIHNldERyYXdDYWxscyhjb3VudDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5kcmF3Q2FsbHMgPSBjb3VudDtcbiAgfVxuXG4gIHB1YmxpYyBvblRyaWFuZ2xlc0NyZWF0ZWQoY291bnQ6IG51bWJlcikge1xuICAgIHRoaXMudHJpYW5nbGVzQ3JlYXRlZCArPSBjb3VudDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRJbm5lckhUTUwoKTogc3RyaW5nIHtcbiAgICBjb25zdCBmcHM6IHN0cmluZyA9ICgxLjAgLyB0aGlzLmZyYW1lVGltZSkudG9GaXhlZCgzKTtcbiAgICBjb25zdCBhdmVyYWdlRnBzOiBzdHJpbmcgPSAoMTAwMC4wICogdGhpcy50b3RhbEZyYW1lcyAvIChEYXRlLm5vdygpIC0gdGhpcy5zdGFydFRpbWUpKS50b0ZpeGVkKDMpO1xuICAgIGNvbnN0IGh0bWw6IHN0cmluZyA9IFwiPHU+U1RBVFM6PC91Pjxicj5cIiArXG4gICAgICBcIjxicj5cIiArXG4gICAgICBcIkZQUzogXCIgKyBmcHMgKyBcIjxicj5cIiArXG4gICAgICBcIkF2ZXJhZ2UgRlBTOiBcIiArIGF2ZXJhZ2VGcHMgKyBcIjxicj5cIiArXG4gICAgICBcIjxicj5cIiArXG4gICAgICBcIkZyYW1lIFRpbWU6IFwiICsgdGhpcy5mcmFtZVRpbWUudG9GaXhlZCgzKSArIFwiPGJyPlwiICtcbiAgICAgIFwiUmVuZGVyIFRpbWU6IFwiICsgdGhpcy5yZW5kZXJUaW1lLnRvRml4ZWQoMykgKyBcIjxicj5cIiArXG4gICAgICBcIlNjZW5lIFRpbWU6IFwiICsgdGhpcy5zY2VuZVRpbWUudG9GaXhlZCgzKSArIFwiPGJyPlwiICtcbiAgICAgIFwiPGJyPlwiICtcbiAgICAgIFwiRnJhbWVzIE92ZXIgMTAwbXM6IFwiICsgdGhpcy5mcmFtZXNPdmVyMTAwbXMudG9TdHJpbmcoKSArIFwiPGJyPlwiICtcbiAgICAgIFwiPGJyPlwiICtcbiAgICAgIFwiRHJhdyBDYWxsczogXCIgKyB0aGlzLmRyYXdDYWxscy50b1N0cmluZygpICsgXCI8YnI+XCIgK1xuICAgICAgXCJUcmlzIENyZWF0ZWQ6IFwiICsgKHRoaXMudHJpYW5nbGVzQ3JlYXRlZCAvIDEwMDAwMDApLnRvRml4ZWQoMikgKyBcIm1cIjtcbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG59O1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/stats.ts\n");

/***/ }),

/***/ "./src/tests/testSceneSphere.ts":
/*!**************************************!*\
  !*** ./src/tests/testSceneSphere.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTestSceneSphere: () => (/* binding */ addTestSceneSphere)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_sphere__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/nurbs/sphere */ \"./src/geometry/nurbs/sphere.ts\");\n\n\n\nconst addTestSceneSphere = function () {\n    const sphereRed = (0,_geometry_nurbs_sphere__WEBPACK_IMPORTED_MODULE_1__.createSphere)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(-30, 0, 15), 15);\n    sphereRed.setMaterial(\"red\");\n    const sphereGreen = (0,_geometry_nurbs_sphere__WEBPACK_IMPORTED_MODULE_1__.createSphere)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(-0, 0, 15), 15);\n    sphereGreen.setMaterial(\"green\");\n    const sphereBlue = (0,_geometry_nurbs_sphere__WEBPACK_IMPORTED_MODULE_1__.createSphere)(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(30, 0, 15), 15);\n    sphereBlue.setMaterial(\"blue\");\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(sphereRed);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(sphereGreen);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(sphereBlue);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGVzdHMvdGVzdFNjZW5lU3BoZXJlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFa0M7QUFDRDtBQUN1QjtBQUdqRCxNQUFNLGtCQUFrQixHQUFHO0lBRWhDLE1BQU0sU0FBUyxHQUFZLG9FQUFZLENBQUMsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3JFLFNBQVMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFN0IsTUFBTSxXQUFXLEdBQVksb0VBQVksQ0FBQyw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDdEUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVqQyxNQUFNLFVBQVUsR0FBWSxvRUFBWSxDQUFDLDZDQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDckUsVUFBVSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUUvQiwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMzQywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM3QywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUM5QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvdGVzdHMvdGVzdFNjZW5lU3BoZXJlLnRzP2JiYmQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmltcG9ydCB7IHZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IGNyZWF0ZVNwaGVyZSB9IGZyb20gXCIuLi9nZW9tZXRyeS9udXJicy9zcGhlcmVcIjtcbmltcG9ydCB7IFN1cmZhY2UgfSBmcm9tIFwiLi4vZ2VvbWV0cnkvbnVyYnMvc3VyZmFjZVwiO1xuXG5leHBvcnQgY29uc3QgYWRkVGVzdFNjZW5lU3BoZXJlID0gZnVuY3Rpb24oKSB7XG5cbiAgY29uc3Qgc3BoZXJlUmVkOiBTdXJmYWNlID0gY3JlYXRlU3BoZXJlKHZlYzMuY3JlYXRlKC0zMCwgMCwgMTUpLCAxNSk7XG4gIHNwaGVyZVJlZC5zZXRNYXRlcmlhbChcInJlZFwiKTtcblxuICBjb25zdCBzcGhlcmVHcmVlbjogU3VyZmFjZSA9IGNyZWF0ZVNwaGVyZSh2ZWMzLmNyZWF0ZSgtMCwgMCwgMTUpLCAxNSk7XG4gIHNwaGVyZUdyZWVuLnNldE1hdGVyaWFsKFwiZ3JlZW5cIik7XG5cbiAgY29uc3Qgc3BoZXJlQmx1ZTogU3VyZmFjZSA9IGNyZWF0ZVNwaGVyZSh2ZWMzLmNyZWF0ZSgzMCwgMCwgMTUpLCAxNSk7XG4gIHNwaGVyZUJsdWUuc2V0TWF0ZXJpYWwoXCJibHVlXCIpO1xuXG4gIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkoc3BoZXJlUmVkKTtcbiAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5hZGRHZW9tZXRyeShzcGhlcmVHcmVlbik7XG4gIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkoc3BoZXJlQmx1ZSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/tests/testSceneSphere.ts\n");

/***/ }),

/***/ "./src/utils/clone.ts":
/*!****************************!*\
  !*** ./src/utils/clone.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneMat4List: () => (/* binding */ cloneMat4List),\n/* harmony export */   cloneVec3List: () => (/* binding */ cloneVec3List),\n/* harmony export */   cloneVec3ListList: () => (/* binding */ cloneVec3ListList),\n/* harmony export */   cloneVec4List: () => (/* binding */ cloneVec4List),\n/* harmony export */   cloneVec4ListList: () => (/* binding */ cloneVec4ListList)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nconst cloneVec3List = function (l) {\n    const res = [];\n    for (let v of l)\n        res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.clone(v));\n    return res;\n};\nconst cloneVec3ListList = function (l) {\n    const res = [];\n    let i = 0;\n    for (let v1 of l) {\n        res.push([]);\n        for (let v2 of v1) {\n            res[i].push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.clone(v2));\n        }\n        i++;\n    }\n    return res;\n};\nconst cloneVec4List = function (l) {\n    const res = [];\n    for (let v of l)\n        res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec4.clone(v));\n    return res;\n};\nconst cloneVec4ListList = function (l) {\n    const res = [];\n    let i = 0;\n    for (let v1 of l) {\n        res.push([]);\n        for (let v2 of v1) {\n            res[i].push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec4.clone(v2));\n        }\n        i++;\n    }\n    return res;\n};\nconst cloneMat4List = function (l) {\n    const res = [];\n    for (let m of l)\n        res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.clone(m));\n    return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY2xvbmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdFO0FBR3pELE1BQU0sYUFBYSxHQUFHLFVBQVMsQ0FBUztJQUM3QyxNQUFNLEdBQUcsR0FBVyxFQUFFLENBQUM7SUFDdkIsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVNLE1BQU0saUJBQWlCLEdBQUcsVUFBUyxDQUFXO0lBQ25ELE1BQU0sR0FBRyxHQUFhLEVBQUUsQ0FBQztJQUN6QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDVixLQUFLLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRTtRQUNoQixHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2IsS0FBSyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDakIsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzdCO1FBQ0QsQ0FBQyxFQUFFLENBQUM7S0FDTDtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVNLE1BQU0sYUFBYSxHQUFHLFVBQVMsQ0FBUztJQUM3QyxNQUFNLEdBQUcsR0FBVyxFQUFFLENBQUM7SUFDdkIsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUNNLE1BQU0saUJBQWlCLEdBQUcsVUFBUyxDQUFXO0lBQ25ELE1BQU0sR0FBRyxHQUFhLEVBQUUsQ0FBQztJQUN6QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDVixLQUFLLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRTtRQUNoQixHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2IsS0FBSyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDakIsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzdCO1FBQ0QsQ0FBQyxFQUFFLENBQUM7S0FDTDtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUNNLE1BQU0sYUFBYSxHQUFHLFVBQVMsQ0FBUztJQUM3QyxNQUFNLEdBQUcsR0FBVyxFQUFFLENBQUM7SUFDdkIsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3V0aWxzL2Nsb25lLnRzPzNhY2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0NCwgbWF0NCwgdmVjMywgVmVjMywgdmVjNCwgVmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiXG5cblxuZXhwb3J0IGNvbnN0IGNsb25lVmVjM0xpc3QgPSBmdW5jdGlvbihsOiBWZWMzW10pOiBWZWMzW10ge1xuICBjb25zdCByZXM6IFZlYzNbXSA9IFtdO1xuICBmb3IgKGxldCB2IG9mIGwpIHJlcy5wdXNoKHZlYzMuY2xvbmUodikpO1xuICByZXR1cm4gcmVzO1xufVxuXG5leHBvcnQgY29uc3QgY2xvbmVWZWMzTGlzdExpc3QgPSBmdW5jdGlvbihsOiBWZWMzW11bXSk6IFZlYzNbXVtdIHtcbiAgY29uc3QgcmVzOiBWZWMzW11bXSA9IFtdO1xuICBsZXQgaSA9IDA7XG4gIGZvciAobGV0IHYxIG9mIGwpIHtcbiAgICByZXMucHVzaChbXSk7XG4gICAgZm9yIChsZXQgdjIgb2YgdjEpIHtcbiAgICAgIHJlc1tpXS5wdXNoKHZlYzMuY2xvbmUodjIpKTtcbiAgICB9XG4gICAgaSsrO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbmV4cG9ydCBjb25zdCBjbG9uZVZlYzRMaXN0ID0gZnVuY3Rpb24obDogVmVjNFtdKTogVmVjNFtdIHtcbiAgY29uc3QgcmVzOiBWZWM0W10gPSBbXTtcbiAgZm9yIChsZXQgdiBvZiBsKSByZXMucHVzaCh2ZWM0LmNsb25lKHYpKTtcbiAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBjb25zdCBjbG9uZVZlYzRMaXN0TGlzdCA9IGZ1bmN0aW9uKGw6IFZlYzRbXVtdKTogVmVjNFtdW10ge1xuICBjb25zdCByZXM6IFZlYzRbXVtdID0gW107XG4gIGxldCBpID0gMDtcbiAgZm9yIChsZXQgdjEgb2YgbCkge1xuICAgIHJlcy5wdXNoKFtdKTtcbiAgICBmb3IgKGxldCB2MiBvZiB2MSkge1xuICAgICAgcmVzW2ldLnB1c2godmVjNC5jbG9uZSh2MikpO1xuICAgIH1cbiAgICBpKys7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBjb25zdCBjbG9uZU1hdDRMaXN0ID0gZnVuY3Rpb24obDogTWF0NFtdKTogTWF0NFtdIHtcbiAgY29uc3QgcmVzOiBNYXQ0W10gPSBbXTtcbiAgZm9yIChsZXQgbSBvZiBsKSByZXMucHVzaChtYXQ0LmNsb25lKG0pKTtcbiAgcmV0dXJuIHJlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/clone.ts\n");

/***/ }),

/***/ "./src/utils/math.ts":
/*!***************************!*\
  !*** ./src/utils/math.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   angleBetween: () => (/* binding */ angleBetween),\n/* harmony export */   bin: () => (/* binding */ bin),\n/* harmony export */   changeOfBasis: () => (/* binding */ changeOfBasis),\n/* harmony export */   getMirrorTransform: () => (/* binding */ getMirrorTransform),\n/* harmony export */   getRotationTransform: () => (/* binding */ getRotationTransform),\n/* harmony export */   getScale1Transform: () => (/* binding */ getScale1Transform),\n/* harmony export */   getScaleTransform: () => (/* binding */ getScaleTransform),\n/* harmony export */   getShearTransform: () => (/* binding */ getShearTransform),\n/* harmony export */   lerp: () => (/* binding */ lerp),\n/* harmony export */   mirrorVector: () => (/* binding */ mirrorVector),\n/* harmony export */   scale1Vector: () => (/* binding */ scale1Vector),\n/* harmony export */   swizzleYZ: () => (/* binding */ swizzleYZ),\n/* harmony export */   swizzleYZVec3: () => (/* binding */ swizzleYZVec3)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nconst swizzleYZ = function (mat) {\n    [mat[1], mat[2]] = [mat[2], mat[1]];\n    [mat[7], mat[11]] = [mat[11], mat[7]];\n    [mat[14], mat[13]] = [mat[13], mat[14]];\n    [mat[8], mat[4]] = [mat[4], mat[8]];\n    [mat[6], mat[9]] = [mat[9], mat[6]];\n    [mat[5], mat[10]] = [mat[10], mat[5]];\n    return mat;\n};\nconst swizzleYZVec3 = function (v) {\n    [v[1], v[2]] = [v[2], v[1]];\n    return v;\n};\nconst bin = function (a, b) {\n    let res = 1;\n    for (let i = a; i > a - b; i--)\n        res *= i;\n    for (let i = 2; i <= b; i++)\n        res = res / i;\n    return res;\n};\nconst angleBetween = function (a, b) {\n    return Math.acos(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.normalize(a), wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.normalize(b)));\n};\nconst mirrorVector = function (v, plane) {\n    const d = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.dot(v, plane.getNormal());\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.sub(v, wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(plane.getNormal(), 2 * d));\n};\nconst getMirrorTransform = function (plane) {\n    const newX = mirrorVector(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create(1, 0, 0), plane);\n    const newY = mirrorVector(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create(0, 1, 0), plane);\n    const newZ = mirrorVector(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create(0, 0, 1), plane);\n    const mirrorTransform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.create(...newX, 0, ...newY, 0, ...newZ, 0, 0, 0, 0, 1);\n    const toOrigin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(plane.getOrigin(), -1));\n    const toPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(plane.getOrigin());\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(toPos, mirrorTransform), toOrigin);\n};\nconst scale1Vector = function (v, factor, plane) {\n    const d = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.dot(v, plane.getNormal());\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.add(v, wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(plane.getNormal(), d * factor - d));\n};\nconst getScale1Transform = function (plane, factor) {\n    const newX = scale1Vector(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create(1, 0, 0), factor, plane);\n    const newY = scale1Vector(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create(0, 1, 0), factor, plane);\n    const newZ = scale1Vector(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create(0, 0, 1), factor, plane);\n    const scaleTransform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.create(...newX, 0, ...newY, 0, ...newZ, 0, 0, 0, 0, 1);\n    const toOrigin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(plane.getOrigin(), -1));\n    const toPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(plane.getOrigin());\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(toPos, scaleTransform), toOrigin);\n};\nconst getRotationTransform = function (axis, theta) {\n    const rotation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.axisRotate(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.identity(), axis.getDirection(), theta);\n    const toOrigin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(axis.getOrigin(), -1));\n    const toPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(axis.getOrigin());\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(toPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(rotation, toOrigin));\n};\nconst changeOfBasis = function (fromX, fromY, fromZ, fromO, toX, toY, toZ, toO) {\n    const from = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.create(...fromX, 0, ...fromY, 0, ...fromZ, 0, ...fromO, 1);\n    const to = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.create(...toX, 0, ...toY, 0, ...toZ, 0, ...toO, 1);\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(to, wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.inverse(from));\n};\nconst getScaleTransform = function (center, factor) {\n    const scaleTransform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.uniformScaling(factor);\n    const toOrigin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(center, -1));\n    const toPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.translation(center);\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(toPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(scaleTransform, toOrigin));\n};\n// from and to are vectors from planes origin to point\nconst getShearTransform = function (plane, from, to) {\n    const origin = plane.getOrigin();\n    const normal = plane.getNormal();\n    const distFrom = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.dot(normal, from);\n    const distTo = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.dot(normal, to);\n    const newTo = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.sub(to, wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(normal, distTo - distFrom)); //\n    const shearVector = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.sub(newTo, from), 1 / distFrom);\n    const [xAxis, yAxis] = plane.getXY();\n    const fromMat = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.create(...xAxis, 0, ...yAxis, 0, ...normal, 0, ...origin, 1);\n    const toMat = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.create(...xAxis, 0, ...yAxis, 0, ...wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.add(normal, shearVector), 0, ...origin, 1);\n    return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.mul(toMat, wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.inverse(fromMat));\n};\nconst lerp = function (a, b, r) {\n    return a * (1 - r) + b * r;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/math.ts\n");

/***/ }),

/***/ "./src/utils/print.ts":
/*!****************************!*\
  !*** ./src/utils/print.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   printMat4: () => (/* binding */ printMat4),\n/* harmony export */   printVec3: () => (/* binding */ printVec3),\n/* harmony export */   vec3ToString: () => (/* binding */ vec3ToString),\n/* harmony export */   vec4ToString: () => (/* binding */ vec4ToString)\n/* harmony export */ });\nconst printMat4 = function (m) {\n    var str = \"\";\n    for (var i = 0; i < 4; i++) {\n        for (var j = 0; j < 4; j++) {\n            str += m[4 * i + j].toFixed(2) + \",  \";\n        }\n        str += \"\\n\";\n    }\n    console.log(str);\n};\nconst printVec3 = function (v, decimals = 2) {\n    console.log(vec3ToString(v, decimals));\n};\nconst vec3ToString = function (v, decimals = 2) {\n    var str = \"\";\n    for (var i = 0; i < 3; i++) {\n        str += v[i].toFixed(decimals) + \",  \";\n    }\n    str = str.slice(0, -1);\n    return str;\n};\nconst vec4ToString = function (v, decimals = 2) {\n    var str = \"[\";\n    for (var i = 0; i < 4; i++) {\n        str += v[i].toFixed(decimals) + \",\";\n    }\n    str = str.slice(0, -1);\n    return str + \"]\";\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvcHJpbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdPLE1BQU0sU0FBUyxHQUFHLFVBQVMsQ0FBTztJQUN2QyxJQUFJLEdBQUcsR0FBVyxFQUFFLENBQUM7SUFDckIsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNsQyxLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2xDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1NBQ3hDO1FBQ0QsR0FBRyxJQUFJLElBQUksQ0FBQztLQUNiO0lBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNuQixDQUFDO0FBRU0sTUFBTSxTQUFTLEdBQUcsVUFBUyxDQUFPLEVBQUUsV0FBbUIsQ0FBQztJQUM3RCxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRU0sTUFBTSxZQUFZLEdBQUcsVUFBUyxDQUFPLEVBQUUsV0FBbUIsQ0FBQztJQUNoRSxJQUFJLEdBQUcsR0FBVyxFQUFFLENBQUM7SUFDckIsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNsQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxLQUFLLENBQUM7S0FDdkM7SUFDRCxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2QixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFTSxNQUFNLFlBQVksR0FBRyxVQUFTLENBQU8sRUFBRSxXQUFtQixDQUFDO0lBQ2hFLElBQUksR0FBRyxHQUFXLEdBQUcsQ0FBQztJQUN0QixLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ2xDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUcsQ0FBQztLQUNyQztJQUNELEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLE9BQU8sR0FBRyxHQUFHLEdBQUcsQ0FBQztBQUNuQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvdXRpbHMvcHJpbnQudHM/ZDc2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3YXJuIH0gZnJvbSBcImNvbnNvbGVcIjtcbmltcG9ydCB7IG1hdDQsIG1hdDMsIE1hdDQsIFZlYzMsIFZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcblxuZXhwb3J0IGNvbnN0IHByaW50TWF0NCA9IGZ1bmN0aW9uKG06IE1hdDQpOiB2b2lkIHtcbiAgdmFyIHN0cjogc3RyaW5nID0gXCJcIjtcbiAgZm9yICh2YXIgaTogbnVtYmVyID0gMDsgaSA8IDQ7IGkrKykge1xuICAgIGZvciAodmFyIGo6IG51bWJlciA9IDA7IGogPCA0OyBqKyspIHtcbiAgICAgIHN0ciArPSBtWzQgKiBpICsgal0udG9GaXhlZCgyKSArIFwiLCAgXCI7XG4gICAgfVxuICAgIHN0ciArPSBcIlxcblwiO1xuICB9XG4gIGNvbnNvbGUubG9nKHN0cik7XG59XG5cbmV4cG9ydCBjb25zdCBwcmludFZlYzMgPSBmdW5jdGlvbih2OiBWZWMzLCBkZWNpbWFsczogbnVtYmVyID0gMik6IHZvaWQge1xuICBjb25zb2xlLmxvZyh2ZWMzVG9TdHJpbmcodiwgZGVjaW1hbHMpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHZlYzNUb1N0cmluZyA9IGZ1bmN0aW9uKHY6IFZlYzMsIGRlY2ltYWxzOiBudW1iZXIgPSAyKTogc3RyaW5nIHtcbiAgdmFyIHN0cjogc3RyaW5nID0gXCJcIjtcbiAgZm9yICh2YXIgaTogbnVtYmVyID0gMDsgaSA8IDM7IGkrKykge1xuICAgIHN0ciArPSB2W2ldLnRvRml4ZWQoZGVjaW1hbHMpICsgXCIsICBcIjtcbiAgfVxuICBzdHIgPSBzdHIuc2xpY2UoMCwgLTEpO1xuICByZXR1cm4gc3RyO1xufVxuXG5leHBvcnQgY29uc3QgdmVjNFRvU3RyaW5nID0gZnVuY3Rpb24odjogVmVjNCwgZGVjaW1hbHM6IG51bWJlciA9IDIpOiBzdHJpbmcge1xuICB2YXIgc3RyOiBzdHJpbmcgPSBcIltcIjtcbiAgZm9yICh2YXIgaTogbnVtYmVyID0gMDsgaSA8IDQ7IGkrKykge1xuICAgIHN0ciArPSB2W2ldLnRvRml4ZWQoZGVjaW1hbHMpICsgXCIsXCI7XG4gIH1cbiAgc3RyID0gc3RyLnNsaWNlKDAsIC0xKTtcbiAgcmV0dXJuIHN0ciArIFwiXVwiO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/print.ts\n");

/***/ }),

/***/ "./src/utils/timer.ts":
/*!****************************!*\
  !*** ./src/utils/timer.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Timer: () => (/* binding */ Timer)\n/* harmony export */ });\nclass Timer {\n    constructor() {\n        this.startTime = 0;\n        this.reset();\n    }\n    reset() {\n        this.startTime = Date.now();\n    }\n    logTime() {\n        console.log((Date.now() - this.startTime) / 1000.0);\n    }\n    getTime() {\n        return (Date.now() - this.startTime) / 1000.0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdGltZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUdPLE1BQU0sS0FBSztJQUlkO1FBRlEsY0FBUyxHQUFXLENBQUMsQ0FBQztRQUcxQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVNLEtBQUs7UUFDUixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ2xELENBQUM7Q0FFSiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3V0aWxzL3RpbWVyLnRzPzI4ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuZXhwb3J0IGNsYXNzIFRpbWVyIHtcblxuICAgIHByaXZhdGUgc3RhcnRUaW1lOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVzZXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgbG9nVGltZSgpOiB2b2lkIHtcbiAgICAgICAgY29uc29sZS5sb2coKERhdGUubm93KCkgLSB0aGlzLnN0YXJ0VGltZSkgLyAxMDAwLjApO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUaW1lKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAoRGF0ZS5ub3coKSAtIHRoaXMuc3RhcnRUaW1lKSAvIDEwMDAuMDtcbiAgICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/timer.ts\n");

/***/ }),

/***/ "./src/widgets/cursor.ts":
/*!*******************************!*\
  !*** ./src/widgets/cursor.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cursor: () => (/* binding */ cursor)\n/* harmony export */ });\nclass Cursor {\n    constructor() {\n        this.cursor = this.createCursor();\n    }\n    setPosition(pos) {\n        this.cursor[0].style.left = (pos[0]).toString() + \"px\";\n        this.cursor[0].style.top = (pos[1] - 5).toString() + \"px\";\n        this.cursor[1].style.left = (pos[0] - 5).toString() + \"px\";\n        this.cursor[1].style.top = (pos[1]).toString() + \"px\";\n    }\n    show() {\n        this.cursor[0].hidden = false;\n        this.cursor[1].hidden = false;\n    }\n    hide() {\n        this.cursor[0].hidden = true;\n        this.cursor[1].hidden = true;\n    }\n    createCursor() {\n        const cursorVertical = document.createElement(\"div\");\n        const cursorHorizontal = document.createElement(\"div\");\n        cursorVertical.className = \"floating-window\";\n        cursorVertical.style.borderRadius = \"0px\";\n        cursorVertical.style.padding = \"0px\";\n        cursorVertical.style.margin = \"0px\";\n        cursorVertical.style.width = \"0px\";\n        cursorVertical.style.height = \"10px\";\n        cursorHorizontal.className = \"floating-window\";\n        cursorHorizontal.style.borderRadius = \"0px\";\n        cursorHorizontal.style.padding = \"0px\";\n        cursorHorizontal.style.margin = \"0px\";\n        cursorHorizontal.style.width = \"10px\";\n        cursorHorizontal.style.height = \"0px\";\n        document.body.appendChild(cursorVertical);\n        document.body.appendChild(cursorHorizontal);\n        const res = [cursorVertical, cursorHorizontal];\n        return res;\n    }\n}\nconst cursor = new Cursor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQztDQUdGO0FBRU0sTUFBTSxNQUFNLEdBQVcsSUFBSSxNQUFNLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aWRnZXRzL2N1cnNvci50cz9lZTA3Il0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEN1cnNvciB7XG5cbiAgcHJpdmF0ZSBjdXJzb3I6IFtIVE1MRGl2RWxlbWVudCwgSFRNTERpdkVsZW1lbnRdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY3Vyc29yID0gdGhpcy5jcmVhdGVDdXJzb3IoKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRQb3NpdGlvbihwb3M6IFtudW1iZXIsIG51bWJlcl0pOiB2b2lkIHtcbiAgICB0aGlzLmN1cnNvclswXS5zdHlsZS5sZWZ0ID0gKHBvc1swXSkudG9TdHJpbmcoKSArIFwicHhcIjtcbiAgICB0aGlzLmN1cnNvclswXS5zdHlsZS50b3AgPSAocG9zWzFdIC0gNSkudG9TdHJpbmcoKSArIFwicHhcIjtcbiAgICB0aGlzLmN1cnNvclsxXS5zdHlsZS5sZWZ0ID0gKHBvc1swXSAtIDUpLnRvU3RyaW5nKCkgKyBcInB4XCI7XG4gICAgdGhpcy5jdXJzb3JbMV0uc3R5bGUudG9wID0gKHBvc1sxXSkudG9TdHJpbmcoKSArIFwicHhcIjtcbiAgfVxuXG4gIHB1YmxpYyBzaG93KCk6IHZvaWQge1xuICAgIHRoaXMuY3Vyc29yWzBdLmhpZGRlbiA9IGZhbHNlO1xuICAgIHRoaXMuY3Vyc29yWzFdLmhpZGRlbiA9IGZhbHNlO1xuICB9XG4gIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xuICAgIHRoaXMuY3Vyc29yWzBdLmhpZGRlbiA9IHRydWU7XG4gICAgdGhpcy5jdXJzb3JbMV0uaGlkZGVuID0gdHJ1ZTtcbiAgfVxuXG5cbiAgcHJpdmF0ZSBjcmVhdGVDdXJzb3IoKTogW0hUTUxEaXZFbGVtZW50LCBIVE1MRGl2RWxlbWVudF0ge1xuICAgIGNvbnN0IGN1cnNvclZlcnRpY2FsOiBIVE1MRGl2RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29uc3QgY3Vyc29ySG9yaXpvbnRhbDogSFRNTERpdkVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGN1cnNvclZlcnRpY2FsLmNsYXNzTmFtZSA9IFwiZmxvYXRpbmctd2luZG93XCI7XG4gICAgY3Vyc29yVmVydGljYWwuc3R5bGUuYm9yZGVyUmFkaXVzID0gXCIwcHhcIjtcbiAgICBjdXJzb3JWZXJ0aWNhbC5zdHlsZS5wYWRkaW5nID0gXCIwcHhcIjtcbiAgICBjdXJzb3JWZXJ0aWNhbC5zdHlsZS5tYXJnaW4gPSBcIjBweFwiO1xuICAgIGN1cnNvclZlcnRpY2FsLnN0eWxlLndpZHRoID0gXCIwcHhcIjtcbiAgICBjdXJzb3JWZXJ0aWNhbC5zdHlsZS5oZWlnaHQgPSBcIjEwcHhcIjtcbiAgICBjdXJzb3JIb3Jpem9udGFsLmNsYXNzTmFtZSA9IFwiZmxvYXRpbmctd2luZG93XCI7XG4gICAgY3Vyc29ySG9yaXpvbnRhbC5zdHlsZS5ib3JkZXJSYWRpdXMgPSBcIjBweFwiO1xuICAgIGN1cnNvckhvcml6b250YWwuc3R5bGUucGFkZGluZyA9IFwiMHB4XCI7XG4gICAgY3Vyc29ySG9yaXpvbnRhbC5zdHlsZS5tYXJnaW4gPSBcIjBweFwiO1xuICAgIGN1cnNvckhvcml6b250YWwuc3R5bGUud2lkdGggPSBcIjEwcHhcIjtcbiAgICBjdXJzb3JIb3Jpem9udGFsLnN0eWxlLmhlaWdodCA9IFwiMHB4XCI7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjdXJzb3JWZXJ0aWNhbCk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjdXJzb3JIb3Jpem9udGFsKTtcbiAgICBjb25zdCByZXM6IFtIVE1MRGl2RWxlbWVudCwgSFRNTERpdkVsZW1lbnRdID0gW2N1cnNvclZlcnRpY2FsLCBjdXJzb3JIb3Jpem9udGFsXTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cblxufVxuXG5leHBvcnQgY29uc3QgY3Vyc29yOiBDdXJzb3IgPSBuZXcgQ3Vyc29yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/widgets/cursor.ts\n");

/***/ }),

/***/ "./src/widgets/mover.ts":
/*!******************************!*\
  !*** ./src/widgets/mover.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mover: () => (/* binding */ Mover)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_boundingBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/group */ \"./src/geometry/group.ts\");\n/* harmony import */ var _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geometry/mesh */ \"./src/geometry/mesh.ts\");\n/* harmony import */ var _geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../geometry/nurbs/arc */ \"./src/geometry/nurbs/arc.ts\");\n/* harmony import */ var _geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../geometry/nurbs/loft */ \"./src/geometry/nurbs/loft.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/math */ \"./src/utils/math.ts\");\n\n\n\n\n\n\n\n\n\nclass Mover {\n    constructor() {\n        this.active = false;\n        this.moved = false;\n        this.componentClicked = null;\n        this.originalIntersectionPoint = null;\n        this.originalModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity();\n        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity();\n        this.element = document.createElement(\"div\");\n        this.element.id = \"mover\";\n        this.element.className = \"floating-window\";\n        this.element.style.width = \"auto\";\n        this.element.style.height = \"auto\";\n        this.element.hidden = true;\n        document.body.appendChild(this.element);\n        const origin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, 0);\n        const xAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0);\n        const yAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0);\n        const spinnerInner = (0,_geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_4__.createArc)(origin, xAxis, yAxis, 4, 0, Math.PI / 2);\n        const spinnerOuter = (0,_geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_4__.createArc)(origin, xAxis, yAxis, 5, 0, Math.PI / 2);\n        const tempSurface = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__.loft)([spinnerInner, spinnerOuter], 1);\n        this.xSpinner = tempSurface.getMesh().clone();\n        this.ySpinner = tempSurface.getMesh().clone();\n        this.zSpinner = tempSurface.getMesh().clone();\n        this.xSpinner.setMaterial(\"red\");\n        this.ySpinner.setMaterial(\"green\");\n        this.zSpinner.setMaterial(\"blue\");\n        this.xSpinner.setConstantScreenSpaceSize(true);\n        this.ySpinner.setConstantScreenSpaceSize(true);\n        this.zSpinner.setConstantScreenSpaceSize(true);\n        tempSurface.delete();\n        this.xyzScaler = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 0)], [0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6, 0, 6, 1], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"white\", true);\n        this.xyPlaneMover = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(3, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(3, 3, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 3, 0)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"blue\", true);\n        this.xzPlaneMover = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(3, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(3, 3, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 3, 0)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"green\", true);\n        this.yzPlaneMover = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(3, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(3, 3, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 3, 0)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"red\", true);\n        this.xAxisMover = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(6, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(6, 0, 0),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(6, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0, 0, 3, 4, 4, 5, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"red\", true);\n        this.yAxisMover = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 6, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 6, 0),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 6, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0, 0, 3, 4, 4, 5, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"green\", true);\n        this.zAxisMover = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 6), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 6),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 6), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0, 0, 3, 4, 4, 5, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"blue\", true);\n        this.xScaler = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(6, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(6.5, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(8, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(6.5, 0, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"red\", true);\n        this.yScaler = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 6, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 6.5, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 8, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 6.5, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"green\", true);\n        this.zScaler = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 6), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 6.5), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 8), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 6.5)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"blue\", true);\n        this.xyScaler = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(4.5, 4.5, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(5.5, 4.5, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(7, 7, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(4.5, 5.5, 0)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"blue\", true);\n        this.yzScaler = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(4.5, 4.5, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(5.5, 4.5, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(7, 7, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(4.5, 5.5, 0)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"red\", true);\n        this.xzScaler = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_3__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(4.5, 4.5, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(5.5, 4.5, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(7, 7, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(4.5, 5.5, 0)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0], wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), \"green\", true);\n        this.surfaces = new _geometry_group__WEBPACK_IMPORTED_MODULE_2__.Group([\n            this.xyPlaneMover, this.xzPlaneMover, this.yzPlaneMover,\n            this.xSpinner, this.ySpinner, this.zSpinner,\n            this.xAxisMover, this.yAxisMover, this.zAxisMover,\n            this.xyzScaler,\n            this.xScaler, this.yScaler, this.zScaler,\n            this.xyScaler, this.yzScaler, this.xzScaler\n        ]);\n        this.surfaces.hide();\n        this.surfaces.setOverlay(true);\n        // cleanup construction curves\n        spinnerInner.delete();\n        spinnerOuter.delete();\n    }\n    onMouseMove() {\n        if (!this.active)\n            return;\n        if (this.element.hidden === false)\n            return;\n        this.moved = true;\n        const [x, y] = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos();\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n        const originalPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.getTranslation(this.originalModel);\n        switch (this.componentClicked) {\n            case this.xyPlaneMover.getID(): {\n                const xyPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1));\n                const intersectionTime = ray.intersectPlane(xyPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const delta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, this.originalIntersectionPoint);\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, delta);\n                    }\n                }\n                break;\n            }\n            case this.yzPlaneMover.getID(): {\n                const yzPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0));\n                const intersectionTime = ray.intersectPlane(yzPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const delta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, this.originalIntersectionPoint);\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, delta);\n                    }\n                }\n                break;\n            }\n            case this.xzPlaneMover.getID(): {\n                const xzPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0));\n                const intersectionTime = ray.intersectPlane(xzPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const delta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, this.originalIntersectionPoint);\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, delta);\n                    }\n                }\n                break;\n            }\n            case this.xSpinner.getID(): {\n                const yzPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0));\n                const intersectionTime = ray.intersectPlane(yzPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const pos = originalPos;\n                        const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(this.originalIntersectionPoint, pos);\n                        const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, pos);\n                        var angle = (0,_utils_math__WEBPACK_IMPORTED_MODULE_7__.angleBetween)(v1, v2);\n                        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.cross(v1, v2)) < 0) {\n                            angle *= -1;\n                        }\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateX(this.originalModel, angle);\n                    }\n                }\n                break;\n            }\n            case this.ySpinner.getID(): {\n                const xzPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0));\n                const intersectionTime = ray.intersectPlane(xzPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const pos = originalPos;\n                        const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(this.originalIntersectionPoint, pos);\n                        const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, pos);\n                        var angle = (0,_utils_math__WEBPACK_IMPORTED_MODULE_7__.angleBetween)(v1, v2);\n                        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.cross(v1, v2)) < 0) {\n                            angle *= -1;\n                        }\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateY(this.originalModel, angle);\n                    }\n                }\n                break;\n            }\n            case this.zSpinner.getID(): {\n                const xyPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1));\n                const intersectionTime = ray.intersectPlane(xyPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const pos = originalPos;\n                        const v1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(this.originalIntersectionPoint, pos);\n                        const v2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, pos);\n                        var angle = (0,_utils_math__WEBPACK_IMPORTED_MODULE_7__.angleBetween)(v1, v2);\n                        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.cross(v1, v2)) < 0) {\n                            angle *= -1;\n                        }\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateZ(this.originalModel, angle);\n                    }\n                }\n                break;\n            }\n            case this.xAxisMover.getID(): {\n                const intersection = ray.closestPointOnLine(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.add(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0)));\n                if (!this.originalIntersectionPoint) {\n                    this.originalIntersectionPoint = intersection;\n                }\n                else {\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersection, this.originalIntersectionPoint));\n                }\n                break;\n            }\n            case this.yAxisMover.getID(): {\n                const intersection = ray.closestPointOnLine(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.add(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0)));\n                if (!this.originalIntersectionPoint) {\n                    this.originalIntersectionPoint = intersection;\n                }\n                else {\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersection, this.originalIntersectionPoint));\n                }\n                break;\n            }\n            case this.zAxisMover.getID(): {\n                const intersection = ray.closestPointOnLine(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.add(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)));\n                if (!this.originalIntersectionPoint) {\n                    this.originalIntersectionPoint = intersection;\n                }\n                else {\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersection, this.originalIntersectionPoint));\n                }\n                break;\n            }\n            case this.xScaler.getID(): {\n                const intersection = ray.closestPointOnLine(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.add(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0)));\n                if (!this.originalIntersectionPoint) {\n                    this.originalIntersectionPoint = intersection;\n                }\n                else {\n                    const originalDelta = this.originalIntersectionPoint[0] - originalPos[0];\n                    const newDelta = intersection[0] - originalPos[0];\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(newDelta / originalDelta, 1, 1));\n                }\n                break;\n            }\n            case this.yScaler.getID(): {\n                const intersection = ray.closestPointOnLine(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.add(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0)));\n                if (!this.originalIntersectionPoint) {\n                    this.originalIntersectionPoint = intersection;\n                }\n                else {\n                    const originalDelta = this.originalIntersectionPoint[1] - originalPos[1];\n                    const newDelta = intersection[1] - originalPos[1];\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, newDelta / originalDelta, 1));\n                }\n                break;\n            }\n            case this.zScaler.getID(): {\n                const intersection = ray.closestPointOnLine(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.add(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)));\n                if (!this.originalIntersectionPoint) {\n                    this.originalIntersectionPoint = intersection;\n                }\n                else {\n                    const originalDelta = this.originalIntersectionPoint[2] - originalPos[2];\n                    const newDelta = intersection[2] - originalPos[2];\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, newDelta / originalDelta));\n                }\n                break;\n            }\n            case this.xyScaler.getID(): {\n                const xyPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1));\n                const intersectionTime = ray.intersectPlane(xyPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const originalDelta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.length(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(this.originalIntersectionPoint, originalPos));\n                        const newDelta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.length(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, originalPos));\n                        const factor = newDelta / originalDelta;\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(factor, factor, 1));\n                    }\n                }\n                break;\n            }\n            case this.yzScaler.getID(): {\n                const yzPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 0, 0));\n                const intersectionTime = ray.intersectPlane(yzPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const originalDelta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.length(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(this.originalIntersectionPoint, originalPos));\n                        const newDelta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.length(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, originalPos));\n                        const factor = newDelta / originalDelta;\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, factor, factor));\n                    }\n                }\n                break;\n            }\n            case this.xzScaler.getID(): {\n                const xzPlane = new _geometry_plane__WEBPACK_IMPORTED_MODULE_6__.Plane(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 1, 0));\n                const intersectionTime = ray.intersectPlane(xzPlane);\n                if (intersectionTime) {\n                    const intersectionPoint = ray.at(intersectionTime);\n                    if (!this.originalIntersectionPoint) {\n                        this.originalIntersectionPoint = intersectionPoint;\n                    }\n                    else {\n                        const originalDelta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.length(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(this.originalIntersectionPoint, originalPos));\n                        const newDelta = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.length(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.sub(intersectionPoint, originalPos));\n                        const factor = newDelta / originalDelta;\n                        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(factor, 1, factor));\n                    }\n                }\n                break;\n            }\n            case this.xyzScaler.getID(): {\n                const intersection = ray.closestPointOnLine(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.add(originalPos, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, 1)));\n                if (this.originalIntersectionPoint === null) {\n                    this.originalIntersectionPoint = intersection;\n                }\n                else {\n                    var dz = intersection[2] - this.originalIntersectionPoint[2];\n                    if (dz > 0)\n                        dz += 1;\n                    else\n                        dz = -1 / (dz - 1);\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(dz, dz, dz));\n                }\n                break;\n            }\n            default:\n                throw new Error(\"case not implemented\");\n        }\n        this.surfaces.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.currentModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.inverse(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.getScaling(this.currentModel))));\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n    }\n    onMouseUp() {\n        if (this.active) {\n            if (this.element.hidden) {\n                if (this.moved) { // dragged\n                    this.moved = false;\n                    this.active = false;\n                    this.originalIntersectionPoint = null;\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().transformSelected();\n                    this.updatedSelection();\n                    this.originalModel = this.currentModel;\n                }\n                else { // clicked\n                    this.originalIntersectionPoint = null;\n                    switch (this.componentClicked) {\n                        case this.xSpinner.getID():\n                            this.element.innerHTML = \"X Rotation: \";\n                            break;\n                        case this.ySpinner.getID():\n                            this.element.innerHTML = \"Y Rotation: \";\n                            break;\n                        case this.zSpinner.getID():\n                            this.element.innerHTML = \"Z Rotation: \";\n                            break;\n                        case this.xAxisMover.getID():\n                            this.element.innerHTML = \"X Translation: \";\n                            break;\n                        case this.yAxisMover.getID():\n                            this.element.innerHTML = \"Y Translation: \";\n                            break;\n                        case this.zAxisMover.getID():\n                            this.element.innerHTML = \"Z Translation: \";\n                            break;\n                        case this.xScaler.getID():\n                            this.element.innerHTML = \"X Scale: \";\n                            break;\n                        case this.yScaler.getID():\n                            this.element.innerHTML = \"Y Scale: \";\n                            break;\n                        case this.zScaler.getID():\n                            this.element.innerHTML = \"Z Scale: \";\n                            break;\n                        case this.xyScaler.getID():\n                            this.element.innerHTML = \"XY Scale: \";\n                            break;\n                        case this.yzScaler.getID():\n                            this.element.innerHTML = \"YZ Scale: \";\n                            break;\n                        case this.xzScaler.getID():\n                            this.element.innerHTML = \"XZ Scale: \";\n                            break;\n                        case this.xyzScaler.getID():\n                            this.element.innerHTML = \"Scale: \";\n                            break;\n                        default:\n                            this.active = false;\n                            this.originalIntersectionPoint = null;\n                            return;\n                    }\n                    const mousePos = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos();\n                    this.element.setAttribute(\"style\", `\n          left:${mousePos[0] + 20}px;\n          top:${mousePos[1] - 20}px;\n          width:auto;\n          height:auto;`);\n                    this.element.hidden = false;\n                }\n            }\n            else { // active with text dialog\n                this.active = false;\n                this.element.hidden = true;\n                this.originalIntersectionPoint = null;\n                this.currentModel = this.originalModel;\n            }\n        }\n    }\n    onkeydown(event) {\n        if (this.active && this.element.hidden === false) {\n            if (event.code == \"Enter\") {\n                this.active = false;\n                this.element.hidden = true;\n                this.originalIntersectionPoint = null;\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().transformSelected();\n                this.updatedSelection();\n                this.originalModel = this.currentModel;\n                return;\n            }\n            if (event.code == \"Delete\" || event.code == \"Backspace\" && this.element.innerHTML.at(-1) != \":\") {\n                console.log(\"here\");\n                this.element.innerHTML = this.element.innerHTML.slice(0, -1);\n            }\n            else if (event.key.length === 1) {\n                this.element.innerHTML += event.key;\n            }\n            const input = this.element.innerHTML.split(\":\")[1];\n            var parsedInput = parseFloat(input);\n            switch (this.componentClicked) {\n                case this.xSpinner.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 0;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateX(this.originalModel, parsedInput / 180 * Math.PI);\n                    break;\n                case this.ySpinner.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 0;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateY(this.originalModel, parsedInput / 180 * Math.PI);\n                    break;\n                case this.zSpinner.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 0;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateZ(this.originalModel, parsedInput / 180 * Math.PI);\n                    break;\n                case this.xAxisMover.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 0;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(parsedInput, 0, 0));\n                    break;\n                case this.yAxisMover.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 0;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, parsedInput, 0));\n                    break;\n                case this.zAxisMover.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 0;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(0, 0, parsedInput));\n                    break;\n                case this.xScaler.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 1;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(parsedInput, 1, 1));\n                    break;\n                case this.yScaler.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 1;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, parsedInput, 1));\n                    break;\n                case this.zScaler.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 1;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, 1, parsedInput));\n                    break;\n                case this.xyScaler.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 1;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(parsedInput, parsedInput, 1));\n                    break;\n                case this.yzScaler.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 1;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(1, parsedInput, parsedInput));\n                    break;\n                case this.xzScaler.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 1;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(parsedInput, 1, parsedInput));\n                    break;\n                case this.xyzScaler.getID():\n                    if (isNaN(parsedInput))\n                        parsedInput = 1;\n                    this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(this.originalModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(parsedInput, parsedInput, parsedInput));\n                    break;\n            }\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().onSelectionMoved();\n        }\n    }\n    isActive() {\n        return this.active;\n    }\n    idClicked(id) {\n        if (!this.active) {\n            if (this.element.hidden) {\n                this.active = true;\n                this.componentClicked = id;\n            }\n        }\n    }\n    tick() {\n        this.flip();\n    }\n    updatedSelection() {\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.surfaces.hide();\n        }\n        else {\n            const selectionBB = new _geometry_boundingBox__WEBPACK_IMPORTED_MODULE_1__.BoundingBox();\n            for (const geo of selection) {\n                if (geo.isSelected()) {\n                    selectionBB.addBoundingBox(geo.getBoundingBox());\n                }\n                else {\n                    selectionBB.addBoundingBox(geo.getSubSelectionBoundingBox());\n                }\n            }\n            this.originalModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.translate(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), selectionBB.getCenter());\n            this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.clone(this.originalModel);\n            this.surfaces.setModel(this.originalModel);\n            this.flip();\n            this.surfaces.show();\n        }\n    }\n    flip() {\n        const cameraPos = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPosition();\n        const thisPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.getTranslation(this.currentModel);\n        const dx = thisPos[0] - cameraPos[0];\n        const dy = thisPos[1] - cameraPos[1];\n        const dz = thisPos[2] - cameraPos[2];\n        var flipper = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.vec3.create(dx > 0 ? -1 : 1, dy > 0 ? -1 : 1, dz > 0 ? -1 : 1));\n        this.xyPlaneMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.yzPlaneMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toYZPlane));\n        this.xzPlaneMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXZPlane));\n        this.xSpinner.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toYZPlane));\n        this.ySpinner.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXZPlane));\n        this.zSpinner.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.xAxisMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.yAxisMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.zAxisMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.xScaler.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.yScaler.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.zScaler.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.xyScaler.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n        this.yzScaler.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toYZPlane));\n        this.xzScaler.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXZPlane));\n        this.xyzScaler.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(flipper, Mover.toXYPlane));\n    }\n    getTransform() {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(this.currentModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.inverse(this.originalModel));\n    }\n    setTransform(t) {\n        this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.mul(t, this.originalModel);\n    }\n}\nMover.toXZPlane = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.uniformScale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateX(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), Math.PI / 2), 0.02);\nMover.toYZPlane = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.uniformScale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.rotateY(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), Math.PI / -2), 0.02);\nMover.toXYPlane = wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.uniformScale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_8__.mat4.identity(), 0.02);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/widgets/mover.ts\n");

/***/ }),

/***/ "./src/window/window.ts":
/*!******************************!*\
  !*** ./src/window/window.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CADWindow: () => (/* binding */ CADWindow)\n/* harmony export */ });\nclass CADWindow {\n    constructor(name, start, end) {\n        this.start = start;\n        this.end = end;\n        this.element = document.createElement(\"div\");\n        this.element.id = name;\n        this.element.className = \"floating-window\";\n        this.updateSize();\n        document.body.appendChild(this.element);\n        this.populate();\n    }\n    updateEnd(end) {\n        this.end = end;\n        this.updateSize();\n    }\n    updateSize() {\n        const left = Math.min(this.start[0], this.end[0]);\n        const top = Math.min(this.start[1], this.end[1]);\n        const width = Math.abs(this.start[0] - this.end[0]) - 10;\n        const height = Math.abs(this.start[1] - this.end[1]) - 10;\n        this.element.setAttribute(\"style\", `\n      left:${left}px;\n      top:${top}px;\n      width:${width}px;\n      height:${height}px;`);\n    }\n    destroy() {\n        document.body.removeChild(this.element);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvdy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBZSxTQUFTO0lBSTdCLFlBQVksSUFBWSxFQUNkLEtBQXVCLEVBQ3ZCLEdBQXFCO1FBRHJCLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBQ3ZCLFFBQUcsR0FBSCxHQUFHLENBQWtCO1FBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsaUJBQWlCLENBQUM7UUFDM0MsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2xCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVNLFNBQVMsQ0FBQyxHQUFxQjtRQUNwQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNmLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRU8sVUFBVTtRQUNoQixNQUFNLElBQUksR0FBVyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFELE1BQU0sR0FBRyxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekQsTUFBTSxLQUFLLEdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDakUsTUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFO2FBQzFCLElBQUk7WUFDTCxHQUFHO2NBQ0QsS0FBSztlQUNKLE1BQU0sS0FBSyxDQUNyQixDQUFDO0lBQ0osQ0FBQztJQUVNLE9BQU87UUFDWixRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUMsQ0FBQztDQUtGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvd2luZG93L3dpbmRvdy50cz9kN2NhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDQURXaW5kb3cge1xuXG4gIHByb3RlY3RlZCBlbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcblxuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsXG4gICAgcHJpdmF0ZSBzdGFydDogW251bWJlciwgbnVtYmVyXSxcbiAgICBwcml2YXRlIGVuZDogW251bWJlciwgbnVtYmVyXSkge1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGhpcy5lbGVtZW50LmlkID0gbmFtZTtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NOYW1lID0gXCJmbG9hdGluZy13aW5kb3dcIjtcbiAgICB0aGlzLnVwZGF0ZVNpemUoKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7XG4gICAgdGhpcy5wb3B1bGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZUVuZChlbmQ6IFtudW1iZXIsIG51bWJlcl0pOiB2b2lkIHtcbiAgICB0aGlzLmVuZCA9IGVuZDtcbiAgICB0aGlzLnVwZGF0ZVNpemUoKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlU2l6ZSgpOiB2b2lkIHtcbiAgICBjb25zdCBsZWZ0OiBudW1iZXIgPSBNYXRoLm1pbih0aGlzLnN0YXJ0WzBdLCB0aGlzLmVuZFswXSk7XG4gICAgY29uc3QgdG9wOiBudW1iZXIgPSBNYXRoLm1pbih0aGlzLnN0YXJ0WzFdLCB0aGlzLmVuZFsxXSk7XG4gICAgY29uc3Qgd2lkdGg6IG51bWJlciA9IE1hdGguYWJzKHRoaXMuc3RhcnRbMF0gLSB0aGlzLmVuZFswXSkgLSAxMDtcbiAgICBjb25zdCBoZWlnaHQ6IG51bWJlciA9IE1hdGguYWJzKHRoaXMuc3RhcnRbMV0gLSB0aGlzLmVuZFsxXSkgLSAxMDtcbiAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgYFxuICAgICAgbGVmdDoke2xlZnR9cHg7XG4gICAgICB0b3A6JHt0b3B9cHg7XG4gICAgICB3aWR0aDoke3dpZHRofXB4O1xuICAgICAgaGVpZ2h0OiR7aGVpZ2h0fXB4O2BcbiAgICApO1xuICB9XG5cbiAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpO1xuICB9XG5cbiAgcHVibGljIGFic3RyYWN0IHBvcHVsYXRlKCk6IHZvaWQ7XG4gIHB1YmxpYyBhYnN0cmFjdCB0aWNrKCk6IHZvaWQ7XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/window/window.ts\n");

/***/ }),

/***/ "./src/window/windowManager.ts":
/*!*************************************!*\
  !*** ./src/window/windowManager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WINDOW_NAMES: () => (/* binding */ WINDOW_NAMES),\n/* harmony export */   WindowManager: () => (/* binding */ WindowManager)\n/* harmony export */ });\n/* harmony import */ var _windows_logWindow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./windows/logWindow */ \"./src/window/windows/logWindow.ts\");\n/* harmony import */ var _windows_materialsWindow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./windows/materialsWindow */ \"./src/window/windows/materialsWindow.ts\");\n/* harmony import */ var _windows_sceneWindow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./windows/sceneWindow */ \"./src/window/windows/sceneWindow.ts\");\n/* harmony import */ var _windows_snapsWindow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./windows/snapsWindow */ \"./src/window/windows/snapsWindow.ts\");\n/* harmony import */ var _windows_statsWindow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./windows/statsWindow */ \"./src/window/windows/statsWindow.ts\");\n\n\n\n\n\nconst WINDOW_NAMES = new Map();\nWINDOW_NAMES.set(1, \"stats\");\nWINDOW_NAMES.set(2, \"log\");\nWINDOW_NAMES.set(3, \"materials\");\nWINDOW_NAMES.set(4, \"scene\");\nWINDOW_NAMES.set(5, \"snaps\");\nclass WindowManager {\n    constructor() {\n        this.windows = new Map();\n        this.setupDefaultWindows();\n    }\n    setupDefaultWindows() {\n        this.addWindow(\"materials\", [10, 10], [210, 580]);\n        this.addWindow(\"stats\", [220, 10], [410, 240]);\n        this.addWindow(\"snaps\", [420, 10], [550, 100]);\n    }\n    getWindows() {\n        return this.windows;\n    }\n    addWindow(windowName, start, end) {\n        this.removeWindow(windowName);\n        switch (windowName) {\n            case \"stats\":\n                this.windows.set(\"stats\", new _windows_statsWindow__WEBPACK_IMPORTED_MODULE_4__.StatsWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"log\":\n                this.windows.set(\"log\", new _windows_logWindow__WEBPACK_IMPORTED_MODULE_0__.LogWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"materials\":\n                this.windows.set(\"materials\", new _windows_materialsWindow__WEBPACK_IMPORTED_MODULE_1__.MaterialsWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"scene\":\n                this.windows.set(\"scene\", new _windows_sceneWindow__WEBPACK_IMPORTED_MODULE_2__.SceneWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"snaps\":\n                this.windows.set(\"snaps\", new _windows_snapsWindow__WEBPACK_IMPORTED_MODULE_3__.SnapsWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            default:\n                throw new Error(\"not implemented\");\n        }\n    }\n    removeWindow(windowName) {\n        var _a;\n        (_a = this.windows.get(windowName)) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.windows.delete(windowName);\n    }\n    tick() {\n        for (let window of this.windows.values()) {\n            window.tick();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRU0sWUFBWSxDQUFDLFVBQWtCOztRQUNwQyxVQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsMENBQUUsT0FBTyxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLElBQUk7UUFDVCxLQUFLLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDeEMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2Y7SUFDSCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93TWFuYWdlci50cz80YTM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENBRFdpbmRvdyB9IGZyb20gXCIuL3dpbmRvd1wiO1xuaW1wb3J0IHsgTG9nV2luZG93IH0gZnJvbSBcIi4vd2luZG93cy9sb2dXaW5kb3dcIjtcbmltcG9ydCB7IE1hdGVyaWFsc1dpbmRvdyB9IGZyb20gXCIuL3dpbmRvd3MvbWF0ZXJpYWxzV2luZG93XCI7XG5pbXBvcnQgeyBTY2VuZVdpbmRvdyB9IGZyb20gXCIuL3dpbmRvd3Mvc2NlbmVXaW5kb3dcIjtcbmltcG9ydCB7IFNuYXBzV2luZG93IH0gZnJvbSBcIi4vd2luZG93cy9zbmFwc1dpbmRvd1wiO1xuaW1wb3J0IHsgU3RhdHNXaW5kb3cgfSBmcm9tIFwiLi93aW5kb3dzL3N0YXRzV2luZG93XCI7XG5cbmV4cG9ydCBjb25zdCBXSU5ET1dfTkFNRVM6IE1hcDxudW1iZXIsIHN0cmluZz4gPSBuZXcgTWFwPG51bWJlciwgc3RyaW5nPigpO1xuV0lORE9XX05BTUVTLnNldCgxLCBcInN0YXRzXCIpO1xuV0lORE9XX05BTUVTLnNldCgyLCBcImxvZ1wiKTtcbldJTkRPV19OQU1FUy5zZXQoMywgXCJtYXRlcmlhbHNcIik7XG5XSU5ET1dfTkFNRVMuc2V0KDQsIFwic2NlbmVcIik7XG5XSU5ET1dfTkFNRVMuc2V0KDUsIFwic25hcHNcIik7XG5cbmV4cG9ydCBjbGFzcyBXaW5kb3dNYW5hZ2VyIHtcblxuICBwcml2YXRlIHdpbmRvd3M6IE1hcDxzdHJpbmcsIENBRFdpbmRvdz47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy53aW5kb3dzID0gbmV3IE1hcDxzdHJpbmcsIENBRFdpbmRvdz4oKTtcbiAgICB0aGlzLnNldHVwRGVmYXVsdFdpbmRvd3MoKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0dXBEZWZhdWx0V2luZG93cygpOiB2b2lkIHtcbiAgICB0aGlzLmFkZFdpbmRvdyhcIm1hdGVyaWFsc1wiLCBbMTAsIDEwXSwgWzIxMCwgNTgwXSk7XG4gICAgdGhpcy5hZGRXaW5kb3coXCJzdGF0c1wiLCBbMjIwLCAxMF0sIFs0MTAsIDI0MF0pO1xuICAgIHRoaXMuYWRkV2luZG93KFwic25hcHNcIiwgWzQyMCwgMTBdLCBbNTUwLCAxMDBdKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRXaW5kb3dzKCk6IE1hcDxzdHJpbmcsIENBRFdpbmRvdz4ge1xuICAgIHJldHVybiB0aGlzLndpbmRvd3M7XG4gIH1cblxuICBwdWJsaWMgYWRkV2luZG93KHdpbmRvd05hbWU6IHN0cmluZywgc3RhcnQ6IFtudW1iZXIsIG51bWJlcl0sIGVuZD86IFtudW1iZXIsIG51bWJlcl0pIHtcbiAgICB0aGlzLnJlbW92ZVdpbmRvdyh3aW5kb3dOYW1lKTtcbiAgICBzd2l0Y2ggKHdpbmRvd05hbWUpIHtcbiAgICAgIGNhc2UgXCJzdGF0c1wiOlxuICAgICAgICB0aGlzLndpbmRvd3Muc2V0KFwic3RhdHNcIiwgbmV3IFN0YXRzV2luZG93KHdpbmRvd05hbWUsIHN0YXJ0LCBlbmQgPz8gc3RhcnQpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwibG9nXCI6XG4gICAgICAgIHRoaXMud2luZG93cy5zZXQoXCJsb2dcIiwgbmV3IExvZ1dpbmRvdyh3aW5kb3dOYW1lLCBzdGFydCwgZW5kID8/IHN0YXJ0KSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIm1hdGVyaWFsc1wiOlxuICAgICAgICB0aGlzLndpbmRvd3Muc2V0KFwibWF0ZXJpYWxzXCIsIG5ldyBNYXRlcmlhbHNXaW5kb3cod2luZG93TmFtZSwgc3RhcnQsIGVuZCA/PyBzdGFydCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJzY2VuZVwiOlxuICAgICAgICB0aGlzLndpbmRvd3Muc2V0KFwic2NlbmVcIiwgbmV3IFNjZW5lV2luZG93KHdpbmRvd05hbWUsIHN0YXJ0LCBlbmQgPz8gc3RhcnQpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwic25hcHNcIjpcbiAgICAgICAgdGhpcy53aW5kb3dzLnNldChcInNuYXBzXCIsIG5ldyBTbmFwc1dpbmRvdyh3aW5kb3dOYW1lLCBzdGFydCwgZW5kID8/IHN0YXJ0KSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwibm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVXaW5kb3cod2luZG93TmFtZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy53aW5kb3dzLmdldCh3aW5kb3dOYW1lKT8uZGVzdHJveSgpO1xuICAgIHRoaXMud2luZG93cy5kZWxldGUod2luZG93TmFtZSk7XG4gIH1cblxuICBwdWJsaWMgdGljaygpOiB2b2lkIHtcbiAgICBmb3IgKGxldCB3aW5kb3cgb2YgdGhpcy53aW5kb3dzLnZhbHVlcygpKSB7XG4gICAgICB3aW5kb3cudGljaygpO1xuICAgIH1cbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/window/windowManager.ts\n");

/***/ }),

/***/ "./src/window/windows/logWindow.ts":
/*!*****************************************!*\
  !*** ./src/window/windows/logWindow.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogWindow: () => (/* binding */ LogWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass LogWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().getLogs();\n    }\n    tick() {\n        this.populate();\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3MvbG9nV2luZG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBRS9CLE1BQU0sU0FBVSxTQUFRLDhDQUFTO0lBRS9CLFFBQVE7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3ZELENBQUM7SUFFTSxJQUFJO1FBRVQsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ3JELENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL2xvZ1dpbmRvdy50cz83NWEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgQ0FEV2luZG93IH0gZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5leHBvcnQgY2xhc3MgTG9nV2luZG93IGV4dGVuZHMgQ0FEV2luZG93IHtcblxuICBwdWJsaWMgcG9wdWxhdGUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IElOU1RBTkNFLmdldExvZygpLmdldExvZ3MoKTtcbiAgfVxuXG4gIHB1YmxpYyB0aWNrKCk6IHZvaWQge1xuXG4gICAgdGhpcy5wb3B1bGF0ZSgpO1xuICAgIHRoaXMuZWxlbWVudC5zY3JvbGxUb3AgPSB0aGlzLmVsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/window/windows/logWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/materialsWindow.ts":
/*!***********************************************!*\
  !*** ./src/window/windows/materialsWindow.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaterialsWindow: () => (/* binding */ MaterialsWindow)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _materials_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../materials/material */ \"./src/materials/material.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\n\n\nclass MaterialsWindow extends _window__WEBPACK_IMPORTED_MODULE_2__.CADWindow {\n    constructor(name, start, end) {\n        super(name, start, end);\n        this.selectedMaterial = null;\n        this.renderMaterialList();\n    }\n    populate() {\n    }\n    tick() {\n    }\n    renderMaterialList() {\n        const materials = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getMaterials();\n        this.element.innerHTML = \"<u>MATERIALS:</u><br><br>\";\n        const list = document.createElement(\"ul\");\n        const newMaterialButton = document.createElement(\"li\");\n        newMaterialButton.innerHTML = \"<b>Create New Material</b>\";\n        newMaterialButton.onclick = function () {\n            const mat = new _materials_material__WEBPACK_IMPORTED_MODULE_1__.Material(\"\");\n            const thisWindow = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(\"materials\");\n            thisWindow.setSelectedMaterial(mat);\n        };\n        list.appendChild(newMaterialButton);\n        for (const [name, material] of materials) {\n            const element = document.createElement(\"li\");\n            element.innerHTML = name;\n            element.onmousedown = function (ev) {\n                const thisWindow = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(\"materials\");\n                thisWindow.setSelectedMaterial(material);\n                ev.stopPropagation();\n            };\n            list.appendChild(element);\n        }\n        this.element.appendChild(list);\n    }\n    createSlider(id, min, max, initialValue) {\n        const res = document.createElement(\"input\");\n        res.setAttribute(\"type\", \"range\");\n        res.setAttribute(\"min\", min.toString());\n        res.setAttribute(\"max\", max.toString());\n        res.setAttribute(\"step\", \"0.01\");\n        res.style.width = \"12em\";\n        res.setAttribute(\"value\", initialValue.toString());\n        res.setAttribute(\"id\", id);\n        return res;\n    }\n    renderMaterial() {\n        const name = this.selectedMaterial.getName();\n        const color = this.selectedMaterial.getColor();\n        const emissive = this.selectedMaterial.getEmissive();\n        const ambientIntensity = this.selectedMaterial.getAmbientIntensity();\n        const diffuseIntensity = this.selectedMaterial.getPseudoDiffuseIntensity();\n        const specularity = this.selectedMaterial.getSpecularity();\n        const specularIntensity = this.selectedMaterial.getSpecularIntensity();\n        this.element.innerHTML = \"<b><u>Materials:</u></b><br>\";\n        this.element.innerHTML += \"<br><b>Color:<b>\";\n        this.element.innerHTML += \"<br>R:\";\n        this.element.appendChild(this.createSlider(\"colorRedSlider\", 0, 1, color[0]));\n        this.element.innerHTML += \"<br>G:\";\n        this.element.appendChild(this.createSlider(\"colorGreenSlider\", 0, 1, color[1]));\n        this.element.innerHTML += \"<br>B:\";\n        this.element.appendChild(this.createSlider(\"colorBlueSlider\", 0, 1, color[2]));\n        this.element.innerHTML += \"<br>A:\";\n        this.element.appendChild(this.createSlider(\"colorAlphaSlider\", 0, 1, color[3]));\n        this.element.innerHTML += \"<br><b>Emissive:<b>\";\n        this.element.innerHTML += \"<br>R:\";\n        this.element.appendChild(this.createSlider(\"emissiveRedSlider\", 0, 1, emissive[0]));\n        this.element.innerHTML += \"<br>G:\";\n        this.element.appendChild(this.createSlider(\"emissiveGreenSlider\", 0, 1, emissive[1]));\n        this.element.innerHTML += \"<br>B:\";\n        this.element.appendChild(this.createSlider(\"emissiveBlueSlider\", 0, 1, emissive[2]));\n        this.element.innerHTML += \"<br>A:\";\n        this.element.appendChild(this.createSlider(\"emissiveAlphaSlider\", 0, 1, emissive[3]));\n        this.element.innerHTML += \"<br><b>Ambient Intensity:<b>\";\n        this.element.appendChild(this.createSlider(\"ambientIntensity\", 0, 1, ambientIntensity));\n        this.element.innerHTML += \"<br><b>Diffuse Intensity:<b>\";\n        this.element.appendChild(this.createSlider(\"diffuseIntensity\", 0, 1, diffuseIntensity));\n        this.element.innerHTML += \"<br><b>Specularity:<b>\";\n        this.element.appendChild(this.createSlider(\"specularity\", 0, 7, Math.log2(specularity)));\n        this.element.innerHTML += \"<br><b>Specular Intensity:<b>\";\n        this.element.appendChild(this.createSlider(\"specularIntensity\", 0, 1, specularIntensity));\n        this.element.innerHTML += \"<br><b>Name: <b>\";\n        const nameField = document.createElement(\"input\");\n        nameField.setAttribute(\"value\", name);\n        nameField.style.width = \"9em\";\n        nameField.setAttribute(\"id\", \"name field\");\n        this.element.appendChild(nameField);\n        const nameSubmitButton = document.createElement(\"button\");\n        nameSubmitButton.innerHTML = \"<b>Save Name</b>\";\n        nameSubmitButton.style.width = \"13em\";\n        nameSubmitButton.onclick = function (ev) {\n            const thisWindow = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(\"materials\");\n            thisWindow.updatedName();\n            ev.stopPropagation();\n        };\n        this.element.appendChild(nameSubmitButton);\n        const backButton = document.createElement(\"button\");\n        backButton.innerHTML = \"<b>Back</b>\";\n        backButton.onclick = function (ev) {\n            const thisWindow = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(\"materials\");\n            thisWindow.setSelectedMaterial(null);\n            ev.stopPropagation();\n        };\n        this.element.appendChild(backButton);\n        const deleteButton = document.createElement(\"button\");\n        deleteButton.innerHTML = \"<b>Delete</b>\";\n        deleteButton.onclick = function (ev) {\n            const thisWindow = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(\"materials\");\n            const mat = thisWindow.getSelectedMaterial();\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().removeMaterial(mat.getName());\n            thisWindow.setSelectedMaterial(null);\n            ev.stopPropagation();\n        };\n        this.element.appendChild(deleteButton);\n        this.element.oninput = function (ev) {\n            const thisWindow = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(\"materials\");\n            thisWindow.updatedMaterial();\n            ev.stopPropagation();\n        };\n    }\n    updatedName() {\n        const name = document.getElementById(\"name field\").value;\n        if (name == \"\") {\n            alert(\"Invalid Name\");\n            return;\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().removeMaterial(this.selectedMaterial.getName());\n        this.selectedMaterial.setName(name);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().addMaterial(this.selectedMaterial.getName(), this.selectedMaterial);\n    }\n    updatedMaterial() {\n        const colorR = parseFloat(document.getElementById(\"colorRedSlider\").value);\n        const colorG = parseFloat(document.getElementById(\"colorGreenSlider\").value);\n        const colorB = parseFloat(document.getElementById(\"colorBlueSlider\").value);\n        const colorA = parseFloat(document.getElementById(\"colorAlphaSlider\").value);\n        this.selectedMaterial.updateColor(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(colorR, colorG, colorB, colorA));\n        const emissiveR = parseFloat(document.getElementById(\"emissiveRedSlider\").value);\n        const emissiveG = parseFloat(document.getElementById(\"emissiveGreenSlider\").value);\n        const emissiveB = parseFloat(document.getElementById(\"emissiveBlueSlider\").value);\n        const emissiveA = parseFloat(document.getElementById(\"emissiveAlphaSlider\").value);\n        this.selectedMaterial.updateEmissive(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(emissiveR, emissiveG, emissiveB, emissiveA));\n        const ambientIntensity = parseFloat(document.getElementById(\"ambientIntensity\").value);\n        this.selectedMaterial.updateAmbientIntensity(ambientIntensity);\n        const diffuseIntensity = parseFloat(document.getElementById(\"diffuseIntensity\").value);\n        this.selectedMaterial.updatePseudoDiffuseIntensity(diffuseIntensity);\n        const specularity = parseFloat(document.getElementById(\"specularity\").value);\n        this.selectedMaterial.updateSpecularity(Math.pow(2, specularity));\n        const specularIntensity = parseFloat(document.getElementById(\"specularIntensity\").value);\n        this.selectedMaterial.updateSpecularIntensity(specularIntensity);\n    }\n    getSelectedMaterial() {\n        return this.selectedMaterial;\n    }\n    setSelectedMaterial(material) {\n        this.selectedMaterial = material;\n        if (this.selectedMaterial) {\n            this.renderMaterial();\n        }\n        else {\n            this.renderMaterialList();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/window/windows/materialsWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/sceneWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/sceneWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SceneWindow: () => (/* binding */ SceneWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass SceneWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = \"<u>SCENE:</u><br>\";\n        const list = document.createElement(\"ul\");\n        for (let geo of _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getRootGeometry()) {\n            const item = document.createElement(\"li\");\n            item.innerHTML = geo.getTypeName() +\n                \" id:\" + geo.getID().toString() +\n                \" selected:\" + geo.isSelected().toString();\n            list.appendChild(item);\n        }\n        this.element.appendChild(list);\n    }\n    tick() {\n        this.populate();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc2NlbmVXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFFakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLG1CQUFtQixDQUFDO1FBQzdDLE1BQU0sSUFBSSxHQUFnQixRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZELEtBQUssSUFBSSxHQUFHLElBQUksMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxlQUFlLEVBQUUsRUFBRTtZQUNyRCxNQUFNLElBQUksR0FBZ0IsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN2RCxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxXQUFXLEVBQUU7Z0JBQ2hDLE1BQU0sR0FBRyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsUUFBUSxFQUFFO2dCQUMvQixZQUFZLEdBQUcsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQzdDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDeEI7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU0sSUFBSTtRQUNULElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93cy9zY2VuZVdpbmRvdy50cz82OTdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgQ0FEV2luZG93IH0gZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5leHBvcnQgY2xhc3MgU2NlbmVXaW5kb3cgZXh0ZW5kcyBDQURXaW5kb3cge1xuXG4gIHB1YmxpYyBwb3B1bGF0ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gXCI8dT5TQ0VORTo8L3U+PGJyPlwiO1xuICAgIGNvbnN0IGxpc3Q6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgIGZvciAobGV0IGdlbyBvZiBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldFJvb3RHZW9tZXRyeSgpKSB7XG4gICAgICBjb25zdCBpdGVtOiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICAgIGl0ZW0uaW5uZXJIVE1MID0gZ2VvLmdldFR5cGVOYW1lKCkgK1xuICAgICAgICBcIiBpZDpcIiArIGdlby5nZXRJRCgpLnRvU3RyaW5nKCkgK1xuICAgICAgICBcIiBzZWxlY3RlZDpcIiArIGdlby5pc1NlbGVjdGVkKCkudG9TdHJpbmcoKTtcbiAgICAgIGxpc3QuYXBwZW5kQ2hpbGQoaXRlbSk7XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChsaXN0KTtcbiAgfVxuXG4gIHB1YmxpYyB0aWNrKCk6IHZvaWQge1xuICAgIHRoaXMucG9wdWxhdGUoKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/sceneWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/snapsWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/snapsWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapsWindow: () => (/* binding */ SnapsWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass SnapsWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getHTML();\n    }\n    tick() {\n        this.populate();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc25hcHNXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFHakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLDBDQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzVGLENBQUM7SUFFTSxJQUFJO1FBQ1QsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2xCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL3NuYXBzV2luZG93LnRzPzk5MmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBDQURXaW5kb3cgfSBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmV4cG9ydCBjbGFzcyBTbmFwc1dpbmRvdyBleHRlbmRzIENBRFdpbmRvdyB7XG5cblxuICBwdWJsaWMgcG9wdWxhdGUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IElOU1RBTkNFLmdldFNldHRpbmdzTWFuYWdlcigpLmdldFNuYXBTZXR0aW5nc01hbmFnZXIoKS5nZXRIVE1MKCk7XG4gIH1cblxuICBwdWJsaWMgdGljaygpOiB2b2lkIHtcbiAgICB0aGlzLnBvcHVsYXRlKCk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/snapsWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/statsWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/statsWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatsWindow: () => (/* binding */ StatsWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass StatsWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getStats().getInnerHTML();\n    }\n    tick() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getStats().getInnerHTML();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc3RhdHNXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFFakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDOUQsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzlELENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL3N0YXRzV2luZG93LnRzPzUyNGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBDQURXaW5kb3cgfSBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmV4cG9ydCBjbGFzcyBTdGF0c1dpbmRvdyBleHRlbmRzIENBRFdpbmRvdyB7XG5cbiAgcHVibGljIHBvcHVsYXRlKCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSBJTlNUQU5DRS5nZXRTdGF0cygpLmdldElubmVySFRNTCgpO1xuICB9XG5cbiAgcHVibGljIHRpY2soKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IElOU1RBTkNFLmdldFN0YXRzKCkuZ2V0SW5uZXJIVE1MKCk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/statsWindow.ts\n");

/***/ }),

/***/ "./src/render/shaders/idShader.wgsl":
/*!******************************************!*\
  !*** ./src/render/shaders/idShader.wgsl ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"struct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> modelInverseTranspose : mat4x4<f32>;\\n@group(0) @binding(2) var<uniform> color : vec4<f32>;\\n@group(0) @binding(3) var<uniform> flags: i32;\\n@group(0) @binding(4) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> selectionTransformInverseTraspose: mat4x4<f32>;\\n@group(1) @binding(4) var<uniform> resolution: vec2<f32>;\\n// TODO: why is resolution.x 0? \\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) objectSpacePosition : vec4<f32>,\\n    @location(1) normal : vec4<f32>\\n    ) -> VertexOutput\\n{\\n  var worldSpacePosition = model * objectSpacePosition.xzyw;\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xyz);\\n    worldSpacePosition = model * vec4<f32>(objectSpacePosition.xzy * dist, objectSpacePosition.w);\\n  } \\n\\n  var output: VertexOutput;\\n  output.position = cameraViewProj * worldSpacePosition;\\n  return output;\\n}\\n\\n\\nstruct FragInputs {\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: FragInputs) -> @location(0) i32 {\\n\\n  return id;\\n\\n}\\n\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvaWRTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsc0JBQXNCLCtDQUErQyxzQkFBc0IseURBQXlELHlFQUF5RSx1REFBdUQsZ0RBQWdELDZDQUE2QyxpRkFBaUYsaUVBQWlFLHFFQUFxRSxvRkFBb0YsMkRBQTJELG1GQUFtRixnQ0FBZ0MsbUNBQW1DLG1DQUFtQyw2SUFBNkksOERBQThELG9EQUFvRCxzRUFBc0Usb0dBQW9HLE1BQU0sK0JBQStCLDBEQUEwRCxrQkFBa0IsR0FBRyx5QkFBeUIsZ0RBQWdELHdFQUF3RSxnQkFBZ0IsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9zaGFkZXJzL2lkU2hhZGVyLndnc2w/MzNiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcInN0cnVjdCBWZXJ0ZXhPdXRwdXQge1xcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcbn1cXG5cXG4vLyBsb2NhbCB1bmlmb3JtcztcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IG1vZGVsIDogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBtb2RlbEludmVyc2VUcmFuc3Bvc2UgOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMikgdmFyPHVuaWZvcm0+IGNvbG9yIDogdmVjNDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygzKSB2YXI8dW5pZm9ybT4gZmxhZ3M6IGkzMjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoNCkgdmFyPHVuaWZvcm0+IGlkOiBpMzI7XFxuXFxuLy8gZ2xvYmFsIHVuaWZvcm1zOlxcbkBncm91cCgxKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gY2FtZXJhUG9zOiB2ZWMzPGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBjYW1lcmFWaWV3UHJvajogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBzZWxlY3Rpb25UcmFuc2Zvcm06IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygzKSB2YXI8dW5pZm9ybT4gc2VsZWN0aW9uVHJhbnNmb3JtSW52ZXJzZVRyYXNwb3NlOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoNCkgdmFyPHVuaWZvcm0+IHJlc29sdXRpb246IHZlYzI8ZjMyPjtcXG4vLyBUT0RPOiB3aHkgaXMgcmVzb2x1dGlvbi54IDA/IFxcblxcbmNvbnN0IENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVDogaTMyID0gMSA8PCAwO1xcbmNvbnN0IEhPVkVSX0JJVDogaTMyID0gMSA8PCAxO1xcbmNvbnN0IFNFTEVDVEVEX0JJVDogaTMyID0gMSA8PCAyO1xcblxcbmNvbnN0IFNUUklQRV9XSURUSDogZjMyID0gMTAuMDtcXG5cXG5AdmVydGV4XFxuZm4gdmVydGV4TWFpbihcXG4gICAgQGxvY2F0aW9uKDApIG9iamVjdFNwYWNlUG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuICAgIEBsb2NhdGlvbigxKSBub3JtYWwgOiB2ZWM0PGYzMj5cXG4gICAgKSAtPiBWZXJ0ZXhPdXRwdXRcXG57XFxuICB2YXIgd29ybGRTcGFjZVBvc2l0aW9uID0gbW9kZWwgKiBvYmplY3RTcGFjZVBvc2l0aW9uLnh6eXc7XFxuXFxuICBpZiAoKGZsYWdzICYgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUKSAhPSAwKSB7XFxuICAgIHZhciBkaXN0OiBmMzIgPSBkaXN0YW5jZSh3b3JsZFNwYWNlUG9zaXRpb24ueHl6LCBjYW1lcmFQb3MueHl6KTtcXG4gICAgd29ybGRTcGFjZVBvc2l0aW9uID0gbW9kZWwgKiB2ZWM0PGYzMj4ob2JqZWN0U3BhY2VQb3NpdGlvbi54enkgKiBkaXN0LCBvYmplY3RTcGFjZVBvc2l0aW9uLncpO1xcbiAgfSBcXG5cXG4gIHZhciBvdXRwdXQ6IFZlcnRleE91dHB1dDtcXG4gIG91dHB1dC5wb3NpdGlvbiA9IGNhbWVyYVZpZXdQcm9qICogd29ybGRTcGFjZVBvc2l0aW9uO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuXFxuc3RydWN0IEZyYWdJbnB1dHMge1xcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIGZyYWdDb29yZHM6IHZlYzQ8ZjMyPixcXG59XFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKGlucHV0czogRnJhZ0lucHV0cykgLT4gQGxvY2F0aW9uKDApIGkzMiB7XFxuXFxuICByZXR1cm4gaWQ7XFxuXFxufVxcblxcblxcblxcblxcblwiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/shaders/idShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/instancedTriangleShader.wgsl":
/*!*********************************************************!*\
  !*** ./src/render/shaders/instancedTriangleShader.wgsl ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"// local uniforms:\\n@group(0) @binding(0) var<uniform> model: mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> modelInverseTranspose : mat4x4<f32>;\\n@group(0) @binding(2) var<uniform> material: Material;\\n@group(0) @binding(3) var<uniform> flags: i32;\\n@group(0) @binding(4) var<uniform> id: i32;\\n@group(0) @binding(5) var<storage, read> subSelection: array<u32>;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> selectionTransformInverseTraspose: mat4x4<f32>;\\n@group(1) @binding(4) var<uniform> resolution: vec2<f32>;\\n\\n// instance uniforms:\\n@group(2) @binding(0) var<storage, read> transforms: array<mat4x4<f32>>;\\n\\nstruct Material {\\n  color: vec4<f32>,\\n  emissive: vec4<f32>,\\n  ambientIntensity: f32,\\n  pseudoDiffuseIntensity: f32,\\n  specularity: f32,\\n  specularIntensity: f32,\\n}\\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\nfn toWorldSpace(p: vec4<f32>, instanceID: u32) -> vec4<f32> {\\n  return model * transforms[instanceID] * p.xzyw;\\n}\\n\\nfn applySelectionTransform(p: vec4<f32>) -> vec4<f32> {\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    return selectionTransform * p;\\n  } else {\\n    return p;\\n  }\\n}\\nfn applySelectionTransformNormal(p: vec4<f32>) -> vec4<f32> {\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    return selectionTransformInverseTraspose * p;\\n  } else {\\n    return p;\\n  }\\n}\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) objectSpacePosition: vec4<f32>,\\n    @location(1) objectSpaceNormal: vec4<f32>,\\n    @builtin(instance_index) instanceID: u32) -> FragInput \\n{\\n\\n  var worldSpacePosition = applySelectionTransform(toWorldSpace(objectSpacePosition, instanceID));\\n  var worldSpaceNormal = applySelectionTransformNormal(modelInverseTranspose * objectSpaceNormal.xzyw);\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xyz);\\n    // TODO: dist should actually be dist in forward direction\\n    var scaledObjectSpacePosition: vec4<f32> = vec4<f32>(objectSpacePosition.xzy * dist, objectSpacePosition.w);\\n    worldSpacePosition = applySelectionTransform(toWorldSpace(scaledObjectSpacePosition, instanceID));\\n  } \\n\\n  var selected: u32 = 0u;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    selected = 1u;\\n  }\\n  if (selected == 0u) {\\n    selected = (subSelection[instanceID / 32] & (1u << (instanceID % 32u)));\\n  }\\n\\n\\n  var output: FragInput;\\n  output.normal = worldSpaceNormal;\\n  output.fragCoord = cameraViewProj * worldSpacePosition;\\n  output.position = worldSpacePosition;\\n  output.selected = selected;\\n  return output;\\n}\\n\\n\\nfn calculateLighting(position: vec4<f32>, normal: vec3<f32>, material: Material) -> vec4<f32> {\\n  var toCamera: vec3<f32> = normalize(cameraPos.xyz - position.xyz);\\n\\n  var flippedNormal: vec3<f32> = normal;\\n  if (dot(toCamera, normal) < 0) {\\n    flippedNormal *= -1;\\n  } \\n\\n  let normalizedLightIntensity: f32 = dot(flippedNormal, vec3<f32>(0,1,0)) * 0.5 + 0.5;\\n  let reflectedLight: vec3<f32> = reflect(vec3<f32>(0,1,0), normal);\\n  let pseudoDiffuse: vec4<f32> = material.color * normalizedLightIntensity * material.pseudoDiffuseIntensity;\\n  let ambient: vec4<f32> = material.color * material.ambientIntensity;\\n  let specular: vec4<f32> = material.color * pow(max(dot(reflectedLight, toCamera) * -0.5 + 0.5, 0), material.specularity) * material.specularIntensity;\\n\\n  return pseudoDiffuse + ambient + specular + material.emissive;\\n}\\n\\nstruct FragInput {\\n  @builtin(position) fragCoord: vec4<f32>,\\n  @location(0) @interpolate(linear) normal: vec4<f32>,\\n  @location(1) @interpolate(linear) position: vec4<f32>,\\n  @location(2) @interpolate(flat) selected: u32,\\n}\\n\\nstruct FragOutputs {\\n  @builtin(frag_depth) depth: f32,\\n  @location(0) color: vec4f,\\n}\\n\\n\\n@fragment\\nfn fragmentMain(inputs: FragInput) -> FragOutputs {\\n\\n  var normalizedNormal: vec3<f32> = normalize(inputs.normal.xyz);\\n  var fragColor: vec4<f32> = calculateLighting(inputs.position, normalizedNormal, material);\\n\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoord.xy / STRIPE_WIDTH;\\n\\n  var depth: f32 = inputs.fragCoord.z;\\n\\n  if (inputs.selected > 0u) {\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n      depth *= 0.9999999;\\n  }\\n  \\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n      depth *= 0.9999999;\\n  }\\n\\n  var res: FragOutputs;\\n  res.depth = depth;\\n  res.color = fragColor;\\n  return res;\\n\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/render/shaders/instancedTriangleShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/lineShader.wgsl":
/*!********************************************!*\
  !*** ./src/render/shaders/lineShader.wgsl ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n  @location(0) @interpolate(linear) selectedness: f32,\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> modelInverseTranspose : mat4x4<f32>;\\n@group(0) @binding(2) var<uniform> color : vec4<f32>;\\n@group(0) @binding(3) var<uniform> flags: i32;\\n@group(0) @binding(4) var<uniform> id: i32;\\n@group(0) @binding(5) var<storage, read> subSelection: array<u32>;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> selectionTransformInverseTraspose: mat4x4<f32>;\\n@group(1) @binding(4) var<uniform> resolution: vec2<f32>;\\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\nconst SELECTED_COLOR: vec4<f32> = vec4<f32>(1,1,0,1);\\n\\nfn toWorldSpace(p: vec4<f32>) -> vec4<f32> {\\n  return model * p.xzyw;\\n}\\n\\nfn applySelectionTransform(p: vec4<f32>) -> vec4<f32> {\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    return selectionTransform * p;\\n  } else {\\n    return p;\\n  }\\n}\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) objectSpacePosition : vec4<f32>,\\n    @builtin(vertex_index) index: u32,\\n    ) -> VertexOutput\\n{\\n\\n  var worldSpacePosition = applySelectionTransform(toWorldSpace(objectSpacePosition));\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xyz);\\n    // TODO: dist should actually be dist in forward direction\\n    var scaledObjectSpacePosition: vec4<f32> = vec4<f32>(objectSpacePosition.xzy * dist, objectSpacePosition.w);\\n    worldSpacePosition = applySelectionTransform(toWorldSpace(scaledObjectSpacePosition));\\n  } \\n\\n  var selectedness: f32 = 0;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {selectedness = 1;}\\n  if ((subSelection[index / 32] & (1u << (index % 32))) > 0) {selectedness = 1;}\\n\\n  var output: VertexOutput;\\n  output.position = cameraViewProj * worldSpacePosition;\\n  output.selectedness = selectedness;\\n  return output;\\n}\\n\\nstruct FragOutputs {\\n  @builtin(frag_depth) depth: f32,\\n  @location(0) color: vec4f,\\n}\\n\\n\\n@fragment\\nfn fragmentMain(inputs: VertexOutput) -> FragOutputs {\\n\\n  // set up frag color\\n  var fragColor: vec4<f32> = color;\\n\\n  var depth: f32 = inputs.position.z * 0.9999999;\\n\\n  var scaledFragCoords: vec2<f32> = inputs.position.xy / STRIPE_WIDTH;\\n  if (inputs.selectedness > 0) {\\n    var test: f32 = pow(inputs.selectedness, 2);\\n   fragColor = (1 - test) * fragColor + test * SELECTED_COLOR;\\n    depth *= 0.9999999;\\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n   fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n    depth *= 0.9999999;\\n  }\\n\\n  var output: FragOutputs;\\n  output.color = fragColor;\\n  output.depth = depth;\\n  return output;\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvbGluZVNoYWRlci53Z3NsIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSx3QkFBd0IsdUdBQXVHLHNCQUFzQix5REFBeUQseUVBQXlFLHVEQUF1RCxnREFBZ0QsNkNBQTZDLG9FQUFvRSxpRkFBaUYsaUVBQWlFLHFFQUFxRSxvRkFBb0YsMkRBQTJELGlEQUFpRCxnQ0FBZ0MsbUNBQW1DLG1DQUFtQyx5REFBeUQsZ0RBQWdELDBCQUEwQixHQUFHLDJEQUEyRCxpREFBaUQsb0NBQW9DLE1BQU0sTUFBTSxlQUFlLEtBQUssR0FBRyxnSkFBZ0osMEZBQTBGLGtEQUFrRCxzRUFBc0Usa0xBQWtMLDRGQUE0RixNQUFNLGdDQUFnQyxpREFBaUQsa0JBQWtCLGdFQUFnRSxrQkFBa0IsK0JBQStCLDBEQUEwRCx1Q0FBdUMsa0JBQWtCLEdBQUcsd0JBQXdCLHFFQUFxRSx1RUFBdUUsK0RBQStELHFEQUFxRCwwRUFBMEUsa0NBQWtDLGtEQUFrRCxnRUFBZ0UseUJBQXlCLEtBQUssMkNBQTJDLCtDQUErQyx5QkFBeUIsS0FBSyw4QkFBOEIsNkJBQTZCLHlCQUF5QixrQkFBa0IsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9zaGFkZXJzL2xpbmVTaGFkZXIud2dzbD8yNTRjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiXFxuc3RydWN0IFZlcnRleE91dHB1dCB7XFxuICBAYnVpbHRpbihwb3NpdGlvbikgcG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuICBAbG9jYXRpb24oMCkgQGludGVycG9sYXRlKGxpbmVhcikgc2VsZWN0ZWRuZXNzOiBmMzIsXFxufVxcblxcbi8vIGxvY2FsIHVuaWZvcm1zO1xcbkBncm91cCgwKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gbW9kZWwgOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IG1vZGVsSW52ZXJzZVRyYW5zcG9zZSA6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygyKSB2YXI8dW5pZm9ybT4gY29sb3IgOiB2ZWM0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDMpIHZhcjx1bmlmb3JtPiBmbGFnczogaTMyO1xcbkBncm91cCgwKSBAYmluZGluZyg0KSB2YXI8dW5pZm9ybT4gaWQ6IGkzMjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoNSkgdmFyPHN0b3JhZ2UsIHJlYWQ+IHN1YlNlbGVjdGlvbjogYXJyYXk8dTMyPjtcXG5cXG4vLyBnbG9iYWwgdW5pZm9ybXM6XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDApIHZhcjx1bmlmb3JtPiBjYW1lcmFQb3M6IHZlYzM8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IGNhbWVyYVZpZXdQcm9qOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMikgdmFyPHVuaWZvcm0+IHNlbGVjdGlvblRyYW5zZm9ybTogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDMpIHZhcjx1bmlmb3JtPiBzZWxlY3Rpb25UcmFuc2Zvcm1JbnZlcnNlVHJhc3Bvc2U6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZyg0KSB2YXI8dW5pZm9ybT4gcmVzb2x1dGlvbjogdmVjMjxmMzI+O1xcblxcbmNvbnN0IENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVDogaTMyID0gMSA8PCAwO1xcbmNvbnN0IEhPVkVSX0JJVDogaTMyID0gMSA8PCAxO1xcbmNvbnN0IFNFTEVDVEVEX0JJVDogaTMyID0gMSA8PCAyO1xcblxcbmNvbnN0IFNUUklQRV9XSURUSDogZjMyID0gMTAuMDtcXG5cXG5jb25zdCBTRUxFQ1RFRF9DT0xPUjogdmVjNDxmMzI+ID0gdmVjNDxmMzI+KDEsMSwwLDEpO1xcblxcbmZuIHRvV29ybGRTcGFjZShwOiB2ZWM0PGYzMj4pIC0+IHZlYzQ8ZjMyPiB7XFxuICByZXR1cm4gbW9kZWwgKiBwLnh6eXc7XFxufVxcblxcbmZuIGFwcGx5U2VsZWN0aW9uVHJhbnNmb3JtKHA6IHZlYzQ8ZjMyPikgLT4gdmVjNDxmMzI+IHtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICByZXR1cm4gc2VsZWN0aW9uVHJhbnNmb3JtICogcDtcXG4gIH0gZWxzZSB7XFxuICAgIHJldHVybiBwO1xcbiAgfVxcbn1cXG5cXG5AdmVydGV4XFxuZm4gdmVydGV4TWFpbihcXG4gICAgQGxvY2F0aW9uKDApIG9iamVjdFNwYWNlUG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuICAgIEBidWlsdGluKHZlcnRleF9pbmRleCkgaW5kZXg6IHUzMixcXG4gICAgKSAtPiBWZXJ0ZXhPdXRwdXRcXG57XFxuXFxuICB2YXIgd29ybGRTcGFjZVBvc2l0aW9uID0gYXBwbHlTZWxlY3Rpb25UcmFuc2Zvcm0odG9Xb3JsZFNwYWNlKG9iamVjdFNwYWNlUG9zaXRpb24pKTtcXG4gIGlmICgoZmxhZ3MgJiBDT05TVEFOVF9TQ1JFRU5fU0laRV9CSVQpICE9IDApIHtcXG4gICAgdmFyIGRpc3Q6IGYzMiA9IGRpc3RhbmNlKHdvcmxkU3BhY2VQb3NpdGlvbi54eXosIGNhbWVyYVBvcy54eXopO1xcbiAgICAvLyBUT0RPOiBkaXN0IHNob3VsZCBhY3R1YWxseSBiZSBkaXN0IGluIGZvcndhcmQgZGlyZWN0aW9uXFxuICAgIHZhciBzY2FsZWRPYmplY3RTcGFjZVBvc2l0aW9uOiB2ZWM0PGYzMj4gPSB2ZWM0PGYzMj4ob2JqZWN0U3BhY2VQb3NpdGlvbi54enkgKiBkaXN0LCBvYmplY3RTcGFjZVBvc2l0aW9uLncpO1xcbiAgICB3b3JsZFNwYWNlUG9zaXRpb24gPSBhcHBseVNlbGVjdGlvblRyYW5zZm9ybSh0b1dvcmxkU3BhY2Uoc2NhbGVkT2JqZWN0U3BhY2VQb3NpdGlvbikpO1xcbiAgfSBcXG5cXG4gIHZhciBzZWxlY3RlZG5lc3M6IGYzMiA9IDA7XFxuICBpZiAoKGZsYWdzICYgU0VMRUNURURfQklUKSA9PSBTRUxFQ1RFRF9CSVQpIHtzZWxlY3RlZG5lc3MgPSAxO31cXG4gIGlmICgoc3ViU2VsZWN0aW9uW2luZGV4IC8gMzJdICYgKDF1IDw8IChpbmRleCAlIDMyKSkpID4gMCkge3NlbGVjdGVkbmVzcyA9IDE7fVxcblxcbiAgdmFyIG91dHB1dDogVmVydGV4T3V0cHV0O1xcbiAgb3V0cHV0LnBvc2l0aW9uID0gY2FtZXJhVmlld1Byb2ogKiB3b3JsZFNwYWNlUG9zaXRpb247XFxuICBvdXRwdXQuc2VsZWN0ZWRuZXNzID0gc2VsZWN0ZWRuZXNzO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuc3RydWN0IEZyYWdPdXRwdXRzIHtcXG4gIEBidWlsdGluKGZyYWdfZGVwdGgpIGRlcHRoOiBmMzIsXFxuICBAbG9jYXRpb24oMCkgY29sb3I6IHZlYzRmLFxcbn1cXG5cXG5cXG5AZnJhZ21lbnRcXG5mbiBmcmFnbWVudE1haW4oaW5wdXRzOiBWZXJ0ZXhPdXRwdXQpIC0+IEZyYWdPdXRwdXRzIHtcXG5cXG4gIC8vIHNldCB1cCBmcmFnIGNvbG9yXFxuICB2YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSBjb2xvcjtcXG5cXG4gIHZhciBkZXB0aDogZjMyID0gaW5wdXRzLnBvc2l0aW9uLnogKiAwLjk5OTk5OTk7XFxuXFxuICB2YXIgc2NhbGVkRnJhZ0Nvb3JkczogdmVjMjxmMzI+ID0gaW5wdXRzLnBvc2l0aW9uLnh5IC8gU1RSSVBFX1dJRFRIO1xcbiAgaWYgKGlucHV0cy5zZWxlY3RlZG5lc3MgPiAwKSB7XFxuICAgIHZhciB0ZXN0OiBmMzIgPSBwb3coaW5wdXRzLnNlbGVjdGVkbmVzcywgMik7XFxuICAgZnJhZ0NvbG9yID0gKDEgLSB0ZXN0KSAqIGZyYWdDb2xvciArIHRlc3QgKiBTRUxFQ1RFRF9DT0xPUjtcXG4gICAgZGVwdGggKj0gMC45OTk5OTk5O1xcbiAgfVxcbiAgaWYgKChmbGFncyAmIEhPVkVSX0JJVCkgPT0gSE9WRVJfQklUKSB7XFxuICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDAuMCwgMC4wLCAxLjAsIDEuMCk7XFxuICAgIGRlcHRoICo9IDAuOTk5OTk5OTtcXG4gIH1cXG5cXG4gIHZhciBvdXRwdXQ6IEZyYWdPdXRwdXRzO1xcbiAgb3V0cHV0LmNvbG9yID0gZnJhZ0NvbG9yO1xcbiAgb3V0cHV0LmRlcHRoID0gZGVwdGg7XFxuICByZXR1cm4gb3V0cHV0O1xcbn1cXG5cXG5cXG5cXG5cIiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/render/shaders/lineShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/overlayMeshShader.wgsl":
/*!***************************************************!*\
  !*** ./src/render/shaders/overlayMeshShader.wgsl ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n    @location(0) @interpolate(linear) normal : vec4<f32>\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> modelInverseTranspose : mat4x4<f32>;\\n@group(0) @binding(2) var<uniform> color : vec4<f32>;\\n@group(0) @binding(3) var<uniform> flags: i32;\\n@group(0) @binding(4) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> selectionTransformInverseTraspose: mat4x4<f32>;\\n@group(1) @binding(4) var<uniform> resolution: vec2<f32>;\\n// TODO: why is resolution.x 0? \\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) objectSpacePosition : vec4<f32>,\\n    @location(1) objectSpaceNormal : vec4<f32>\\n    ) -> VertexOutput\\n{\\n  var worldSpacePosition = model * objectSpacePosition.xzyw;\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xyz);\\n    // TODO: Magic number should prolly be factored out...\\n    worldSpacePosition = model * vec4<f32>(objectSpacePosition.xzy * dist, objectSpacePosition.w);\\n  } \\n\\n  var output: VertexOutput;\\n  output.normal = objectSpaceNormal.xzyw;\\n  output.position = cameraViewProj * worldSpacePosition;\\n  return output;\\n\\n}\\n\\n\\nstruct FragInputs {\\n  @location(0) @interpolate(linear) normal : vec4f,\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: FragInputs) -> @location(0) vec4f {\\n\\n  var normalizedNormal: vec3<f32> = normalize(inputs.normal.xyz);\\n  //var fragColor: vec4<f32> = vec4<f32>(normalizedNormal/2.0 + vec3<f32>(0.5, 0.5, 0.5), 1.0);\\n  var fragColor: vec4<f32> = color;\\n\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoords.xy / STRIPE_WIDTH;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    \\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n   \\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n\\n  }\\n  return fragColor;\\n\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvb3ZlcmxheU1lc2hTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0JBQXdCLHlHQUF5RyxzQkFBc0IseURBQXlELHlFQUF5RSx1REFBdUQsZ0RBQWdELDZDQUE2QyxpRkFBaUYsaUVBQWlFLHFFQUFxRSxvRkFBb0YsMkRBQTJELG1GQUFtRixnQ0FBZ0MsbUNBQW1DLG1DQUFtQyx3SkFBd0osOERBQThELG9EQUFvRCxzRUFBc0UsZ0tBQWdLLE1BQU0sK0JBQStCLDJDQUEyQywwREFBMEQsa0JBQWtCLEtBQUsseUJBQXlCLHFHQUFxRywwRUFBMEUscUVBQXFFLGlHQUFpRyxxQ0FBcUMsNEVBQTRFLGlEQUFpRCxxRUFBcUUsK0RBQStELHFEQUFxRCxvREFBb0QsU0FBUyxVQUFVLDJDQUEyQyxpRUFBaUUsK0RBQStELHFEQUFxRCxvREFBb0QsU0FBUyxPQUFPLHFCQUFxQixLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3NoYWRlcnMvb3ZlcmxheU1lc2hTaGFkZXIud2dzbD8zNzVmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiXFxuc3RydWN0IFZlcnRleE91dHB1dCB7XFxuICBAYnVpbHRpbihwb3NpdGlvbikgcG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuICAgIEBsb2NhdGlvbigwKSBAaW50ZXJwb2xhdGUobGluZWFyKSBub3JtYWwgOiB2ZWM0PGYzMj5cXG59XFxuXFxuLy8gbG9jYWwgdW5pZm9ybXM7XFxuQGdyb3VwKDApIEBiaW5kaW5nKDApIHZhcjx1bmlmb3JtPiBtb2RlbCA6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygxKSB2YXI8dW5pZm9ybT4gbW9kZWxJbnZlcnNlVHJhbnNwb3NlIDogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBjb2xvciA6IHZlYzQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IGZsYWdzOiBpMzI7XFxuQGdyb3VwKDApIEBiaW5kaW5nKDQpIHZhcjx1bmlmb3JtPiBpZDogaTMyO1xcblxcbi8vIGdsb2JhbCB1bmlmb3JtczpcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IGNhbWVyYVBvczogdmVjMzxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygxKSB2YXI8dW5pZm9ybT4gY2FtZXJhVmlld1Byb2o6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygyKSB2YXI8dW5pZm9ybT4gc2VsZWN0aW9uVHJhbnNmb3JtOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IHNlbGVjdGlvblRyYW5zZm9ybUludmVyc2VUcmFzcG9zZTogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDQpIHZhcjx1bmlmb3JtPiByZXNvbHV0aW9uOiB2ZWMyPGYzMj47XFxuLy8gVE9ETzogd2h5IGlzIHJlc29sdXRpb24ueCAwPyBcXG5cXG5jb25zdCBDT05TVEFOVF9TQ1JFRU5fU0laRV9CSVQ6IGkzMiA9IDEgPDwgMDtcXG5jb25zdCBIT1ZFUl9CSVQ6IGkzMiA9IDEgPDwgMTtcXG5jb25zdCBTRUxFQ1RFRF9CSVQ6IGkzMiA9IDEgPDwgMjtcXG5cXG5jb25zdCBTVFJJUEVfV0lEVEg6IGYzMiA9IDEwLjA7XFxuXFxuQHZlcnRleFxcbmZuIHZlcnRleE1haW4oXFxuICAgIEBsb2NhdGlvbigwKSBvYmplY3RTcGFjZVBvc2l0aW9uIDogdmVjNDxmMzI+LFxcbiAgICBAbG9jYXRpb24oMSkgb2JqZWN0U3BhY2VOb3JtYWwgOiB2ZWM0PGYzMj5cXG4gICAgKSAtPiBWZXJ0ZXhPdXRwdXRcXG57XFxuICB2YXIgd29ybGRTcGFjZVBvc2l0aW9uID0gbW9kZWwgKiBvYmplY3RTcGFjZVBvc2l0aW9uLnh6eXc7XFxuXFxuICBpZiAoKGZsYWdzICYgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUKSAhPSAwKSB7XFxuICAgIHZhciBkaXN0OiBmMzIgPSBkaXN0YW5jZSh3b3JsZFNwYWNlUG9zaXRpb24ueHl6LCBjYW1lcmFQb3MueHl6KTtcXG4gICAgLy8gVE9ETzogTWFnaWMgbnVtYmVyIHNob3VsZCBwcm9sbHkgYmUgZmFjdG9yZWQgb3V0Li4uXFxuICAgIHdvcmxkU3BhY2VQb3NpdGlvbiA9IG1vZGVsICogdmVjNDxmMzI+KG9iamVjdFNwYWNlUG9zaXRpb24ueHp5ICogZGlzdCwgb2JqZWN0U3BhY2VQb3NpdGlvbi53KTtcXG4gIH0gXFxuXFxuICB2YXIgb3V0cHV0OiBWZXJ0ZXhPdXRwdXQ7XFxuICBvdXRwdXQubm9ybWFsID0gb2JqZWN0U3BhY2VOb3JtYWwueHp5dztcXG4gIG91dHB1dC5wb3NpdGlvbiA9IGNhbWVyYVZpZXdQcm9qICogd29ybGRTcGFjZVBvc2l0aW9uO1xcbiAgcmV0dXJuIG91dHB1dDtcXG5cXG59XFxuXFxuXFxuc3RydWN0IEZyYWdJbnB1dHMge1xcbiAgQGxvY2F0aW9uKDApIEBpbnRlcnBvbGF0ZShsaW5lYXIpIG5vcm1hbCA6IHZlYzRmLFxcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIGZyYWdDb29yZHM6IHZlYzQ8ZjMyPixcXG59XFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKGlucHV0czogRnJhZ0lucHV0cykgLT4gQGxvY2F0aW9uKDApIHZlYzRmIHtcXG5cXG4gIHZhciBub3JtYWxpemVkTm9ybWFsOiB2ZWMzPGYzMj4gPSBub3JtYWxpemUoaW5wdXRzLm5vcm1hbC54eXopO1xcbiAgLy92YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSB2ZWM0PGYzMj4obm9ybWFsaXplZE5vcm1hbC8yLjAgKyB2ZWMzPGYzMj4oMC41LCAwLjUsIDAuNSksIDEuMCk7XFxuICB2YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSBjb2xvcjtcXG5cXG4gIHZhciBzY2FsZWRGcmFnQ29vcmRzOiB2ZWMyPGYzMj4gPSBpbnB1dHMuZnJhZ0Nvb3Jkcy54eSAvIFNUUklQRV9XSURUSDtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICBcXG4gICAgICB2YXIgZXZlblg6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueCkuZnJhY3QgPCAwLjU7XFxuICAgICAgdmFyIGV2ZW5ZOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLnkpLmZyYWN0IDwgMC41O1xcbiAgICAgIGlmICgoZXZlblggJiYgIWV2ZW5ZKSB8fCAoZXZlblkgJiYgIWV2ZW5YKSkge1xcbiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDEuMCwgMS4wLCAwLjAsIDEuMCk7XFxuICAgICAgfVxcbiAgIFxcbiAgfVxcbiAgaWYgKChmbGFncyAmIEhPVkVSX0JJVCkgPT0gSE9WRVJfQklUKSB7XFxuXFxuICAgICAgdmFyIGV2ZW5YOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLngpLmZyYWN0IDwgMC41O1xcbiAgICAgIHZhciBldmVuWTogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy55KS5mcmFjdCA8IDAuNTtcXG4gICAgICBpZiAoKGV2ZW5YICYmICFldmVuWSkgfHwgKGV2ZW5ZICYmICFldmVuWCkpIHtcXG4gICAgICAgIGZyYWdDb2xvciA9IHZlYzQ8ZjMyPigwLjAsIDAuMCwgMS4wLCAxLjApO1xcbiAgICAgIH1cXG5cXG4gIH1cXG4gIHJldHVybiBmcmFnQ29sb3I7XFxuXFxufVxcblxcblxcblxcblwiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/shaders/overlayMeshShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/pointShader.wgsl":
/*!*********************************************!*\
  !*** ./src/render/shaders/pointShader.wgsl ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> modelInverseTranspose : mat4x4<f32>;\\n@group(0) @binding(2) var<uniform> color : vec4<f32>;\\n@group(0) @binding(3) var<uniform> flags: i32;\\n@group(0) @binding(4) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> selectionTransformInverseTraspose: mat4x4<f32>;\\n@group(1) @binding(4) var<uniform> resolution: vec2<f32>;\\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\nfn toWorldSpace(p: vec4<f32>) -> vec4<f32> {\\n  return model * p.xzyw;\\n}\\n\\nfn applySelectionTransform(p: vec4<f32>) -> vec4<f32> {\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    return selectionTransform * p;\\n  } else {\\n    return p;\\n  }\\n}\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) objectSpacePosition : vec4<f32>,\\n    ) -> VertexOutput\\n{\\n  var worldSpacePosition = applySelectionTransform(toWorldSpace(objectSpacePosition));\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xyz);\\n    // TODO: dist should actually be dist in forward direction\\n    var scaledObjectSpacePosition: vec4<f32> = vec4<f32>(objectSpacePosition.xzy * dist, objectSpacePosition.w);\\n    worldSpacePosition = applySelectionTransform(toWorldSpace(scaledObjectSpacePosition));\\n  } \\n\\n  var output: VertexOutput;\\n  output.position = cameraViewProj * model * worldSpacePosition;\\n  return output;\\n}\\n\\nstruct FragOutputs {\\n  @builtin(frag_depth) depth: f32,\\n  @location(0) color: vec4f,\\n}\\n\\nstruct FragInputs {\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: FragInputs) -> FragOutputs {\\n\\n  var fragColor: vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 1.0);\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoords.xy / STRIPE_WIDTH;\\n  var depth: f32 = inputs.fragCoords.z * 0.9999999;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    \\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n    depth *= 0.9999999;\\n   \\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n    depth *= 0.9999999;\\n\\n  }\\n  var output: FragOutputs;\\n  output.color = fragColor;\\n  output.depth = depth;\\n  return output;\\n}\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvcG9pbnRTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0JBQXdCLCtDQUErQyxzQkFBc0IseURBQXlELHlFQUF5RSx1REFBdUQsZ0RBQWdELDZDQUE2QyxpRkFBaUYsaUVBQWlFLHFFQUFxRSxvRkFBb0YsMkRBQTJELGlEQUFpRCxnQ0FBZ0MsbUNBQW1DLG1DQUFtQyxnREFBZ0QsMEJBQTBCLEdBQUcsMkRBQTJELGlEQUFpRCxvQ0FBb0MsTUFBTSxNQUFNLGVBQWUsS0FBSyxHQUFHLHdHQUF3Ryx3RkFBd0Ysb0RBQW9ELHNFQUFzRSxrTEFBa0wsNEZBQTRGLE1BQU0sK0JBQStCLGtFQUFrRSxrQkFBa0IsR0FBRyx3QkFBd0IscUVBQXFFLHVCQUF1QixnREFBZ0QsbUVBQW1FLCtEQUErRCwwRUFBMEUscURBQXFELGlEQUFpRCxxRUFBcUUsK0RBQStELHFEQUFxRCxvREFBb0QsU0FBUyx5QkFBeUIsVUFBVSwyQ0FBMkMsaUVBQWlFLCtEQUErRCxxREFBcUQsb0RBQW9ELFNBQVMseUJBQXlCLE9BQU8sNEJBQTRCLDZCQUE2Qix5QkFBeUIsa0JBQWtCLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvc2hhZGVycy9wb2ludFNoYWRlci53Z3NsPzYwZDUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJcXG5zdHJ1Y3QgVmVydGV4T3V0cHV0IHtcXG4gIEBidWlsdGluKHBvc2l0aW9uKSBwb3NpdGlvbiA6IHZlYzQ8ZjMyPixcXG59XFxuXFxuLy8gbG9jYWwgdW5pZm9ybXM7XFxuQGdyb3VwKDApIEBiaW5kaW5nKDApIHZhcjx1bmlmb3JtPiBtb2RlbCA6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygxKSB2YXI8dW5pZm9ybT4gbW9kZWxJbnZlcnNlVHJhbnNwb3NlIDogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBjb2xvciA6IHZlYzQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IGZsYWdzOiBpMzI7XFxuQGdyb3VwKDApIEBiaW5kaW5nKDQpIHZhcjx1bmlmb3JtPiBpZDogaTMyO1xcblxcbi8vIGdsb2JhbCB1bmlmb3JtczpcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IGNhbWVyYVBvczogdmVjMzxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygxKSB2YXI8dW5pZm9ybT4gY2FtZXJhVmlld1Byb2o6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygyKSB2YXI8dW5pZm9ybT4gc2VsZWN0aW9uVHJhbnNmb3JtOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IHNlbGVjdGlvblRyYW5zZm9ybUludmVyc2VUcmFzcG9zZTogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDQpIHZhcjx1bmlmb3JtPiByZXNvbHV0aW9uOiB2ZWMyPGYzMj47XFxuXFxuY29uc3QgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUOiBpMzIgPSAxIDw8IDA7XFxuY29uc3QgSE9WRVJfQklUOiBpMzIgPSAxIDw8IDE7XFxuY29uc3QgU0VMRUNURURfQklUOiBpMzIgPSAxIDw8IDI7XFxuXFxuY29uc3QgU1RSSVBFX1dJRFRIOiBmMzIgPSAxMC4wO1xcblxcbmZuIHRvV29ybGRTcGFjZShwOiB2ZWM0PGYzMj4pIC0+IHZlYzQ8ZjMyPiB7XFxuICByZXR1cm4gbW9kZWwgKiBwLnh6eXc7XFxufVxcblxcbmZuIGFwcGx5U2VsZWN0aW9uVHJhbnNmb3JtKHA6IHZlYzQ8ZjMyPikgLT4gdmVjNDxmMzI+IHtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICByZXR1cm4gc2VsZWN0aW9uVHJhbnNmb3JtICogcDtcXG4gIH0gZWxzZSB7XFxuICAgIHJldHVybiBwO1xcbiAgfVxcbn1cXG5cXG5AdmVydGV4XFxuZm4gdmVydGV4TWFpbihcXG4gICAgQGxvY2F0aW9uKDApIG9iamVjdFNwYWNlUG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuICAgICkgLT4gVmVydGV4T3V0cHV0XFxue1xcbiAgdmFyIHdvcmxkU3BhY2VQb3NpdGlvbiA9IGFwcGx5U2VsZWN0aW9uVHJhbnNmb3JtKHRvV29ybGRTcGFjZShvYmplY3RTcGFjZVBvc2l0aW9uKSk7XFxuXFxuICBpZiAoKGZsYWdzICYgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUKSAhPSAwKSB7XFxuICAgIHZhciBkaXN0OiBmMzIgPSBkaXN0YW5jZSh3b3JsZFNwYWNlUG9zaXRpb24ueHl6LCBjYW1lcmFQb3MueHl6KTtcXG4gICAgLy8gVE9ETzogZGlzdCBzaG91bGQgYWN0dWFsbHkgYmUgZGlzdCBpbiBmb3J3YXJkIGRpcmVjdGlvblxcbiAgICB2YXIgc2NhbGVkT2JqZWN0U3BhY2VQb3NpdGlvbjogdmVjNDxmMzI+ID0gdmVjNDxmMzI+KG9iamVjdFNwYWNlUG9zaXRpb24ueHp5ICogZGlzdCwgb2JqZWN0U3BhY2VQb3NpdGlvbi53KTtcXG4gICAgd29ybGRTcGFjZVBvc2l0aW9uID0gYXBwbHlTZWxlY3Rpb25UcmFuc2Zvcm0odG9Xb3JsZFNwYWNlKHNjYWxlZE9iamVjdFNwYWNlUG9zaXRpb24pKTtcXG4gIH0gXFxuXFxuICB2YXIgb3V0cHV0OiBWZXJ0ZXhPdXRwdXQ7XFxuICBvdXRwdXQucG9zaXRpb24gPSBjYW1lcmFWaWV3UHJvaiAqIG1vZGVsICogd29ybGRTcGFjZVBvc2l0aW9uO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuc3RydWN0IEZyYWdPdXRwdXRzIHtcXG4gIEBidWlsdGluKGZyYWdfZGVwdGgpIGRlcHRoOiBmMzIsXFxuICBAbG9jYXRpb24oMCkgY29sb3I6IHZlYzRmLFxcbn1cXG5cXG5zdHJ1Y3QgRnJhZ0lucHV0cyB7XFxuICBAYnVpbHRpbihwb3NpdGlvbikgZnJhZ0Nvb3JkczogdmVjNDxmMzI+LFxcbn1cXG5cXG5AZnJhZ21lbnRcXG5mbiBmcmFnbWVudE1haW4oaW5wdXRzOiBGcmFnSW5wdXRzKSAtPiBGcmFnT3V0cHV0cyB7XFxuXFxuICB2YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSB2ZWM0PGYzMj4oMC4wLCAwLjAsIDAuMCwgMS4wKTtcXG4gIHZhciBzY2FsZWRGcmFnQ29vcmRzOiB2ZWMyPGYzMj4gPSBpbnB1dHMuZnJhZ0Nvb3Jkcy54eSAvIFNUUklQRV9XSURUSDtcXG4gIHZhciBkZXB0aDogZjMyID0gaW5wdXRzLmZyYWdDb29yZHMueiAqIDAuOTk5OTk5OTtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICBcXG4gICAgICB2YXIgZXZlblg6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueCkuZnJhY3QgPCAwLjU7XFxuICAgICAgdmFyIGV2ZW5ZOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLnkpLmZyYWN0IDwgMC41O1xcbiAgICAgIGlmICgoZXZlblggJiYgIWV2ZW5ZKSB8fCAoZXZlblkgJiYgIWV2ZW5YKSkge1xcbiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDEuMCwgMS4wLCAwLjAsIDEuMCk7XFxuICAgICAgfVxcbiAgICBkZXB0aCAqPSAwLjk5OTk5OTk7XFxuICAgXFxuICB9XFxuICBpZiAoKGZsYWdzICYgSE9WRVJfQklUKSA9PSBIT1ZFUl9CSVQpIHtcXG5cXG4gICAgICB2YXIgZXZlblg6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueCkuZnJhY3QgPCAwLjU7XFxuICAgICAgdmFyIGV2ZW5ZOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLnkpLmZyYWN0IDwgMC41O1xcbiAgICAgIGlmICgoZXZlblggJiYgIWV2ZW5ZKSB8fCAoZXZlblkgJiYgIWV2ZW5YKSkge1xcbiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDAuMCwgMC4wLCAxLjAsIDEuMCk7XFxuICAgICAgfVxcbiAgICBkZXB0aCAqPSAwLjk5OTk5OTk7XFxuXFxuICB9XFxuICB2YXIgb3V0cHV0OiBGcmFnT3V0cHV0cztcXG4gIG91dHB1dC5jb2xvciA9IGZyYWdDb2xvcjtcXG4gIG91dHB1dC5kZXB0aCA9IGRlcHRoO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuXFxuXCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/shaders/pointShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/triangleShader.wgsl":
/*!************************************************!*\
  !*** ./src/render/shaders/triangleShader.wgsl ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model: mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> modelInverseTranspose: mat4x4<f32>;\\n@group(0) @binding(2) var<uniform> material: Material;\\n@group(0) @binding(3) var<uniform> flags: i32;\\n@group(0) @binding(4) var<uniform> id: i32;\\n@group(0) @binding(5) var<storage, read> subSelection: array<u32>;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> selectionTransformInverseTraspose: mat4x4<f32>;\\n@group(1) @binding(4) var<uniform> resolution: vec2<f32>;\\n// TODO: why is resolution.x 0? \\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\nfn applySelectionTransform(p: vec4<f32>) -> vec4<f32> {\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    return selectionTransform * p;\\n  } else {\\n    return p;\\n  }\\n}\\nfn applySelectionTransformNormal(p: vec4<f32>) -> vec4<f32> {\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    return selectionTransformInverseTraspose * p;\\n  } else {\\n    return p;\\n  }\\n}\\n\\nstruct VertexOutput {\\n  @builtin(position) fragCoord : vec4<f32>,\\n    @location(0) @interpolate(linear) normal : vec4<f32>,\\n    @location(1) @interpolate(linear) selectedness: f32,\\n    @location(2) @interpolate(linear) position: vec4<f32>,\\n}\\n\\n@vertex\\nfn vertexMain(\\n    @builtin(vertex_index) index: u32,\\n    @location(0) objectSpacePosition : vec4<f32>,\\n    @location(1) objectSpaceNormal : vec4<f32>\\n    ) -> VertexOutput\\n{\\n\\n  var worldSpacePosition = applySelectionTransform(model * objectSpacePosition.xzyw);\\n  var worldSpaceNormal = applySelectionTransformNormal(modelInverseTranspose * objectSpaceNormal.xzyw);\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xyz);\\n    // TODO: dist should actually be dist in forward direction\\n    var scaledObjectSpacePosition: vec4<f32> = vec4<f32>(objectSpacePosition.xzy * dist, objectSpacePosition.w);\\n    worldSpacePosition = applySelectionTransform(model * scaledObjectSpacePosition);\\n  } \\n\\n  var selectedness: f32 = 0;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) { selectedness = 1; }\\n  if ((subSelection[index / 32] & (1u << (index % 32))) > 0u) { selectedness = 1; }\\n\\n  var output: VertexOutput;\\n  output.normal = worldSpaceNormal;\\n  output.fragCoord = cameraViewProj * worldSpacePosition;\\n  output.position = worldSpacePosition;\\n  output.selectedness = selectedness;\\n  return output;\\n}\\n\\n\\nstruct Material {\\n  color: vec4<f32>,\\n  emissive: vec4<f32>,\\n  ambientIntensity: f32,\\n  pseudoDiffuseIntensity: f32,\\n  specularity: f32,\\n  specularIntensity: f32,\\n}\\n\\nfn calculateLighting(position: vec4<f32>, normal: vec3<f32>, material: Material) -> vec4<f32> {\\n  var toCamera: vec3<f32> = normalize(cameraPos.xyz - position.xyz);\\n\\n  var flippedNormal: vec3<f32> = normal;\\n  if (dot(toCamera, normal) < 0) {\\n    flippedNormal *= -1;\\n  } \\n\\n  let normalizedLightIntensity: f32 = dot(flippedNormal, vec3<f32>(0,1,0)) * 0.5 + 0.5;\\n\\n  let reflectedLight: vec3<f32> = reflect(vec3<f32>(0,1,0), normal);\\n\\n  let pseudoDiffuse: vec4<f32> = material.color * normalizedLightIntensity * material.pseudoDiffuseIntensity;\\n  let ambient: vec4<f32> = material.color * material.ambientIntensity;\\n  let specular: vec4<f32> = material.color * pow(max(dot(reflectedLight, toCamera) * -0.5 + 0.5, 0), material.specularity) * material.specularIntensity;\\n\\n  return pseudoDiffuse + ambient + specular + material.emissive;\\n}\\n\\nstruct FragOutputs {\\n  @builtin(frag_depth) depth: f32,\\n  @location(0) color: vec4f,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: VertexOutput) -> FragOutputs {\\n\\n  var normalizedNormal: vec3<f32> = normalize(inputs.normal.xyz);\\n  var fragColor: vec4<f32> = calculateLighting(inputs.position, normalizedNormal, material);\\n\\n  var depth: f32 = inputs.fragCoord.z;\\n\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoord.xy / STRIPE_WIDTH;\\n  if (inputs.selectedness > 0) {\\n    var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n    var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n    if ((evenX && !evenY) || (evenY && !evenX)) {\\n      fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n    }\\n    depth *= 0.9999999;\\n  }\\n\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n    var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n    var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n    if ((evenX && !evenY) || (evenY && !evenX)) {\\n      fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n    }\\n    depth *= 0.9999999;\\n  }\\n\\n\\n  var res: FragOutputs;\\n  res.depth = depth;\\n  res.color = fragColor;\\n  return res;\\n\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvdHJpYW5nbGVTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUscUJBQXFCLHdEQUF3RCx3RUFBd0Usd0RBQXdELGdEQUFnRCw2Q0FBNkMsb0VBQW9FLGlGQUFpRixpRUFBaUUscUVBQXFFLG9GQUFvRiwyREFBMkQsbUZBQW1GLGdDQUFnQyxtQ0FBbUMsbUNBQW1DLDJEQUEyRCxpREFBaUQsb0NBQW9DLE1BQU0sTUFBTSxlQUFlLEtBQUssR0FBRywrREFBK0QsaURBQWlELG1EQUFtRCxNQUFNLE1BQU0sZUFBZSxLQUFLLEdBQUcseUJBQXlCLGlPQUFpTyxnTUFBZ00seUZBQXlGLHlHQUF5RyxvREFBb0Qsc0VBQXNFLGtMQUFrTCxzRkFBc0YsTUFBTSxnQ0FBZ0Msa0RBQWtELG1CQUFtQixrRUFBa0UsbUJBQW1CLCtCQUErQixxQ0FBcUMsMkRBQTJELHlDQUF5Qyx1Q0FBdUMsa0JBQWtCLEdBQUcsdUJBQXVCLDBKQUEwSixtR0FBbUcsc0VBQXNFLDRDQUE0QyxvQ0FBb0MsMEJBQTBCLE1BQU0sMkZBQTJGLHdFQUF3RSxpSEFBaUgsd0VBQXdFLDBKQUEwSixvRUFBb0UsR0FBRyx3QkFBd0IscUVBQXFFLHFFQUFxRSxxRUFBcUUsOEZBQThGLDBDQUEwQywyRUFBMkUsa0NBQWtDLDZEQUE2RCw2REFBNkQsbURBQW1ELGtEQUFrRCxPQUFPLHlCQUF5QixLQUFLLDZDQUE2Qyw2REFBNkQsNkRBQTZELG1EQUFtRCxrREFBa0QsT0FBTyx5QkFBeUIsS0FBSyw2QkFBNkIsc0JBQXNCLDBCQUEwQixlQUFlLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvc2hhZGVycy90cmlhbmdsZVNoYWRlci53Z3NsP2QzZGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJcXG4vLyBsb2NhbCB1bmlmb3JtcztcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IG1vZGVsOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IG1vZGVsSW52ZXJzZVRyYW5zcG9zZTogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBtYXRlcmlhbDogTWF0ZXJpYWw7XFxuQGdyb3VwKDApIEBiaW5kaW5nKDMpIHZhcjx1bmlmb3JtPiBmbGFnczogaTMyO1xcbkBncm91cCgwKSBAYmluZGluZyg0KSB2YXI8dW5pZm9ybT4gaWQ6IGkzMjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoNSkgdmFyPHN0b3JhZ2UsIHJlYWQ+IHN1YlNlbGVjdGlvbjogYXJyYXk8dTMyPjtcXG5cXG4vLyBnbG9iYWwgdW5pZm9ybXM6XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDApIHZhcjx1bmlmb3JtPiBjYW1lcmFQb3M6IHZlYzM8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IGNhbWVyYVZpZXdQcm9qOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMikgdmFyPHVuaWZvcm0+IHNlbGVjdGlvblRyYW5zZm9ybTogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDMpIHZhcjx1bmlmb3JtPiBzZWxlY3Rpb25UcmFuc2Zvcm1JbnZlcnNlVHJhc3Bvc2U6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZyg0KSB2YXI8dW5pZm9ybT4gcmVzb2x1dGlvbjogdmVjMjxmMzI+O1xcbi8vIFRPRE86IHdoeSBpcyByZXNvbHV0aW9uLnggMD8gXFxuXFxuY29uc3QgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUOiBpMzIgPSAxIDw8IDA7XFxuY29uc3QgSE9WRVJfQklUOiBpMzIgPSAxIDw8IDE7XFxuY29uc3QgU0VMRUNURURfQklUOiBpMzIgPSAxIDw8IDI7XFxuXFxuY29uc3QgU1RSSVBFX1dJRFRIOiBmMzIgPSAxMC4wO1xcblxcbmZuIGFwcGx5U2VsZWN0aW9uVHJhbnNmb3JtKHA6IHZlYzQ8ZjMyPikgLT4gdmVjNDxmMzI+IHtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICByZXR1cm4gc2VsZWN0aW9uVHJhbnNmb3JtICogcDtcXG4gIH0gZWxzZSB7XFxuICAgIHJldHVybiBwO1xcbiAgfVxcbn1cXG5mbiBhcHBseVNlbGVjdGlvblRyYW5zZm9ybU5vcm1hbChwOiB2ZWM0PGYzMj4pIC0+IHZlYzQ8ZjMyPiB7XFxuICBpZiAoKGZsYWdzICYgU0VMRUNURURfQklUKSA9PSBTRUxFQ1RFRF9CSVQpIHtcXG4gICAgcmV0dXJuIHNlbGVjdGlvblRyYW5zZm9ybUludmVyc2VUcmFzcG9zZSAqIHA7XFxuICB9IGVsc2Uge1xcbiAgICByZXR1cm4gcDtcXG4gIH1cXG59XFxuXFxuc3RydWN0IFZlcnRleE91dHB1dCB7XFxuICBAYnVpbHRpbihwb3NpdGlvbikgZnJhZ0Nvb3JkIDogdmVjNDxmMzI+LFxcbiAgICBAbG9jYXRpb24oMCkgQGludGVycG9sYXRlKGxpbmVhcikgbm9ybWFsIDogdmVjNDxmMzI+LFxcbiAgICBAbG9jYXRpb24oMSkgQGludGVycG9sYXRlKGxpbmVhcikgc2VsZWN0ZWRuZXNzOiBmMzIsXFxuICAgIEBsb2NhdGlvbigyKSBAaW50ZXJwb2xhdGUobGluZWFyKSBwb3NpdGlvbjogdmVjNDxmMzI+LFxcbn1cXG5cXG5AdmVydGV4XFxuZm4gdmVydGV4TWFpbihcXG4gICAgQGJ1aWx0aW4odmVydGV4X2luZGV4KSBpbmRleDogdTMyLFxcbiAgICBAbG9jYXRpb24oMCkgb2JqZWN0U3BhY2VQb3NpdGlvbiA6IHZlYzQ8ZjMyPixcXG4gICAgQGxvY2F0aW9uKDEpIG9iamVjdFNwYWNlTm9ybWFsIDogdmVjNDxmMzI+XFxuICAgICkgLT4gVmVydGV4T3V0cHV0XFxue1xcblxcbiAgdmFyIHdvcmxkU3BhY2VQb3NpdGlvbiA9IGFwcGx5U2VsZWN0aW9uVHJhbnNmb3JtKG1vZGVsICogb2JqZWN0U3BhY2VQb3NpdGlvbi54enl3KTtcXG4gIHZhciB3b3JsZFNwYWNlTm9ybWFsID0gYXBwbHlTZWxlY3Rpb25UcmFuc2Zvcm1Ob3JtYWwobW9kZWxJbnZlcnNlVHJhbnNwb3NlICogb2JqZWN0U3BhY2VOb3JtYWwueHp5dyk7XFxuXFxuICBpZiAoKGZsYWdzICYgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUKSAhPSAwKSB7XFxuICAgIHZhciBkaXN0OiBmMzIgPSBkaXN0YW5jZSh3b3JsZFNwYWNlUG9zaXRpb24ueHl6LCBjYW1lcmFQb3MueHl6KTtcXG4gICAgLy8gVE9ETzogZGlzdCBzaG91bGQgYWN0dWFsbHkgYmUgZGlzdCBpbiBmb3J3YXJkIGRpcmVjdGlvblxcbiAgICB2YXIgc2NhbGVkT2JqZWN0U3BhY2VQb3NpdGlvbjogdmVjNDxmMzI+ID0gdmVjNDxmMzI+KG9iamVjdFNwYWNlUG9zaXRpb24ueHp5ICogZGlzdCwgb2JqZWN0U3BhY2VQb3NpdGlvbi53KTtcXG4gICAgd29ybGRTcGFjZVBvc2l0aW9uID0gYXBwbHlTZWxlY3Rpb25UcmFuc2Zvcm0obW9kZWwgKiBzY2FsZWRPYmplY3RTcGFjZVBvc2l0aW9uKTtcXG4gIH0gXFxuXFxuICB2YXIgc2VsZWN0ZWRuZXNzOiBmMzIgPSAwO1xcbiAgaWYgKChmbGFncyAmIFNFTEVDVEVEX0JJVCkgPT0gU0VMRUNURURfQklUKSB7IHNlbGVjdGVkbmVzcyA9IDE7IH1cXG4gIGlmICgoc3ViU2VsZWN0aW9uW2luZGV4IC8gMzJdICYgKDF1IDw8IChpbmRleCAlIDMyKSkpID4gMHUpIHsgc2VsZWN0ZWRuZXNzID0gMTsgfVxcblxcbiAgdmFyIG91dHB1dDogVmVydGV4T3V0cHV0O1xcbiAgb3V0cHV0Lm5vcm1hbCA9IHdvcmxkU3BhY2VOb3JtYWw7XFxuICBvdXRwdXQuZnJhZ0Nvb3JkID0gY2FtZXJhVmlld1Byb2ogKiB3b3JsZFNwYWNlUG9zaXRpb247XFxuICBvdXRwdXQucG9zaXRpb24gPSB3b3JsZFNwYWNlUG9zaXRpb247XFxuICBvdXRwdXQuc2VsZWN0ZWRuZXNzID0gc2VsZWN0ZWRuZXNzO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuXFxuc3RydWN0IE1hdGVyaWFsIHtcXG4gIGNvbG9yOiB2ZWM0PGYzMj4sXFxuICBlbWlzc2l2ZTogdmVjNDxmMzI+LFxcbiAgYW1iaWVudEludGVuc2l0eTogZjMyLFxcbiAgcHNldWRvRGlmZnVzZUludGVuc2l0eTogZjMyLFxcbiAgc3BlY3VsYXJpdHk6IGYzMixcXG4gIHNwZWN1bGFySW50ZW5zaXR5OiBmMzIsXFxufVxcblxcbmZuIGNhbGN1bGF0ZUxpZ2h0aW5nKHBvc2l0aW9uOiB2ZWM0PGYzMj4sIG5vcm1hbDogdmVjMzxmMzI+LCBtYXRlcmlhbDogTWF0ZXJpYWwpIC0+IHZlYzQ8ZjMyPiB7XFxuICB2YXIgdG9DYW1lcmE6IHZlYzM8ZjMyPiA9IG5vcm1hbGl6ZShjYW1lcmFQb3MueHl6IC0gcG9zaXRpb24ueHl6KTtcXG5cXG4gIHZhciBmbGlwcGVkTm9ybWFsOiB2ZWMzPGYzMj4gPSBub3JtYWw7XFxuICBpZiAoZG90KHRvQ2FtZXJhLCBub3JtYWwpIDwgMCkge1xcbiAgICBmbGlwcGVkTm9ybWFsICo9IC0xO1xcbiAgfSBcXG5cXG4gIGxldCBub3JtYWxpemVkTGlnaHRJbnRlbnNpdHk6IGYzMiA9IGRvdChmbGlwcGVkTm9ybWFsLCB2ZWMzPGYzMj4oMCwxLDApKSAqIDAuNSArIDAuNTtcXG5cXG4gIGxldCByZWZsZWN0ZWRMaWdodDogdmVjMzxmMzI+ID0gcmVmbGVjdCh2ZWMzPGYzMj4oMCwxLDApLCBub3JtYWwpO1xcblxcbiAgbGV0IHBzZXVkb0RpZmZ1c2U6IHZlYzQ8ZjMyPiA9IG1hdGVyaWFsLmNvbG9yICogbm9ybWFsaXplZExpZ2h0SW50ZW5zaXR5ICogbWF0ZXJpYWwucHNldWRvRGlmZnVzZUludGVuc2l0eTtcXG4gIGxldCBhbWJpZW50OiB2ZWM0PGYzMj4gPSBtYXRlcmlhbC5jb2xvciAqIG1hdGVyaWFsLmFtYmllbnRJbnRlbnNpdHk7XFxuICBsZXQgc3BlY3VsYXI6IHZlYzQ8ZjMyPiA9IG1hdGVyaWFsLmNvbG9yICogcG93KG1heChkb3QocmVmbGVjdGVkTGlnaHQsIHRvQ2FtZXJhKSAqIC0wLjUgKyAwLjUsIDApLCBtYXRlcmlhbC5zcGVjdWxhcml0eSkgKiBtYXRlcmlhbC5zcGVjdWxhckludGVuc2l0eTtcXG5cXG4gIHJldHVybiBwc2V1ZG9EaWZmdXNlICsgYW1iaWVudCArIHNwZWN1bGFyICsgbWF0ZXJpYWwuZW1pc3NpdmU7XFxufVxcblxcbnN0cnVjdCBGcmFnT3V0cHV0cyB7XFxuICBAYnVpbHRpbihmcmFnX2RlcHRoKSBkZXB0aDogZjMyLFxcbiAgQGxvY2F0aW9uKDApIGNvbG9yOiB2ZWM0ZixcXG59XFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKGlucHV0czogVmVydGV4T3V0cHV0KSAtPiBGcmFnT3V0cHV0cyB7XFxuXFxuICB2YXIgbm9ybWFsaXplZE5vcm1hbDogdmVjMzxmMzI+ID0gbm9ybWFsaXplKGlucHV0cy5ub3JtYWwueHl6KTtcXG4gIHZhciBmcmFnQ29sb3I6IHZlYzQ8ZjMyPiA9IGNhbGN1bGF0ZUxpZ2h0aW5nKGlucHV0cy5wb3NpdGlvbiwgbm9ybWFsaXplZE5vcm1hbCwgbWF0ZXJpYWwpO1xcblxcbiAgdmFyIGRlcHRoOiBmMzIgPSBpbnB1dHMuZnJhZ0Nvb3JkLno7XFxuXFxuICB2YXIgc2NhbGVkRnJhZ0Nvb3JkczogdmVjMjxmMzI+ID0gaW5wdXRzLmZyYWdDb29yZC54eSAvIFNUUklQRV9XSURUSDtcXG4gIGlmIChpbnB1dHMuc2VsZWN0ZWRuZXNzID4gMCkge1xcbiAgICB2YXIgZXZlblg6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueCkuZnJhY3QgPCAwLjU7XFxuICAgIHZhciBldmVuWTogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy55KS5mcmFjdCA8IDAuNTtcXG4gICAgaWYgKChldmVuWCAmJiAhZXZlblkpIHx8IChldmVuWSAmJiAhZXZlblgpKSB7XFxuICAgICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDEuMCwgMS4wLCAwLjAsIDEuMCk7XFxuICAgIH1cXG4gICAgZGVwdGggKj0gMC45OTk5OTk5O1xcbiAgfVxcblxcbiAgaWYgKChmbGFncyAmIEhPVkVSX0JJVCkgPT0gSE9WRVJfQklUKSB7XFxuICAgIHZhciBldmVuWDogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy54KS5mcmFjdCA8IDAuNTtcXG4gICAgdmFyIGV2ZW5ZOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLnkpLmZyYWN0IDwgMC41O1xcbiAgICBpZiAoKGV2ZW5YICYmICFldmVuWSkgfHwgKGV2ZW5ZICYmICFldmVuWCkpIHtcXG4gICAgICBmcmFnQ29sb3IgPSB2ZWM0PGYzMj4oMC4wLCAwLjAsIDEuMCwgMS4wKTtcXG4gICAgfVxcbiAgICBkZXB0aCAqPSAwLjk5OTk5OTk7XFxuICB9XFxuXFxuXFxuICB2YXIgcmVzOiBGcmFnT3V0cHV0cztcXG4gIHJlcy5kZXB0aCA9IGRlcHRoO1xcbiAgcmVzLmNvbG9yID0gZnJhZ0NvbG9yO1xcbiAgcmV0dXJuIHJlcztcXG5cXG59XFxuXFxuXFxuXFxuXCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/shaders/triangleShader.wgsl\n");

/***/ }),

/***/ "./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js":
/*!*****************************************************************!*\
  !*** ./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mat3: () => (/* binding */ mat3Impl),\n/* harmony export */   mat4: () => (/* binding */ mat4Impl),\n/* harmony export */   quat: () => (/* binding */ quatImpl),\n/* harmony export */   setDefaultType: () => (/* binding */ setDefaultType),\n/* harmony export */   utils: () => (/* binding */ utils),\n/* harmony export */   vec2: () => (/* binding */ vec2Impl),\n/* harmony export */   vec3: () => (/* binding */ vec3Impl),\n/* harmony export */   vec4: () => (/* binding */ vec4Impl)\n/* harmony export */ });\n/* wgpu-matrix@2.5.0, license MIT */\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nlet EPSILON = 0.000001;\n/**\n * Set the value for EPSILON for various checks\n * @param v - Value to use for EPSILON.\n * @returns previous value of EPSILON;\n */\nfunction setEpsilon(v) {\n    const old = EPSILON;\n    EPSILON = v;\n    return old;\n}\n/**\n * Convert degrees to radians\n * @param degrees - Angle in degrees\n * @returns angle converted to radians\n */\nfunction degToRad(degrees) {\n    return degrees * Math.PI / 180;\n}\n/**\n * Convert radians to degrees\n * @param radians - Angle in radians\n * @returns angle converted to degrees\n */\nfunction radToDeg(radians) {\n    return radians * 180 / Math.PI;\n}\n/**\n * Lerps between a and b via t\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @returns a + (b - a) * t\n */\nfunction lerp$4(a, b, t) {\n    return a + (b - a) * t;\n}\n/**\n * Compute the opposite of lerp. Given a and b and a value between\n * a and b returns a value between 0 and 1. 0 if a, 1 if b.\n * Note: no clamping is done.\n * @param a - start value\n * @param b - end value\n * @param v - value between a and b\n * @returns (v - a) / (b - a)\n */\nfunction inverseLerp(a, b, v) {\n    const d = b - a;\n    return (Math.abs(b - a) < EPSILON)\n        ? a\n        : (v - a) / d;\n}\n/**\n * Compute the euclidean modulo\n *\n * ```\n * // table for n / 3\n * -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5   <- n\n * ------------------------------------\n * -2  -1  -0  -2  -1   0,  1,  2,  0,  1,  2   <- n % 3\n *  1   2   0   1   2   0,  1,  2,  0,  1,  2   <- euclideanModule(n, 3)\n * ```\n *\n * @param n - dividend\n * @param m - divisor\n * @returns the euclidean modulo of n / m\n */\nfunction euclideanModulo(n, m) {\n    return ((n % m) + m) % m;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get EPSILON () { return EPSILON; },\n    setEpsilon: setEpsilon,\n    degToRad: degToRad,\n    radToDeg: radToDeg,\n    lerp: lerp$4,\n    inverseLerp: inverseLerp,\n    euclideanModulo: euclideanModulo\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec2 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec2. In other words you can do this\n *\n *     const v = vec2.cross(v1, v2);  // Creates a new Vec2 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec2.create();\n *     vec2.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec2.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType$2 = Float32Array;\n/**\n * Sets the type this library creates for a Vec2\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec2\n */\nfunction setDefaultType$6(ctor) {\n    const oldType = VecType$2;\n    VecType$2 = ctor;\n    return oldType;\n}\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values.\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Vec2's specified type\n * it would be faster to use\n *\n * ```\n * const v = vec2.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Vec2Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `vec2.create` is usually used\n * to create a Vec2 to be filled out as in\n *\n * ```\n * const sum = vec2.create();\n * vec2.add(v1, v2, sum);\n * ```\n *\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nfunction create$5(x = 0, y = 0) {\n    const dst = new VecType$2(2);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nconst fromValues$3 = create$5;\n/**\n * Sets the values of a Vec2\n * Also see {@link vec2.create} and {@link vec2.copy}\n *\n * @param x first value\n * @param y second value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$5(x, y, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = x;\n    dst[1] = y;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp$2(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add$3(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled$2(a, b, scale, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    return dst;\n}\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nfunction angle$2(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const bx = a[0];\n    const by = a[1];\n    const mag1 = Math.sqrt(ax * ax + ay * ay);\n    const mag2 = Math.sqrt(bx * bx + by * by);\n    const mag = mag1 * mag2;\n    const cosine = mag && dot$3(a, b) / mag;\n    return Math.acos(cosine);\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract$3(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub$3 = subtract$3;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately$5(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals$5(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$3(a, b, t, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV$2(a, b, t, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar$3(v, k, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale$5 = mulScalar$3;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar$3(v, k, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse$5(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert$4 = inverse$5;\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nfunction cross$1(a, b, dst) {\n    dst = dst || new VecType$2(3);\n    const z = a[0] * b[1] - a[1] * b[0];\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = z;\n    return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot$3(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length$3(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    return Math.sqrt(v0 * v0 + v1 * v1);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len$3 = length$3;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq$3(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    return v0 * v0 + v1 * v1;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq$3 = lengthSq$3;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance$2(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist$2 = distance$2;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq$2(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    return dx * dx + dy * dy;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq$2 = distanceSq$2;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize$3(v, dst) {\n    dst = dst || new VecType$2(2);\n    const v0 = v[0];\n    const v1 = v[1];\n    const len = Math.sqrt(v0 * v0 + v1 * v1);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate$4(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec2.clone})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy$5(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec2.copy})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone$5 = copy$5;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply$5(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul$5 = multiply$5;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div$2 = divide$2;\n/**\n * Creates a random unit vector * scale\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nfunction random$1(scale = 1, dst) {\n    dst = dst || new VecType$2(2);\n    const angle = Math.random() * 2 * Math.PI;\n    dst[0] = Math.cos(angle) * scale;\n    dst[1] = Math.sin(angle) * scale;\n    return dst;\n}\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero$2(dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = 0;\n    dst[1] = 0;\n    return dst;\n}\n/**\n * transform Vec2 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4$2(v, m, dst) {\n    dst = dst || new VecType$2(2);\n    const x = v[0];\n    const y = v[1];\n    dst[0] = x * m[0] + y * m[4] + m[12];\n    dst[1] = x * m[1] + y * m[5] + m[13];\n    return dst;\n}\n/**\n * Transforms vec4 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat3$1(v, m, dst) {\n    dst = dst || new VecType$2(2);\n    const x = v[0];\n    const y = v[1];\n    dst[0] = m[0] * x + m[4] * y + m[8];\n    dst[1] = m[1] * x + m[5] * y + m[9];\n    return dst;\n}\n\nvar vec2Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$5,\n    setDefaultType: setDefaultType$6,\n    fromValues: fromValues$3,\n    set: set$5,\n    ceil: ceil$2,\n    floor: floor$2,\n    round: round$2,\n    clamp: clamp$2,\n    add: add$3,\n    addScaled: addScaled$2,\n    angle: angle$2,\n    subtract: subtract$3,\n    sub: sub$3,\n    equalsApproximately: equalsApproximately$5,\n    equals: equals$5,\n    lerp: lerp$3,\n    lerpV: lerpV$2,\n    max: max$2,\n    min: min$2,\n    mulScalar: mulScalar$3,\n    scale: scale$5,\n    divScalar: divScalar$3,\n    inverse: inverse$5,\n    invert: invert$4,\n    cross: cross$1,\n    dot: dot$3,\n    length: length$3,\n    len: len$3,\n    lengthSq: lengthSq$3,\n    lenSq: lenSq$3,\n    distance: distance$2,\n    dist: dist$2,\n    distanceSq: distanceSq$2,\n    distSq: distSq$2,\n    normalize: normalize$3,\n    negate: negate$4,\n    copy: copy$5,\n    clone: clone$5,\n    multiply: multiply$5,\n    mul: mul$5,\n    divide: divide$2,\n    div: div$2,\n    random: random$1,\n    zero: zero$2,\n    transformMat4: transformMat4$2,\n    transformMat3: transformMat3$1\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * 3x3 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat3.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat3.create();\n *     mat3.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat3.identity();\n *     const trans = mat3.translation([1, 2, 3]);\n *     mat3.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType$1 = Float32Array;\n// This mess is because with Mat3 we have 3 unused elements.\n// For Float32Array and Float64Array that's not an issue\n// but for Array it's troublesome\nconst ctorMap = new Map([\n    [Float32Array, () => new Float32Array(12)],\n    [Float64Array, () => new Float64Array(12)],\n    [Array, () => new Array(12).fill(0)],\n]);\nlet newMat3 = ctorMap.get(Float32Array);\n/**\n * Sets the type this library creates for a Mat3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat3\n */\nfunction setDefaultType$5(ctor) {\n    const oldType = MatType$1;\n    MatType$1 = ctor;\n    newMat3 = ctorMap.get(ctor);\n    return oldType;\n}\n/**\n * Create a Mat3 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat3's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat3.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat3Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat3.create` is usually used\n * to create a Mat3 to be filled out as in\n *\n * ```\n * const m = mat3.create();\n * mat3.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @returns matrix created from values.\n */\nfunction create$4(v0, v1, v2, v3, v4, v5, v6, v7, v8) {\n    const dst = newMat3();\n    // to make the array homogenous\n    dst[3] = 0;\n    dst[7] = 0;\n    dst[11] = 0;\n    if (v0 !== undefined) {\n        dst[0] = v0;\n        if (v1 !== undefined) {\n            dst[1] = v1;\n            if (v2 !== undefined) {\n                dst[2] = v2;\n                if (v3 !== undefined) {\n                    dst[4] = v3;\n                    if (v4 !== undefined) {\n                        dst[5] = v4;\n                        if (v5 !== undefined) {\n                            dst[6] = v5;\n                            if (v6 !== undefined) {\n                                dst[8] = v6;\n                                if (v7 !== undefined) {\n                                    dst[9] = v7;\n                                    if (v8 !== undefined) {\n                                        dst[10] = v8;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dst;\n}\n/**\n * Sets the values of a Mat3\n * Also see {@link mat3.create} and {@link mat3.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 set from values.\n */\nfunction set$4(v0, v1, v2, v3, v4, v5, v6, v7, v8, dst) {\n    dst = dst || newMat3();\n    dst[0] = v0;\n    dst[1] = v1;\n    dst[2] = v2;\n    dst[3] = 0;\n    dst[4] = v3;\n    dst[5] = v4;\n    dst[6] = v5;\n    dst[7] = 0;\n    dst[8] = v6;\n    dst[9] = v7;\n    dst[10] = v8;\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Creates a Mat3 from the upper left 3x3 part of a Mat4\n * @param m4 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from m4\n */\nfunction fromMat4(m4, dst) {\n    dst = dst || newMat3();\n    dst[0] = m4[0];\n    dst[1] = m4[1];\n    dst[2] = m4[2];\n    dst[3] = 0;\n    dst[4] = m4[4];\n    dst[5] = m4[5];\n    dst[6] = m4[6];\n    dst[7] = 0;\n    dst[8] = m4[8];\n    dst[9] = m4[9];\n    dst[10] = m4[10];\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Creates a Mat3 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from q\n */\nfunction fromQuat$1(q, dst) {\n    dst = dst || newMat3();\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    dst[0] = 1 - yy - zz;\n    dst[1] = yx + wz;\n    dst[2] = zx - wy;\n    dst[3] = 0;\n    dst[4] = yx - wz;\n    dst[5] = 1 - xx - zz;\n    dst[6] = zy + wx;\n    dst[7] = 0;\n    dst[8] = zx + wy;\n    dst[9] = zy - wx;\n    dst[10] = 1 - xx - yy;\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nfunction negate$3(m, dst) {\n    dst = dst || newMat3();\n    dst[0] = -m[0];\n    dst[1] = -m[1];\n    dst[2] = -m[2];\n    dst[4] = -m[4];\n    dst[5] = -m[5];\n    dst[6] = -m[6];\n    dst[8] = -m[8];\n    dst[9] = -m[9];\n    dst[10] = -m[10];\n    return dst;\n}\n/**\n * Copies a matrix. (same as {@link mat3.clone})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nfunction copy$4(m, dst) {\n    dst = dst || newMat3();\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    return dst;\n}\n/**\n * Copies a matrix (same as {@link mat3.copy})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nconst clone$4 = copy$4;\n/**\n * Check if 2 matrices are approximately equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are approximately equal\n */\nfunction equalsApproximately$4(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[4] - b[4]) < EPSILON &&\n        Math.abs(a[5] - b[5]) < EPSILON &&\n        Math.abs(a[6] - b[6]) < EPSILON &&\n        Math.abs(a[8] - b[8]) < EPSILON &&\n        Math.abs(a[9] - b[9]) < EPSILON &&\n        Math.abs(a[10] - b[10]) < EPSILON;\n}\n/**\n * Check if 2 matrices are exactly equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are exactly equal\n */\nfunction equals$4(a, b) {\n    return a[0] === b[0] &&\n        a[1] === b[1] &&\n        a[2] === b[2] &&\n        a[4] === b[4] &&\n        a[5] === b[5] &&\n        a[6] === b[6] &&\n        a[8] === b[8] &&\n        a[9] === b[9] &&\n        a[10] === b[10];\n}\n/**\n * Creates a 3-by-3 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 3-by-3 identity matrix.\n */\nfunction identity$2(dst) {\n    dst = dst || newMat3();\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nfunction transpose$1(m, dst) {\n    dst = dst || newMat3();\n    if (dst === m) {\n        let t;\n        // 0 1 2\n        // 4 5 6\n        // 8 9 10\n        t = m[1];\n        m[1] = m[4];\n        m[4] = t;\n        t = m[2];\n        m[2] = m[8];\n        m[8] = t;\n        t = m[6];\n        m[6] = m[9];\n        m[9] = t;\n        return dst;\n    }\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    dst[0] = m00;\n    dst[1] = m10;\n    dst[2] = m20;\n    dst[4] = m01;\n    dst[5] = m11;\n    dst[6] = m21;\n    dst[8] = m02;\n    dst[9] = m12;\n    dst[10] = m22;\n    return dst;\n}\n/**\n * Computes the inverse of a 3-by-3 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nfunction inverse$4(m, dst) {\n    dst = dst || newMat3();\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const b01 = m22 * m11 - m12 * m21;\n    const b11 = -m22 * m10 + m12 * m20;\n    const b21 = m21 * m10 - m11 * m20;\n    const invDet = 1 / (m00 * b01 + m01 * b11 + m02 * b21);\n    dst[0] = b01 * invDet;\n    dst[1] = (-m22 * m01 + m02 * m21) * invDet;\n    dst[2] = (m12 * m01 - m02 * m11) * invDet;\n    dst[4] = b11 * invDet;\n    dst[5] = (m22 * m00 - m02 * m20) * invDet;\n    dst[6] = (-m12 * m00 + m02 * m10) * invDet;\n    dst[8] = b21 * invDet;\n    dst[9] = (-m21 * m00 + m01 * m20) * invDet;\n    dst[10] = (m11 * m00 - m01 * m10) * invDet;\n    return dst;\n}\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nfunction determinant$1(m) {\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    return m00 * (m11 * m22 - m21 * m12) -\n        m10 * (m01 * m22 - m21 * m02) +\n        m20 * (m01 * m12 - m11 * m02);\n}\n/**\n * Computes the inverse of a 3-by-3 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nconst invert$3 = inverse$4;\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nfunction multiply$4(a, b, dst) {\n    dst = dst || newMat3();\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[4 + 0];\n    const a11 = a[4 + 1];\n    const a12 = a[4 + 2];\n    const a20 = a[8 + 0];\n    const a21 = a[8 + 1];\n    const a22 = a[8 + 2];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b10 = b[4 + 0];\n    const b11 = b[4 + 1];\n    const b12 = b[4 + 2];\n    const b20 = b[8 + 0];\n    const b21 = b[8 + 1];\n    const b22 = b[8 + 2];\n    dst[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    dst[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    dst[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    dst[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    dst[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    dst[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    dst[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    dst[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    dst[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    return dst;\n}\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nconst mul$4 = multiply$4;\n/**\n * Sets the translation component of a 3-by-3 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nfunction setTranslation$1(a, v, dst) {\n    dst = dst || identity$2();\n    if (a !== dst) {\n        dst[0] = a[0];\n        dst[1] = a[1];\n        dst[2] = a[2];\n        dst[4] = a[4];\n        dst[5] = a[5];\n        dst[6] = a[6];\n    }\n    dst[8] = v[0];\n    dst[9] = v[1];\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Returns the translation component of a 3-by-3 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation$2(m, dst) {\n    dst = dst || create$5();\n    dst[0] = m[8];\n    dst[1] = m[9];\n    return dst;\n}\n/**\n * Returns an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y,\n * @returns The axis component of m.\n */\nfunction getAxis$2(m, axis, dst) {\n    dst = dst || create$5();\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    return dst;\n}\n/**\n * Sets an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nfunction setAxis$1(m, v, axis, dst) {\n    if (dst !== m) {\n        dst = copy$4(m, dst);\n    }\n    const off = axis * 4;\n    dst[off + 0] = v[0];\n    dst[off + 1] = v[1];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling$2(m, dst) {\n    dst = dst || create$5();\n    const xx = m[0];\n    const xy = m[1];\n    const yx = m[4];\n    const yy = m[5];\n    dst[0] = Math.sqrt(xx * xx + xy * xy);\n    dst[1] = Math.sqrt(yx * yx + yy * yy);\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which translates by the given vector v.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nfunction translation$1(v, dst) {\n    dst = dst || newMat3();\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[8] = v[0];\n    dst[9] = v[1];\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Translates the given 3-by-3 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nfunction translate$1(m, v, dst) {\n    dst = dst || newMat3();\n    const v0 = v[0];\n    const v1 = v[1];\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    if (m !== dst) {\n        dst[0] = m00;\n        dst[1] = m01;\n        dst[2] = m02;\n        dst[4] = m10;\n        dst[5] = m11;\n        dst[6] = m12;\n    }\n    dst[8] = m00 * v0 + m10 * v1 + m20;\n    dst[9] = m01 * v0 + m11 * v1 + m21;\n    dst[10] = m02 * v0 + m12 * v1 + m22;\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which rotates  by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotation$1(angleInRadians, dst) {\n    dst = dst || newMat3();\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = s;\n    dst[2] = 0;\n    dst[4] = -s;\n    dst[5] = c;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Rotates the given 3-by-3 matrix  by the given angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotate$1(m, angleInRadians, dst) {\n    dst = dst || newMat3();\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 + s * m10;\n    dst[1] = c * m01 + s * m11;\n    dst[2] = c * m02 + s * m12;\n    dst[4] = c * m10 - s * m00;\n    dst[5] = c * m11 - s * m01;\n    dst[6] = c * m12 - s * m02;\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     2 entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction scaling$1(v, dst) {\n    dst = dst || newMat3();\n    dst[0] = v[0];\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = v[1];\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of 2 entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction scale$4(m, v, dst) {\n    dst = dst || newMat3();\n    const v0 = v[0];\n    const v1 = v[1];\n    dst[0] = v0 * m[0 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2];\n    dst[4] = v1 * m[1 * 4 + 0];\n    dst[5] = v1 * m[1 * 4 + 1];\n    dst[6] = v1 * m[1 * 4 + 2];\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which scales uniformly in each dimension\n * @param s - Amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction uniformScaling$1(s, dst) {\n    dst = dst || newMat3();\n    dst[0] = s;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = s;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given.\n * @param m - The matrix to be modified.\n * @param s - Amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction uniformScale$1(m, s, dst) {\n    dst = dst || newMat3();\n    dst[0] = s * m[0 * 4 + 0];\n    dst[1] = s * m[0 * 4 + 1];\n    dst[2] = s * m[0 * 4 + 2];\n    dst[4] = s * m[1 * 4 + 0];\n    dst[5] = s * m[1 * 4 + 1];\n    dst[6] = s * m[1 * 4 + 2];\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n\nvar mat3Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    setDefaultType: setDefaultType$5,\n    create: create$4,\n    set: set$4,\n    fromMat4: fromMat4,\n    fromQuat: fromQuat$1,\n    negate: negate$3,\n    copy: copy$4,\n    clone: clone$4,\n    equalsApproximately: equalsApproximately$4,\n    equals: equals$4,\n    identity: identity$2,\n    transpose: transpose$1,\n    inverse: inverse$4,\n    determinant: determinant$1,\n    invert: invert$3,\n    multiply: multiply$4,\n    mul: mul$4,\n    setTranslation: setTranslation$1,\n    getTranslation: getTranslation$2,\n    getAxis: getAxis$2,\n    setAxis: setAxis$1,\n    getScaling: getScaling$2,\n    translation: translation$1,\n    translate: translate$1,\n    rotation: rotation$1,\n    rotate: rotate$1,\n    scaling: scaling$1,\n    scale: scale$4,\n    uniformScaling: uniformScaling$1,\n    uniformScale: uniformScale$1\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec3 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec3`. In other words you can do this\n *\n *     const v = vec3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec3.create();\n *     vec3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType$1 = Float32Array;\n/**\n * Sets the type this library creates for a Vec3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec3\n */\nfunction setDefaultType$4(ctor) {\n    const oldType = VecType$1;\n    VecType$1 = ctor;\n    return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nfunction create$3(x, y, z) {\n    const dst = new VecType$1(3);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a vec3; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nconst fromValues$2 = create$3;\n/**\n * Sets the values of a Vec3\n * Also see {@link vec3.create} and {@link vec3.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$3(x, y, z, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    dst[2] = Math.ceil(v[2]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    dst[2] = Math.floor(v[2]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    dst[2] = Math.round(v[2]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp$1(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    dst[2] = Math.min(max, Math.max(min, v[2]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add$2(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled$1(a, b, scale, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    dst[2] = a[2] + b[2] * scale;\n    return dst;\n}\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nfunction angle$1(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[0];\n    const by = a[1];\n    const bz = a[2];\n    const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n    const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n    const mag = mag1 * mag2;\n    const cosine = mag && dot$2(a, b) / mag;\n    return Math.acos(cosine);\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract$2(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub$2 = subtract$2;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately$3(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals$3(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$2(a, b, t, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV$1(a, b, t, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    dst[2] = a[2] + t[2] * (b[2] - a[2]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    dst[2] = Math.max(a[2], b[2]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    dst[2] = Math.min(a[2], b[2]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar$2(v, k, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale$3 = mulScalar$2;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar$2(v, k, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse$3(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    dst[2] = 1 / v[2];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert$2 = inverse$3;\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nfunction cross(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    const t1 = a[2] * b[0] - a[0] * b[2];\n    const t2 = a[0] * b[1] - a[1] * b[0];\n    dst[0] = a[1] * b[2] - a[2] * b[1];\n    dst[1] = t1;\n    dst[2] = t2;\n    return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot$2(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length$2(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len$2 = length$2;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq$2(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return v0 * v0 + v1 * v1 + v2 * v2;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq$2 = lengthSq$2;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance$1(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist$1 = distance$1;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq$1(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq$1 = distanceSq$1;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize$2(v, dst) {\n    dst = dst || new VecType$1(3);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate$2(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    dst[2] = -v[2];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec3.clone})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy$3(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    dst[2] = v[2];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec3.copy})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone$3 = copy$3;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply$3(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    dst[2] = a[2] * b[2];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul$3 = multiply$3;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    dst[2] = a[2] / b[2];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div$1 = divide$1;\n/**\n * Creates a random vector\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nfunction random(scale = 1, dst) {\n    dst = dst || new VecType$1(3);\n    const angle = Math.random() * 2 * Math.PI;\n    const z = Math.random() * 2 - 1;\n    const zScale = Math.sqrt(1 - z * z) * scale;\n    dst[0] = Math.cos(angle) * zScale;\n    dst[1] = Math.sin(angle) * zScale;\n    dst[2] = z * scale;\n    return dst;\n}\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero$1(dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    return dst;\n}\n/**\n * transform vec3 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4$1(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1;\n    dst[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    dst[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    dst[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return dst;\n}\n/**\n * Transform vec4 by upper 3x3 matrix inside 4x4 matrix.\n * @param v - The direction.\n * @param m - The matrix.\n * @param dst - optional Vec3 to store result. If not passed a new one is created.\n * @returns The transformed vector.\n */\nfunction transformMat4Upper3x3(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n    return dst;\n}\n/**\n * Transforms vec3 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat3(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    dst[0] = x * m[0] + y * m[4] + z * m[8];\n    dst[1] = x * m[1] + y * m[5] + z * m[9];\n    dst[2] = x * m[2] + y * m[6] + z * m[10];\n    return dst;\n}\n/**\n * Transforms vec3 by Quaternion\n * @param v - the vector to transform\n * @param q - the quaternion to transform by\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed\n */\nfunction transformQuat(v, q, dst) {\n    dst = dst || new VecType$1(3);\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const w2 = q[3] * 2;\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const uvX = qy * z - qz * y;\n    const uvY = qz * x - qx * z;\n    const uvZ = qx * y - qy * x;\n    dst[0] = x + uvX * w2 + (qy * uvZ - qz * uvY) * 2;\n    dst[1] = y + uvY * w2 + (qz * uvX - qx * uvZ) * 2;\n    dst[2] = z + uvZ * w2 + (qx * uvY - qy * uvX) * 2;\n    return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation$1(m, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nfunction getAxis$1(m, axis, dst) {\n    dst = dst || new VecType$1(3);\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling$1(m, dst) {\n    dst = dst || new VecType$1(3);\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n\nvar vec3Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$3,\n    setDefaultType: setDefaultType$4,\n    fromValues: fromValues$2,\n    set: set$3,\n    ceil: ceil$1,\n    floor: floor$1,\n    round: round$1,\n    clamp: clamp$1,\n    add: add$2,\n    addScaled: addScaled$1,\n    angle: angle$1,\n    subtract: subtract$2,\n    sub: sub$2,\n    equalsApproximately: equalsApproximately$3,\n    equals: equals$3,\n    lerp: lerp$2,\n    lerpV: lerpV$1,\n    max: max$1,\n    min: min$1,\n    mulScalar: mulScalar$2,\n    scale: scale$3,\n    divScalar: divScalar$2,\n    inverse: inverse$3,\n    invert: invert$2,\n    cross: cross,\n    dot: dot$2,\n    length: length$2,\n    len: len$2,\n    lengthSq: lengthSq$2,\n    lenSq: lenSq$2,\n    distance: distance$1,\n    dist: dist$1,\n    distanceSq: distanceSq$1,\n    distSq: distSq$1,\n    normalize: normalize$2,\n    negate: negate$2,\n    copy: copy$3,\n    clone: clone$3,\n    multiply: multiply$3,\n    mul: mul$3,\n    divide: divide$1,\n    div: div$1,\n    random: random,\n    zero: zero$1,\n    transformMat4: transformMat4$1,\n    transformMat4Upper3x3: transformMat4Upper3x3,\n    transformMat3: transformMat3,\n    transformQuat: transformQuat,\n    getTranslation: getTranslation$1,\n    getAxis: getAxis$1,\n    getScaling: getScaling$1\n});\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat4.create();\n *     mat4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat4.identity();\n *     const trans = mat4.translation([1, 2, 3]);\n *     mat4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType = Float32Array;\n/**\n * Sets the type this library creates for a Mat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat4\n */\nfunction setDefaultType$3(ctor) {\n    const oldType = MatType;\n    MatType = ctor;\n    return oldType;\n}\n/**\n * Create a Mat4 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat4's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat4.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat4Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat4.create` is usually used\n * to create a Mat4 to be filled out as in\n *\n * ```\n * const m = mat4.create();\n * mat4.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @returns created from values.\n */\nfunction create$2(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {\n    const dst = new MatType(16);\n    if (v0 !== undefined) {\n        dst[0] = v0;\n        if (v1 !== undefined) {\n            dst[1] = v1;\n            if (v2 !== undefined) {\n                dst[2] = v2;\n                if (v3 !== undefined) {\n                    dst[3] = v3;\n                    if (v4 !== undefined) {\n                        dst[4] = v4;\n                        if (v5 !== undefined) {\n                            dst[5] = v5;\n                            if (v6 !== undefined) {\n                                dst[6] = v6;\n                                if (v7 !== undefined) {\n                                    dst[7] = v7;\n                                    if (v8 !== undefined) {\n                                        dst[8] = v8;\n                                        if (v9 !== undefined) {\n                                            dst[9] = v9;\n                                            if (v10 !== undefined) {\n                                                dst[10] = v10;\n                                                if (v11 !== undefined) {\n                                                    dst[11] = v11;\n                                                    if (v12 !== undefined) {\n                                                        dst[12] = v12;\n                                                        if (v13 !== undefined) {\n                                                            dst[13] = v13;\n                                                            if (v14 !== undefined) {\n                                                                dst[14] = v14;\n                                                                if (v15 !== undefined) {\n                                                                    dst[15] = v15;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dst;\n}\n/**\n * Sets the values of a Mat4\n * Also see {@link mat4.create} and {@link mat4.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 created from values.\n */\nfunction set$2(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = v0;\n    dst[1] = v1;\n    dst[2] = v2;\n    dst[3] = v3;\n    dst[4] = v4;\n    dst[5] = v5;\n    dst[6] = v6;\n    dst[7] = v7;\n    dst[8] = v8;\n    dst[9] = v9;\n    dst[10] = v10;\n    dst[11] = v11;\n    dst[12] = v12;\n    dst[13] = v13;\n    dst[14] = v14;\n    dst[15] = v15;\n    return dst;\n}\n/**\n * Creates a Mat4 from a Mat3\n * @param m3 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from m3\n */\nfunction fromMat3(m3, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = m3[0];\n    dst[1] = m3[1];\n    dst[2] = m3[2];\n    dst[3] = 0;\n    dst[4] = m3[4];\n    dst[5] = m3[5];\n    dst[6] = m3[6];\n    dst[7] = 0;\n    dst[8] = m3[8];\n    dst[9] = m3[9];\n    dst[10] = m3[10];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a Mat4 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from q\n */\nfunction fromQuat(q, dst) {\n    dst = dst || new MatType(16);\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    dst[0] = 1 - yy - zz;\n    dst[1] = yx + wz;\n    dst[2] = zx - wy;\n    dst[3] = 0;\n    dst[4] = yx - wz;\n    dst[5] = 1 - xx - zz;\n    dst[6] = zy + wx;\n    dst[7] = 0;\n    dst[8] = zx + wy;\n    dst[9] = zy - wx;\n    dst[10] = 1 - xx - yy;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nfunction negate$1(m, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = -m[0];\n    dst[1] = -m[1];\n    dst[2] = -m[2];\n    dst[3] = -m[3];\n    dst[4] = -m[4];\n    dst[5] = -m[5];\n    dst[6] = -m[6];\n    dst[7] = -m[7];\n    dst[8] = -m[8];\n    dst[9] = -m[9];\n    dst[10] = -m[10];\n    dst[11] = -m[11];\n    dst[12] = -m[12];\n    dst[13] = -m[13];\n    dst[14] = -m[14];\n    dst[15] = -m[15];\n    return dst;\n}\n/**\n * Copies a matrix. (same as {@link mat4.clone})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nfunction copy$2(m, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n    return dst;\n}\n/**\n * Copies a matrix (same as {@link mat4.copy})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nconst clone$2 = copy$2;\n/**\n * Check if 2 matrices are approximately equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are approximately equal\n */\nfunction equalsApproximately$2(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON &&\n        Math.abs(a[4] - b[4]) < EPSILON &&\n        Math.abs(a[5] - b[5]) < EPSILON &&\n        Math.abs(a[6] - b[6]) < EPSILON &&\n        Math.abs(a[7] - b[7]) < EPSILON &&\n        Math.abs(a[8] - b[8]) < EPSILON &&\n        Math.abs(a[9] - b[9]) < EPSILON &&\n        Math.abs(a[10] - b[10]) < EPSILON &&\n        Math.abs(a[11] - b[11]) < EPSILON &&\n        Math.abs(a[12] - b[12]) < EPSILON &&\n        Math.abs(a[13] - b[13]) < EPSILON &&\n        Math.abs(a[14] - b[14]) < EPSILON &&\n        Math.abs(a[15] - b[15]) < EPSILON;\n}\n/**\n * Check if 2 matrices are exactly equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are exactly equal\n */\nfunction equals$2(a, b) {\n    return a[0] === b[0] &&\n        a[1] === b[1] &&\n        a[2] === b[2] &&\n        a[3] === b[3] &&\n        a[4] === b[4] &&\n        a[5] === b[5] &&\n        a[6] === b[6] &&\n        a[7] === b[7] &&\n        a[8] === b[8] &&\n        a[9] === b[9] &&\n        a[10] === b[10] &&\n        a[11] === b[11] &&\n        a[12] === b[12] &&\n        a[13] === b[13] &&\n        a[14] === b[14] &&\n        a[15] === b[15];\n}\n/**\n * Creates a 4-by-4 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 4-by-4 identity matrix.\n */\nfunction identity$1(dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nfunction transpose(m, dst) {\n    dst = dst || new MatType(16);\n    if (dst === m) {\n        let t;\n        t = m[1];\n        m[1] = m[4];\n        m[4] = t;\n        t = m[2];\n        m[2] = m[8];\n        m[8] = t;\n        t = m[3];\n        m[3] = m[12];\n        m[12] = t;\n        t = m[6];\n        m[6] = m[9];\n        m[9] = t;\n        t = m[7];\n        m[7] = m[13];\n        m[13] = t;\n        t = m[11];\n        m[11] = m[14];\n        m[14] = t;\n        return dst;\n    }\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    dst[0] = m00;\n    dst[1] = m10;\n    dst[2] = m20;\n    dst[3] = m30;\n    dst[4] = m01;\n    dst[5] = m11;\n    dst[6] = m21;\n    dst[7] = m31;\n    dst[8] = m02;\n    dst[9] = m12;\n    dst[10] = m22;\n    dst[11] = m32;\n    dst[12] = m03;\n    dst[13] = m13;\n    dst[14] = m23;\n    dst[15] = m33;\n    return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nfunction inverse$2(m, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    const tmp0 = m22 * m33;\n    const tmp1 = m32 * m23;\n    const tmp2 = m12 * m33;\n    const tmp3 = m32 * m13;\n    const tmp4 = m12 * m23;\n    const tmp5 = m22 * m13;\n    const tmp6 = m02 * m33;\n    const tmp7 = m32 * m03;\n    const tmp8 = m02 * m23;\n    const tmp9 = m22 * m03;\n    const tmp10 = m02 * m13;\n    const tmp11 = m12 * m03;\n    const tmp12 = m20 * m31;\n    const tmp13 = m30 * m21;\n    const tmp14 = m10 * m31;\n    const tmp15 = m30 * m11;\n    const tmp16 = m10 * m21;\n    const tmp17 = m20 * m11;\n    const tmp18 = m00 * m31;\n    const tmp19 = m30 * m01;\n    const tmp20 = m00 * m21;\n    const tmp21 = m20 * m01;\n    const tmp22 = m00 * m11;\n    const tmp23 = m10 * m01;\n    const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n        (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n    const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n        (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n    const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n        (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n    const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n        (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n    const d = 1 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n    dst[0] = d * t0;\n    dst[1] = d * t1;\n    dst[2] = d * t2;\n    dst[3] = d * t3;\n    dst[4] = d * ((tmp1 * m10 + tmp2 * m20 + tmp5 * m30) -\n        (tmp0 * m10 + tmp3 * m20 + tmp4 * m30));\n    dst[5] = d * ((tmp0 * m00 + tmp7 * m20 + tmp8 * m30) -\n        (tmp1 * m00 + tmp6 * m20 + tmp9 * m30));\n    dst[6] = d * ((tmp3 * m00 + tmp6 * m10 + tmp11 * m30) -\n        (tmp2 * m00 + tmp7 * m10 + tmp10 * m30));\n    dst[7] = d * ((tmp4 * m00 + tmp9 * m10 + tmp10 * m20) -\n        (tmp5 * m00 + tmp8 * m10 + tmp11 * m20));\n    dst[8] = d * ((tmp12 * m13 + tmp15 * m23 + tmp16 * m33) -\n        (tmp13 * m13 + tmp14 * m23 + tmp17 * m33));\n    dst[9] = d * ((tmp13 * m03 + tmp18 * m23 + tmp21 * m33) -\n        (tmp12 * m03 + tmp19 * m23 + tmp20 * m33));\n    dst[10] = d * ((tmp14 * m03 + tmp19 * m13 + tmp22 * m33) -\n        (tmp15 * m03 + tmp18 * m13 + tmp23 * m33));\n    dst[11] = d * ((tmp17 * m03 + tmp20 * m13 + tmp23 * m23) -\n        (tmp16 * m03 + tmp21 * m13 + tmp22 * m23));\n    dst[12] = d * ((tmp14 * m22 + tmp17 * m32 + tmp13 * m12) -\n        (tmp16 * m32 + tmp12 * m12 + tmp15 * m22));\n    dst[13] = d * ((tmp20 * m32 + tmp12 * m02 + tmp19 * m22) -\n        (tmp18 * m22 + tmp21 * m32 + tmp13 * m02));\n    dst[14] = d * ((tmp18 * m12 + tmp23 * m32 + tmp15 * m02) -\n        (tmp22 * m32 + tmp14 * m02 + tmp19 * m12));\n    dst[15] = d * ((tmp22 * m22 + tmp16 * m02 + tmp21 * m12) -\n        (tmp20 * m12 + tmp23 * m22 + tmp17 * m02));\n    return dst;\n}\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nfunction determinant(m) {\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    const tmp0 = m22 * m33;\n    const tmp1 = m32 * m23;\n    const tmp2 = m12 * m33;\n    const tmp3 = m32 * m13;\n    const tmp4 = m12 * m23;\n    const tmp5 = m22 * m13;\n    const tmp6 = m02 * m33;\n    const tmp7 = m32 * m03;\n    const tmp8 = m02 * m23;\n    const tmp9 = m22 * m03;\n    const tmp10 = m02 * m13;\n    const tmp11 = m12 * m03;\n    const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n        (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n    const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n        (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n    const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n        (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n    const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n        (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n    return m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nconst invert$1 = inverse$2;\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nfunction multiply$2(a, b, dst) {\n    dst = dst || new MatType(16);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4 + 0];\n    const a11 = a[4 + 1];\n    const a12 = a[4 + 2];\n    const a13 = a[4 + 3];\n    const a20 = a[8 + 0];\n    const a21 = a[8 + 1];\n    const a22 = a[8 + 2];\n    const a23 = a[8 + 3];\n    const a30 = a[12 + 0];\n    const a31 = a[12 + 1];\n    const a32 = a[12 + 2];\n    const a33 = a[12 + 3];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4 + 0];\n    const b11 = b[4 + 1];\n    const b12 = b[4 + 2];\n    const b13 = b[4 + 3];\n    const b20 = b[8 + 0];\n    const b21 = b[8 + 1];\n    const b22 = b[8 + 2];\n    const b23 = b[8 + 3];\n    const b30 = b[12 + 0];\n    const b31 = b[12 + 1];\n    const b32 = b[12 + 2];\n    const b33 = b[12 + 3];\n    dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n    dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n    dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n    dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n    dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n    dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n    dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n    dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n    dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n    dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n    dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n    dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n    dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n    dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n    dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n    dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n    return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nconst mul$2 = multiply$2;\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nfunction setTranslation(a, v, dst) {\n    dst = dst || identity$1();\n    if (a !== dst) {\n        dst[0] = a[0];\n        dst[1] = a[1];\n        dst[2] = a[2];\n        dst[3] = a[3];\n        dst[4] = a[4];\n        dst[5] = a[5];\n        dst[6] = a[6];\n        dst[7] = a[7];\n        dst[8] = a[8];\n        dst[9] = a[9];\n        dst[10] = a[10];\n        dst[11] = a[11];\n    }\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation(m, dst) {\n    dst = dst || create$3();\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nfunction getAxis(m, axis, dst) {\n    dst = dst || create$3();\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y, 2 = z;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nfunction setAxis(a, v, axis, dst) {\n    if (dst !== a) {\n        dst = copy$2(a, dst);\n    }\n    const off = axis * 4;\n    dst[off + 0] = v[0];\n    dst[off + 1] = v[1];\n    dst[off + 2] = v[2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling(m, dst) {\n    dst = dst || create$3();\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n *\n * Note: If you pass `Infinity` for zFar then it will produce a projection matrix\n * returns -Infinity for Z when transforming coordinates with Z <= 0 and +Infinity for Z\n * otherwise.\n *\n * @param fieldOfViewYInRadians - The camera angle from top to bottom (in radians).\n * @param aspect - The aspect ratio width / height.\n * @param zNear - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param zFar - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The perspective matrix.\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n    dst = dst || new MatType(16);\n    const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n    dst[0] = f / aspect;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = f;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[11] = -1;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[15] = 0;\n    if (zFar === Infinity) {\n        dst[10] = -1;\n        dst[14] = -zNear;\n    }\n    else {\n        const rangeInv = 1 / (zNear - zFar);\n        dst[10] = zFar * rangeInv;\n        dst[14] = zFar * zNear * rangeInv;\n    }\n    return dst;\n}\n/**\n * Computes a 4-by-4 orthogonal transformation matrix that transforms from\n * the given the left, right, bottom, and top dimensions to -1 +1 in x, and y\n * and 0 to +1 in z.\n * @param left - Left side of the near clipping plane viewport.\n * @param right - Right side of the near clipping plane viewport.\n * @param bottom - Bottom of the near clipping plane viewport.\n * @param top - Top of the near clipping plane viewport.\n * @param near - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param far - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The orthographic projection matrix.\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 2 / (right - left);\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 2 / (top - bottom);\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1 / (near - far);\n    dst[11] = 0;\n    dst[12] = (right + left) / (left - right);\n    dst[13] = (top + bottom) / (bottom - top);\n    dst[14] = near / (near - far);\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param left - The x coordinate of the left plane of the box.\n * @param right - The x coordinate of the right plane of the box.\n * @param bottom - The y coordinate of the bottom plane of the box.\n * @param top - The y coordinate of the right plane of the box.\n * @param near - The negative z coordinate of the near plane of the box.\n * @param far - The negative z coordinate of the far plane of the box.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The perspective projection matrix.\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n    const dx = (right - left);\n    const dy = (top - bottom);\n    const dz = (near - far);\n    dst[0] = 2 * near / dx;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 2 * near / dy;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = (left + right) / dx;\n    dst[9] = (top + bottom) / dy;\n    dst[10] = far / dz;\n    dst[11] = -1;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = near * far / dz;\n    dst[15] = 0;\n    return dst;\n}\nlet xAxis;\nlet yAxis;\nlet zAxis;\n/**\n * Computes a 4-by-4 aim transformation.\n *\n * This is a matrix which positions an object aiming down positive Z.\n * toward the target.\n *\n * Note: this is **NOT** the inverse of lookAt as lookAt looks at negative Z.\n *\n * @param position - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nfunction aim(position, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(target, position, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = xAxis[1];\n    dst[2] = xAxis[2];\n    dst[3] = 0;\n    dst[4] = yAxis[0];\n    dst[5] = yAxis[1];\n    dst[6] = yAxis[2];\n    dst[7] = 0;\n    dst[8] = zAxis[0];\n    dst[9] = zAxis[1];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = position[0];\n    dst[13] = position[1];\n    dst[14] = position[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 camera aim transformation.\n *\n * This is a matrix which positions an object aiming down negative Z.\n * toward the target.\n *\n * Note: this is the inverse of `lookAt`\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nfunction cameraAim(eye, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(eye, target, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = xAxis[1];\n    dst[2] = xAxis[2];\n    dst[3] = 0;\n    dst[4] = yAxis[0];\n    dst[5] = yAxis[1];\n    dst[6] = yAxis[2];\n    dst[7] = 0;\n    dst[8] = zAxis[0];\n    dst[9] = zAxis[1];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = eye[0];\n    dst[13] = eye[1];\n    dst[14] = eye[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 view transformation.\n *\n * This is a view matrix which transforms all other objects\n * to be in the space of the view defined by the parameters.\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The look-at matrix.\n */\nfunction lookAt(eye, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(eye, target, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = yAxis[0];\n    dst[2] = zAxis[0];\n    dst[3] = 0;\n    dst[4] = xAxis[1];\n    dst[5] = yAxis[1];\n    dst[6] = zAxis[1];\n    dst[7] = 0;\n    dst[8] = xAxis[2];\n    dst[9] = yAxis[2];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = -(xAxis[0] * eye[0] + xAxis[1] * eye[1] + xAxis[2] * eye[2]);\n    dst[13] = -(yAxis[0] * eye[0] + yAxis[1] * eye[1] + yAxis[2] * eye[2]);\n    dst[14] = -(zAxis[0] * eye[0] + zAxis[1] * eye[1] + zAxis[2] * eye[2]);\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nfunction translation(v, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nfunction translate(m, v, dst) {\n    dst = dst || new MatType(16);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m03 = m[3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    if (m !== dst) {\n        dst[0] = m00;\n        dst[1] = m01;\n        dst[2] = m02;\n        dst[3] = m03;\n        dst[4] = m10;\n        dst[5] = m11;\n        dst[6] = m12;\n        dst[7] = m13;\n        dst[8] = m20;\n        dst[9] = m21;\n        dst[10] = m22;\n        dst[11] = m23;\n    }\n    dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n    dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n    dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n    dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationX(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = c;\n    dst[6] = s;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = -s;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateX$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m10 = m[4];\n    const m11 = m[5];\n    const m12 = m[6];\n    const m13 = m[7];\n    const m20 = m[8];\n    const m21 = m[9];\n    const m22 = m[10];\n    const m23 = m[11];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[4] = c * m10 + s * m20;\n    dst[5] = c * m11 + s * m21;\n    dst[6] = c * m12 + s * m22;\n    dst[7] = c * m13 + s * m23;\n    dst[8] = c * m20 - s * m10;\n    dst[9] = c * m21 - s * m11;\n    dst[10] = c * m22 - s * m12;\n    dst[11] = c * m23 - s * m13;\n    if (m !== dst) {\n        dst[0] = m[0];\n        dst[1] = m[1];\n        dst[2] = m[2];\n        dst[3] = m[3];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationY(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = 0;\n    dst[2] = -s;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = s;\n    dst[9] = 0;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateY$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 - s * m20;\n    dst[1] = c * m01 - s * m21;\n    dst[2] = c * m02 - s * m22;\n    dst[3] = c * m03 - s * m23;\n    dst[8] = c * m20 + s * m00;\n    dst[9] = c * m21 + s * m01;\n    dst[10] = c * m22 + s * m02;\n    dst[11] = c * m23 + s * m03;\n    if (m !== dst) {\n        dst[4] = m[4];\n        dst[5] = m[5];\n        dst[6] = m[6];\n        dst[7] = m[7];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationZ(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = s;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = -s;\n    dst[5] = c;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateZ$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 + s * m10;\n    dst[1] = c * m01 + s * m11;\n    dst[2] = c * m02 + s * m12;\n    dst[3] = c * m03 + s * m13;\n    dst[4] = c * m10 - s * m00;\n    dst[5] = c * m11 - s * m01;\n    dst[6] = c * m12 - s * m02;\n    dst[7] = c * m13 - s * m03;\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n        dst[11] = m[11];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    const oneMinusCosine = 1 - c;\n    dst[0] = xx + (1 - xx) * c;\n    dst[1] = x * y * oneMinusCosine + z * s;\n    dst[2] = x * z * oneMinusCosine - y * s;\n    dst[3] = 0;\n    dst[4] = x * y * oneMinusCosine - z * s;\n    dst[5] = yy + (1 - yy) * c;\n    dst[6] = y * z * oneMinusCosine + x * s;\n    dst[7] = 0;\n    dst[8] = x * z * oneMinusCosine + y * s;\n    dst[9] = y * z * oneMinusCosine - x * s;\n    dst[10] = zz + (1 - zz) * c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle. (same as axisRotation)\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nconst rotation = axisRotation;\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    const oneMinusCosine = 1 - c;\n    const r00 = xx + (1 - xx) * c;\n    const r01 = x * y * oneMinusCosine + z * s;\n    const r02 = x * z * oneMinusCosine - y * s;\n    const r10 = x * y * oneMinusCosine - z * s;\n    const r11 = yy + (1 - yy) * c;\n    const r12 = y * z * oneMinusCosine + x * s;\n    const r20 = x * z * oneMinusCosine + y * s;\n    const r21 = y * z * oneMinusCosine - x * s;\n    const r22 = zz + (1 - zz) * c;\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m03 = m[3];\n    const m10 = m[4];\n    const m11 = m[5];\n    const m12 = m[6];\n    const m13 = m[7];\n    const m20 = m[8];\n    const m21 = m[9];\n    const m22 = m[10];\n    const m23 = m[11];\n    dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n    dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n    dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n    dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n    dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n    dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n    dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n    dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n    dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n    dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n    dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n    dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle. (same as rotate)\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nconst rotate = axisRotate;\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction scaling(v, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = v[0];\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = v[1];\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = v[2];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction scale$2(m, v, dst) {\n    dst = dst || new MatType(16);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dst[0] = v0 * m[0 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2];\n    dst[3] = v0 * m[0 * 4 + 3];\n    dst[4] = v1 * m[1 * 4 + 0];\n    dst[5] = v1 * m[1 * 4 + 1];\n    dst[6] = v1 * m[1 * 4 + 2];\n    dst[7] = v1 * m[1 * 4 + 3];\n    dst[8] = v2 * m[2 * 4 + 0];\n    dst[9] = v2 * m[2 * 4 + 1];\n    dst[10] = v2 * m[2 * 4 + 2];\n    dst[11] = v2 * m[2 * 4 + 3];\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales a uniform amount in each dimension.\n * @param s - the amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction uniformScaling(s, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = s;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = s;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = s;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Scales the given 4-by-4 matrix in each dimension by a uniform scale.\n * @param m - The matrix to be modified.\n * @param s - The amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction uniformScale(m, s, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = s * m[0 * 4 + 0];\n    dst[1] = s * m[0 * 4 + 1];\n    dst[2] = s * m[0 * 4 + 2];\n    dst[3] = s * m[0 * 4 + 3];\n    dst[4] = s * m[1 * 4 + 0];\n    dst[5] = s * m[1 * 4 + 1];\n    dst[6] = s * m[1 * 4 + 2];\n    dst[7] = s * m[1 * 4 + 3];\n    dst[8] = s * m[2 * 4 + 0];\n    dst[9] = s * m[2 * 4 + 1];\n    dst[10] = s * m[2 * 4 + 2];\n    dst[11] = s * m[2 * 4 + 3];\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n\nvar mat4Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    setDefaultType: setDefaultType$3,\n    create: create$2,\n    set: set$2,\n    fromMat3: fromMat3,\n    fromQuat: fromQuat,\n    negate: negate$1,\n    copy: copy$2,\n    clone: clone$2,\n    equalsApproximately: equalsApproximately$2,\n    equals: equals$2,\n    identity: identity$1,\n    transpose: transpose,\n    inverse: inverse$2,\n    determinant: determinant,\n    invert: invert$1,\n    multiply: multiply$2,\n    mul: mul$2,\n    setTranslation: setTranslation,\n    getTranslation: getTranslation,\n    getAxis: getAxis,\n    setAxis: setAxis,\n    getScaling: getScaling,\n    perspective: perspective,\n    ortho: ortho,\n    frustum: frustum,\n    aim: aim,\n    cameraAim: cameraAim,\n    lookAt: lookAt,\n    translation: translation,\n    translate: translate,\n    rotationX: rotationX,\n    rotateX: rotateX$1,\n    rotationY: rotationY,\n    rotateY: rotateY$1,\n    rotationZ: rotationZ,\n    rotateZ: rotateZ$1,\n    axisRotation: axisRotation,\n    rotation: rotation,\n    axisRotate: axisRotate,\n    rotate: rotate,\n    scaling: scaling,\n    scale: scale$2,\n    uniformScaling: uniformScaling,\n    uniformScale: uniformScale\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Quat4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Quat4`. In other words you can do this\n *\n *     const v = quat4.cross(v1, v2);  // Creates a new Quat4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = quat4.create();\n *     quat4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     quat4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet QuatType = Float32Array;\n/**\n * Sets the type this library creates for a Quat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Quat4\n */\nfunction setDefaultType$2(ctor) {\n    const oldType = QuatType;\n    QuatType = ctor;\n    return oldType;\n}\n/**\n * Creates a quat4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nfunction create$1(x, y, z, w) {\n    const dst = new QuatType(4);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n                if (w !== undefined) {\n                    dst[3] = w;\n                }\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a Quat; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nconst fromValues$1 = create$1;\n/**\n * Sets the values of a Quat\n * Also see {@link quat.create} and {@link quat.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$1(x, y, z, w, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    dst[3] = w;\n    return dst;\n}\n/**\n * Sets a quaternion from the given angle and  axis,\n * then returns it.\n *\n * @param axis - the axis to rotate around\n * @param angleInRadians - the angle\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The quaternion that represents the given axis and angle\n **/\nfunction fromAxisAngle(axis, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const s = Math.sin(halfAngle);\n    dst[0] = s * axis[0];\n    dst[1] = s * axis[1];\n    dst[2] = s * axis[2];\n    dst[3] = Math.cos(halfAngle);\n    return dst;\n}\n/**\n * Gets the rotation axis and angle\n * @param q - quaternion to compute from\n * @param dst - Vec3 to hold result. If not passed in a new one is created.\n * @return angle and axis\n */\nfunction toAxisAngle(q, dst) {\n    dst = dst || create$3(4);\n    const angle = Math.acos(q[3]) * 2;\n    const s = Math.sin(angle * 0.5);\n    if (s > EPSILON) {\n        dst[0] = q[0] / s;\n        dst[1] = q[1] / s;\n        dst[2] = q[2] / s;\n    }\n    else {\n        dst[0] = 1;\n        dst[1] = 0;\n        dst[2] = 0;\n    }\n    return { angle, axis: dst };\n}\n/**\n * Returns the angle in degrees between two rotations a and b.\n * @param a - quaternion a\n * @param b - quaternion b\n * @return angle in radians between the two quaternions\n */\nfunction angle(a, b) {\n    const d = dot$1(a, b);\n    return Math.acos(2 * d * d - 1);\n}\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction multiply$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const bw = b[3];\n    dst[0] = ax * bw + aw * bx + ay * bz - az * by;\n    dst[1] = ay * bw + aw * by + az * bx - ax * bz;\n    dst[2] = az * bw + aw * bz + ax * by - ay * bx;\n    dst[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return dst;\n}\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nconst mul$1 = multiply$1;\n/**\n * Rotates the given quaternion around the X axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateX(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const bx = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw + qw * bx;\n    dst[1] = qy * bw + qz * bx;\n    dst[2] = qz * bw - qy * bx;\n    dst[3] = qw * bw - qx * bx;\n    return dst;\n}\n/**\n * Rotates the given quaternion around the Y axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateY(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const by = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw - qz * by;\n    dst[1] = qy * bw + qw * by;\n    dst[2] = qz * bw + qx * by;\n    dst[3] = qw * bw - qy * by;\n    return dst;\n}\n/**\n * Rotates the given quaternion around the Z axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateZ(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const bz = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw + qy * bz;\n    dst[1] = qy * bw - qx * bz;\n    dst[2] = qz * bw + qw * bz;\n    dst[3] = qw * bw - qz * bz;\n    return dst;\n}\n/**\n * Spherically linear interpolate between two quaternions\n *\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction slerp(a, b, t, dst) {\n    dst = dst || new QuatType(4);\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    let bx = b[0];\n    let by = b[1];\n    let bz = b[2];\n    let bw = b[3];\n    let cosOmega = ax * bx + ay * by + az * bz + aw * bw;\n    if (cosOmega < 0) {\n        cosOmega = -cosOmega;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    let scale0;\n    let scale1;\n    if (1.0 - cosOmega > EPSILON) {\n        const omega = Math.acos(cosOmega);\n        const sinOmega = Math.sin(omega);\n        scale0 = Math.sin((1 - t) * omega) / sinOmega;\n        scale1 = Math.sin(t * omega) / sinOmega;\n    }\n    else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    dst[0] = scale0 * ax + scale1 * bx;\n    dst[1] = scale0 * ay + scale1 * by;\n    dst[2] = scale0 * az + scale1 * bz;\n    dst[3] = scale0 * aw + scale1 * bw;\n    return dst;\n}\n/**\n * Compute the inverse of a quaternion\n *\n * @param q - quaternion to compute the inverse of\n * @returns A quaternion that is the result of a * b\n */\nfunction inverse$1(q, dst) {\n    dst = dst || new QuatType(4);\n    const a0 = q[0];\n    const a1 = q[1];\n    const a2 = q[2];\n    const a3 = q[3];\n    const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    const invDot = dot ? 1 / dot : 0;\n    dst[0] = -a0 * invDot;\n    dst[1] = -a1 * invDot;\n    dst[2] = -a2 * invDot;\n    dst[3] = a3 * invDot;\n    return dst;\n}\n/**\n * Compute the conjugate of a quaternion\n * For quaternions with a magnitude of 1 (a unit quaternion)\n * this returns the same as the inverse but is faster to calculate.\n *\n * @param q - quaternion to compute the conjugate of.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The conjugate of q\n */\nfunction conjugate(q, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = -q[0];\n    dst[1] = -q[1];\n    dst[2] = -q[2];\n    dst[3] = q[3];\n    return dst;\n}\n/**\n * Creates a quaternion from the given rotation matrix.\n *\n * The created quaternion is not normalized.\n *\n * @param m - rotation matrix\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nfunction fromMat(m, dst) {\n    dst = dst || new QuatType(4);\n    /*\n    0 1 2\n    3 4 5\n    6 7 8\n  \n    0 1 2\n    4 5 6\n    8 9 10\n     */\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    const trace = m[0] + m[5] + m[10];\n    if (trace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        const root = Math.sqrt(trace + 1); // 2w\n        dst[3] = 0.5 * root;\n        const invRoot = 0.5 / root; // 1/(4w)\n        dst[0] = (m[6] - m[9]) * invRoot;\n        dst[1] = (m[8] - m[2]) * invRoot;\n        dst[2] = (m[1] - m[4]) * invRoot;\n    }\n    else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[5] > m[0]) {\n            i = 1;\n        }\n        if (m[10] > m[i * 4 + i]) {\n            i = 2;\n        }\n        const j = (i + 1) % 3;\n        const k = (i + 2) % 3;\n        const root = Math.sqrt(m[i * 4 + i] - m[j * 4 + j] - m[k * 4 + k] + 1.0);\n        dst[i] = 0.5 * root;\n        const invRoot = 0.5 / root;\n        dst[3] = (m[j * 4 + k] - m[k * 4 + j]) * invRoot;\n        dst[j] = (m[j * 4 + i] + m[i * 4 + j]) * invRoot;\n        dst[k] = (m[k * 4 + i] + m[i * 4 + k]) * invRoot;\n    }\n    return dst;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param xAngleInRadians - angle to rotate around X axis in radians.\n * @param yAngleInRadians - angle to rotate around Y axis in radians.\n * @param zAngleInRadians - angle to rotate around Z axis in radians.\n * @param order - order to apply euler angles\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion representing the same rotation as the euler angles applied in the given order\n */\nfunction fromEuler(xAngleInRadians, yAngleInRadians, zAngleInRadians, order, dst) {\n    dst = dst || new QuatType(4);\n    const xHalfAngle = xAngleInRadians * 0.5;\n    const yHalfAngle = yAngleInRadians * 0.5;\n    const zHalfAngle = zAngleInRadians * 0.5;\n    const sx = Math.sin(xHalfAngle);\n    const cx = Math.cos(xHalfAngle);\n    const sy = Math.sin(yHalfAngle);\n    const cy = Math.cos(yHalfAngle);\n    const sz = Math.sin(zHalfAngle);\n    const cz = Math.cos(zHalfAngle);\n    switch (order) {\n        case 'xyz':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'xzy':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        case 'yxz':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        case 'yzx':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'zxy':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'zyx':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        default:\n            throw new Error(`Unknown rotation order: ${order}`);\n    }\n    return dst;\n}\n/**\n * Copies a quaternion. (same as {@link quat.clone})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is a copy of q\n */\nfunction copy$1(q, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = q[0];\n    dst[1] = q[1];\n    dst[2] = q[2];\n    dst[3] = q[3];\n    return dst;\n}\n/**\n * Clones a quaternion. (same as {@link quat.copy})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A copy of q.\n */\nconst clone$1 = copy$1;\n/**\n * Adds two quaternions; assumes a and b have the same dimension.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the sum of a and b.\n */\nfunction add$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    dst[3] = a[3] + b[3];\n    return dst;\n}\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nfunction subtract$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    dst[3] = a[3] - b[3];\n    return dst;\n}\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nconst sub$1 = subtract$1;\n/**\n * Multiplies a quaternion by a scalar.\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nfunction mulScalar$1(v, k, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    dst[3] = v[3] * k;\n    return dst;\n}\n/**\n * Multiplies a quaternion by a scalar. (same as mulScalar)\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nconst scale$1 = mulScalar$1;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nfunction divScalar$1(v, k, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    dst[3] = v[3] / k;\n    return dst;\n}\n/**\n * Computes the dot product of two quaternions\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns dot product\n */\nfunction dot$1(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n/**\n * Performs linear interpolation on two quaternions.\n * Given quaternions a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param t - Interpolation coefficient.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$1(a, b, t, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    dst[3] = a[3] + t * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Computes the length of quaternion\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nfunction length$1(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n/**\n * Computes the length of quaternion (same as length)\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nconst len$1 = length$1;\n/**\n * Computes the square of the length of quaternion\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nfunction lengthSq$1(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n/**\n * Computes the square of the length of quaternion (same as lengthSq)\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nconst lenSq$1 = lengthSq$1;\n/**\n * Divides a quaternion by its Euclidean length and returns the quotient.\n * @param v - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The normalized quaternion.\n */\nfunction normalize$1(v, dst) {\n    dst = dst || new QuatType(4);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n        dst[3] = v3 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 0;\n    }\n    return dst;\n}\n/**\n * Check if 2 quaternions are approximately equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are approximately equal\n */\nfunction equalsApproximately$1(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON;\n}\n/**\n * Check if 2 quaternions are exactly equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are exactly equal\n */\nfunction equals$1(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Creates an identity quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns an identity quaternion\n */\nfunction identity(dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 1;\n    return dst;\n}\nlet tempVec3;\nlet xUnitVec3;\nlet yUnitVec3;\n/**\n * Computes a quaternion to represent the shortest rotation from one vector to another.\n *\n * @param aUnit - the start vector\n * @param bUnit - the end vector\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nfunction rotationTo(aUnit, bUnit, dst) {\n    dst = dst || new QuatType(4);\n    tempVec3 = tempVec3 || create$3();\n    xUnitVec3 = xUnitVec3 || create$3(1, 0, 0);\n    yUnitVec3 = yUnitVec3 || create$3(0, 1, 0);\n    const dot = dot$2(aUnit, bUnit);\n    if (dot < -0.999999) {\n        cross(xUnitVec3, aUnit, tempVec3);\n        if (len$2(tempVec3) < 0.000001) {\n            cross(yUnitVec3, aUnit, tempVec3);\n        }\n        normalize$2(tempVec3, tempVec3);\n        fromAxisAngle(tempVec3, Math.PI, dst);\n        return dst;\n    }\n    else if (dot > 0.999999) {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 1;\n        return dst;\n    }\n    else {\n        cross(aUnit, bUnit, tempVec3);\n        dst[0] = tempVec3[0];\n        dst[1] = tempVec3[1];\n        dst[2] = tempVec3[2];\n        dst[3] = 1 + dot;\n        return normalize$1(dst, dst);\n    }\n}\nlet tempQuat1;\nlet tempQuat2;\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param c - the third quaternion\n * @param d - the fourth quaternion\n * @param t - Interpolation coefficient 0 to 1\n * @returns result\n */\nfunction sqlerp(a, b, c, d, t, dst) {\n    dst = dst || new QuatType(4);\n    tempQuat1 = tempQuat1 || new QuatType(4);\n    tempQuat2 = tempQuat2 || new QuatType(4);\n    slerp(a, d, t, tempQuat1);\n    slerp(b, c, t, tempQuat2);\n    slerp(tempQuat1, tempQuat2, 2 * t * (1 - t), dst);\n    return dst;\n}\n\nvar quatImpl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$1,\n    setDefaultType: setDefaultType$2,\n    fromValues: fromValues$1,\n    set: set$1,\n    fromAxisAngle: fromAxisAngle,\n    toAxisAngle: toAxisAngle,\n    angle: angle,\n    multiply: multiply$1,\n    mul: mul$1,\n    rotateX: rotateX,\n    rotateY: rotateY,\n    rotateZ: rotateZ,\n    slerp: slerp,\n    inverse: inverse$1,\n    conjugate: conjugate,\n    fromMat: fromMat,\n    fromEuler: fromEuler,\n    copy: copy$1,\n    clone: clone$1,\n    add: add$1,\n    subtract: subtract$1,\n    sub: sub$1,\n    mulScalar: mulScalar$1,\n    scale: scale$1,\n    divScalar: divScalar$1,\n    dot: dot$1,\n    lerp: lerp$1,\n    length: length$1,\n    len: len$1,\n    lengthSq: lengthSq$1,\n    lenSq: lenSq$1,\n    normalize: normalize$1,\n    equalsApproximately: equalsApproximately$1,\n    equals: equals$1,\n    identity: identity,\n    rotationTo: rotationTo,\n    sqlerp: sqlerp\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec4`. In other words you can do this\n *\n *     const v = vec4.cross(v1, v2);  // Creates a new Vec4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec4.create();\n *     vec4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType = Float32Array;\n/**\n * Sets the type this library creates for a Vec4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec4\n */\nfunction setDefaultType$1(ctor) {\n    const oldType = VecType;\n    VecType = ctor;\n    return oldType;\n}\n/**\n * Creates a vec4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nfunction create(x, y, z, w) {\n    const dst = new VecType(4);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n                if (w !== undefined) {\n                    dst[3] = w;\n                }\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a vec4; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nconst fromValues = create;\n/**\n * Sets the values of a Vec4\n * Also see {@link vec4.create} and {@link vec4.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set(x, y, z, w, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    dst[3] = w;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    dst[2] = Math.ceil(v[2]);\n    dst[3] = Math.ceil(v[3]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    dst[2] = Math.floor(v[2]);\n    dst[3] = Math.floor(v[3]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    dst[2] = Math.round(v[2]);\n    dst[3] = Math.round(v[3]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    dst[2] = Math.min(max, Math.max(min, v[2]));\n    dst[3] = Math.min(max, Math.max(min, v[3]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    dst[3] = a[3] + b[3];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled(a, b, scale, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    dst[2] = a[2] + b[2] * scale;\n    dst[3] = a[3] + b[3] * scale;\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    dst[3] = a[3] - b[3];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub = subtract;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp(a, b, t, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    dst[3] = a[3] + t * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV(a, b, t, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    dst[2] = a[2] + t[2] * (b[2] - a[2]);\n    dst[3] = a[3] + t[3] * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    dst[2] = Math.max(a[2], b[2]);\n    dst[3] = Math.max(a[3], b[3]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    dst[2] = Math.min(a[2], b[2]);\n    dst[3] = Math.min(a[3], b[3]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar(v, k, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    dst[3] = v[3] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale = mulScalar;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar(v, k, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    dst[3] = v[3] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    dst[2] = 1 / v[2];\n    dst[3] = 1 / v[3];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert = inverse;\n/**\n * Computes the dot product of two vectors\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len = length;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq = lengthSq;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    const dw = a[3] - b[3];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist = distance;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    const dw = a[3] - b[3];\n    return dx * dx + dy * dy + dz * dz + dw * dw;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq = distanceSq;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize(v, dst) {\n    dst = dst || new VecType(4);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n        dst[3] = v3 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    dst[2] = -v[2];\n    dst[3] = -v[3];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec4.clone})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    dst[2] = v[2];\n    dst[3] = v[3];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec4.copy})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone = copy;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    dst[2] = a[2] * b[2];\n    dst[3] = a[3] * b[3];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul = multiply;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    dst[2] = a[2] / b[2];\n    dst[3] = a[3] / b[3];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div = divide;\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero(dst) {\n    dst = dst || new VecType(4);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    return dst;\n}\n/**\n * transform vec4 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec4 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4(v, m, dst) {\n    dst = dst || new VecType(4);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const w = v[3];\n    dst[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    dst[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    dst[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    dst[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return dst;\n}\n\nvar vec4Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create,\n    setDefaultType: setDefaultType$1,\n    fromValues: fromValues,\n    set: set,\n    ceil: ceil,\n    floor: floor,\n    round: round,\n    clamp: clamp,\n    add: add,\n    addScaled: addScaled,\n    subtract: subtract,\n    sub: sub,\n    equalsApproximately: equalsApproximately,\n    equals: equals,\n    lerp: lerp,\n    lerpV: lerpV,\n    max: max,\n    min: min,\n    mulScalar: mulScalar,\n    scale: scale,\n    divScalar: divScalar,\n    inverse: inverse,\n    invert: invert,\n    dot: dot,\n    length: length,\n    len: len,\n    lengthSq: lengthSq,\n    lenSq: lenSq,\n    distance: distance,\n    dist: dist,\n    distanceSq: distanceSq,\n    distSq: distSq,\n    normalize: normalize,\n    negate: negate,\n    copy: copy,\n    clone: clone,\n    multiply: multiply,\n    mul: mul,\n    divide: divide,\n    div: div,\n    zero: zero,\n    transformMat4: transformMat4\n});\n\n/**\n * Sets the type this library creates for all types\n *\n * example:\n *\n * ```\n * setDefaultType(Float64Array);\n * ```\n *\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n */\nfunction setDefaultType(ctor) {\n    setDefaultType$5(ctor);\n    setDefaultType$3(ctor);\n    setDefaultType$2(ctor);\n    setDefaultType$6(ctor);\n    setDefaultType$4(ctor);\n    setDefaultType$1(ctor);\n}\n\n\n//# sourceMappingURL=wgpu-matrix.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;