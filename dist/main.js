/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cad.ts":
/*!********************!*\
  !*** ./src/cad.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INSTANCE: () => (/* binding */ INSTANCE)\n/* harmony export */ });\n/* harmony import */ var _render_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render/renderer */ \"./src/render/renderer.ts\");\n/* harmony import */ var _scene_scene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scene/scene */ \"./src/scene/scene.ts\");\n/* harmony import */ var _utils_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/timer */ \"./src/utils/timer.ts\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n/* harmony import */ var _events_eventManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./events/eventManager */ \"./src/events/eventManager.ts\");\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mode */ \"./src/mode.ts\");\n/* harmony import */ var _commands_cli__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/cli */ \"./src/commands/cli.ts\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log */ \"./src/log.ts\");\n/* harmony import */ var _commands_commandManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/commandManager */ \"./src/commands/commandManager.ts\");\n/* harmony import */ var _window_windowManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./window/windowManager */ \"./src/window/windowManager.ts\");\n/* harmony import */ var _settings_settingsManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./settings/settingsManager */ \"./src/settings/settingsManager.ts\");\n/* harmony import */ var _materials_materialManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./materials/materialManager */ \"./src/materials/materialManager.ts\");\n/* harmony import */ var _commands_selector__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./commands/selector */ \"./src/commands/selector.ts\");\n/* harmony import */ var _tests_testSceneComplex__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./tests/testSceneComplex */ \"./src/tests/testSceneComplex.ts\");\n/* harmony import */ var _widgets_mover__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./widgets/mover */ \"./src/widgets/mover.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n  * Browser Based NURBS Modeling Software\n  * Inspired by Rhino, Vim, CSS\n  *\n  * By Nick Drian\n  *\n*/\nclass CAD {\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.settingsManager = new _settings_settingsManager__WEBPACK_IMPORTED_MODULE_10__.SettingsManager();\n            this.commandManager = new _commands_commandManager__WEBPACK_IMPORTED_MODULE_8__.CommandManager();\n            this.cli = new _commands_cli__WEBPACK_IMPORTED_MODULE_6__.CLI();\n            this.setMode(_mode__WEBPACK_IMPORTED_MODULE_5__.OperatingMode.Command);\n            this.renderer = new _render_renderer__WEBPACK_IMPORTED_MODULE_0__.Renderer();\n            yield this.renderer.init();\n            this.materialManager = new _materials_materialManager__WEBPACK_IMPORTED_MODULE_11__.MaterialManager();\n            this.scene = new _scene_scene__WEBPACK_IMPORTED_MODULE_1__.Scene();\n            this.scene.init();\n            this.eventManager = new _events_eventManager__WEBPACK_IMPORTED_MODULE_4__.EventManager();\n            this.log = new _log__WEBPACK_IMPORTED_MODULE_7__.Log();\n            this.renderStats = new _stats__WEBPACK_IMPORTED_MODULE_3__.RenderStats();\n            this.windowManager = new _window_windowManager__WEBPACK_IMPORTED_MODULE_9__.WindowManager();\n            this.selector = new _commands_selector__WEBPACK_IMPORTED_MODULE_12__.Selector();\n            this.mover = new _widgets_mover__WEBPACK_IMPORTED_MODULE_14__.Mover();\n            (0,_tests_testSceneComplex__WEBPACK_IMPORTED_MODULE_13__.addTestSceneComplex)();\n            // addTestSceneLine();\n            // addTestSceneCurve();\n            // addTestSceneArc();\n        });\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (true) {\n                if (document.hasFocus()) {\n                    var frameTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    // update scene\n                    var sceneTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    this.mover.tick();\n                    this.scene.tick();\n                    this.renderStats.setSceneTime(sceneTimer.getTime());\n                    // render\n                    var renderTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    yield this.renderer.render(this.scene);\n                    this.renderStats.setRenderTime(renderTimer.getTime());\n                    //stats\n                    this.renderStats.setFrameTime(frameTimer.getTime());\n                    // windows\n                    this.windowManager.tick();\n                }\n                else {\n                    yield new Promise(r => setTimeout(r, 100));\n                }\n            }\n        });\n    }\n    getMode() {\n        return this.operatingMode;\n    }\n    setMode(operatingMode) {\n        this.operatingMode = operatingMode;\n        if (this.operatingMode == _mode__WEBPACK_IMPORTED_MODULE_5__.OperatingMode.Command) {\n            this.cli.show();\n        }\n        else {\n            this.cli.hide();\n        }\n    }\n    getCli() {\n        return this.cli;\n    }\n    getStats() {\n        return this.renderStats;\n    }\n    getScene() {\n        return this.scene;\n    }\n    getRenderer() {\n        return this.renderer;\n    }\n    getLog() {\n        return this.log;\n    }\n    getCommandManager() {\n        return this.commandManager;\n    }\n    getWindowManager() {\n        return this.windowManager;\n    }\n    getSettingsManager() {\n        return this.settingsManager;\n    }\n    getMaterialManager() {\n        return this.materialManager;\n    }\n    getEventManager() {\n        return this.eventManager;\n    }\n    getSelector() {\n        return this.selector;\n    }\n    getMover() {\n        return this.mover;\n    }\n}\nconst INSTANCE = new CAD();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/cad.ts\n");

/***/ }),

/***/ "./src/commands/cli.ts":
/*!*****************************!*\
  !*** ./src/commands/cli.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLI: () => (/* binding */ CLI)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass CLI {\n    constructor() {\n        this.element = document.getElementById(\"cli\");\n        this.input = \"\";\n        this.render();\n    }\n    show() {\n        this.element.hidden = false;\n    }\n    hide() {\n        this.element.hidden = true;\n    }\n    processKeyDownEvent(event) {\n        if (event.key == \"Enter\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleInput(this.input);\n            this.clearInput();\n        }\n        else if (event.key == \"Escape\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleInput(\"Escape\");\n            this.clearInput();\n        }\n        else if (event.key == \"Backspace\") {\n            this.deleteLast();\n        }\n        else if (event.key.length == 1) {\n            this.addChar(event.key);\n        }\n    }\n    hasInput() {\n        return this.input != \"\";\n    }\n    clearInput() {\n        this.input = \"\";\n        this.render();\n    }\n    render() {\n        this.element.innerText = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().getInstructions() + this.input;\n    }\n    deleteLast() {\n        if (this.input.length) {\n            this.input = this.input.slice(0, -1);\n            this.render();\n        }\n    }\n    addChar(char) {\n        this.input += char;\n        this.render();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY2xpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBRTNCLE1BQU0sR0FBRztJQUtkO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBbUIsUUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUNNLElBQUk7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQUVNLG1CQUFtQixDQUFDLEtBQW9CO1FBQzdDLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxPQUFPLEVBQUU7WUFDeEIsMENBQVEsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckQsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ25CO2FBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBRTtZQUNoQywwQ0FBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ25ELElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUNuQjthQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxXQUFXLEVBQUU7WUFDbkMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ25CO2FBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBR00sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVNLFVBQVU7UUFDZixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLE1BQU07UUFDWCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsZUFBZSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN2RixDQUFDO0lBRU8sVUFBVTtRQUNoQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2Y7SUFDSCxDQUFDO0lBRU8sT0FBTyxDQUFDLElBQVk7UUFDMUIsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7Q0FHRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NsaS50cz9hNWMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuXG5leHBvcnQgY2xhc3MgQ0xJIHtcblxuICBwcml2YXRlIGVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xuICBwcml2YXRlIGlucHV0OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gPEhUTUxEaXZFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2xpXCIpO1xuICAgIHRoaXMuaW5wdXQgPSBcIlwiO1xuICAgIHRoaXMucmVuZGVyKCk7XG4gIH1cblxuICBwdWJsaWMgc2hvdygpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gZmFsc2U7XG4gIH1cbiAgcHVibGljIGhpZGUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmhpZGRlbiA9IHRydWU7XG4gIH1cblxuICBwdWJsaWMgcHJvY2Vzc0tleURvd25FdmVudChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIGlmIChldmVudC5rZXkgPT0gXCJFbnRlclwiKSB7XG4gICAgICBJTlNUQU5DRS5nZXRDb21tYW5kTWFuYWdlcigpLmhhbmRsZUlucHV0KHRoaXMuaW5wdXQpO1xuICAgICAgdGhpcy5jbGVhcklucHV0KCk7XG4gICAgfSBlbHNlIGlmIChldmVudC5rZXkgPT0gXCJFc2NhcGVcIikge1xuICAgICAgSU5TVEFOQ0UuZ2V0Q29tbWFuZE1hbmFnZXIoKS5oYW5kbGVJbnB1dChcIkVzY2FwZVwiKTtcbiAgICAgIHRoaXMuY2xlYXJJbnB1dCgpO1xuICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09IFwiQmFja3NwYWNlXCIpIHtcbiAgICAgIHRoaXMuZGVsZXRlTGFzdCgpO1xuICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5Lmxlbmd0aCA9PSAxKSB7XG4gICAgICB0aGlzLmFkZENoYXIoZXZlbnQua2V5KTtcbiAgICB9XG4gIH1cblxuXG4gIHB1YmxpYyBoYXNJbnB1dCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pbnB1dCAhPSBcIlwiO1xuICB9XG5cbiAgcHVibGljIGNsZWFySW5wdXQoKTogdm9pZCB7XG4gICAgdGhpcy5pbnB1dCA9IFwiXCI7XG4gICAgdGhpcy5yZW5kZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyByZW5kZXIoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVyVGV4dCA9IElOU1RBTkNFLmdldENvbW1hbmRNYW5hZ2VyKCkuZ2V0SW5zdHJ1Y3Rpb25zKCkgKyB0aGlzLmlucHV0O1xuICB9XG5cbiAgcHJpdmF0ZSBkZWxldGVMYXN0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmlucHV0Lmxlbmd0aCkge1xuICAgICAgdGhpcy5pbnB1dCA9IHRoaXMuaW5wdXQuc2xpY2UoMCwgLTEpO1xuICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFkZENoYXIoY2hhcjogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5pbnB1dCArPSBjaGFyO1xuICAgIHRoaXMucmVuZGVyKCk7XG4gIH1cblxuXG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/cli.ts\n");

/***/ }),

/***/ "./src/commands/clicker.ts":
/*!*********************************!*\
  !*** ./src/commands/clicker.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Clicker: () => (/* binding */ Clicker)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../widgets/cursor */ \"./src/widgets/cursor.ts\");\n\n\nclass Clicker {\n    constructor() {\n        this.point = null;\n        this.clicked = false;\n        this.element = document.createElement(\"div\");\n        this.element.id = \"clicker\";\n        this.element.className = \"floating-window\";\n        this.element.style.width = \"auto\";\n        this.element.hidden = true;\n        document.body.appendChild(this.element);\n        this.onMouseMove();\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.show();\n    }\n    onMouseMove() {\n        if (this.clicked)\n            return; // currently selecting from dropdown\n        const mousePos = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos();\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(mousePos[0], mousePos[1]);\n        const i = ray.intersectScene(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene());\n        if (i) {\n            this.point = i.point;\n            _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.setPosition(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPixelAtPoint(this.point));\n        }\n    }\n    click() {\n        if (this.clicked)\n            return;\n        this.element.hidden = false;\n        this.clicked = true;\n        const mousePos = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos();\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(mousePos[0], mousePos[1]);\n        const intersections = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().firstIntersectionsWithinMargin(ray, 5);\n        if (intersections.length === 0)\n            this.reset();\n        if (intersections.length === 1) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleClickResult(intersections[0]);\n            return;\n        }\n        const list = document.createElement(\"ul\");\n        this.element.innerHTML = \"\";\n        this.element.appendChild(list);\n        for (let intersection of intersections) {\n            const li = document.createElement(\"li\");\n            li.innerText = intersection.description;\n            li.onclick = function () {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleClickResult(intersection);\n            };\n            li.onmouseenter = function () {\n                _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.setPosition(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPixelAtPoint(intersection.point));\n            };\n            list.appendChild(li);\n        }\n        this.element.setAttribute(\"style\", `\n      left:${mousePos[0] + 20}px;\n      top:${mousePos[1] - 20}px;\n      width:auto;\n      height:auto;`);\n    }\n    destroy() {\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.hide();\n        document.body.removeChild(this.element);\n    }\n    getPoint() {\n        return this.point;\n    }\n    reset() {\n        this.clicked = false;\n        this.element.hidden = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFJLENBQUM7SUFDN0IsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY2xpY2tlci50cz9mZWRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vZ2VvbWV0cnkvZ2VvbWV0cnlcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuLi9nZW9tZXRyeS9yYXlcIjtcbmltcG9ydCB7IGN1cnNvciB9IGZyb20gXCIuLi93aWRnZXRzL2N1cnNvclwiO1xuXG5cblxuZXhwb3J0IGNsYXNzIENsaWNrZXIge1xuXG4gIHByaXZhdGUgcG9pbnQ6IFZlYzMgfCBudWxsO1xuICBwcml2YXRlIGVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xuICBwcml2YXRlIGNsaWNrZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5wb2ludCA9IG51bGw7XG4gICAgdGhpcy5jbGlja2VkID0gZmFsc2U7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0aGlzLmVsZW1lbnQuaWQgPSBcImNsaWNrZXJcIjtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NOYW1lID0gXCJmbG9hdGluZy13aW5kb3dcIjtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUud2lkdGggPSBcImF1dG9cIjtcbiAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gdHJ1ZTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7XG4gICAgdGhpcy5vbk1vdXNlTW92ZSgpO1xuICAgIGN1cnNvci5zaG93KCk7XG4gIH1cblxuICBwdWJsaWMgb25Nb3VzZU1vdmUoKTogdm9pZCB7XG5cbiAgICBpZiAodGhpcy5jbGlja2VkKSByZXR1cm47IC8vIGN1cnJlbnRseSBzZWxlY3RpbmcgZnJvbSBkcm9wZG93blxuXG4gICAgY29uc3QgbW91c2VQb3M6IFtudW1iZXIsIG51bWJlcl0gPSBJTlNUQU5DRS5nZXRFdmVudE1hbmFnZXIoKS5nZXRNb3VzZUhhbmRsZXIoKS5nZXRNb3VzZVBvcygpO1xuICAgIGNvbnN0IHJheTogUmF5ID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDYW1lcmEoKS5nZXRSYXlBdFBpeGVsKG1vdXNlUG9zWzBdLCBtb3VzZVBvc1sxXSk7XG5cbiAgICBjb25zdCBpOiBJbnRlcnNlY3Rpb24gfCBudWxsID0gcmF5LmludGVyc2VjdFNjZW5lKElOU1RBTkNFLmdldFNjZW5lKCkpO1xuICAgIGlmIChpKSB7XG4gICAgICB0aGlzLnBvaW50ID0gaS5wb2ludDtcbiAgICAgIGN1cnNvci5zZXRQb3NpdGlvbihJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENhbWVyYSgpLmdldFBpeGVsQXRQb2ludCh0aGlzLnBvaW50KSk7XG4gICAgfVxuXG4gIH1cblxuICBwdWJsaWMgY2xpY2soKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY2xpY2tlZCkgcmV0dXJuO1xuICAgIHRoaXMuZWxlbWVudC5oaWRkZW4gPSBmYWxzZTtcbiAgICB0aGlzLmNsaWNrZWQgPSB0cnVlO1xuICAgIGNvbnN0IG1vdXNlUG9zOiBbbnVtYmVyLCBudW1iZXJdID0gSU5TVEFOQ0UuZ2V0RXZlbnRNYW5hZ2VyKCkuZ2V0TW91c2VIYW5kbGVyKCkuZ2V0TW91c2VQb3MoKTtcbiAgICBjb25zdCByYXk6IFJheSA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q2FtZXJhKCkuZ2V0UmF5QXRQaXhlbChtb3VzZVBvc1swXSwgbW91c2VQb3NbMV0pO1xuICAgIGNvbnN0IGludGVyc2VjdGlvbnM6IEludGVyc2VjdGlvbltdID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRCb3VuZGluZ0JveEhlaXJhcmNoeSgpLmZpcnN0SW50ZXJzZWN0aW9uc1dpdGhpbk1hcmdpbihyYXksIDUpO1xuICAgIGlmIChpbnRlcnNlY3Rpb25zLmxlbmd0aCA9PT0gMCkgdGhpcy5yZXNldCgpO1xuICAgIGlmIChpbnRlcnNlY3Rpb25zLmxlbmd0aCA9PT0gMSkge1xuICAgICAgSU5TVEFOQ0UuZ2V0Q29tbWFuZE1hbmFnZXIoKS5oYW5kbGVDbGlja1Jlc3VsdChpbnRlcnNlY3Rpb25zWzBdKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBsaXN0OiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcbiAgICB0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQobGlzdCk7XG4gICAgZm9yIChsZXQgaW50ZXJzZWN0aW9uIG9mIGludGVyc2VjdGlvbnMpIHtcbiAgICAgIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgbGkuaW5uZXJUZXh0ID0gaW50ZXJzZWN0aW9uLmRlc2NyaXB0aW9uO1xuICAgICAgbGkub25jbGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBJTlNUQU5DRS5nZXRDb21tYW5kTWFuYWdlcigpLmhhbmRsZUNsaWNrUmVzdWx0KGludGVyc2VjdGlvbik7XG4gICAgICB9O1xuICAgICAgbGkub25tb3VzZWVudGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGN1cnNvci5zZXRQb3NpdGlvbihJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENhbWVyYSgpLmdldFBpeGVsQXRQb2ludChpbnRlcnNlY3Rpb24ucG9pbnQpKTtcbiAgICAgIH07XG4gICAgICBsaXN0LmFwcGVuZENoaWxkKGxpKTtcbiAgICB9XG5cbiAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgYFxuICAgICAgbGVmdDoke21vdXNlUG9zWzBdICsgMjB9cHg7XG4gICAgICB0b3A6JHttb3VzZVBvc1sxXSAtIDIwfXB4O1xuICAgICAgd2lkdGg6YXV0bztcbiAgICAgIGhlaWdodDphdXRvO2BcbiAgICApO1xuXG4gIH1cblxuICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHtcbiAgICBjdXJzb3IuaGlkZSgpO1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRQb2ludCgpOiBWZWMzIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMucG9pbnQ7XG4gIH1cblxuICByZXNldCgpIHtcbiAgICB0aGlzLmNsaWNrZWQgPSBmYWxzZTtcbiAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gdHJ1ZTtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/clicker.ts\n");

/***/ }),

/***/ "./src/commands/command.ts":
/*!*********************************!*\
  !*** ./src/commands/command.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command)\n/* harmony export */ });\nclass Command {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBSU8sTUFBZSxPQUFPO0NBUzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZC50cz80ZDA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcblxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tbWFuZCB7XG5cbiAgYWJzdHJhY3QgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQ7XG4gIGFic3RyYWN0IGhhbmRsZUNsaWNrUmVzdWx0KGlucHV0OiBJbnRlcnNlY3Rpb24pOiB2b2lkO1xuICBhYnN0cmFjdCBoYW5kbGVDbGljaygpOiB2b2lkO1xuICBhYnN0cmFjdCBoYW5kbGVNb3VzZU1vdmUoKTogdm9pZDtcbiAgYWJzdHJhY3QgZ2V0SW5zdHJ1Y3Rpb25zKCk6IHN0cmluZztcbiAgYWJzdHJhY3QgaXNGaW5pc2hlZCgpOiBib29sZWFuO1xuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/command.ts\n");

/***/ }),

/***/ "./src/commands/commandManager.ts":
/*!****************************************!*\
  !*** ./src/commands/commandManager.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommandManager: () => (/* binding */ CommandManager)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _commands_arcCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/arcCommand */ \"./src/commands/commands/arcCommand.ts\");\n/* harmony import */ var _commands_cameraCommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands/cameraCommand */ \"./src/commands/commands/cameraCommand.ts\");\n/* harmony import */ var _commands_circleCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commands/circleCommand */ \"./src/commands/commands/circleCommand.ts\");\n/* harmony import */ var _commands_constructionPlaneCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commands/constructionPlaneCommand */ \"./src/commands/commands/constructionPlaneCommand.ts\");\n/* harmony import */ var _commands_curveCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./commands/curveCommand */ \"./src/commands/commands/curveCommand.ts\");\n/* harmony import */ var _commands_lineCommand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/lineCommand */ \"./src/commands/commands/lineCommand.ts\");\n/* harmony import */ var _commands_polylineCommand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commands/polylineCommand */ \"./src/commands/commands/polylineCommand.ts\");\n/* harmony import */ var _commands_snapsCommand__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/snapsCommand */ \"./src/commands/commands/snapsCommand.ts\");\n/* harmony import */ var _commands_windowCommand__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./commands/windowCommand */ \"./src/commands/commands/windowCommand.ts\");\n/* harmony import */ var _oneTimeCommands_toggleDarkModeCommand__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./oneTimeCommands/toggleDarkModeCommand */ \"./src/commands/oneTimeCommands/toggleDarkModeCommand.ts\");\n\n\n\n\n\n\n\n\n\n\n\nclass CommandManager {\n    constructor() {\n        this.currentCommand = null;\n        this.previousInput = \"\";\n    }\n    handleInput(input) {\n        var _a;\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().log(input);\n        input = input.toLowerCase();\n        if (this.currentCommand)\n            this.currentCommand.handleInputString(input);\n        else {\n            switch (input) {\n                case \"\":\n                    this.handleInput(this.previousInput);\n                    return;\n                case \"darkmode\":\n                case \"dm\":\n                    (0,_oneTimeCommands_toggleDarkModeCommand__WEBPACK_IMPORTED_MODULE_10__.toggleDarkMode)();\n                    break;\n                case \"constructionplane\":\n                case \"cp\":\n                    this.currentCommand = new _commands_constructionPlaneCommand__WEBPACK_IMPORTED_MODULE_4__.ConstructionPlaneCommand();\n                    break;\n                case \"camera\":\n                case \"cam\":\n                    this.currentCommand = new _commands_cameraCommand__WEBPACK_IMPORTED_MODULE_2__.CameraCommand();\n                    break;\n                case \"line\":\n                case \"ln\":\n                    this.currentCommand = new _commands_lineCommand__WEBPACK_IMPORTED_MODULE_6__.LineCommand();\n                    break;\n                case \"polyline\":\n                case \"pl\":\n                    this.currentCommand = new _commands_polylineCommand__WEBPACK_IMPORTED_MODULE_7__.PolyLineCommand();\n                    break;\n                case \"curve\":\n                case \"c\":\n                    this.currentCommand = new _commands_curveCommand__WEBPACK_IMPORTED_MODULE_5__.CurveCommand();\n                    break;\n                case \"window\":\n                case \"w\":\n                    this.currentCommand = new _commands_windowCommand__WEBPACK_IMPORTED_MODULE_9__.WindowCommand();\n                    break;\n                case \"snaps\":\n                case \"s\":\n                    this.currentCommand = new _commands_snapsCommand__WEBPACK_IMPORTED_MODULE_8__.SnapsCommand();\n                    break;\n                case \"circle\":\n                case \"ci\":\n                    this.currentCommand = new _commands_circleCommand__WEBPACK_IMPORTED_MODULE_3__.CircleCommand();\n                    break;\n                case \"arc\":\n                case \"a\":\n                    this.currentCommand = new _commands_arcCommand__WEBPACK_IMPORTED_MODULE_1__.ArcCommand();\n                    break;\n                default: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().log(\"Invalid Command\");\n            }\n            this.previousInput = input;\n        }\n        if ((_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.isFinished()) {\n            this.currentCommand = null;\n        }\n    }\n    hasActiveCommand() {\n        return this.currentCommand != null;\n    }\n    handleClickInput() {\n        var _a, _b;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleClick();\n        if ((_b = this.currentCommand) === null || _b === void 0 ? void 0 : _b.isFinished()) {\n            this.currentCommand = null;\n        }\n    }\n    handleClickResult(intersection) {\n        var _a;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleClickResult(intersection);\n    }\n    handleMouseMove() {\n        var _a;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleMouseMove();\n    }\n    getInstructions() {\n        if (this.currentCommand)\n            return this.currentCommand.getInstructions();\n        return \"$\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxDQUFDLGNBQWMsMENBQUUsV0FBVyxFQUFFLENBQUM7UUFDbkMsSUFBSSxVQUFJLENBQUMsY0FBYywwQ0FBRSxVQUFVLEVBQUUsRUFBRTtZQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztTQUM1QjtJQUNILENBQUM7SUFFTSxpQkFBaUIsQ0FBQyxZQUEwQjs7UUFDakQsVUFBSSxDQUFDLGNBQWMsMENBQUUsaUJBQWlCLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVNLGVBQWU7O1FBQ3BCLFVBQUksQ0FBQyxjQUFjLDBDQUFFLGVBQWUsRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxlQUFlO1FBQ3BCLElBQUksSUFBSSxDQUFDLGNBQWM7WUFBRSxPQUFPLElBQUksQ0FBQyxjQUFlLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkUsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9jb21tYW5kcy9jb21tYW5kTWFuYWdlci50cz80ZTA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4uL2dlb21ldHJ5L2ludGVyc2VjdGlvblwiO1xuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRcIjtcbmltcG9ydCB7IEFyY0NvbW1hbmQgfSBmcm9tIFwiLi9jb21tYW5kcy9hcmNDb21tYW5kXCI7XG5pbXBvcnQgeyBDYW1lcmFDb21tYW5kIH0gZnJvbSBcIi4vY29tbWFuZHMvY2FtZXJhQ29tbWFuZFwiO1xuaW1wb3J0IHsgQ2lyY2xlQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL2NpcmNsZUNvbW1hbmRcIjtcbmltcG9ydCB7IENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL2NvbnN0cnVjdGlvblBsYW5lQ29tbWFuZFwiO1xuaW1wb3J0IHsgQ3VydmVDb21tYW5kIH0gZnJvbSBcIi4vY29tbWFuZHMvY3VydmVDb21tYW5kXCI7XG5pbXBvcnQgeyBMaW5lQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL2xpbmVDb21tYW5kXCI7XG5pbXBvcnQgeyBQb2x5TGluZUNvbW1hbmQgfSBmcm9tIFwiLi9jb21tYW5kcy9wb2x5bGluZUNvbW1hbmRcIjtcbmltcG9ydCB7IFNuYXBzQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL3NuYXBzQ29tbWFuZFwiO1xuaW1wb3J0IHsgV2luZG93Q29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL3dpbmRvd0NvbW1hbmRcIjtcbmltcG9ydCB7IHRvZ2dsZURhcmtNb2RlIH0gZnJvbSBcIi4vb25lVGltZUNvbW1hbmRzL3RvZ2dsZURhcmtNb2RlQ29tbWFuZFwiO1xuXG5cbmV4cG9ydCBjbGFzcyBDb21tYW5kTWFuYWdlciB7XG5cbiAgcHJpdmF0ZSBjdXJyZW50Q29tbWFuZDogQ29tbWFuZCB8IG51bGw7XG4gIHByaXZhdGUgcHJldmlvdXNJbnB1dDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBudWxsO1xuICAgIHRoaXMucHJldmlvdXNJbnB1dCA9IFwiXCI7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlSW5wdXQoaW5wdXQ6IHN0cmluZykge1xuXG4gICAgSU5TVEFOQ0UuZ2V0TG9nKCkubG9nKGlucHV0KTtcblxuICAgIGlucHV0ID0gaW5wdXQudG9Mb3dlckNhc2UoKTtcblxuICAgIGlmICh0aGlzLmN1cnJlbnRDb21tYW5kKSB0aGlzLmN1cnJlbnRDb21tYW5kLmhhbmRsZUlucHV0U3RyaW5nKGlucHV0KTtcbiAgICBlbHNlIHtcbiAgICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgICAgY2FzZSBcIlwiOlxuICAgICAgICAgIHRoaXMuaGFuZGxlSW5wdXQodGhpcy5wcmV2aW91c0lucHV0KTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNhc2UgXCJkYXJrbW9kZVwiOiBjYXNlIFwiZG1cIjpcbiAgICAgICAgICB0b2dnbGVEYXJrTW9kZSgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiY29uc3RydWN0aW9ucGxhbmVcIjogY2FzZSBcImNwXCI6XG4gICAgICAgICAgdGhpcy5jdXJyZW50Q29tbWFuZCA9IG5ldyBDb25zdHJ1Y3Rpb25QbGFuZUNvbW1hbmQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImNhbWVyYVwiOiBjYXNlIFwiY2FtXCI6XG4gICAgICAgICAgdGhpcy5jdXJyZW50Q29tbWFuZCA9IG5ldyBDYW1lcmFDb21tYW5kKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJsaW5lXCI6IGNhc2UgXCJsblwiOlxuICAgICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBuZXcgTGluZUNvbW1hbmQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInBvbHlsaW5lXCI6IGNhc2UgXCJwbFwiOlxuICAgICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBuZXcgUG9seUxpbmVDb21tYW5kKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJjdXJ2ZVwiOiBjYXNlIFwiY1wiOlxuICAgICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBuZXcgQ3VydmVDb21tYW5kKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJ3aW5kb3dcIjogY2FzZSBcIndcIjpcbiAgICAgICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbmV3IFdpbmRvd0NvbW1hbmQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInNuYXBzXCI6IGNhc2UgXCJzXCI6XG4gICAgICAgICAgdGhpcy5jdXJyZW50Q29tbWFuZCA9IG5ldyBTbmFwc0NvbW1hbmQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImNpcmNsZVwiOiBjYXNlIFwiY2lcIjpcbiAgICAgICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbmV3IENpcmNsZUNvbW1hbmQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImFyY1wiOiBjYXNlIFwiYVwiOlxuICAgICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBuZXcgQXJjQ29tbWFuZCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiBJTlNUQU5DRS5nZXRMb2coKS5sb2coXCJJbnZhbGlkIENvbW1hbmRcIik7XG4gICAgICB9XG4gICAgICB0aGlzLnByZXZpb3VzSW5wdXQgPSBpbnB1dDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jdXJyZW50Q29tbWFuZD8uaXNGaW5pc2hlZCgpKSB7XG4gICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbnVsbDtcbiAgICB9XG5cblxuICB9XG4gIGhhc0FjdGl2ZUNvbW1hbmQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY3VycmVudENvbW1hbmQgIT0gbnVsbDtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVDbGlja0lucHV0KCk6IHZvaWQge1xuICAgIHRoaXMuY3VycmVudENvbW1hbmQ/LmhhbmRsZUNsaWNrKCk7XG4gICAgaWYgKHRoaXMuY3VycmVudENvbW1hbmQ/LmlzRmluaXNoZWQoKSkge1xuICAgICAgdGhpcy5jdXJyZW50Q29tbWFuZCA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGhhbmRsZUNsaWNrUmVzdWx0KGludGVyc2VjdGlvbjogSW50ZXJzZWN0aW9uKTogdm9pZCB7XG4gICAgdGhpcy5jdXJyZW50Q29tbWFuZD8uaGFuZGxlQ2xpY2tSZXN1bHQoaW50ZXJzZWN0aW9uKTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVNb3VzZU1vdmUoKTogdm9pZCB7XG4gICAgdGhpcy5jdXJyZW50Q29tbWFuZD8uaGFuZGxlTW91c2VNb3ZlKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0SW5zdHJ1Y3Rpb25zKCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMuY3VycmVudENvbW1hbmQpIHJldHVybiB0aGlzLmN1cnJlbnRDb21tYW5kIS5nZXRJbnN0cnVjdGlvbnMoKTtcbiAgICByZXR1cm4gXCIkXCI7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/commands/commandManager.ts\n");

/***/ }),

/***/ "./src/commands/commands/arcCommand.ts":
/*!*********************************************!*\
  !*** ./src/commands/commands/arcCommand.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArcCommand: () => (/* binding */ ArcCommand)\n/* harmony export */ });\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\nvar ArcCommandMode;\n(function (ArcCommandMode) {\n    ArcCommandMode[ArcCommandMode[\"Menu\"] = 0] = \"Menu\";\n    ArcCommandMode[ArcCommandMode[\"From3Points\"] = 1] = \"From3Points\";\n    ArcCommandMode[ArcCommandMode[\"FromCenterPointPoint\"] = 2] = \"FromCenterPointPoint\";\n})(ArcCommandMode || (ArcCommandMode = {}));\nclass ArcCommand extends _command__WEBPACK_IMPORTED_MODULE_0__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.mode = ArcCommandMode.Menu;\n        this.p1 = null;\n        this.p2 = null;\n    }\n    handleInputString(input) {\n        throw new Error(\"Method not implemented.\");\n    }\n    handleClickResult(input) {\n        throw new Error(\"Method not implemented.\");\n    }\n    handleClick() {\n        throw new Error(\"Method not implemented.\");\n    }\n    handleMouseMove() {\n        throw new Error(\"Method not implemented.\");\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case ArcCommandMode.Menu:\n                return \"0:Exit  1:From3Points  2:FromCenterPointPoint  $\";\n            default:\n                throw new Error(\"case not handled\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvYXJjQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUVxQztBQUVyQyxJQUFLLGNBSUo7QUFKRCxXQUFLLGNBQWM7SUFDakIsbURBQUk7SUFDSixpRUFBVztJQUNYLG1GQUFvQjtBQUN0QixDQUFDLEVBSkksY0FBYyxLQUFkLGNBQWMsUUFJbEI7QUFFTSxNQUFNLFVBQVcsU0FBUSw2Q0FBTztJQU9yQztRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxjQUFjLENBQUMsSUFBSSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ2YsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUM7SUFDakIsQ0FBQztJQUVELGlCQUFpQixDQUFDLEtBQWE7UUFDN0IsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFDRCxpQkFBaUIsQ0FBQyxLQUFtQjtRQUNuQyxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUNELFdBQVc7UUFDVCxNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUNELGVBQWU7UUFDYixNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUNELGVBQWU7UUFDYixRQUFRLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDakIsS0FBSyxjQUFjLENBQUMsSUFBSTtnQkFDdEIsT0FBTyxrREFBa0QsQ0FBQztZQUM1RDtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7U0FDdkM7SUFDSCxDQUFDO0lBRUQsVUFBVTtRQUNSLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9jb21tYW5kcy9jb21tYW5kcy9hcmNDb21tYW5kLnRzPzAzNjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L2ludGVyc2VjdGlvblwiO1xuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi9jb21tYW5kXCI7XG5cbmVudW0gQXJjQ29tbWFuZE1vZGUge1xuICBNZW51LFxuICBGcm9tM1BvaW50cyxcbiAgRnJvbUNlbnRlclBvaW50UG9pbnQsXG59XG5cbmV4cG9ydCBjbGFzcyBBcmNDb21tYW5kIGV4dGVuZHMgQ29tbWFuZCB7XG5cbiAgcHJpdmF0ZSBmaW5pc2hlZDogYm9vbGVhbjtcbiAgcHJpdmF0ZSBtb2RlOiBBcmNDb21tYW5kTW9kZTtcbiAgcHJpdmF0ZSBwMTogVmVjMyB8IG51bGw7XG4gIHByaXZhdGUgcDI6IFZlYzMgfCBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMubW9kZSA9IEFyY0NvbW1hbmRNb2RlLk1lbnU7XG4gICAgdGhpcy5wMSA9IG51bGw7XG4gICAgdGhpcy5wMiA9IG51bGw7XG4gIH1cblxuICBoYW5kbGVJbnB1dFN0cmluZyhpbnB1dDogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XG4gIH1cbiAgaGFuZGxlQ2xpY2tSZXN1bHQoaW5wdXQ6IEludGVyc2VjdGlvbik6IHZvaWQge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuXCIpO1xuICB9XG4gIGhhbmRsZUNsaWNrKCk6IHZvaWQge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuXCIpO1xuICB9XG4gIGhhbmRsZU1vdXNlTW92ZSgpOiB2b2lkIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXRob2Qgbm90IGltcGxlbWVudGVkLlwiKTtcbiAgfVxuICBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBBcmNDb21tYW5kTW9kZS5NZW51OlxuICAgICAgICByZXR1cm4gXCIwOkV4aXQgIDE6RnJvbTNQb2ludHMgIDI6RnJvbUNlbnRlclBvaW50UG9pbnQgICRcIjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImNhc2Ugbm90IGhhbmRsZWRcIik7XG4gICAgfVxuICB9XG5cbiAgaXNGaW5pc2hlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5maW5pc2hlZDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/arcCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/cameraCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/cameraCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CameraCommand: () => (/* binding */ CameraCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nvar CameraCommandMode;\n(function (CameraCommandMode) {\n    CameraCommandMode[CameraCommandMode[\"Menu\"] = 0] = \"Menu\";\n    CameraCommandMode[CameraCommandMode[\"Fovy\"] = 1] = \"Fovy\";\n})(CameraCommandMode || (CameraCommandMode = {}));\nclass CameraCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.mode = CameraCommandMode.Menu;\n        this.finished = false;\n    }\n    handleInputString(input) {\n        switch (this.mode) {\n            case CameraCommandMode.Menu:\n                this.handleMenuInput(input);\n                break;\n            case CameraCommandMode.Fovy:\n                this.handleFovyInput(input);\n                break;\n        }\n    }\n    handleClick() {\n    }\n    handleMouseMove() {\n    }\n    handleClickResult(input) {\n    }\n    getInstructions() {\n        const fovy = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getFovy();\n        const fovyDegrees = (180.0 * fovy / Math.PI).toFixed(1);\n        switch (this.mode) {\n            case CameraCommandMode.Menu:\n                return `0:Exit,  1:FOVY(${fovyDegrees})  $`;\n            case CameraCommandMode.Fovy:\n                return `0:Exit,  Enter New FOVY(${fovyDegrees})  $`;\n            default:\n                console.error(\"Unimplemented CameraCommandMode\");\n                return \"\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleFovyInput(input) {\n        const inputNum = parseFloat(input);\n        if (inputNum === 0) {\n            this.mode = CameraCommandMode.Menu;\n        }\n        if (inputNum) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().setFovy(Math.PI * inputNum / 180.0);\n            this.mode = CameraCommandMode.Menu;\n        }\n    }\n    handleMenuInput(input) {\n        switch (input) {\n            case \"0\":\n            case \"exit\":\n                this.finished = true;\n                break;\n            case \"1\":\n            case \"fovy\":\n                this.mode = CameraCommandMode.Fovy;\n                break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvY2FtZXJhQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDcUM7QUFFQTtBQUVyQyxJQUFLLGlCQUdKO0FBSEQsV0FBSyxpQkFBaUI7SUFDcEIseURBQUk7SUFDSix5REFBSTtBQUNOLENBQUMsRUFISSxpQkFBaUIsS0FBakIsaUJBQWlCLFFBR3JCO0FBRU0sTUFBTSxhQUFjLFNBQVEsNkNBQU87SUFLeEM7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUFFZSxpQkFBaUIsQ0FBQyxLQUFhO1FBQzdDLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNqQixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVCLE1BQU07WUFDUixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVCLE1BQU07U0FDVDtJQUNILENBQUM7SUFFZSxXQUFXO0lBRTNCLENBQUM7SUFFZSxlQUFlO0lBRS9CLENBQUM7SUFFZSxpQkFBaUIsQ0FBQyxLQUFtQjtJQUNyRCxDQUFDO0lBRWUsZUFBZTtRQUM3QixNQUFNLElBQUksR0FBVywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQy9ELE1BQU0sV0FBVyxHQUFXLENBQUMsS0FBSyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNqQixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLE9BQU8sbUJBQW1CLFdBQVcsTUFBTSxDQUFDO1lBQzlDLEtBQUssaUJBQWlCLENBQUMsSUFBSTtnQkFDekIsT0FBTywyQkFBMkIsV0FBVyxNQUFNLENBQUM7WUFDdEQ7Z0JBQ0UsT0FBTyxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO2dCQUNqRCxPQUFPLEVBQUUsQ0FBQztTQUNiO0lBQ0gsQ0FBQztJQUVlLFVBQVU7UUFDeEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTyxlQUFlLENBQUMsS0FBYTtRQUNuQyxNQUFNLFFBQVEsR0FBdUIsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZELElBQUksUUFBUSxLQUFLLENBQUMsRUFBRTtZQUNsQixJQUFJLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQztTQUNwQztRQUNELElBQUksUUFBUSxFQUFFO1lBQ1osMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxRQUFRLEdBQUcsS0FBSyxDQUFDLENBQUM7WUFDcEUsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7U0FDcEM7SUFDSCxDQUFDO0lBRU8sZUFBZSxDQUFDLEtBQWE7UUFDbkMsUUFBUSxLQUFLLEVBQUU7WUFDYixLQUFLLEdBQUcsQ0FBQztZQUFDLEtBQUssTUFBTTtnQkFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7Z0JBQ3JCLE1BQU07WUFDUixLQUFLLEdBQUcsQ0FBQztZQUFDLEtBQUssTUFBTTtnQkFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7Z0JBQ25DLE1BQU07U0FDVDtJQUNILENBQUM7Q0FJRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NvbW1hbmRzL2NhbWVyYUNvbW1hbmQudHM/NWUyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiO1xuXG5lbnVtIENhbWVyYUNvbW1hbmRNb2RlIHtcbiAgTWVudSxcbiAgRm92eSxcbn1cblxuZXhwb3J0IGNsYXNzIENhbWVyYUNvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHtcblxuICBwcml2YXRlIG1vZGU6IENhbWVyYUNvbW1hbmRNb2RlO1xuICBwcml2YXRlIGZpbmlzaGVkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIENhbWVyYUNvbW1hbmRNb2RlLk1lbnU6XG4gICAgICAgIHRoaXMuaGFuZGxlTWVudUlucHV0KGlucHV0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIENhbWVyYUNvbW1hbmRNb2RlLkZvdnk6XG4gICAgICAgIHRoaXMuaGFuZGxlRm92eUlucHV0KGlucHV0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZUNsaWNrKCk6IHZvaWQge1xuXG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlTW91c2VNb3ZlKCk6IHZvaWQge1xuXG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlQ2xpY2tSZXN1bHQoaW5wdXQ6IEludGVyc2VjdGlvbik6IHZvaWQge1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGZvdnk6IG51bWJlciA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q2FtZXJhKCkuZ2V0Rm92eSgpO1xuICAgIGNvbnN0IGZvdnlEZWdyZWVzOiBzdHJpbmcgPSAoMTgwLjAgKiBmb3Z5IC8gTWF0aC5QSSkudG9GaXhlZCgxKTtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBDYW1lcmFDb21tYW5kTW9kZS5NZW51OlxuICAgICAgICByZXR1cm4gYDA6RXhpdCwgIDE6Rk9WWSgke2ZvdnlEZWdyZWVzfSkgICRgO1xuICAgICAgY2FzZSBDYW1lcmFDb21tYW5kTW9kZS5Gb3Z5OlxuICAgICAgICByZXR1cm4gYDA6RXhpdCwgIEVudGVyIE5ldyBGT1ZZKCR7Zm92eURlZ3JlZXN9KSAgJGA7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjb25zb2xlLmVycm9yKFwiVW5pbXBsZW1lbnRlZCBDYW1lcmFDb21tYW5kTW9kZVwiKTtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGlzRmluaXNoZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmluaXNoZWQ7XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZUZvdnlJbnB1dChpbnB1dDogc3RyaW5nKSB7XG4gICAgY29uc3QgaW5wdXROdW06IG51bWJlciB8IHVuZGVmaW5lZCA9IHBhcnNlRmxvYXQoaW5wdXQpO1xuICAgIGlmIChpbnB1dE51bSA9PT0gMCkge1xuICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICB9XG4gICAgaWYgKGlucHV0TnVtKSB7XG4gICAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENhbWVyYSgpLnNldEZvdnkoTWF0aC5QSSAqIGlucHV0TnVtIC8gMTgwLjApO1xuICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZU1lbnVJbnB1dChpbnB1dDogc3RyaW5nKSB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgY2FzZSBcIjBcIjogY2FzZSBcImV4aXRcIjpcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIjFcIjogY2FzZSBcImZvdnlcIjpcbiAgICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuRm92eTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/cameraCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/circleCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/circleCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CircleCommand: () => (/* binding */ CircleCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/circle */ \"./src/geometry/nurbs/circle.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\n\nvar CircleCommandMode;\n(function (CircleCommandMode) {\n    CircleCommandMode[CircleCommandMode[\"Menu\"] = 0] = \"Menu\";\n    CircleCommandMode[CircleCommandMode[\"ThreePoints\"] = 1] = \"ThreePoints\";\n    CircleCommandMode[CircleCommandMode[\"CenterNormalRadius\"] = 2] = \"CenterNormalRadius\";\n    CircleCommandMode[CircleCommandMode[\"CenterPointPoint\"] = 3] = \"CenterPointPoint\";\n})(CircleCommandMode || (CircleCommandMode = {}));\nclass CircleCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_2__.Clicker();\n        this.mode = CircleCommandMode.Menu;\n        this.v1 = null;\n        this.v2 = null;\n        this.v3 = null;\n        this.curve = null;\n    }\n    handleInputString(input) {\n        if (input === \"0\") {\n            this.done();\n            return;\n        }\n        switch (this.mode) {\n            case CircleCommandMode.Menu:\n                if (input === \"1\")\n                    this.mode = CircleCommandMode.ThreePoints;\n                if (input === \"2\")\n                    this.mode = CircleCommandMode.CenterNormalRadius;\n                if (input === \"3\")\n                    this.mode = CircleCommandMode.CenterPointPoint;\n                break;\n            case CircleCommandMode.CenterNormalRadius:\n                if (this.v3) {\n                    const radius = parseFloat(input);\n                    if (!isNaN(radius)) {\n                        const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v2, this.v3));\n                        if (this.curve)\n                            this.curve.destroy();\n                        this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n                        this.done();\n                    }\n                }\n                break;\n        }\n    }\n    handleClickResult(input) {\n        throw new Error();\n    }\n    handleClick() {\n        if (this.clicker.getPoint()) {\n            switch (this.mode) {\n                case CircleCommandMode.CenterPointPoint:\n                    this.handleClickCenterPointPoint(this.clicker.getPoint());\n                    break;\n                case CircleCommandMode.ThreePoints:\n                    this.handleClickThreePoints(this.clicker.getPoint());\n                    break;\n                case CircleCommandMode.CenterNormalRadius:\n                    this.handleClickCenterNormalRadius(this.clicker.getPoint());\n                    break;\n            }\n        }\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.clicker.getPoint()) {\n            switch (this.mode) {\n                case CircleCommandMode.CenterPointPoint:\n                    this.handleMouseMoveCenterPointPoint(this.clicker.getPoint());\n                    break;\n                case CircleCommandMode.ThreePoints:\n                    this.handleMouseMoveThreePoints(this.clicker.getPoint());\n                    break;\n                case CircleCommandMode.CenterNormalRadius:\n                    this.handleMouseMoveCenterNormalRadius(this.clicker.getPoint());\n                    break;\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case CircleCommandMode.Menu:\n                return \"0:Exit  1:FromThreePoints  2:FromNormalCenterRadius 3:CenterPointPoint $\";\n            case CircleCommandMode.ThreePoints:\n                return this.getInstructionsThreePoints();\n            case CircleCommandMode.CenterPointPoint:\n                return this.getInstructionsCenterPointPoint();\n            case CircleCommandMode.CenterNormalRadius:\n                return this.getInstructionsCenterNormalRadius();\n            default:\n                throw new Error(\"unhandled switch enum\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleClickCenterPointPoint(point) {\n        if (!this.v1) {\n            this.v1 = point;\n        }\n        else if (!this.v2) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point))\n                this.v2 = point;\n        }\n        else if (!this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, this.v2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, point)));\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, this.v2);\n                if (this.curve)\n                    this.curve.destroy();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n                this.done();\n            }\n        }\n    }\n    handleMouseMoveCenterPointPoint(point) {\n        if (this.v2) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, this.v2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v1, point)));\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, this.v2);\n                if (this.curve)\n                    this.curve.destroy();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n            }\n        }\n    }\n    getInstructionsCenterPointPoint() {\n        if (!this.v1) {\n            return \"0:Exit  Click center point.\";\n        }\n        else if (!this.v2) {\n            return \"0:Exit  Click point on circle perimeter.\";\n        }\n        else {\n            return \"0:Exit  Click point to establish plane.\";\n        }\n    }\n    handleClickThreePoints(point) {\n        if (!this.v1) {\n            this.v1 = point;\n        }\n        else if (!this.v2) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point))\n                this.v2 = point;\n        }\n        else if (!this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                if (this.curve)\n                    this.curve.destroy();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleThreePoints)(this.v1, this.v2, point);\n                this.done();\n            }\n        }\n    }\n    handleMouseMoveThreePoints(point) {\n        if (this.v2 && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point) && !wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point)) {\n            if (this.curve)\n                this.curve.destroy();\n            this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleThreePoints)(this.v1, this.v2, point);\n        }\n    }\n    getInstructionsThreePoints() {\n        if (this.v1 == null)\n            return \"Exit:0 Click first point\";\n        else if (this.v2 == null)\n            return \"Exit:0 Click second point\";\n        return \"Exit:0 Click third point\";\n    }\n    handleClickCenterNormalRadius(point) {\n        if (!this.v1) {\n            this.v1 = point;\n        }\n        else if (!this.v2) {\n            this.v2 = point;\n        }\n        else if (!this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v2, point)) {\n                this.v3 = point;\n            }\n        }\n        else {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point)) {\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, point);\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v2, this.v3));\n                if (this.curve)\n                    this.curve.destroy();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n                this.done();\n            }\n        }\n    }\n    handleMouseMoveCenterNormalRadius(point) {\n        if (this.v3) {\n            if (!wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.equals(this.v1, point)) {\n                const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.v1, point);\n                const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(this.v2, this.v3));\n                if (this.curve)\n                    this.curve.destroy();\n                this.curve = (0,_geometry_nurbs_circle__WEBPACK_IMPORTED_MODULE_1__.createCircleCenterNormalRadius)(this.v1, normal, radius);\n            }\n        }\n    }\n    getInstructionsCenterNormalRadius() {\n        if (!this.v1) {\n            return \"0:Exit  Click center point.\";\n        }\n        else if (!this.v2) {\n            return \"0:Exit  Click start of normal vector.\";\n        }\n        else if (!this.v3) {\n            return \"0:Exit  Click end of normal vector.\";\n        }\n        else {\n            return \"0:Exit  Enter radius or click to determine radius.  $\";\n        }\n    }\n    done() {\n        if (this.curve) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.curve);\n        }\n        this.finished = true;\n        this.clicker.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/circleCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/constructionPlaneCommand.ts":
/*!***********************************************************!*\
  !*** ./src/commands/commands/constructionPlaneCommand.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConstructionPlaneCommand: () => (/* binding */ ConstructionPlaneCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nvar ConstructionPlaneCommandMode;\n(function (ConstructionPlaneCommandMode) {\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"Menu\"] = 0] = \"Menu\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeMajorCount\"] = 1] = \"ChangeMajorCount\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeMinorCount\"] = 2] = \"ChangeMinorCount\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeSpacing\"] = 3] = \"ChangeSpacing\";\n})(ConstructionPlaneCommandMode || (ConstructionPlaneCommandMode = {}));\nclass ConstructionPlaneCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.mode = ConstructionPlaneCommandMode.Menu;\n        this.finished = false;\n    }\n    handleClickResult(input) {\n        throw new Error(\"Method not implemented.\");\n    }\n    handleInputString(input) {\n        switch (this.mode) {\n            case ConstructionPlaneCommandMode.Menu:\n                this.handleMenuInput(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeMajorCount:\n                this.changeMajorCount(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeMinorCount:\n                this.changeMinorCount(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeSpacing:\n                this.changeCellSize(input);\n                break;\n            default: console.error(\"Unhandled Mode\");\n        }\n    }\n    handleClick() {\n    }\n    getInstructions() {\n        const constructionPlane = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane();\n        const minorCount = constructionPlane.getMinorCount().toString();\n        const majorCount = constructionPlane.getMajorCount().toString();\n        const cellSize = constructionPlane.getCellSize().toFixed(2);\n        switch (this.mode) {\n            case ConstructionPlaneCommandMode.Menu:\n                return `0:Exit,  1:MajorCount(${majorCount}),  2:MinorCount(${minorCount}),  3:CellSize(${cellSize})  $`;\n            case ConstructionPlaneCommandMode.ChangeMajorCount:\n                return `0:Exit,  Enter New Major Count(${majorCount})  $`;\n            case ConstructionPlaneCommandMode.ChangeMinorCount:\n                return `0:Exit,  Enter New Minor Count(${minorCount})  $`;\n            case ConstructionPlaneCommandMode.ChangeSpacing:\n                return `0:Exit,  Enter New Cell Size(${cellSize})  $`;\n            default: console.error(\"Unhandled Mode\");\n        }\n        return \"\";\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleMouseMove() {\n    }\n    handleMenuInput(input) {\n        switch (input) {\n            case \"0\":\n            case \"exit\":\n                this.finished = true;\n                return;\n            case \"1\":\n            case \"majorcount\":\n                this.mode = ConstructionPlaneCommandMode.ChangeMajorCount;\n                return;\n            case \"2\":\n            case \"minorcount\":\n                this.mode = ConstructionPlaneCommandMode.ChangeMinorCount;\n                return;\n            case \"3\":\n            case \"cellspacing\":\n                this.mode = ConstructionPlaneCommandMode.ChangeSpacing;\n                return;\n        }\n    }\n    changeMajorCount(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const count = parseInt(input);\n        if (count) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorCount(count);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n    changeMinorCount(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const count = parseInt(input);\n        if (count) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMinorCount(count);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n    changeCellSize(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const size = parseFloat(input);\n        if (size) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setCellSize(size);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/constructionPlaneCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/curveCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/curveCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CurveCommand: () => (/* binding */ CurveCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n\n\n\n\n\nvar CurveCommandMode;\n(function (CurveCommandMode) {\n    CurveCommandMode[CurveCommandMode[\"AddPoints\"] = 0] = \"AddPoints\";\n    CurveCommandMode[CurveCommandMode[\"ChangeDegree\"] = 1] = \"ChangeDegree\";\n})(CurveCommandMode || (CurveCommandMode = {}));\nclass CurveCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.curve = null;\n        this.degree = 2;\n        this.mode = CurveCommandMode.AddPoints;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n    }\n    // TODO: debug\n    handleInputString(input) {\n        var _a, _b;\n        if (this.mode === CurveCommandMode.AddPoints) {\n            switch (input) {\n                case \"0\":\n                    (_a = this.curve) === null || _a === void 0 ? void 0 : _a.destroy();\n                    this.finished = true;\n                    this.clicker.destroy();\n                    break;\n                case \"1\":\n                    this.mode = CurveCommandMode.ChangeDegree;\n                    break;\n                case \"\":\n                    if (this.curve != null) {\n                        if (this.curve.getControlPointCount() < 3)\n                            this.curve.destroy();\n                        else {\n                            this.curve.removeLastControlPoint();\n                            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.curve);\n                        }\n                    }\n                    this.finished = true;\n                    this.clicker.destroy();\n                    break;\n            }\n        }\n        else if (this.mode === CurveCommandMode.ChangeDegree) {\n            switch (input) {\n                case \"0\":\n                case \"\":\n                    break;\n                default:\n                    const degree = parseInt(input);\n                    if (degree) {\n                        this.degree = degree;\n                        (_b = this.curve) === null || _b === void 0 ? void 0 : _b.elevateDegree(Math.min(this.curve.getControlPointCount() - 1, this.degree));\n                    }\n                    break;\n            }\n            this.mode = CurveCommandMode.AddPoints;\n        }\n    }\n    handleClick() {\n        this.clicker.click();\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.curve && this.clicker.getPoint()) {\n            this.curve.updateLastControlPoint(this.clicker.getPoint(), 1);\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case CurveCommandMode.AddPoints:\n                if (this.curve == null)\n                    return `Exit:0  Degree(${this.degree}):1  Click start point.  $`;\n                return `Exit:0  Degree(${this.degree}):1  Click next point.  $`;\n            case CurveCommandMode.ChangeDegree:\n                return `Exit:0  Enter New Degree(${this.degree})  $`;\n            default:\n                return \"\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleClickResult(intersection) {\n        const point = intersection.point;\n        if (this.curve) {\n            this.curve.updateLastControlPoint(point, 1);\n            this.curve.addControlPoint(point, 1);\n            if (this.curve.getDegree() < this.degree)\n                this.curve.changeDegree(this.curve.getDegree() + 1);\n        }\n        else {\n            this.curve = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__.Curve(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...point, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...point, 1)], 1);\n        }\n        this.clicker.reset();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/curveCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/lineCommand.ts":
/*!**********************************************!*\
  !*** ./src/commands/commands/lineCommand.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineCommand: () => (/* binding */ LineCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/line */ \"./src/geometry/line.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n\n\n\n\nclass LineCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.line = null;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n    }\n    handleInputString(input) {\n        switch (input) {\n            case \"0\":\n            case \"\":\n                if (this.line)\n                    this.line.delete();\n                this.clicker.destroy();\n                this.finished = true;\n                break;\n        }\n        // TODO: \n    }\n    handleClickResult(input) {\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.line && this.clicker.getPoint()) {\n            this.line.updateEnd(this.clicker.getPoint());\n        }\n    }\n    handleClick() {\n        const point = this.clicker.getPoint();\n        if (point) {\n            if (this.line) {\n                this.line.updateEnd(point);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.line);\n                this.clicker.destroy();\n                this.finished = true;\n            }\n            else {\n                this.line = new _geometry_line__WEBPACK_IMPORTED_MODULE_1__.Line(null, point, point, [1, 0, 0, 1]);\n            }\n        }\n    }\n    getInstructions() {\n        if (this.line) {\n            return \"Exit:0  Click or type end point.  $\";\n        }\n        else {\n            return \"Exit:0  Click or type start point.  $\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvbGluZUNvbW1hbmQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDcUM7QUFDTTtBQUNOO0FBQ0E7QUFJOUIsTUFBTSxXQUFZLFNBQVEsNkNBQU87SUFNdEM7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSw2Q0FBTyxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVlLGlCQUFpQixDQUFDLEtBQWE7UUFDN0MsUUFBUSxLQUFLLEVBQUU7WUFDYixLQUFLLEdBQUcsQ0FBQztZQUFDLEtBQUssRUFBRTtnQkFDZixJQUFJLElBQUksQ0FBQyxJQUFJO29CQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO2dCQUNyQixNQUFNO1NBQ1Q7UUFFRCxTQUFTO0lBQ1gsQ0FBQztJQUVlLGlCQUFpQixDQUFDLEtBQW1CO0lBQ3JELENBQUM7SUFFZSxlQUFlO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDM0IsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUcsQ0FBQyxDQUFDO1NBQy9DO0lBQ0gsQ0FBQztJQUVlLFdBQVc7UUFDekIsTUFBTSxLQUFLLEdBQWdCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkQsSUFBSSxLQUFLLEVBQUU7WUFDVCxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzNCLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDM0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7YUFDdEI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLGdEQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3hEO1NBQ0Y7SUFDSCxDQUFDO0lBRWUsZUFBZTtRQUM3QixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixPQUFPLHFDQUFxQyxDQUFDO1NBQzlDO2FBQU07WUFDTCxPQUFPLHVDQUF1QyxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQztJQUVlLFVBQVU7UUFDeEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Q0FHRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NvbW1hbmRzL2xpbmVDb21tYW5kLnRzP2UxODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBMaW5lIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L2xpbmVcIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiO1xuaW1wb3J0IHsgQ2xpY2tlciB9IGZyb20gXCIuLi9jbGlja2VyXCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvaW50ZXJzZWN0aW9uXCI7XG5cblxuZXhwb3J0IGNsYXNzIExpbmVDb21tYW5kIGV4dGVuZHMgQ29tbWFuZCB7XG5cbiAgcHJpdmF0ZSBmaW5pc2hlZDogYm9vbGVhbjtcbiAgcHJpdmF0ZSBsaW5lOiBMaW5lIHwgbnVsbDtcbiAgcHJpdmF0ZSBjbGlja2VyOiBDbGlja2VyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMubGluZSA9IG51bGw7XG4gICAgdGhpcy5jbGlja2VyID0gbmV3IENsaWNrZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVJbnB1dFN0cmluZyhpbnB1dDogc3RyaW5nKTogdm9pZCB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgY2FzZSBcIjBcIjogY2FzZSBcIlwiOlxuICAgICAgICBpZiAodGhpcy5saW5lKSB0aGlzLmxpbmUuZGVsZXRlKCk7XG4gICAgICAgIHRoaXMuY2xpY2tlci5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICAvLyBUT0RPOiBcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVDbGlja1Jlc3VsdChpbnB1dDogSW50ZXJzZWN0aW9uKTogdm9pZCB7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlTW91c2VNb3ZlKCk6IHZvaWQge1xuICAgIHRoaXMuY2xpY2tlci5vbk1vdXNlTW92ZSgpO1xuICAgIGlmICh0aGlzLmxpbmUgJiYgdGhpcy5jbGlja2VyLmdldFBvaW50KCkpIHtcbiAgICAgIHRoaXMubGluZS51cGRhdGVFbmQodGhpcy5jbGlja2VyLmdldFBvaW50KCkhKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlQ2xpY2soKTogdm9pZCB7XG4gICAgY29uc3QgcG9pbnQ6IFZlYzMgfCBudWxsID0gdGhpcy5jbGlja2VyLmdldFBvaW50KCk7XG4gICAgaWYgKHBvaW50KSB7XG4gICAgICBpZiAodGhpcy5saW5lKSB7XG4gICAgICAgIHRoaXMubGluZS51cGRhdGVFbmQocG9pbnQpO1xuICAgICAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmFkZEdlb21ldHJ5KHRoaXMubGluZSk7XG4gICAgICAgIHRoaXMuY2xpY2tlci5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5saW5lID0gbmV3IExpbmUobnVsbCwgcG9pbnQsIHBvaW50LCBbMSwgMCwgMCwgMV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5saW5lKSB7XG4gICAgICByZXR1cm4gXCJFeGl0OjAgIENsaWNrIG9yIHR5cGUgZW5kIHBvaW50LiAgJFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gXCJFeGl0OjAgIENsaWNrIG9yIHR5cGUgc3RhcnQgcG9pbnQuICAkXCI7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGlzRmluaXNoZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmluaXNoZWQ7XG4gIH1cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/lineCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/polylineCommand.ts":
/*!**************************************************!*\
  !*** ./src/commands/commands/polylineCommand.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PolyLineCommand: () => (/* binding */ PolyLineCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_polyLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/polyLine */ \"./src/geometry/polyLine.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n/* harmony import */ var _clicker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../clicker */ \"./src/commands/clicker.ts\");\n\n\n\n\nclass PolyLineCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.polyline = null;\n        this.finished = false;\n        this.clicker = new _clicker__WEBPACK_IMPORTED_MODULE_3__.Clicker();\n    }\n    handleInputString(input) {\n        switch (input) {\n            case \"0\":\n                if (this.polyline)\n                    this.polyline.delete();\n                this.clicker.destroy();\n                this.finished = true;\n            case \"\":\n                if (this.polyline) {\n                    if (this.polyline.getSegmentCount() < 2)\n                        this.polyline.delete();\n                    else {\n                        this.polyline.removeLastPoint();\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.polyline);\n                    }\n                }\n                this.clicker.destroy();\n                this.finished = true;\n                break;\n        }\n    }\n    handleClickResult(input) {\n    }\n    handleClick() {\n        if (this.clicker.getPoint()) {\n            const point = this.clicker.getPoint();\n            if (this.polyline) {\n                this.polyline.updateLastPoint(point);\n                this.polyline.addPoint(point);\n            }\n            else {\n                this.polyline = new _geometry_polyLine__WEBPACK_IMPORTED_MODULE_1__.PolyLine(null, [point, point]);\n            }\n        }\n    }\n    handleMouseMove() {\n        this.clicker.onMouseMove();\n        if (this.polyline && this.clicker.getPoint()) {\n            this.polyline.updateLastPoint(this.clicker.getPoint());\n        }\n    }\n    getInstructions() {\n        if (this.polyline) {\n            return \"Exit:0  click or type next point  $\";\n        }\n        else {\n            return \"Exit:0  click or type start point  $\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvcG9seWxpbmVDb21tYW5kLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ3FDO0FBQ2M7QUFDZDtBQUNBO0FBRzlCLE1BQU0sZUFBZ0IsU0FBUSw2Q0FBTztJQU0xQztRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLDZDQUFPLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRWUsaUJBQWlCLENBQUMsS0FBYTtRQUM3QyxRQUFRLEtBQUssRUFBRTtZQUNiLEtBQUssR0FBRztnQkFDTixJQUFJLElBQUksQ0FBQyxRQUFRO29CQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBQzFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLEtBQUssRUFBRTtnQkFDTCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7b0JBQ2pCLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsR0FBRyxDQUFDO3dCQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7eUJBQzNEO3dCQUNILElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxFQUFFLENBQUM7d0JBQ2hDLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztxQkFDaEQ7aUJBQ0Y7Z0JBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7Z0JBQ3JCLE1BQU07U0FDVDtJQUNILENBQUM7SUFFZSxpQkFBaUIsQ0FBQyxLQUFtQjtJQUNyRCxDQUFDO0lBRWUsV0FBVztRQUN6QixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDM0IsTUFBTSxLQUFLLEdBQVMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUcsQ0FBQztZQUM3QyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNyQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUMvQjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksd0RBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQzthQUNwRDtTQUNGO0lBQ0gsQ0FBQztJQUVlLGVBQWU7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzQixJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUM1QyxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRyxDQUFDLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBRWUsZUFBZTtRQUM3QixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsT0FBTyxxQ0FBcUMsQ0FBQztTQUM5QzthQUFNO1lBQ0wsT0FBTyxzQ0FBc0MsQ0FBQztTQUMvQztJQUNILENBQUM7SUFFZSxVQUFVO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0NBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9jb21tYW5kcy9jb21tYW5kcy9wb2x5bGluZUNvbW1hbmQudHM/MTA3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IFBvbHlMaW5lIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L3BvbHlMaW5lXCI7XG5pbXBvcnQgeyBDb21tYW5kIH0gZnJvbSBcIi4uL2NvbW1hbmRcIjtcbmltcG9ydCB7IENsaWNrZXIgfSBmcm9tIFwiLi4vY2xpY2tlclwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L2ludGVyc2VjdGlvblwiO1xuXG5leHBvcnQgY2xhc3MgUG9seUxpbmVDb21tYW5kIGV4dGVuZHMgQ29tbWFuZCB7XG5cbiAgcHJpdmF0ZSBwb2x5bGluZTogUG9seUxpbmUgfCBudWxsO1xuICBwcml2YXRlIGZpbmlzaGVkOiBib29sZWFuO1xuICBwcml2YXRlIGNsaWNrZXI6IENsaWNrZXI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnBvbHlsaW5lID0gbnVsbDtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgdGhpcy5jbGlja2VyID0gbmV3IENsaWNrZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVJbnB1dFN0cmluZyhpbnB1dDogc3RyaW5nKTogdm9pZCB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgY2FzZSBcIjBcIjpcbiAgICAgICAgaWYgKHRoaXMucG9seWxpbmUpIHRoaXMucG9seWxpbmUuZGVsZXRlKCk7XG4gICAgICAgIHRoaXMuY2xpY2tlci5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgY2FzZSBcIlwiOlxuICAgICAgICBpZiAodGhpcy5wb2x5bGluZSkge1xuICAgICAgICAgIGlmICh0aGlzLnBvbHlsaW5lLmdldFNlZ21lbnRDb3VudCgpIDwgMikgdGhpcy5wb2x5bGluZS5kZWxldGUoKTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucG9seWxpbmUucmVtb3ZlTGFzdFBvaW50KCk7XG4gICAgICAgICAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmFkZEdlb21ldHJ5KHRoaXMucG9seWxpbmUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsaWNrZXIuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZUNsaWNrUmVzdWx0KGlucHV0OiBJbnRlcnNlY3Rpb24pOiB2b2lkIHtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVDbGljaygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5jbGlja2VyLmdldFBvaW50KCkpIHtcbiAgICAgIGNvbnN0IHBvaW50OiBWZWMzID0gdGhpcy5jbGlja2VyLmdldFBvaW50KCkhO1xuICAgICAgaWYgKHRoaXMucG9seWxpbmUpIHtcbiAgICAgICAgdGhpcy5wb2x5bGluZS51cGRhdGVMYXN0UG9pbnQocG9pbnQpO1xuICAgICAgICB0aGlzLnBvbHlsaW5lLmFkZFBvaW50KHBvaW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucG9seWxpbmUgPSBuZXcgUG9seUxpbmUobnVsbCwgW3BvaW50LCBwb2ludF0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVNb3VzZU1vdmUoKTogdm9pZCB7XG4gICAgdGhpcy5jbGlja2VyLm9uTW91c2VNb3ZlKCk7XG4gICAgaWYgKHRoaXMucG9seWxpbmUgJiYgdGhpcy5jbGlja2VyLmdldFBvaW50KCkpIHtcbiAgICAgIHRoaXMucG9seWxpbmUudXBkYXRlTGFzdFBvaW50KHRoaXMuY2xpY2tlci5nZXRQb2ludCgpISk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLnBvbHlsaW5lKSB7XG4gICAgICByZXR1cm4gXCJFeGl0OjAgIGNsaWNrIG9yIHR5cGUgbmV4dCBwb2ludCAgJFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gXCJFeGl0OjAgIGNsaWNrIG9yIHR5cGUgc3RhcnQgcG9pbnQgICRcIjtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaXNGaW5pc2hlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5maW5pc2hlZDtcbiAgfVxuXG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/commands/polylineCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/snapsCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/snapsCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapsCommand: () => (/* binding */ SnapsCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nclass SnapsCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n    }\n    handleInputString(input) {\n        switch (input) {\n            case \"0\":\n                this.finished = true;\n                break;\n            default:\n                this.toggleSnap(input);\n        }\n    }\n    handleClickResult(input) {\n        throw new Error(\"\");\n    }\n    toggleSnap(input) {\n        const snapSettings = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getSnapSettings();\n        switch (input) {\n            case \"1\":\n                snapSettings.snapGrid = !snapSettings.snapGrid;\n                break;\n            case \"2\":\n                snapSettings.snapLine = !snapSettings.snapLine;\n                break;\n            case \"3\":\n                snapSettings.snapPoint = !snapSettings.snapPoint;\n                break;\n        }\n    }\n    handleClick() {\n    }\n    handleMouseMove() {\n    }\n    getInstructions() {\n        const snapSettings = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getSnapSettings();\n        const grid = snapSettings.snapGrid ? \"on\" : \"off\";\n        const point = snapSettings.snapPoint ? \"on\" : \"off\";\n        const line = snapSettings.snapLine ? \"on\" : \"off\";\n        return `Exit:0  Grid(${grid}):1  Line(${line}):2  Point(${point}):3  $`;\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc25hcHNDb21tYW5kLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUNxQztBQUdBO0FBRTlCLE1BQU0sWUFBYSxTQUFRLDZDQUFPO0lBSXZDO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0lBRWUsaUJBQWlCLENBQUMsS0FBYTtRQUM3QyxRQUFRLEtBQUssRUFBRTtZQUNiLEtBQUssR0FBRztnQkFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDckIsTUFBTTtZQUNSO2dCQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDMUI7SUFDSCxDQUFDO0lBRWUsaUJBQWlCLENBQUMsS0FBbUI7UUFDbkQsTUFBTSxJQUFJLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRU8sVUFBVSxDQUFDLEtBQWE7UUFDOUIsTUFBTSxZQUFZLEdBQWlCLDBDQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzVHLFFBQVEsS0FBSyxFQUFFO1lBQ2IsS0FBSyxHQUFHO2dCQUNOLFlBQVksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO2dCQUMvQyxNQUFNO1lBQ1IsS0FBSyxHQUFHO2dCQUNOLFlBQVksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO2dCQUMvQyxNQUFNO1lBQ1IsS0FBSyxHQUFHO2dCQUNOLFlBQVksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO2dCQUNqRCxNQUFNO1NBQ1Q7SUFDSCxDQUFDO0lBRWUsV0FBVztJQUUzQixDQUFDO0lBRWUsZUFBZTtJQUUvQixDQUFDO0lBRWUsZUFBZTtRQUM3QixNQUFNLFlBQVksR0FBaUIsMENBQVEsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLHNCQUFzQixFQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDNUcsTUFBTSxJQUFJLEdBQVcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDMUQsTUFBTSxLQUFLLEdBQVcsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDNUQsTUFBTSxJQUFJLEdBQVcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDMUQsT0FBTyxnQkFBZ0IsSUFBSSxhQUFhLElBQUksY0FBYyxLQUFLLFFBQVEsQ0FBQztJQUMxRSxDQUFDO0lBRWUsVUFBVTtRQUN4QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvc25hcHNDb21tYW5kLnRzPzhiZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBTbmFwU2V0dGluZ3MgfSBmcm9tIFwiLi4vLi4vc2V0dGluZ3Mvc25hcHNNYW5hZ2VyXCI7XG5pbXBvcnQgeyBDb21tYW5kIH0gZnJvbSBcIi4uL2NvbW1hbmRcIjtcblxuZXhwb3J0IGNsYXNzIFNuYXBzQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlSW5wdXRTdHJpbmcoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgIGNhc2UgXCIwXCI6XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRoaXMudG9nZ2xlU25hcChpbnB1dCk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZUNsaWNrUmVzdWx0KGlucHV0OiBJbnRlcnNlY3Rpb24pOiB2b2lkIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJcIik7XG4gIH1cblxuICBwcml2YXRlIHRvZ2dsZVNuYXAoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IHNuYXBTZXR0aW5nczogU25hcFNldHRpbmdzID0gSU5TVEFOQ0UuZ2V0U2V0dGluZ3NNYW5hZ2VyKCkuZ2V0U25hcFNldHRpbmdzTWFuYWdlcigpLmdldFNuYXBTZXR0aW5ncygpO1xuICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgIGNhc2UgXCIxXCI6XG4gICAgICAgIHNuYXBTZXR0aW5ncy5zbmFwR3JpZCA9ICFzbmFwU2V0dGluZ3Muc25hcEdyaWQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIjJcIjpcbiAgICAgICAgc25hcFNldHRpbmdzLnNuYXBMaW5lID0gIXNuYXBTZXR0aW5ncy5zbmFwTGluZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiM1wiOlxuICAgICAgICBzbmFwU2V0dGluZ3Muc25hcFBvaW50ID0gIXNuYXBTZXR0aW5ncy5zbmFwUG9pbnQ7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVDbGljaygpOiB2b2lkIHtcblxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZU1vdXNlTW92ZSgpOiB2b2lkIHtcblxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGNvbnN0IHNuYXBTZXR0aW5nczogU25hcFNldHRpbmdzID0gSU5TVEFOQ0UuZ2V0U2V0dGluZ3NNYW5hZ2VyKCkuZ2V0U25hcFNldHRpbmdzTWFuYWdlcigpLmdldFNuYXBTZXR0aW5ncygpO1xuICAgIGNvbnN0IGdyaWQ6IHN0cmluZyA9IHNuYXBTZXR0aW5ncy5zbmFwR3JpZCA/IFwib25cIiA6IFwib2ZmXCI7XG4gICAgY29uc3QgcG9pbnQ6IHN0cmluZyA9IHNuYXBTZXR0aW5ncy5zbmFwUG9pbnQgPyBcIm9uXCIgOiBcIm9mZlwiO1xuICAgIGNvbnN0IGxpbmU6IHN0cmluZyA9IHNuYXBTZXR0aW5ncy5zbmFwTGluZSA/IFwib25cIiA6IFwib2ZmXCI7XG4gICAgcmV0dXJuIGBFeGl0OjAgIEdyaWQoJHtncmlkfSk6MSAgTGluZSgke2xpbmV9KToyICBQb2ludCgke3BvaW50fSk6MyAgJGA7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaXNGaW5pc2hlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5maW5pc2hlZDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/snapsCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/windowCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/windowCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WindowCommand: () => (/* binding */ WindowCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../widgets/cursor */ \"./src/widgets/cursor.ts\");\n/* harmony import */ var _window_windowManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../window/windowManager */ \"./src/window/windowManager.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\nvar WindowCommandMode;\n(function (WindowCommandMode) {\n    WindowCommandMode[WindowCommandMode[\"SelectWindow\"] = 0] = \"SelectWindow\";\n    WindowCommandMode[WindowCommandMode[\"PlaceWindowStart\"] = 1] = \"PlaceWindowStart\";\n    WindowCommandMode[WindowCommandMode[\"PlaceWindowEnd\"] = 2] = \"PlaceWindowEnd\";\n})(WindowCommandMode || (WindowCommandMode = {}));\nclass WindowCommand extends _command__WEBPACK_IMPORTED_MODULE_3__.Command {\n    constructor() {\n        super();\n        this.windowName = \"none\";\n        this.finished = false;\n        this.mode = WindowCommandMode.SelectWindow;\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.show();\n    }\n    handleClickResult(input) {\n    }\n    handleInputString(input) {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                if (input == \"0\") {\n                    _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.hide();\n                    this.finished = true;\n                    break;\n                }\n                if (_window_windowManager__WEBPACK_IMPORTED_MODULE_2__.WINDOW_NAMES.has(parseInt(input))) {\n                    this.windowName = _window_windowManager__WEBPACK_IMPORTED_MODULE_2__.WINDOW_NAMES.get(parseInt(input));\n                    this.mode = WindowCommandMode.PlaceWindowStart;\n                    // remove existing window to add it back\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().removeWindow(this.windowName);\n                }\n                break;\n            case WindowCommandMode.PlaceWindowStart:\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    // rounds n to nearest multiple of m\n    nearestMultiple(n, m) {\n        const delta = n % m;\n        if (delta < m / 2)\n            n -= delta;\n        else\n            n += m - delta;\n        return n;\n    }\n    roundScreenPoint(p) {\n        return [this.nearestMultiple(p[0], 10), this.nearestMultiple(p[1], 10)];\n    }\n    handleClick() {\n        const [x, y] = this.roundScreenPoint(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos());\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                break;\n            case WindowCommandMode.PlaceWindowStart:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().addWindow(this.windowName, [x, y]);\n                this.mode = WindowCommandMode.PlaceWindowEnd;\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(this.windowName).updateEnd([x, y]);\n                this.windowName = \"none\";\n                this.mode = WindowCommandMode.SelectWindow;\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    handleMouseMove() {\n        const [x, y] = this.roundScreenPoint(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getEventManager().getMouseHandler().getMousePos());\n        _widgets_cursor__WEBPACK_IMPORTED_MODULE_1__.cursor.setPosition([x, y]);\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                break;\n            case WindowCommandMode.PlaceWindowStart:\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(this.windowName).updateEnd([x, y]);\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                var res = \"Exit:0  \";\n                for (let [key, value] of _window_windowManager__WEBPACK_IMPORTED_MODULE_2__.WINDOW_NAMES) {\n                    res += value + \"(\" + key.toString() + \")  \";\n                }\n                return res + \"$\";\n            case WindowCommandMode.PlaceWindowStart:\n                return \"Exit:0  Click first corner for window.\";\n            case WindowCommandMode.PlaceWindowEnd:\n                return \"Exit:0  Click second corner for window.\";\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvd2luZG93Q29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNxQztBQUVTO0FBQ1k7QUFDckI7QUFFckMsSUFBSyxpQkFJSjtBQUpELFdBQUssaUJBQWlCO0lBQ3BCLHlFQUFZO0lBQ1osaUZBQWdCO0lBQ2hCLDZFQUFjO0FBQ2hCLENBQUMsRUFKSSxpQkFBaUIsS0FBakIsaUJBQWlCLFFBSXJCO0FBRU0sTUFBTSxhQUFjLFNBQVEsNkNBQU87SUFNeEM7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUhGLGVBQVUsR0FBVyxNQUFNLENBQUM7UUFJbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxZQUFZLENBQUM7UUFDM0MsbURBQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRWUsaUJBQWlCLENBQUMsS0FBbUI7SUFDckQsQ0FBQztJQUVlLGlCQUFpQixDQUFDLEtBQWE7UUFDN0MsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pCLEtBQUssaUJBQWlCLENBQUMsWUFBWTtnQkFDakMsSUFBSSxLQUFLLElBQUksR0FBRyxFQUFFO29CQUNoQixtREFBTSxDQUFDLElBQUksRUFBRSxDQUFDO29CQUNkLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO29CQUNyQixNQUFNO2lCQUNQO2dCQUNELElBQUksK0RBQVksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7b0JBQ3JDLElBQUksQ0FBQyxVQUFVLEdBQUcsK0RBQVksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFFLENBQUM7b0JBQ3JELElBQUksQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsZ0JBQWdCLENBQUM7b0JBRS9DLHdDQUF3QztvQkFDeEMsMENBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7aUJBQzNEO2dCQUNELE1BQU07WUFDUixLQUFLLGlCQUFpQixDQUFDLGdCQUFnQjtnQkFDckMsTUFBTTtZQUNSLEtBQUssaUJBQWlCLENBQUMsY0FBYztnQkFDbkMsTUFBTTtZQUNSO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztTQUN0QztJQUNILENBQUM7SUFFRCxvQ0FBb0M7SUFDNUIsZUFBZSxDQUFDLENBQVMsRUFBRSxDQUFTO1FBQzFDLE1BQU0sS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxHQUFHLENBQUM7WUFBRSxDQUFDLElBQUksS0FBSyxDQUFDOztZQUN6QixDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUNwQixPQUFPLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFTyxnQkFBZ0IsQ0FBQyxDQUFtQjtRQUMxQyxPQUFPLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBRWUsV0FBVztRQUN6QixNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQywwQ0FBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDakcsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pCLEtBQUssaUJBQWlCLENBQUMsWUFBWTtnQkFDakMsTUFBTTtZQUNSLEtBQUssaUJBQWlCLENBQUMsZ0JBQWdCO2dCQUNyQywwQ0FBUSxDQUFDLGdCQUFnQixFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDL0QsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxjQUFjLENBQUM7Z0JBQzdDLE1BQU07WUFDUixLQUFLLGlCQUFpQixDQUFDLGNBQWM7Z0JBQ25DLDBDQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqRixJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQztnQkFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxZQUFZLENBQUM7Z0JBQzNDLE1BQU07WUFDUjtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRWUsZUFBZTtRQUM3QixNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQywwQ0FBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDakcsbURBQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQixRQUFRLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDakIsS0FBSyxpQkFBaUIsQ0FBQyxZQUFZO2dCQUNqQyxNQUFNO1lBQ1IsS0FBSyxpQkFBaUIsQ0FBQyxnQkFBZ0I7Z0JBQ3JDLE1BQU07WUFDUixLQUFLLGlCQUFpQixDQUFDLGNBQWM7Z0JBQ25DLDBDQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqRixNQUFNO1lBQ1I7Z0JBQ0UsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQztJQUVlLGVBQWU7UUFDN0IsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pCLEtBQUssaUJBQWlCLENBQUMsWUFBWTtnQkFDakMsSUFBSSxHQUFHLEdBQVcsVUFBVSxDQUFDO2dCQUM3QixLQUFLLElBQUksQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLElBQUksK0RBQVksRUFBRTtvQkFDckMsR0FBRyxJQUFJLEtBQUssR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLEtBQUssQ0FBQztpQkFDN0M7Z0JBQ0QsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDO1lBQ25CLEtBQUssaUJBQWlCLENBQUMsZ0JBQWdCO2dCQUNyQyxPQUFPLHdDQUF3QyxDQUFDO1lBQ2xELEtBQUssaUJBQWlCLENBQUMsY0FBYztnQkFDbkMsT0FBTyx5Q0FBeUMsQ0FBQztZQUNuRDtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRWUsVUFBVTtRQUN4QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvd2luZG93Q29tbWFuZC50cz80ZDc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L2ludGVyc2VjdGlvblwiO1xuaW1wb3J0IHsgY3Vyc29yIH0gZnJvbSBcIi4uLy4uL3dpZGdldHMvY3Vyc29yXCI7XG5pbXBvcnQgeyBXSU5ET1dfTkFNRVMgfSBmcm9tIFwiLi4vLi4vd2luZG93L3dpbmRvd01hbmFnZXJcIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi4vY29tbWFuZFwiO1xuXG5lbnVtIFdpbmRvd0NvbW1hbmRNb2RlIHtcbiAgU2VsZWN0V2luZG93LFxuICBQbGFjZVdpbmRvd1N0YXJ0LFxuICBQbGFjZVdpbmRvd0VuZCxcbn1cblxuZXhwb3J0IGNsYXNzIFdpbmRvd0NvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHtcblxuICBwcml2YXRlIGZpbmlzaGVkOiBib29sZWFuO1xuICBwcml2YXRlIG1vZGU6IFdpbmRvd0NvbW1hbmRNb2RlO1xuICBwcml2YXRlIHdpbmRvd05hbWU6IHN0cmluZyA9IFwibm9uZVwiO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMubW9kZSA9IFdpbmRvd0NvbW1hbmRNb2RlLlNlbGVjdFdpbmRvdztcbiAgICBjdXJzb3Iuc2hvdygpO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGhhbmRsZUNsaWNrUmVzdWx0KGlucHV0OiBJbnRlcnNlY3Rpb24pOiB2b2lkIHtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVJbnB1dFN0cmluZyhpbnB1dDogc3RyaW5nKTogdm9pZCB7XG4gICAgc3dpdGNoICh0aGlzLm1vZGUpIHtcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuU2VsZWN0V2luZG93OlxuICAgICAgICBpZiAoaW5wdXQgPT0gXCIwXCIpIHtcbiAgICAgICAgICBjdXJzb3IuaGlkZSgpO1xuICAgICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChXSU5ET1dfTkFNRVMuaGFzKHBhcnNlSW50KGlucHV0KSkpIHtcbiAgICAgICAgICB0aGlzLndpbmRvd05hbWUgPSBXSU5ET1dfTkFNRVMuZ2V0KHBhcnNlSW50KGlucHV0KSkhO1xuICAgICAgICAgIHRoaXMubW9kZSA9IFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93U3RhcnQ7XG5cbiAgICAgICAgICAvLyByZW1vdmUgZXhpc3Rpbmcgd2luZG93IHRvIGFkZCBpdCBiYWNrXG4gICAgICAgICAgSU5TVEFOQ0UuZ2V0V2luZG93TWFuYWdlcigpLnJlbW92ZVdpbmRvdyh0aGlzLndpbmRvd05hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5QbGFjZVdpbmRvd1N0YXJ0OlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dFbmQ6XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIC8vIHJvdW5kcyBuIHRvIG5lYXJlc3QgbXVsdGlwbGUgb2YgbVxuICBwcml2YXRlIG5lYXJlc3RNdWx0aXBsZShuOiBudW1iZXIsIG06IG51bWJlcik6IG51bWJlciB7XG4gICAgY29uc3QgZGVsdGEgPSBuICUgbTtcbiAgICBpZiAoZGVsdGEgPCBtIC8gMikgbiAtPSBkZWx0YTtcbiAgICBlbHNlIG4gKz0gbSAtIGRlbHRhO1xuICAgIHJldHVybiBuO1xuICB9XG5cbiAgcHJpdmF0ZSByb3VuZFNjcmVlblBvaW50KHA6IFtudW1iZXIsIG51bWJlcl0pOiBbbnVtYmVyLCBudW1iZXJdIHtcbiAgICByZXR1cm4gW3RoaXMubmVhcmVzdE11bHRpcGxlKHBbMF0sIDEwKSwgdGhpcy5uZWFyZXN0TXVsdGlwbGUocFsxXSwgMTApXTtcbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBoYW5kbGVDbGljaygpOiB2b2lkIHtcbiAgICBjb25zdCBbeCwgeV0gPSB0aGlzLnJvdW5kU2NyZWVuUG9pbnQoSU5TVEFOQ0UuZ2V0RXZlbnRNYW5hZ2VyKCkuZ2V0TW91c2VIYW5kbGVyKCkuZ2V0TW91c2VQb3MoKSk7XG4gICAgc3dpdGNoICh0aGlzLm1vZGUpIHtcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuU2VsZWN0V2luZG93OlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dTdGFydDpcbiAgICAgICAgSU5TVEFOQ0UuZ2V0V2luZG93TWFuYWdlcigpLmFkZFdpbmRvdyh0aGlzLndpbmRvd05hbWUsIFt4LCB5XSk7XG4gICAgICAgIHRoaXMubW9kZSA9IFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93RW5kO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dFbmQ6XG4gICAgICAgIElOU1RBTkNFLmdldFdpbmRvd01hbmFnZXIoKS5nZXRXaW5kb3dzKCkuZ2V0KHRoaXMud2luZG93TmFtZSkhLnVwZGF0ZUVuZChbeCwgeV0pO1xuICAgICAgICB0aGlzLndpbmRvd05hbWUgPSBcIm5vbmVcIjtcbiAgICAgICAgdGhpcy5tb2RlID0gV2luZG93Q29tbWFuZE1vZGUuU2VsZWN0V2luZG93O1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaGFuZGxlTW91c2VNb3ZlKCk6IHZvaWQge1xuICAgIGNvbnN0IFt4LCB5XSA9IHRoaXMucm91bmRTY3JlZW5Qb2ludChJTlNUQU5DRS5nZXRFdmVudE1hbmFnZXIoKS5nZXRNb3VzZUhhbmRsZXIoKS5nZXRNb3VzZVBvcygpKTtcbiAgICBjdXJzb3Iuc2V0UG9zaXRpb24oW3gsIHldKTtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5TZWxlY3RXaW5kb3c6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5QbGFjZVdpbmRvd1N0YXJ0OlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dFbmQ6XG4gICAgICAgIElOU1RBTkNFLmdldFdpbmRvd01hbmFnZXIoKS5nZXRXaW5kb3dzKCkuZ2V0KHRoaXMud2luZG93TmFtZSkhLnVwZGF0ZUVuZChbeCwgeV0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0SW5zdHJ1Y3Rpb25zKCk6IHN0cmluZyB7XG4gICAgc3dpdGNoICh0aGlzLm1vZGUpIHtcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuU2VsZWN0V2luZG93OlxuICAgICAgICB2YXIgcmVzOiBzdHJpbmcgPSBcIkV4aXQ6MCAgXCI7XG4gICAgICAgIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBXSU5ET1dfTkFNRVMpIHtcbiAgICAgICAgICByZXMgKz0gdmFsdWUgKyBcIihcIiArIGtleS50b1N0cmluZygpICsgXCIpICBcIjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzICsgXCIkXCI7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93U3RhcnQ6XG4gICAgICAgIHJldHVybiBcIkV4aXQ6MCAgQ2xpY2sgZmlyc3QgY29ybmVyIGZvciB3aW5kb3cuXCI7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93RW5kOlxuICAgICAgICByZXR1cm4gXCJFeGl0OjAgIENsaWNrIHNlY29uZCBjb3JuZXIgZm9yIHdpbmRvdy5cIjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgaXNGaW5pc2hlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5maW5pc2hlZDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/windowCommand.ts\n");

/***/ }),

/***/ "./src/commands/oneTimeCommands/toggleDarkModeCommand.ts":
/*!***************************************************************!*\
  !*** ./src/commands/oneTimeCommands/toggleDarkModeCommand.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toggleDarkMode: () => (/* binding */ toggleDarkMode)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n\nvar isDarkMode = true;\nconst rootStyle = document.querySelector(':root');\nfunction toggleDarkMode() {\n    if (isDarkMode)\n        setLightMode();\n    else\n        setDarkMode();\n}\nfunction setLightMode() {\n    isDarkMode = false;\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().setClearColor([0.8, 0.8, 0.8, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorMaterial(\"darker grey\");\n    //  INSTANCE.getScene().getConstructionPlane().setMajorColor([0.3, 0.2, 0.2, 1.0]);\n    // INSTANCE.getScene().getConstructionPlane().setMinorColor([0.7, 0.6, 0.6, 1.0]);\n    rootStyle.style.setProperty(\"--floating-window-background-color\", \"var(--transparent-white)\");\n    rootStyle.style.setProperty(\"--floating-window-text-color\", \"var(--dark-red)\");\n    rootStyle.style.setProperty(\"--floating-window-border-color\", \"var(--dark-red)\");\n}\nfunction setDarkMode() {\n    isDarkMode = true;\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().setClearColor([0.1, 0.1, 0.1, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorMaterial(\"lighter grey\");\n    //  INSTANCE.getScene().getConstructionPlane().setMajorColor([1.0, 0.8, 0.8, 1.0]);\n    //  INSTANCE.getScene().getConstructionPlane().setMinorColor([0.6, 0.4, 0.4, 1.0]);\n    rootStyle.style.setProperty(\"--floating-window-background-color\", \"var(--transparent-black)\");\n    rootStyle.style.setProperty(\"--floating-window-text-color\", \"var(--light-red)\");\n    rootStyle.style.setProperty(\"--floating-window-border-color\", \"var(--light-red)\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL3RvZ2dsZURhcmtNb2RlQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUVyQyxJQUFJLFVBQVUsR0FBWSxJQUFJLENBQUM7QUFFL0IsTUFBTSxTQUFTLEdBQXVDLFFBQVEsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7QUFFL0UsU0FBUyxjQUFjO0lBQzVCLElBQUksVUFBVTtRQUFFLFlBQVksRUFBRSxDQUFDOztRQUMxQixXQUFXLEVBQUUsQ0FBQztBQUNyQixDQUFDO0FBRUQsU0FBUyxZQUFZO0lBQ25CLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDbkIsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzNELDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMzRSxtRkFBbUY7SUFDbkYsa0ZBQWtGO0lBQ2xGLFNBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLG9DQUFvQyxFQUFFLDBCQUEwQixDQUFDLENBQUM7SUFDOUYsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsOEJBQThCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztJQUMvRSxTQUFTLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxnQ0FBZ0MsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBRW5GLENBQUM7QUFFRCxTQUFTLFdBQVc7SUFDbEIsVUFBVSxHQUFHLElBQUksQ0FBQztJQUNsQiwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0QsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzVFLG1GQUFtRjtJQUNuRixtRkFBbUY7SUFDbkYsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsb0NBQW9DLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztJQUM5RixTQUFTLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyw4QkFBOEIsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQ2hGLFNBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLGdDQUFnQyxFQUFFLGtCQUFrQixDQUFDLENBQUM7QUFDcEYsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL29uZVRpbWVDb21tYW5kcy90b2dnbGVEYXJrTW9kZUNvbW1hbmQudHM/NWFmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcblxudmFyIGlzRGFya01vZGU6IGJvb2xlYW4gPSB0cnVlO1xuXG5jb25zdCByb290U3R5bGU6IEhUTUxTdHlsZUVsZW1lbnQgPSA8SFRNTFN0eWxlRWxlbWVudD5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCc6cm9vdCcpO1xuXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlRGFya01vZGUoKSB7XG4gIGlmIChpc0RhcmtNb2RlKSBzZXRMaWdodE1vZGUoKTtcbiAgZWxzZSBzZXREYXJrTW9kZSgpO1xufVxuXG5mdW5jdGlvbiBzZXRMaWdodE1vZGUoKSB7XG4gIGlzRGFya01vZGUgPSBmYWxzZTtcbiAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5zZXRDbGVhckNvbG9yKFswLjgsIDAuOCwgMC44LCAxLjBdKTtcbiAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDb25zdHJ1Y3Rpb25QbGFuZSgpLnNldE1ham9yTWF0ZXJpYWwoXCJkYXJrZXIgZ3JleVwiKTtcbiAgLy8gIElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q29uc3RydWN0aW9uUGxhbmUoKS5zZXRNYWpvckNvbG9yKFswLjMsIDAuMiwgMC4yLCAxLjBdKTtcbiAgLy8gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDb25zdHJ1Y3Rpb25QbGFuZSgpLnNldE1pbm9yQ29sb3IoWzAuNywgMC42LCAwLjYsIDEuMF0pO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy1iYWNrZ3JvdW5kLWNvbG9yXCIsIFwidmFyKC0tdHJhbnNwYXJlbnQtd2hpdGUpXCIpO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy10ZXh0LWNvbG9yXCIsIFwidmFyKC0tZGFyay1yZWQpXCIpO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy1ib3JkZXItY29sb3JcIiwgXCJ2YXIoLS1kYXJrLXJlZClcIik7XG5cbn1cblxuZnVuY3Rpb24gc2V0RGFya01vZGUoKSB7XG4gIGlzRGFya01vZGUgPSB0cnVlO1xuICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLnNldENsZWFyQ29sb3IoWzAuMSwgMC4xLCAwLjEsIDEuMF0pO1xuICBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENvbnN0cnVjdGlvblBsYW5lKCkuc2V0TWFqb3JNYXRlcmlhbChcImxpZ2h0ZXIgZ3JleVwiKTtcbiAgLy8gIElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q29uc3RydWN0aW9uUGxhbmUoKS5zZXRNYWpvckNvbG9yKFsxLjAsIDAuOCwgMC44LCAxLjBdKTtcbiAgLy8gIElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q29uc3RydWN0aW9uUGxhbmUoKS5zZXRNaW5vckNvbG9yKFswLjYsIDAuNCwgMC40LCAxLjBdKTtcbiAgcm9vdFN0eWxlLnN0eWxlLnNldFByb3BlcnR5KFwiLS1mbG9hdGluZy13aW5kb3ctYmFja2dyb3VuZC1jb2xvclwiLCBcInZhcigtLXRyYW5zcGFyZW50LWJsYWNrKVwiKTtcbiAgcm9vdFN0eWxlLnN0eWxlLnNldFByb3BlcnR5KFwiLS1mbG9hdGluZy13aW5kb3ctdGV4dC1jb2xvclwiLCBcInZhcigtLWxpZ2h0LXJlZClcIik7XG4gIHJvb3RTdHlsZS5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tZmxvYXRpbmctd2luZG93LWJvcmRlci1jb2xvclwiLCBcInZhcigtLWxpZ2h0LXJlZClcIik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/oneTimeCommands/toggleDarkModeCommand.ts\n");

/***/ }),

/***/ "./src/commands/selector.ts":
/*!**********************************!*\
  !*** ./src/commands/selector.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Selector: () => (/* binding */ Selector)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_frustum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/frustum */ \"./src/geometry/frustum.ts\");\n\n\n\nclass Selector {\n    constructor() {\n        this.selection = new Set;\n        this.selecting = false;\n        this.updateTransform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.identity());\n        this.element = document.createElement(\"div\");\n        this.element.id = \"clicker\";\n        this.element.className = \"floating-window\";\n        this.element.style.width = \"auto\";\n        this.element.hidden = true;\n        document.body.appendChild(this.element);\n    }\n    reset() {\n        for (let id of this.selection) {\n            const geo = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getGeometry(id);\n            geo.unSelect();\n        }\n        this.selection.clear();\n        this.transform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.identity();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n    updateTransform(mat) {\n        this.transform = mat;\n    }\n    getTransform() {\n        return this.transform;\n    }\n    addToSelection(...geometry) {\n        for (let geo of geometry) {\n            this.selection.add(geo.getID());\n            geo.select();\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n    removeFromSelection(...geometry) {\n        for (let geo of geometry) {\n            this.selection.delete(geo.getID());\n            geo.unSelect();\n        }\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMover().updatedSelection();\n    }\n    toggleSelectionAtPixel(x, y, sub) {\n        if (this.selecting)\n            return;\n        this.selecting = true;\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n        const intersections = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().firstIntersectionsWithinMargin(ray, 5);\n        const list = document.createElement(\"ul\");\n        this.element.innerHTML = \"\";\n        this.element.appendChild(list);\n        const geometryAtPixel = new Set;\n        for (let intersection of intersections) {\n            if (intersection.object === 0)\n                continue; // construction plane intersection\n            let geo = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getGeometry(intersection.object);\n            if (!sub) {\n                while (geo.getParent() !== null)\n                    geo = geo.getParent();\n                if (geometryAtPixel.has(geo))\n                    continue;\n            }\n            geometryAtPixel.add(geo);\n            const li = document.createElement(\"li\");\n            li.innerText = intersection.description;\n            li.onclick = function () {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().doneTogglingSelectionAtPixel(geo);\n            };\n            li.onmouseover = function () { geo.hover(); };\n            li.onmouseleave = function () { geo.unHover(); };\n            list.appendChild(li);\n        }\n        if (geometryAtPixel.size === 0) {\n            this.doneTogglingSelectionAtPixel(null);\n            return;\n        }\n        if (geometryAtPixel.size === 1) {\n            const geo = geometryAtPixel.values().next().value;\n            this.doneTogglingSelectionAtPixel(geo);\n            return;\n        }\n        this.element.setAttribute(\"style\", `\n      left:${x}px;\n      top:${y}px;\n      width:auto;\n      height:auto;`);\n        this.element.hidden = false;\n    }\n    doneTogglingSelectionAtPixel(geo) {\n        if (geo !== null) {\n            geo.unHover();\n            if (geo.isSelected()) {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().removeFromSelection(geo);\n            }\n            else {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().addToSelection(geo);\n            }\n        }\n        this.selecting = false;\n        this.element.hidden = true;\n    }\n    selectInRectangle(left, right, top, bottom, inclusive, sub) {\n        const frustum = new _geometry_frustum__WEBPACK_IMPORTED_MODULE_1__.Frustum(left, right, top, bottom);\n        const within = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().getWithinFrustum(frustum, sub, inclusive);\n        for (const obj of within) {\n            const geo = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getGeometry(obj);\n            this.addToSelection(geo);\n        }\n    }\n    unSelectInRectangle(left, right, top, bottom, inclusive, sub) {\n        const frustum = new _geometry_frustum__WEBPACK_IMPORTED_MODULE_1__.Frustum(left, right, top, bottom);\n        const within = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getBoundingBoxHeirarchy().getWithinFrustum(frustum, sub, inclusive);\n        for (const obj of within) {\n            const geo = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getGeometry(obj);\n            this.removeFromSelection(geo);\n        }\n    }\n    getSelection() {\n        return this.selection;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/selector.ts\n");

/***/ }),

/***/ "./src/events/eventManager.ts":
/*!************************************!*\
  !*** ./src/events/eventManager.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventManager: () => (/* binding */ EventManager)\n/* harmony export */ });\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mode */ \"./src/mode.ts\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _mouseHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mouseHandler */ \"./src/events/mouseHandler.ts\");\n\n\n\nclass EventManager {\n    constructor() {\n        this.mouseHandler = new _mouseHandler__WEBPACK_IMPORTED_MODULE_2__.MouseHandler();\n        onmousemove = (event) => {\n            this.mouseHandler.onMouseMove(event);\n        };\n        onresize = () => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getRenderer().updateScreenSize();\n        };\n        onkeydown = (event) => {\n            if (event.code == \"Tab\") {\n                if (_cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Navigation) {\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.setMode(_mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Command);\n                }\n                else {\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getCli().clearInput();\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.setMode(_mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Navigation);\n                }\n                // prevent tab from chaging focus\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            else {\n                if (_cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Command)\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getCli().processKeyDownEvent(event);\n            }\n        };\n        onfocus = () => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getStats().reset();\n        };\n        onmousedown = (event) => {\n            this.mouseHandler.onMouseDown(event);\n        };\n        onmouseup = (event) => {\n            this.mouseHandler.onMouseUp(event);\n        };\n    }\n    getMouseHandler() {\n        return this.mouseHandler;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXZlbnRzL2V2ZW50TWFuYWdlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVDO0FBQ047QUFDYTtBQUV2QyxNQUFNLFlBQVk7SUFJdkI7UUFFRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksdURBQVksRUFBRSxDQUFDO1FBRXZDLFdBQVcsR0FBRyxDQUFDLEtBQWlCLEVBQUUsRUFBRTtZQUNsQyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUM7UUFFRixRQUFRLEdBQUcsR0FBRyxFQUFFO1lBQ2QsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQzVDLENBQUM7UUFFRCxTQUFTLEdBQUcsQ0FBQyxLQUFvQixFQUFFLEVBQUU7WUFDbkMsSUFBSSxLQUFLLENBQUMsSUFBSSxJQUFJLEtBQUssRUFBRTtnQkFDdkIsSUFBSSwwQ0FBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLGdEQUFhLENBQUMsVUFBVSxFQUFFO29CQUNsRCwwQ0FBUSxDQUFDLE9BQU8sQ0FBQyxnREFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUN6QztxQkFBTTtvQkFDTCwwQ0FBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDO29CQUMvQiwwQ0FBUSxDQUFDLE9BQU8sQ0FBQyxnREFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2lCQUM1QztnQkFDRCxpQ0FBaUM7Z0JBQ2pDLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO2FBQ3pCO2lCQUFNO2dCQUNMLElBQUksMENBQVEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxnREFBYSxDQUFDLE9BQU87b0JBQUUsMENBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUMvRjtRQUNILENBQUMsQ0FBQztRQUVGLE9BQU8sR0FBRyxHQUFHLEVBQUU7WUFDYiwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzlCLENBQUM7UUFFRCxXQUFXLEdBQUcsQ0FBQyxLQUFpQixFQUFFLEVBQUU7WUFDbEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkMsQ0FBQztRQUVELFNBQVMsR0FBRyxDQUFDLEtBQWlCLEVBQUUsRUFBRTtZQUNoQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQyxDQUFDO0lBQ0gsQ0FBQztJQUVNLGVBQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2V2ZW50cy9ldmVudE1hbmFnZXIudHM/YWQzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcGVyYXRpbmdNb2RlIH0gZnJvbSBcIi4uL21vZGVcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IE1vdXNlSGFuZGxlciB9IGZyb20gXCIuL21vdXNlSGFuZGxlclwiO1xuXG5leHBvcnQgY2xhc3MgRXZlbnRNYW5hZ2VyIHtcblxuICBwcml2YXRlIG1vdXNlSGFuZGxlcjogTW91c2VIYW5kbGVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuXG4gICAgdGhpcy5tb3VzZUhhbmRsZXIgPSBuZXcgTW91c2VIYW5kbGVyKCk7XG5cbiAgICBvbm1vdXNlbW92ZSA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgICAgdGhpcy5tb3VzZUhhbmRsZXIub25Nb3VzZU1vdmUoZXZlbnQpO1xuICAgIH07XG5cbiAgICBvbnJlc2l6ZSA9ICgpID0+IHtcbiAgICAgIElOU1RBTkNFLmdldFJlbmRlcmVyKCkudXBkYXRlU2NyZWVuU2l6ZSgpO1xuICAgIH1cblxuICAgIG9ua2V5ZG93biA9IChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LmNvZGUgPT0gXCJUYWJcIikge1xuICAgICAgICBpZiAoSU5TVEFOQ0UuZ2V0TW9kZSgpID09IE9wZXJhdGluZ01vZGUuTmF2aWdhdGlvbikge1xuICAgICAgICAgIElOU1RBTkNFLnNldE1vZGUoT3BlcmF0aW5nTW9kZS5Db21tYW5kKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBJTlNUQU5DRS5nZXRDbGkoKS5jbGVhcklucHV0KCk7XG4gICAgICAgICAgSU5TVEFOQ0Uuc2V0TW9kZShPcGVyYXRpbmdNb2RlLk5hdmlnYXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIC8vIHByZXZlbnQgdGFiIGZyb20gY2hhZ2luZyBmb2N1c1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChJTlNUQU5DRS5nZXRNb2RlKCkgPT0gT3BlcmF0aW5nTW9kZS5Db21tYW5kKSBJTlNUQU5DRS5nZXRDbGkoKS5wcm9jZXNzS2V5RG93bkV2ZW50KGV2ZW50KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgb25mb2N1cyA9ICgpID0+IHtcbiAgICAgIElOU1RBTkNFLmdldFN0YXRzKCkucmVzZXQoKTtcbiAgICB9XG5cbiAgICBvbm1vdXNlZG93biA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgICAgdGhpcy5tb3VzZUhhbmRsZXIub25Nb3VzZURvd24oZXZlbnQpO1xuICAgIH1cblxuICAgIG9ubW91c2V1cCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgICAgdGhpcy5tb3VzZUhhbmRsZXIub25Nb3VzZVVwKGV2ZW50KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0TW91c2VIYW5kbGVyKCk6IE1vdXNlSGFuZGxlciB7XG4gICAgcmV0dXJuIHRoaXMubW91c2VIYW5kbGVyO1xuICB9XG5cbn1cblxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/events/eventManager.ts\n");

/***/ }),

/***/ "./src/events/mouseHandler.ts":
/*!************************************!*\
  !*** ./src/events/mouseHandler.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MouseHandler: () => (/* binding */ MouseHandler)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass MouseHandler {\n    constructor() {\n        this.mousePos = [-1, -1];\n        this.mouseDown = false;\n        this.shiftDown = false;\n        this.controlDown = false;\n        this.drag = null;\n    }\n    onMouseMove(event) {\n        var _a;\n        this.mousePos = [event.clientX, event.clientY];\n        (_a = this.drag) === null || _a === void 0 ? void 0 : _a.update(event.clientX, event.clientY);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleMouseMove();\n    }\n    onMouseDown(event) {\n        if (event.button == 0) { // left click\n            this.drag = new Drag(event.clientX, event.clientY);\n            this.mouseDown = true;\n            this.shiftDown = event.shiftKey;\n            this.controlDown = event.ctrlKey;\n        }\n    }\n    onMouseUp(event) {\n        if (event.button == 0) { // left click\n            if (!this.drag.isDrag()) { // not drag\n                if (_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().hasActiveCommand()) { // forward click to active command\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleClickInput();\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCli().render();\n                }\n                else {\n                    if (this.shiftDown)\n                        console.log(\"shift click\");\n                    if (!this.shiftDown)\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().toggleSelectionAtPixel(event.clientX, event.clientY, this.controlDown);\n                }\n            }\n            else { // drag\n                if (!this.shiftDown)\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().reset();\n                const inclusive = this.drag.isLeftward();\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().selectInRectangle(...this.drag.getBounds(), inclusive, false);\n            }\n            this.drag.destroy();\n            this.drag = null;\n            this.mouseDown = false;\n        }\n    }\n    getMousePos() {\n        return this.mousePos;\n    }\n}\nclass Drag {\n    constructor(x1, y1) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.element = document.getElementById(\"selection-rectangle\");\n        this.update(this.x1, this.y1);\n        this.element.hidden = false;\n    }\n    update(x, y) {\n        this.x2 = x;\n        this.y2 = y;\n        const top = Math.min(this.y1, this.y2);\n        const bottom = Math.max(this.y1, this.y2);\n        const left = Math.min(this.x1, this.x2);\n        const right = Math.max(this.x1, this.x2);\n        this.element.style.left = `${left}px`;\n        this.element.style.top = `${top}px`;\n        this.element.style.width = `${right - left}px`;\n        this.element.style.height = `${bottom - top}px`;\n    }\n    isDrag() {\n        return this.x1 != this.x2 || this.y1 != this.y2;\n    }\n    isLeftward() {\n        return this.x2 < this.x1;\n    }\n    getBounds() {\n        return [\n            Math.min(this.x1, this.x2),\n            Math.max(this.x1, this.x2),\n            Math.min(this.y1, this.y2),\n            Math.max(this.y1, this.y2),\n        ];\n    }\n    destroy() {\n        this.element.hidden = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/events/mouseHandler.ts\n");

/***/ }),

/***/ "./src/geometry/boundingBox.ts":
/*!*************************************!*\
  !*** ./src/geometry/boundingBox.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoundingBox: () => (/* binding */ BoundingBox)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass BoundingBox {\n    constructor(xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, zMin = Infinity, zMax = -Infinity) {\n        this.xMin = xMin;\n        this.xMax = xMax;\n        this.yMin = yMin;\n        this.yMax = yMax;\n        this.zMin = zMin;\n        this.zMax = zMax;\n    }\n    getXMin() { return this.xMin; }\n    getYMin() { return this.yMin; }\n    getZMin() { return this.zMin; }\n    getXMax() { return this.xMax; }\n    getYMax() { return this.yMax; }\n    getZMax() { return this.zMax; }\n    print() {\n        console.log(`BB: x: [${this.xMin}, ${this.xMax}], y: [${this.yMin}, ${this.yMax}], z: [${this.zMin}, ${this.zMax}];`);\n    }\n    addVec3(v) {\n        this.xMin = Math.min(this.xMin, v[0]);\n        this.yMin = Math.min(this.yMin, v[1]);\n        this.zMin = Math.min(this.zMin, v[2]);\n        this.xMax = Math.max(this.xMax, v[0]);\n        this.yMax = Math.max(this.yMax, v[1]);\n        this.zMax = Math.max(this.zMax, v[2]);\n    }\n    addBoundingBox(bb) {\n        this.xMin = Math.min(this.xMin, bb.xMin);\n        this.yMin = Math.min(this.yMin, bb.yMin);\n        this.zMin = Math.min(this.zMin, bb.zMin);\n        this.xMax = Math.max(this.xMax, bb.xMax);\n        this.yMax = Math.max(this.yMax, bb.yMax);\n        this.zMax = Math.max(this.zMax, bb.zMax);\n    }\n    getCenter() {\n        const res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create((this.xMin + this.xMax) / 2, (this.yMin + this.yMax) / 2, (this.zMin + this.zMax) / 2);\n        if (isNaN(res[0]))\n            res[0] = 0;\n        if (isNaN(res[1]))\n            res[1] = 0;\n        if (isNaN(res[2]))\n            res[2] = 0;\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvYm91bmRpbmdCb3gudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFFbEMsTUFBTSxXQUFXO0lBRXRCLFlBQ1UsT0FBZSxRQUFRLEVBQ3ZCLE9BQWUsQ0FBQyxRQUFRLEVBQ3hCLE9BQWUsUUFBUSxFQUN2QixPQUFlLENBQUMsUUFBUSxFQUN4QixPQUFlLFFBQVEsRUFDdkIsT0FBZSxDQUFDLFFBQVE7UUFMeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7UUFDeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7UUFDeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7SUFHbEMsQ0FBQztJQUVNLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBRXZDLEtBQUs7UUFDVixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxVQUFVLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUksVUFBVSxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDO0lBQ3hILENBQUM7SUFFTSxPQUFPLENBQUMsQ0FBTztRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRU0sY0FBYyxDQUFDLEVBQWU7UUFDbkMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVNLFNBQVM7UUFDZCxNQUFNLEdBQUcsR0FBUyw2Q0FBSSxDQUFDLE1BQU0sQ0FDM0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQzNCLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUMzQixDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FDNUIsQ0FBQztRQUNGLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUIsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QixJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvYm91bmRpbmdCb3gudHM/ODcxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5cbmV4cG9ydCBjbGFzcyBCb3VuZGluZ0JveCB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB4TWluOiBudW1iZXIgPSBJbmZpbml0eSxcbiAgICBwcml2YXRlIHhNYXg6IG51bWJlciA9IC1JbmZpbml0eSxcbiAgICBwcml2YXRlIHlNaW46IG51bWJlciA9IEluZmluaXR5LFxuICAgIHByaXZhdGUgeU1heDogbnVtYmVyID0gLUluZmluaXR5LFxuICAgIHByaXZhdGUgek1pbjogbnVtYmVyID0gSW5maW5pdHksXG4gICAgcHJpdmF0ZSB6TWF4OiBudW1iZXIgPSAtSW5maW5pdHlcbiAgKSB7XG5cbiAgfVxuXG4gIHB1YmxpYyBnZXRYTWluKCk6IG51bWJlciB7IHJldHVybiB0aGlzLnhNaW47IH1cbiAgcHVibGljIGdldFlNaW4oKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMueU1pbjsgfVxuICBwdWJsaWMgZ2V0Wk1pbigpOiBudW1iZXIgeyByZXR1cm4gdGhpcy56TWluOyB9XG4gIHB1YmxpYyBnZXRYTWF4KCk6IG51bWJlciB7IHJldHVybiB0aGlzLnhNYXg7IH1cbiAgcHVibGljIGdldFlNYXgoKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMueU1heDsgfVxuICBwdWJsaWMgZ2V0Wk1heCgpOiBudW1iZXIgeyByZXR1cm4gdGhpcy56TWF4OyB9XG5cbiAgcHVibGljIHByaW50KCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKGBCQjogeDogWyR7dGhpcy54TWlufSwgJHt0aGlzLnhNYXh9XSwgeTogWyR7dGhpcy55TWlufSwgJHt0aGlzLnlNYXh9XSwgejogWyR7dGhpcy56TWlufSwgJHt0aGlzLnpNYXh9XTtgKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRWZWMzKHY6IFZlYzMpOiB2b2lkIHtcbiAgICB0aGlzLnhNaW4gPSBNYXRoLm1pbih0aGlzLnhNaW4sIHZbMF0pO1xuICAgIHRoaXMueU1pbiA9IE1hdGgubWluKHRoaXMueU1pbiwgdlsxXSk7XG4gICAgdGhpcy56TWluID0gTWF0aC5taW4odGhpcy56TWluLCB2WzJdKTtcbiAgICB0aGlzLnhNYXggPSBNYXRoLm1heCh0aGlzLnhNYXgsIHZbMF0pO1xuICAgIHRoaXMueU1heCA9IE1hdGgubWF4KHRoaXMueU1heCwgdlsxXSk7XG4gICAgdGhpcy56TWF4ID0gTWF0aC5tYXgodGhpcy56TWF4LCB2WzJdKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRCb3VuZGluZ0JveChiYjogQm91bmRpbmdCb3gpOiB2b2lkIHtcbiAgICB0aGlzLnhNaW4gPSBNYXRoLm1pbih0aGlzLnhNaW4sIGJiLnhNaW4pO1xuICAgIHRoaXMueU1pbiA9IE1hdGgubWluKHRoaXMueU1pbiwgYmIueU1pbik7XG4gICAgdGhpcy56TWluID0gTWF0aC5taW4odGhpcy56TWluLCBiYi56TWluKTtcbiAgICB0aGlzLnhNYXggPSBNYXRoLm1heCh0aGlzLnhNYXgsIGJiLnhNYXgpO1xuICAgIHRoaXMueU1heCA9IE1hdGgubWF4KHRoaXMueU1heCwgYmIueU1heCk7XG4gICAgdGhpcy56TWF4ID0gTWF0aC5tYXgodGhpcy56TWF4LCBiYi56TWF4KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDZW50ZXIoKTogVmVjMyB7XG4gICAgY29uc3QgcmVzOiBWZWMzID0gdmVjMy5jcmVhdGUoXG4gICAgICAodGhpcy54TWluICsgdGhpcy54TWF4KSAvIDIsXG4gICAgICAodGhpcy55TWluICsgdGhpcy55TWF4KSAvIDIsXG4gICAgICAodGhpcy56TWluICsgdGhpcy56TWF4KSAvIDIsXG4gICAgKTtcbiAgICBpZiAoaXNOYU4ocmVzWzBdKSkgcmVzWzBdID0gMDtcbiAgICBpZiAoaXNOYU4ocmVzWzFdKSkgcmVzWzFdID0gMDtcbiAgICBpZiAoaXNOYU4ocmVzWzJdKSkgcmVzWzJdID0gMDtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/boundingBox.ts\n");

/***/ }),

/***/ "./src/geometry/frustum.ts":
/*!*********************************!*\
  !*** ./src/geometry/frustum.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Frustum: () => (/* binding */ Frustum)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\n\nclass Frustum {\n    constructor(left, right, top, bottom) {\n        this.origin = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPosition();\n        this.topLeft = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(left, top);\n        this.topRight = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(right, top);\n        this.bottomLeft = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(left, bottom);\n        this.bottomRight = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(right, bottom);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.topLeft.getDirection(), this.topRight.getDirection()));\n        this.right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.topRight.getDirection(), this.bottomRight.getDirection()));\n        this.down = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.bottomRight.getDirection(), this.bottomLeft.getDirection()));\n        this.left = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.bottomLeft.getDirection(), this.topLeft.getDirection()));\n    }\n    containsPoint(point) {\n        const v = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, this.origin);\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.up, v) > 0 &&\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.right, v) > 0 &&\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.down, v) > 0 &&\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.left, v) > 0;\n    }\n    transform(transform) {\n        this.origin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.transformMat4(this.origin, transform);\n        const newUp = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...this.up, 0), transform);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newUp[0], newUp[1], newUp[2]));\n        const newRight = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...this.right, 0), transform);\n        this.right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newRight[0], newRight[1], newRight[2]));\n        const newDown = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...this.down, 0), transform);\n        this.down = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newDown[0], newDown[1], newDown[2]));\n        const newLeft = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...this.left, 0), transform);\n        this.left = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newLeft[0], newLeft[1], newLeft[2]));\n        this.topLeft = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.topLeft, transform);\n        this.topRight = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.topRight, transform);\n        this.bottomLeft = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.bottomLeft, transform);\n        this.bottomRight = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(this.bottomRight, transform);\n    }\n    containsLineFully(a, b) {\n        return this.containsPoint(a) && this.containsPoint(b);\n    }\n    containsLinePartially(a, b) {\n        var _a, _b, _c, _d;\n        var dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(b, a);\n        const size = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.length(dir);\n        dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(dir, 1 / size);\n        const r = new _ray__WEBPACK_IMPORTED_MODULE_2__.Ray(a, dir);\n        const tUp = (_a = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.up), true)) !== null && _a !== void 0 ? _a : 0;\n        const tRight = (_b = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.right), true)) !== null && _b !== void 0 ? _b : 0;\n        const tDown = (_c = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.down), true)) !== null && _c !== void 0 ? _c : 0;\n        const tLeft = (_d = r.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(this.origin, this.left), true)) !== null && _d !== void 0 ? _d : 0;\n        var near = 0;\n        var far = size;\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.up, dir) < 0)\n            far = Math.min(far, tUp);\n        else\n            near = Math.max(near, tUp);\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.right, dir) < 0)\n            far = Math.min(far, tRight);\n        else\n            near = Math.max(near, tRight);\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.down, dir) < 0)\n            far = Math.min(far, tDown);\n        else\n            near = Math.max(near, tDown);\n        if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.left, dir) < 0)\n            far = Math.min(far, tLeft);\n        else\n            near = Math.max(near, tLeft);\n        return near <= far;\n    }\n    containsTriangle(p1, p2, p3, inclusive) {\n        if (inclusive) {\n            if (this.topRight.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.bottomRight.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.bottomLeft.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.topLeft.intersectTriangle(p1, p2, p3) !== null)\n                return true;\n            if (this.containsLinePartially(p1, p2))\n                return true;\n            if (this.containsLinePartially(p2, p3))\n                return true;\n            if (this.containsLinePartially(p3, p1))\n                return true;\n            return false;\n        }\n        else {\n            return this.containsPoint(p1) && this.containsPoint(p2) && this.containsPoint(p3);\n        }\n    }\n    intersectsBoundingBox(bb) {\n        if (this.topRight.intersectBoundingBox(bb) !== null)\n            return true;\n        if (this.bottomRight.intersectBoundingBox(bb) !== null)\n            return true;\n        if (this.bottomLeft.intersectBoundingBox(bb) !== null)\n            return true;\n        if (this.topLeft.intersectBoundingBox(bb) !== null)\n            return true;\n        const p000 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMin());\n        const p001 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMax());\n        const p010 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMin());\n        const p011 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMax());\n        const p100 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMin());\n        const p101 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMax());\n        const p110 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMin());\n        const p111 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMax());\n        return this.containsLinePartially(p000, p100) ||\n            this.containsLinePartially(p000, p010) ||\n            this.containsLinePartially(p000, p001) ||\n            this.containsLinePartially(p110, p010) ||\n            this.containsLinePartially(p110, p100) ||\n            this.containsLinePartially(p110, p111) ||\n            this.containsLinePartially(p011, p111) ||\n            this.containsLinePartially(p011, p001) ||\n            this.containsLinePartially(p011, p010) ||\n            this.containsLinePartially(p101, p001) ||\n            this.containsLinePartially(p101, p111) ||\n            this.containsLinePartially(p101, p100);\n    }\n    containsBoundingBoxFully(bb) {\n        const p000 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMin());\n        const p001 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMax());\n        const p010 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMin());\n        const p011 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMax(), bb.getZMax());\n        const p100 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMin());\n        const p101 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMin(), bb.getZMax());\n        const p110 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMin());\n        const p111 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMax());\n        return this.containsPoint(p000) &&\n            this.containsPoint(p001) &&\n            this.containsPoint(p010) &&\n            this.containsPoint(p011) &&\n            this.containsPoint(p100) &&\n            this.containsPoint(p101) &&\n            this.containsPoint(p110) &&\n            this.containsPoint(p111);\n    }\n    print() {\n        console.log(\"Frustum:\");\n        console.log(\"\\torigin: \", this.origin);\n        console.log(\"\\ttop: \", this.up);\n        console.log(\"\\tright: \", this.right);\n        console.log(\"\\tbottom: \", this.down);\n        console.log(\"\\tleft: \", this.left);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/frustum.ts\n");

/***/ }),

/***/ "./src/geometry/geometry.ts":
/*!**********************************!*\
  !*** ./src/geometry/geometry.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Geometry: () => (/* binding */ Geometry)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\n\nclass Geometry {\n    constructor(parent = null, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.identity(), materialName) {\n        this.parent = parent;\n        this.model = model;\n        this.materialName = materialName;\n        this.selected = false;\n        this.hovered = false;\n        this.showing = true;\n        this.overlay = false;\n        this.constantScreenSize = false;\n        this.id = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().generateNewObjectID(this);\n    }\n    isOverlay() {\n        return this.overlay || (this.parent && this.parent.isOverlay()) || false;\n    }\n    setOverlay(option) {\n        this.overlay = option;\n    }\n    isConstantScreenSize() {\n        return this.constantScreenSize || (this.parent && this.parent.isConstantScreenSize()) || false;\n    }\n    setConstantScreenSize(option) {\n        this.constantScreenSize = option;\n    }\n    setModel(model) {\n        this.model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.clone(model);\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    getModelRecursive() {\n        if (this.parent) {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.mul(this.parent.getModelRecursive(), this.model);\n        }\n        else {\n            return this.model;\n        }\n    }\n    getModel() {\n        return this.model;\n    }\n    getParent() {\n        return this.parent;\n    }\n    // an object is selected if its parent is selected\n    isSelected() {\n        if (this.selected)\n            return true;\n        if (this.parent && this.parent.isSelected())\n            return true;\n        return false;\n    }\n    // find parent and select it. return id of selected object\n    select() {\n        this.selected = true;\n    }\n    unSelect() {\n        this.selected = false;\n    }\n    isHovered() {\n        if (this.hovered)\n            return true;\n        if (this.parent && this.parent.isHovered())\n            return true;\n        return false;\n    }\n    hover() {\n        this.hovered = true;\n    }\n    unHover() {\n        this.hovered = false;\n    }\n    getID() {\n        return this.id;\n    }\n    hide() {\n        this.showing = false;\n    }\n    show() {\n        this.showing = true;\n    }\n    isHidden() {\n        return !this.showing || (this.parent && this.parent.isHidden()) || false;\n    }\n    setMaterial(name) {\n        this.materialName = name;\n    }\n    getColorBuffer() {\n        if (this.materialName) {\n            const mat = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getMaterial(this.materialName);\n            if (mat && mat.getColor()) {\n                return mat.getColorBuffer();\n            }\n        }\n        if (this.parent) {\n            return this.parent.getColorBuffer();\n        }\n        return _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getDefaultMaterial().getColorBuffer();\n    }\n    getColor() {\n        if (this.materialName) {\n            const mat = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getMaterial(this.materialName);\n            if (mat && mat.getColor()) {\n                return mat.getColor();\n            }\n        }\n        if (this.parent) {\n            return this.parent.getColor();\n        }\n        return _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getDefaultMaterial().getColor();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/geometry.ts\n");

/***/ }),

/***/ "./src/geometry/group.ts":
/*!*******************************!*\
  !*** ./src/geometry/group.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Group: () => (/* binding */ Group)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n\n\n\nclass Group extends _geometry__WEBPACK_IMPORTED_MODULE_1__.Geometry {\n    constructor(children, parent = null, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.identity(), material = null) {\n        super(parent, model, material);\n        this.children = children;\n        for (const child of children) {\n            child.setParent(this);\n        }\n    }\n    getBoundingBox() {\n        const boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (let child of this.children) {\n            boundingBox.addBoundingBox(child.getBoundingBox());\n        }\n        return boundingBox;\n    }\n    getTypeName() {\n        return \"Group\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        if (inclusive) {\n            for (const geo of this.children) {\n                if (geo.isWithinFrustum(frustum, inclusive))\n                    return true;\n            }\n            return false;\n        }\n        else {\n            for (const geo of this.children) {\n                if (!geo.isWithinFrustum(frustum, inclusive))\n                    return false;\n            }\n            return true;\n        }\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        var res = null;\n        for (const child of this.children) {\n            const intersection = child.intersect(ray);\n            if (intersection) {\n                if (!res)\n                    res = intersection;\n                else if (intersection.time < res.time)\n                    res = intersection;\n            }\n        }\n        console.log(res);\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvZ3JvdXAudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUVHO0FBRU47QUFJL0IsTUFBTSxLQUFNLFNBQVEsK0NBQVE7SUFFakMsWUFDVSxRQUFvQixFQUM1QixTQUEwQixJQUFJLEVBQzlCLFFBQWMsNkNBQUksQ0FBQyxRQUFRLEVBQUUsRUFDN0IsV0FBZ0MsSUFBSTtRQUVwQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztRQUx2QixhQUFRLEdBQVIsUUFBUSxDQUFZO1FBTTVCLEtBQUssTUFBTSxLQUFLLElBQUksUUFBUSxFQUFFO1lBQzVCLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdkI7SUFDSCxDQUFDO0lBRWUsY0FBYztRQUM1QixNQUFNLFdBQVcsR0FBZ0IsSUFBSSxxREFBVyxFQUFFLENBQUM7UUFDbkQsS0FBSyxJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQy9CLFdBQVcsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7U0FDcEQ7UUFDRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0lBRWUsV0FBVztRQUN6QixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBRU0sZUFBZSxDQUFDLE9BQWdCLEVBQUUsU0FBa0I7UUFDekQsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDbEMsSUFBSSxTQUFTLEVBQUU7WUFDYixLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQy9CLElBQUksR0FBRyxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDO29CQUFFLE9BQU8sSUFBSSxDQUFDO2FBQzFEO1lBQ0QsT0FBTyxLQUFLLENBQUM7U0FDZDthQUFNO1lBQ0wsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUMvQixJQUFJLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDO29CQUFFLE9BQU8sS0FBSyxDQUFDO2FBQzVEO1lBQ0QsT0FBTyxJQUFJLENBQUM7U0FDYjtJQUNILENBQUM7SUFFZSxTQUFTLENBQUMsR0FBUTtRQUVoQyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFBRSxPQUFPLElBQUksQ0FBQztRQUVqQyxJQUFJLEdBQUcsR0FBd0IsSUFBSSxDQUFDO1FBQ3BDLEtBQUssTUFBTSxLQUFLLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQyxNQUFNLFlBQVksR0FBd0IsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvRCxJQUFJLFlBQVksRUFBRTtnQkFDaEIsSUFBSSxDQUFDLEdBQUc7b0JBQUUsR0FBRyxHQUFHLFlBQVksQ0FBQztxQkFDeEIsSUFBSSxZQUFZLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJO29CQUFFLEdBQUcsR0FBRyxZQUFZLENBQUM7YUFDM0Q7U0FDRjtRQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9ncm91cC50cz8zNjRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hdDQsIG1hdDQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IE1hdGVyaWFsTmFtZSB9IGZyb20gXCIuLi9tYXRlcmlhbHMvbWF0ZXJpYWxcIjtcbmltcG9ydCB7IEJvdW5kaW5nQm94IH0gZnJvbSBcIi4vYm91bmRpbmdCb3hcIjtcbmltcG9ydCB7IEZydXN0dW0gfSBmcm9tIFwiLi9mcnVzdHVtXCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuL3JheVwiO1xuXG5leHBvcnQgY2xhc3MgR3JvdXAgZXh0ZW5kcyBHZW9tZXRyeSB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjaGlsZHJlbjogR2VvbWV0cnlbXSxcbiAgICBwYXJlbnQ6IEdlb21ldHJ5IHwgbnVsbCA9IG51bGwsXG4gICAgbW9kZWw6IE1hdDQgPSBtYXQ0LmlkZW50aXR5KCksXG4gICAgbWF0ZXJpYWw6IE1hdGVyaWFsTmFtZSB8IG51bGwgPSBudWxsXG4gICkge1xuICAgIHN1cGVyKHBhcmVudCwgbW9kZWwsIG1hdGVyaWFsKTtcbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGNoaWxkcmVuKSB7XG4gICAgICBjaGlsZC5zZXRQYXJlbnQodGhpcyk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldEJvdW5kaW5nQm94KCk6IEJvdW5kaW5nQm94IHtcbiAgICBjb25zdCBib3VuZGluZ0JveDogQm91bmRpbmdCb3ggPSBuZXcgQm91bmRpbmdCb3goKTtcbiAgICBmb3IgKGxldCBjaGlsZCBvZiB0aGlzLmNoaWxkcmVuKSB7XG4gICAgICBib3VuZGluZ0JveC5hZGRCb3VuZGluZ0JveChjaGlsZC5nZXRCb3VuZGluZ0JveCgpKTtcbiAgICB9XG4gICAgcmV0dXJuIGJvdW5kaW5nQm94O1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldFR5cGVOYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwiR3JvdXBcIjtcbiAgfVxuXG4gIHB1YmxpYyBpc1dpdGhpbkZydXN0dW0oZnJ1c3R1bTogRnJ1c3R1bSwgaW5jbHVzaXZlOiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgaWYgKHRoaXMuaXNIaWRkZW4oKSkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChpbmNsdXNpdmUpIHtcbiAgICAgIGZvciAoY29uc3QgZ2VvIG9mIHRoaXMuY2hpbGRyZW4pIHtcbiAgICAgICAgaWYgKGdlby5pc1dpdGhpbkZydXN0dW0oZnJ1c3R1bSwgaW5jbHVzaXZlKSkgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAoY29uc3QgZ2VvIG9mIHRoaXMuY2hpbGRyZW4pIHtcbiAgICAgICAgaWYgKCFnZW8uaXNXaXRoaW5GcnVzdHVtKGZydXN0dW0sIGluY2x1c2l2ZSkpIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvdmVycmlkZSBpbnRlcnNlY3QocmF5OiBSYXkpOiBJbnRlcnNlY3Rpb24gfCBudWxsIHtcblxuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBudWxsO1xuXG4gICAgdmFyIHJlczogSW50ZXJzZWN0aW9uIHwgbnVsbCA9IG51bGw7XG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiB0aGlzLmNoaWxkcmVuKSB7XG4gICAgICBjb25zdCBpbnRlcnNlY3Rpb246IEludGVyc2VjdGlvbiB8IG51bGwgPSBjaGlsZC5pbnRlcnNlY3QocmF5KTtcbiAgICAgIGlmIChpbnRlcnNlY3Rpb24pIHtcbiAgICAgICAgaWYgKCFyZXMpIHJlcyA9IGludGVyc2VjdGlvbjtcbiAgICAgICAgZWxzZSBpZiAoaW50ZXJzZWN0aW9uLnRpbWUgPCByZXMudGltZSkgcmVzID0gaW50ZXJzZWN0aW9uO1xuICAgICAgfVxuICAgIH1cbiAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgIHJldHVybiByZXM7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/group.ts\n");

/***/ }),

/***/ "./src/geometry/instancedMesh.ts":
/*!***************************************!*\
  !*** ./src/geometry/instancedMesh.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstancedMesh: () => (/* binding */ InstancedMesh)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renterMeshInstanced */ \"./src/render/renterMeshInstanced.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _instancedMeshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instancedMeshBoundingBoxHeirarchy */ \"./src/geometry/instancedMeshBoundingBoxHeirarchy.ts\");\n\n\n\n\n\n\nclass InstancedMesh extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(parent, verts, normals, indices, transforms, model, material = null) {\n        super(parent, model, material);\n        this.verts = verts;\n        this.normals = normals;\n        this.indices = indices;\n        this.transforms = transforms;\n        const vertexBuffer = [];\n        for (let i = 0; i < verts.length; i++) {\n            vertexBuffer.push(...verts[i], 1, ...normals[i], 0);\n        }\n        const renderMeshObj = new _render_renterMeshInstanced__WEBPACK_IMPORTED_MODULE_1__.RenderMeshInstanced(this, new Float32Array(vertexBuffer), new Int32Array(this.indices), transforms);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderMeshInstanced(renderMeshObj);\n        this.renderMesh = renderMeshObj.getRenderID();\n        this.boundingBoxHeirarchy = new _instancedMeshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__.InstancedMeshBoundingBoxHeirarchy(this);\n    }\n    getTypeName() {\n        return \"Instanced Mesh\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        throw new Error(\"Method not implemented.\");\n    }\n    getInstanceCount() {\n        return this.transforms.length;\n    }\n    getVerts() {\n        return this.verts;\n    }\n    getIndices() {\n        return this.indices;\n    }\n    getBoundingBoxInstance(instance) {\n        const bb = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        const transform = this.transforms[instance];\n        for (let vert of this.verts) {\n            bb.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.transformMat4(vert, transform));\n        }\n        return bb;\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        return this.boundingBoxHeirarchy.intersect(ray, this.verts);\n    }\n    getTransform(intance) {\n        return this.transforms[intance];\n    }\n    destroy() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeMeshInstanced(this.renderMesh);\n    }\n    getBoundingBox() {\n        const boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        for (let instance = 0; instance < this.transforms.length; instance++) {\n            const transform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.multiply(this.getModelRecursive(), this.transforms[instance]);\n            for (let vert of this.verts) {\n                boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.transformMat4(transform, vert));\n            }\n        }\n        return boundingBox;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1osMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVNLGNBQWM7UUFDbkIsTUFBTSxXQUFXLEdBQWdCLElBQUkscURBQVcsRUFBRSxDQUFDO1FBQ25ELEtBQUssSUFBSSxRQUFRLEdBQUcsQ0FBQyxFQUFFLFFBQVEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsRUFBRTtZQUNwRSxNQUFNLFNBQVMsR0FBUyw2Q0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDM0YsS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUMzQixXQUFXLENBQUMsT0FBTyxDQUFDLDZDQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQzFEO1NBQ0Y7UUFDRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9pbnN0YW5jZWRNZXNoLnRzPzVjYmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0NCwgTWF0NCwgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCI7XG5pbXBvcnQgeyBNYXRlcmlhbE5hbWUgfSBmcm9tIFwiLi4vbWF0ZXJpYWxzL21hdGVyaWFsXCI7XG5pbXBvcnQgeyBSZW5kZXJNZXNoSW5zdGFuY2VkIH0gZnJvbSBcIi4uL3JlbmRlci9yZW50ZXJNZXNoSW5zdGFuY2VkXCI7XG5pbXBvcnQgeyBSZW5kZXJJRCB9IGZyb20gXCIuLi9zY2VuZS9zY2VuZVwiO1xuaW1wb3J0IHsgQm91bmRpbmdCb3ggfSBmcm9tIFwiLi9ib3VuZGluZ0JveFwiO1xuaW1wb3J0IHsgRnJ1c3R1bSB9IGZyb20gXCIuL2ZydXN0dW1cIjtcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4vZ2VvbWV0cnlcIjtcbmltcG9ydCB7IEluc3RhbmNlZE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeSB9IGZyb20gXCIuL2luc3RhbmNlZE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeVwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4vaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi9yYXlcIjtcblxuXG5cbmV4cG9ydCBjbGFzcyBJbnN0YW5jZWRNZXNoIGV4dGVuZHMgR2VvbWV0cnkge1xuXG4gIHByaXZhdGUgcmVuZGVyTWVzaDogUmVuZGVySUQ7XG4gIHByaXZhdGUgYm91bmRpbmdCb3hIZWlyYXJjaHk6IEluc3RhbmNlZE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwYXJlbnQ6IEdlb21ldHJ5IHwgbnVsbCxcbiAgICBwcml2YXRlIHZlcnRzOiBWZWMzW10sXG4gICAgcHJpdmF0ZSBub3JtYWxzOiBWZWMzW10sXG4gICAgcHJpdmF0ZSBpbmRpY2VzOiBudW1iZXJbXSxcbiAgICBwcml2YXRlIHRyYW5zZm9ybXM6IE1hdDRbXSxcbiAgICBtb2RlbD86IE1hdDQsXG4gICAgbWF0ZXJpYWw6IE1hdGVyaWFsTmFtZSB8IG51bGwgPSBudWxsXG4gICkge1xuICAgIHN1cGVyKHBhcmVudCwgbW9kZWwsIG1hdGVyaWFsKTtcblxuICAgIGNvbnN0IHZlcnRleEJ1ZmZlcjogbnVtYmVyW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZlcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2ZXJ0ZXhCdWZmZXIucHVzaCguLi52ZXJ0c1tpXSwgMSwgLi4ubm9ybWFsc1tpXSwgMCk7XG4gICAgfVxuICAgIGNvbnN0IHJlbmRlck1lc2hPYmo6IFJlbmRlck1lc2hJbnN0YW5jZWQgPSBuZXcgUmVuZGVyTWVzaEluc3RhbmNlZChcbiAgICAgIHRoaXMsXG4gICAgICBuZXcgRmxvYXQzMkFycmF5KHZlcnRleEJ1ZmZlciksXG4gICAgICBuZXcgSW50MzJBcnJheSh0aGlzLmluZGljZXMpLFxuICAgICAgdHJhbnNmb3Jtc1xuICAgICk7XG4gICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5hZGRSZW5kZXJNZXNoSW5zdGFuY2VkKHJlbmRlck1lc2hPYmopO1xuICAgIHRoaXMucmVuZGVyTWVzaCA9IHJlbmRlck1lc2hPYmouZ2V0UmVuZGVySUQoKTtcblxuICAgIHRoaXMuYm91bmRpbmdCb3hIZWlyYXJjaHkgPSBuZXcgSW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5KHRoaXMpO1xuICB9XG4gIHB1YmxpYyBvdmVycmlkZSBnZXRUeXBlTmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBcIkluc3RhbmNlZCBNZXNoXCI7XG4gIH1cblxuICBwdWJsaWMgaXNXaXRoaW5GcnVzdHVtKGZydXN0dW06IEZydXN0dW0sIGluY2x1c2l2ZTogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBmYWxzZTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXRob2Qgbm90IGltcGxlbWVudGVkLlwiKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRJbnN0YW5jZUNvdW50KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNmb3Jtcy5sZW5ndGg7XG4gIH1cblxuICBwdWJsaWMgZ2V0VmVydHMoKTogVmVjM1tdIHtcbiAgICByZXR1cm4gdGhpcy52ZXJ0cztcbiAgfVxuXG4gIHB1YmxpYyBnZXRJbmRpY2VzKCk6IG51bWJlcltdIHtcbiAgICByZXR1cm4gdGhpcy5pbmRpY2VzO1xuICB9XG5cbiAgcHVibGljIGdldEJvdW5kaW5nQm94SW5zdGFuY2UoaW5zdGFuY2U6IG51bWJlcik6IEJvdW5kaW5nQm94IHtcbiAgICBjb25zdCBiYjogQm91bmRpbmdCb3ggPSBuZXcgQm91bmRpbmdCb3goKTtcbiAgICBjb25zdCB0cmFuc2Zvcm06IE1hdDQgPSB0aGlzLnRyYW5zZm9ybXNbaW5zdGFuY2VdO1xuICAgIGZvciAobGV0IHZlcnQgb2YgdGhpcy52ZXJ0cykge1xuICAgICAgYmIuYWRkVmVjMyh2ZWMzLnRyYW5zZm9ybU1hdDQodmVydCwgdHJhbnNmb3JtKSk7XG4gICAgfVxuICAgIHJldHVybiBiYjtcbiAgfVxuXG4gIHB1YmxpYyBpbnRlcnNlY3QocmF5OiBSYXkpOiBJbnRlcnNlY3Rpb24gfCBudWxsIHtcbiAgICBpZiAodGhpcy5pc0hpZGRlbigpKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeS5pbnRlcnNlY3QocmF5LCB0aGlzLnZlcnRzKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRUcmFuc2Zvcm0oaW50YW5jZTogbnVtYmVyKTogTWF0NCB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNmb3Jtc1tpbnRhbmNlXTtcbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQge1xuICAgIElOU1RBTkNFLmdldFNjZW5lKCkucmVtb3ZlTWVzaEluc3RhbmNlZCh0aGlzLnJlbmRlck1lc2gpO1xuICB9XG5cbiAgcHVibGljIGdldEJvdW5kaW5nQm94KCk6IEJvdW5kaW5nQm94IHtcbiAgICBjb25zdCBib3VuZGluZ0JveDogQm91bmRpbmdCb3ggPSBuZXcgQm91bmRpbmdCb3goKTtcbiAgICBmb3IgKGxldCBpbnN0YW5jZSA9IDA7IGluc3RhbmNlIDwgdGhpcy50cmFuc2Zvcm1zLmxlbmd0aDsgaW5zdGFuY2UrKykge1xuICAgICAgY29uc3QgdHJhbnNmb3JtOiBNYXQ0ID0gbWF0NC5tdWx0aXBseSh0aGlzLmdldE1vZGVsUmVjdXJzaXZlKCksIHRoaXMudHJhbnNmb3Jtc1tpbnN0YW5jZV0pO1xuICAgICAgZm9yIChsZXQgdmVydCBvZiB0aGlzLnZlcnRzKSB7XG4gICAgICAgIGJvdW5kaW5nQm94LmFkZFZlYzModmVjMy50cmFuc2Zvcm1NYXQ0KHRyYW5zZm9ybSwgdmVydCkpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYm91bmRpbmdCb3g7XG4gIH1cblxufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/instancedMesh.ts\n");

/***/ }),

/***/ "./src/geometry/instancedMeshBoundingBoxHeirarchy.ts":
/*!***********************************************************!*\
  !*** ./src/geometry/instancedMeshBoundingBoxHeirarchy.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstancedMeshBoundingBoxHeirarchy: () => (/* binding */ InstancedMeshBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./meshBoundingBoxHeirarchy */ \"./src/geometry/meshBoundingBoxHeirarchy.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\n// shold probably transform ray\nclass InstancedMeshBoundingBoxHeirarchyNode {\n    constructor(id, heirarchy, instances, boundingBoxes, depth = 0) {\n        this.id = id;\n        this.heirarchy = heirarchy;\n        this.depth = depth;\n        this.setup(instances, boundingBoxes);\n    }\n    setup(instances, boundingBoxes) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        var averageCenter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 0);\n        for (let bb of boundingBoxes) {\n            this.boundingBox.addBoundingBox(bb);\n            averageCenter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(averageCenter, bb.getCenter());\n        }\n        averageCenter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(averageCenter, 1 / boundingBoxes.length);\n        if (instances.length <= InstancedMeshBoundingBoxHeirarchy.MAX_INSTANCES_PER_LEAF) {\n            // leaf\n            this.instances = instances;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // non leaf\n            this.instances = null;\n            const child1Indices = [];\n            const child2Indices = [];\n            for (let i = 0; i < instances.length; i++) {\n                const bbCenter = boundingBoxes[i].getCenter();\n                if (bbCenter[this.axis] < averageCenter[this.axis]) {\n                    child1Indices.push(instances[i]);\n                }\n                else {\n                    child2Indices.push(instances[i]);\n                }\n            }\n            this.child1 = new InstancedMeshBoundingBoxHeirarchyNode(this.id, this.heirarchy, child1Indices, boundingBoxes, this.depth + 1);\n            this.child2 = new InstancedMeshBoundingBoxHeirarchyNode(this.id, this.heirarchy, child2Indices, boundingBoxes, this.depth + 1);\n        }\n    }\n    isWithinFrustum(frustum, inclusive) {\n        throw new Error(\"Method not implemented.\");\n    }\n    intersect(ray, verts) {\n        if (ray.intersectBoundingBox(this.boundingBox) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            for (let i of this.instances) {\n                var t = this.heirarchy.intersectInstance(ray, i);\n                if (t !== null) {\n                    if (res === null)\n                        res = t;\n                    else\n                        res = (res.time < t.time) ? res : t;\n                }\n            }\n            return res;\n        }\n        else {\n            const t1 = this.child1.intersect(ray, verts);\n            const t2 = this.child2.intersect(ray, verts);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return (t1.time < t2.time) ? t1 : t2;\n        }\n    }\n    isLeaf() {\n        return this.instances !== null;\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.instances)\n            str += `${this.instances.length}instances`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n}\n// TODO: think about subid...\nclass InstancedMeshBoundingBoxHeirarchy {\n    constructor(mesh) {\n        this.mesh = mesh;\n        this.meshBBH = new _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_1__.MeshBoundingBoxHeirarchy(mesh, mesh.getVerts(), mesh.getIndices());\n        const instances = [];\n        const bbs = [];\n        for (let i = 0; i < mesh.getInstanceCount(); i++) {\n            instances.push(i);\n            bbs.push(mesh.getBoundingBoxInstance(i));\n        }\n        this.root = new InstancedMeshBoundingBoxHeirarchyNode(mesh.getID(), this, instances, bbs);\n    }\n    print() {\n        console.log(\"========Instanced-Mesh-BBH========\");\n        this.root.print();\n    }\n    firstIntersection(ray) {\n        const model = this.mesh.getModelRecursive();\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(model));\n        const res = this.root.intersect(objectSpaceRay, this.mesh.getVerts());\n        res === null || res === void 0 ? void 0 : res.transform(model);\n        return res;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        const model = this.mesh.getModelRecursive();\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(model));\n        const res = this.root.isWithinFrustum(frustum, inclusive);\n        frustum.transform(model);\n        return res;\n    }\n    intersect(ray, verts) {\n        return this.root.intersect(ray, verts);\n    }\n    intersectInstance(ray, instance) {\n        const model = this.mesh.getTransform(instance);\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(model));\n        const res = this.meshBBH.firstIntersection(objectSpaceRay);\n        res === null || res === void 0 ? void 0 : res.transform(model);\n        return res;\n    }\n    isWithinFrustumInstance(frustum, inclusive, instance) {\n        const model = this.mesh.getTransform(instance);\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(model));\n        const res = this.meshBBH.isWithinFrustum(frustum, inclusive);\n        frustum.transform(model);\n        return res;\n    }\n}\nInstancedMeshBoundingBoxHeirarchy.MAX_INSTANCES_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvaW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFEO0FBRVQ7QUFJMEI7QUFDMUM7QUFFNUIsSUFBSyxJQUlKO0FBSkQsV0FBSyxJQUFJO0lBQ1AseUJBQUs7SUFDTCx5QkFBSztJQUNMLHlCQUFLO0FBQ1AsQ0FBQyxFQUpJLElBQUksS0FBSixJQUFJLFFBSVI7QUFFRCwrQkFBK0I7QUFFL0IsTUFBTSxxQ0FBcUM7SUFRekMsWUFDVSxFQUFZLEVBQ1osU0FBNEMsRUFDcEQsU0FBbUIsRUFDbkIsYUFBNEIsRUFDcEIsUUFBZ0IsQ0FBQztRQUpqQixPQUFFLEdBQUYsRUFBRSxDQUFVO1FBQ1osY0FBUyxHQUFULFNBQVMsQ0FBbUM7UUFHNUMsVUFBSyxHQUFMLEtBQUssQ0FBWTtRQUV6QixJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRU8sS0FBSyxDQUFDLFNBQW1CLEVBQUUsYUFBNEI7UUFFN0QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUUzQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUkscURBQVcsRUFBRSxDQUFDO1FBQ3JDLElBQUksYUFBYSxHQUFTLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDL0MsS0FBSyxJQUFJLEVBQUUsSUFBSSxhQUFhLEVBQUU7WUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDcEMsYUFBYSxHQUFHLDZDQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztTQUN6RDtRQUNELGFBQWEsR0FBRyw2Q0FBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsQ0FBQyxHQUFHLGFBQWEsQ0FB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ekIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDOztBQXpEc0Isd0RBQXNCLEdBQUcsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvaW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5LnRzPzZiZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0NCwgTWF0NCwgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgT2JqZWN0SUQgfSBmcm9tIFwiLi4vc2NlbmUvc2NlbmVcIjtcbmltcG9ydCB7IEJvdW5kaW5nQm94IH0gZnJvbSBcIi4vYm91bmRpbmdCb3hcIjtcbmltcG9ydCB7IEZydXN0dW0gfSBmcm9tIFwiLi9mcnVzdHVtXCI7XG5pbXBvcnQgeyBJbnN0YW5jZWRNZXNoIH0gZnJvbSBcIi4vaW5zdGFuY2VkTWVzaFwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4vaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBNZXNoQm91bmRpbmdCb3hIZWlyYXJjaHkgfSBmcm9tIFwiLi9tZXNoQm91bmRpbmdCb3hIZWlyYXJjaHlcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuL3JheVwiO1xuXG5lbnVtIEF4aXMge1xuICBYID0gMCxcbiAgWSA9IDEsXG4gIFogPSAyLFxufVxuXG4vLyBzaG9sZCBwcm9iYWJseSB0cmFuc2Zvcm0gcmF5XG5cbmNsYXNzIEluc3RhbmNlZE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeU5vZGUge1xuXG4gIHByaXZhdGUgaW5zdGFuY2VzITogbnVtYmVyW10gfCBudWxsO1xuICBwcml2YXRlIGNoaWxkMSE6IEluc3RhbmNlZE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeU5vZGUgfCBudWxsO1xuICBwcml2YXRlIGNoaWxkMiE6IEluc3RhbmNlZE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeU5vZGUgfCBudWxsO1xuICBwcml2YXRlIGJvdW5kaW5nQm94ITogQm91bmRpbmdCb3g7XG4gIHByaXZhdGUgYXhpcyE6IEF4aXM7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBpZDogT2JqZWN0SUQsXG4gICAgcHJpdmF0ZSBoZWlyYXJjaHk6IEluc3RhbmNlZE1lc2hCb3VuZGluZ0JveEhlaXJhcmNoeSxcbiAgICBpbnN0YW5jZXM6IG51bWJlcltdLFxuICAgIGJvdW5kaW5nQm94ZXM6IEJvdW5kaW5nQm94W10sXG4gICAgcHJpdmF0ZSBkZXB0aDogbnVtYmVyID0gMFxuICApIHtcbiAgICB0aGlzLnNldHVwKGluc3RhbmNlcywgYm91bmRpbmdCb3hlcyk7XG4gIH1cblxuICBwcml2YXRlIHNldHVwKGluc3RhbmNlczogbnVtYmVyW10sIGJvdW5kaW5nQm94ZXM6IEJvdW5kaW5nQm94W10pOiB2b2lkIHtcblxuICAgIHRoaXMuYXhpcyA9IHRoaXMuZGVwdGggJSAzO1xuXG4gICAgdGhpcy5ib3VuZGluZ0JveCA9IG5ldyBCb3VuZGluZ0JveCgpO1xuICAgIHZhciBhdmVyYWdlQ2VudGVyOiBWZWMzID0gdmVjMy5jcmVhdGUoMCwgMCwgMCk7XG4gICAgZm9yIChsZXQgYmIgb2YgYm91bmRpbmdCb3hlcykge1xuICAgICAgdGhpcy5ib3VuZGluZ0JveC5hZGRCb3VuZGluZ0JveChiYik7XG4gICAgICBhdmVyYWdlQ2VudGVyID0gdmVjMy5hZGQoYXZlcmFnZUNlbnRlciwgYmIuZ2V0Q2VudGVyKCkpO1xuICAgIH1cbiAgICBhdmVyYWdlQ2VudGVyID0gdmVjMy5zY2FsZShhdmVyYWdlQ2VudGVyLCAxIC8gYm91bmRpbmdCb3hlcy5sZW5ndGgpO1xuXG5cbiAgICBpZiAoaW5zdGFuY2VzLmxlbmd0aCA8PSBJbnN0YW5jZWRNZXNoQm91bmRpbmdCb3hIZWlyYXJjaHkuTUFYX0lOU1RBTkNFU19QRVJfTEVBRikge1xuICAgICAgLy8gbGVhZlxuICAgICAgdGhpcy5pbnN0YW5jZXMgPSBpbnN0YW5jZXM7XG4gICAgICB0aGlzLmNoaWxkMSA9IG51bGw7XG4gICAgICB0aGlzLmNoaWxkMiA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG5vbiBsZWFmXG4gICAgICB0aGlzLmluc3RhbmNlcyA9IG51bGw7XG4gICAgICBjb25zdCBjaGlsZDFJbmRpY2VzOiBudW1iZXJbXSA9IFtdO1xuICAgICAgY29uc3QgY2hpbGQySW5kaWNlczogbnVtYmVyW10gPSBbXTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5zdGFuY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGJiQ2VudGVyID0gYm91bmRpbmdCb3hlc1tpXS5nZXRDZW50ZXIoKTtcbiAgICAgICAgaWYgKGJiQ2VudGVyW3RoaXMuYXhpc10gPCBhdmVyYWdlQ2VudGVyW3RoaXMuYXhpc10pIHtcbiAgICAgICAgICBjaGlsZDFJbmRpY2VzLnB1c2goaW5zdGFuY2VzW2ldKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGlsZDJJbmRpY2VzLnB1c2goaW5zdGFuY2VzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy5jaGlsZDEgPSBuZXcgSW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5Tm9kZSh0aGlzLmlkLCB0aGlzLmhlaXJhcmNoeSwgY2hpbGQxSW5kaWNlcywgYm91bmRpbmdCb3hlcywgdGhpcy5kZXB0aCArIDEpO1xuICAgICAgdGhpcy5jaGlsZDIgPSBuZXcgSW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5Tm9kZSh0aGlzLmlkLCB0aGlzLmhlaXJhcmNoeSwgY2hpbGQySW5kaWNlcywgYm91bmRpbmdCb3hlcywgdGhpcy5kZXB0aCArIDEpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBpc1dpdGhpbkZydXN0dW0oZnJ1c3R1bTogRnJ1c3R1bSwgaW5jbHVzaXZlOiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XG4gIH1cblxuICBwdWJsaWMgaW50ZXJzZWN0KHJheTogUmF5LCB2ZXJ0czogVmVjM1tdKTogSW50ZXJzZWN0aW9uIHwgbnVsbCB7XG5cbiAgICBpZiAocmF5LmludGVyc2VjdEJvdW5kaW5nQm94KHRoaXMuYm91bmRpbmdCb3gpID09PSBudWxsKSByZXR1cm4gbnVsbDtcblxuICAgIGlmICh0aGlzLmlzTGVhZigpKSB7XG4gICAgICB2YXIgcmVzOiBJbnRlcnNlY3Rpb24gfCBudWxsID0gbnVsbDtcbiAgICAgIGZvciAobGV0IGkgb2YgdGhpcy5pbnN0YW5jZXMhKSB7XG4gICAgICAgIHZhciB0OiBJbnRlcnNlY3Rpb24gfCBudWxsID0gdGhpcy5oZWlyYXJjaHkuaW50ZXJzZWN0SW5zdGFuY2UocmF5LCBpKTtcbiAgICAgICAgaWYgKHQgIT09IG51bGwpIHtcbiAgICAgICAgICBpZiAocmVzID09PSBudWxsKSByZXMgPSB0O1xuICAgICAgICAgIGVsc2UgcmVzID0gKHJlcy50aW1lIDwgdC50aW1lKSA/IHJlcyA6IHQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHQxID0gdGhpcy5jaGlsZDEhLmludGVyc2VjdChyYXksIHZlcnRzKTtcbiAgICAgIGNvbnN0IHQyID0gdGhpcy5jaGlsZDIhLmludGVyc2VjdChyYXksIHZlcnRzKTtcbiAgICAgIGlmICh0MSA9PT0gbnVsbCkgcmV0dXJuIHQyO1xuICAgICAgaWYgKHQyID09PSBudWxsKSByZXR1cm4gdDE7XG4gICAgICByZXR1cm4gKHQxLnRpbWUgPCB0Mi50aW1lKSA/IHQxIDogdDI7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGlzTGVhZigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pbnN0YW5jZXMgIT09IG51bGw7XG4gIH1cblxuICBwdWJsaWMgcHJpbnQoKTogdm9pZCB7XG4gICAgbGV0IHN0cjogc3RyaW5nID0gXCJcIjtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZGVwdGg7IGkrKykgc3RyICs9IFwiLT5cIjtcbiAgICBpZiAodGhpcy5pbnN0YW5jZXMpIHN0ciArPSBgJHt0aGlzLmluc3RhbmNlcy5sZW5ndGh9aW5zdGFuY2VzYDtcbiAgICBlbHNlIHN0ciArPSBcIm5vZGVcIjtcbiAgICBjb25zb2xlLmxvZyhzdHIpO1xuICAgIHRoaXMuY2hpbGQxPy5wcmludCgpO1xuICAgIHRoaXMuY2hpbGQyPy5wcmludCgpO1xuICB9XG5cbn1cblxuXG4vLyBUT0RPOiB0aGluayBhYm91dCBzdWJpZC4uLlxuXG5leHBvcnQgY2xhc3MgSW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5IHtcblxuICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE1BWF9JTlNUQU5DRVNfUEVSX0xFQUYgPSA1O1xuXG4gIHByaXZhdGUgcm9vdDogSW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5Tm9kZTtcbiAgcHJpdmF0ZSBtZXNoQkJIOiBNZXNoQm91bmRpbmdCb3hIZWlyYXJjaHk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtZXNoOiBJbnN0YW5jZWRNZXNoKSB7XG5cbiAgICB0aGlzLm1lc2hCQkggPSBuZXcgTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5KG1lc2gsIG1lc2guZ2V0VmVydHMoKSwgbWVzaC5nZXRJbmRpY2VzKCkpO1xuXG4gICAgY29uc3QgaW5zdGFuY2VzOiBudW1iZXJbXSA9IFtdO1xuICAgIGNvbnN0IGJiczogQm91bmRpbmdCb3hbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWVzaC5nZXRJbnN0YW5jZUNvdW50KCk7IGkrKykge1xuICAgICAgaW5zdGFuY2VzLnB1c2goaSk7XG4gICAgICBiYnMucHVzaChtZXNoLmdldEJvdW5kaW5nQm94SW5zdGFuY2UoaSkpO1xuICAgIH1cbiAgICB0aGlzLnJvb3QgPSBuZXcgSW5zdGFuY2VkTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5Tm9kZShtZXNoLmdldElEKCksIHRoaXMsIGluc3RhbmNlcywgYmJzKTtcbiAgfVxuXG4gIHB1YmxpYyBwcmludCgpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhcIj09PT09PT09SW5zdGFuY2VkLU1lc2gtQkJIPT09PT09PT1cIik7XG4gICAgdGhpcy5yb290LnByaW50KCk7XG4gIH1cblxuICBwdWJsaWMgZmlyc3RJbnRlcnNlY3Rpb24ocmF5OiBSYXkpOiBJbnRlcnNlY3Rpb24gfCBudWxsIHtcbiAgICBjb25zdCBtb2RlbDogTWF0NCA9IHRoaXMubWVzaC5nZXRNb2RlbFJlY3Vyc2l2ZSgpO1xuICAgIGNvbnN0IG9iamVjdFNwYWNlUmF5OiBSYXkgPSBSYXkudHJhbnNmb3JtKHJheSwgbWF0NC5pbnZlcnNlKG1vZGVsKSk7XG4gICAgY29uc3QgcmVzOiBJbnRlcnNlY3Rpb24gfCBudWxsID0gdGhpcy5yb290LmludGVyc2VjdChvYmplY3RTcGFjZVJheSwgdGhpcy5tZXNoLmdldFZlcnRzKCkpO1xuICAgIHJlcz8udHJhbnNmb3JtKG1vZGVsKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cbiAgcHVibGljIGlzV2l0aGluRnJ1c3R1bShmcnVzdHVtOiBGcnVzdHVtLCBpbmNsdXNpdmU6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICBjb25zdCBtb2RlbDogTWF0NCA9IHRoaXMubWVzaC5nZXRNb2RlbFJlY3Vyc2l2ZSgpO1xuICAgIGZydXN0dW0udHJhbnNmb3JtKG1hdDQuaW52ZXJzZShtb2RlbCkpO1xuICAgIGNvbnN0IHJlczogYm9vbGVhbiA9IHRoaXMucm9vdC5pc1dpdGhpbkZydXN0dW0oZnJ1c3R1bSwgaW5jbHVzaXZlKTtcbiAgICBmcnVzdHVtLnRyYW5zZm9ybShtb2RlbCk7XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuXG4gIHB1YmxpYyBpbnRlcnNlY3QocmF5OiBSYXksIHZlcnRzOiBWZWMzW10pOiBJbnRlcnNlY3Rpb24gfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy5yb290LmludGVyc2VjdChyYXksIHZlcnRzKTtcbiAgfVxuXG4gIHB1YmxpYyBpbnRlcnNlY3RJbnN0YW5jZShyYXk6IFJheSwgaW5zdGFuY2U6IG51bWJlcik6IEludGVyc2VjdGlvbiB8IG51bGwge1xuICAgIGNvbnN0IG1vZGVsOiBNYXQ0ID0gdGhpcy5tZXNoLmdldFRyYW5zZm9ybShpbnN0YW5jZSk7XG4gICAgY29uc3Qgb2JqZWN0U3BhY2VSYXk6IFJheSA9IFJheS50cmFuc2Zvcm0ocmF5LCBtYXQ0LmludmVyc2UobW9kZWwpKTtcbiAgICBjb25zdCByZXM6IEludGVyc2VjdGlvbiB8IG51bGwgPSB0aGlzLm1lc2hCQkguZmlyc3RJbnRlcnNlY3Rpb24ob2JqZWN0U3BhY2VSYXkpO1xuICAgIHJlcz8udHJhbnNmb3JtKG1vZGVsKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cbiAgcHVibGljIGlzV2l0aGluRnJ1c3R1bUluc3RhbmNlKGZydXN0dW06IEZydXN0dW0sIGluY2x1c2l2ZTogYm9vbGVhbiwgaW5zdGFuY2U6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIGNvbnN0IG1vZGVsOiBNYXQ0ID0gdGhpcy5tZXNoLmdldFRyYW5zZm9ybShpbnN0YW5jZSk7XG4gICAgZnJ1c3R1bS50cmFuc2Zvcm0obWF0NC5pbnZlcnNlKG1vZGVsKSk7XG4gICAgY29uc3QgcmVzOiBib29sZWFuID0gdGhpcy5tZXNoQkJILmlzV2l0aGluRnJ1c3R1bShmcnVzdHVtLCBpbmNsdXNpdmUpO1xuICAgIGZydXN0dW0udHJhbnNmb3JtKG1vZGVsKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/instancedMeshBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/intersection.ts":
/*!**************************************!*\
  !*** ./src/geometry/intersection.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Intersection: () => (/* binding */ Intersection)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass Intersection {\n    constructor(time, description, object, point, dist, screenSpaceDist) {\n        this.time = time;\n        this.description = description;\n        this.object = object;\n        this.point = point;\n        this.dist = dist;\n        this.screenSpaceDist = screenSpaceDist;\n    }\n    transform(transform) {\n        // TODO: verify this\n        const scale = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.mat4.getScaling(transform);\n        const scaleFactor = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.length(scale) / Math.sqrt(3);\n        this.time *= scaleFactor;\n        this.dist *= scaleFactor;\n        this.screenSpaceDist /= scaleFactor;\n        this.point = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.transformMat4(this.point, transform);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvaW50ZXJzZWN0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBRzlDLE1BQU0sWUFBWTtJQUd2QixZQUNTLElBQVksRUFDWixXQUFtQixFQUNuQixNQUFnQixFQUNoQixLQUFXLEVBQ1gsSUFBWSxFQUNaLGVBQXVCO1FBTHZCLFNBQUksR0FBSixJQUFJLENBQVE7UUFDWixnQkFBVyxHQUFYLFdBQVcsQ0FBUTtRQUNuQixXQUFNLEdBQU4sTUFBTSxDQUFVO1FBQ2hCLFVBQUssR0FBTCxLQUFLLENBQU07UUFDWCxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osb0JBQWUsR0FBZixlQUFlLENBQVE7SUFDNUIsQ0FBQztJQUVFLFNBQVMsQ0FBQyxTQUFlO1FBQzlCLG9CQUFvQjtRQUNwQixNQUFNLEtBQUssR0FBUyw2Q0FBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMvQyxNQUFNLFdBQVcsR0FBVyw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxJQUFJLElBQUksV0FBVyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxJQUFJLElBQUksV0FBVyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxlQUFlLElBQUksV0FBVyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxLQUFLLEdBQUcsNkNBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN6RCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9pbnRlcnNlY3Rpb24udHM/YWU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBPYmplY3RJRCB9IGZyb20gXCIuLi9zY2VuZS9zY2VuZVwiO1xuXG5leHBvcnQgY2xhc3MgSW50ZXJzZWN0aW9uIHtcblxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyB0aW1lOiBudW1iZXIsXG4gICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgcHVibGljIG9iamVjdDogT2JqZWN0SUQsXG4gICAgcHVibGljIHBvaW50OiBWZWMzLFxuICAgIHB1YmxpYyBkaXN0OiBudW1iZXIsXG4gICAgcHVibGljIHNjcmVlblNwYWNlRGlzdDogbnVtYmVyXG4gICkgeyB9XG5cbiAgcHVibGljIHRyYW5zZm9ybSh0cmFuc2Zvcm06IE1hdDQpOiB2b2lkIHtcbiAgICAvLyBUT0RPOiB2ZXJpZnkgdGhpc1xuICAgIGNvbnN0IHNjYWxlOiBWZWMzID0gbWF0NC5nZXRTY2FsaW5nKHRyYW5zZm9ybSk7XG4gICAgY29uc3Qgc2NhbGVGYWN0b3I6IG51bWJlciA9IHZlYzMubGVuZ3RoKHNjYWxlKSAvIE1hdGguc3FydCgzKTtcbiAgICB0aGlzLnRpbWUgKj0gc2NhbGVGYWN0b3I7XG4gICAgdGhpcy5kaXN0ICo9IHNjYWxlRmFjdG9yO1xuICAgIHRoaXMuc2NyZWVuU3BhY2VEaXN0IC89IHNjYWxlRmFjdG9yO1xuICAgIHRoaXMucG9pbnQgPSB2ZWMzLnRyYW5zZm9ybU1hdDQodGhpcy5wb2ludCwgdHJhbnNmb3JtKTtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/intersection.ts\n");

/***/ }),

/***/ "./src/geometry/line.ts":
/*!******************************!*\
  !*** ./src/geometry/line.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Line: () => (/* binding */ Line)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n\n\n\n\n\nclass Line extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(parent, start, end, model, material = null) {\n        super(parent, model, material);\n        this.start = start;\n        this.end = end;\n        this.renderLines = 0;\n        this.updateRenderLines();\n        this.updateBoundingBox();\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        return ray.almostIntersectLine(this.getID(), this.start, this.end, 10);\n    }\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    updateRenderLines() {\n        if (this.renderLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n        const renderLinesObj = new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(this, new Float32Array([...this.start, 1.0, ...this.end, 1.0]), new Int32Array([0, 1]));\n        this.renderLines = renderLinesObj.getRenderID();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(renderLinesObj);\n    }\n    getTypeName() {\n        return \"Line\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        if (inclusive)\n            return frustum.containsLinePartially(this.start, this.end);\n        return frustum.containsLineFully(this.start, this.end);\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n    }\n    getStart() {\n        return this.start;\n    }\n    getEnd() {\n        return this.end;\n    }\n    updateEnd(point) {\n        this.end = point;\n        this.updateRenderLines();\n        this.updateBoundingBox();\n    }\n    getLength() {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.start, this.end);\n    }\n    flip() {\n        [this.start, this.end] = [this.end, this.start];\n    }\n    updateBoundingBox() {\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        this.boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.start, this.getModelRecursive()));\n        this.boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.end, this.getModelRecursive()));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUk7UUFDVCxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNPLGlCQUFpQjtRQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUkscURBQVcsRUFBRSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLDZDQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ25GLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLDZDQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ25GLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L2xpbmUudHM/ZThkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcbmltcG9ydCB7IE1hdGVyaWFsTmFtZSB9IGZyb20gXCIuLi9tYXRlcmlhbHMvbWF0ZXJpYWxcIjtcbmltcG9ydCB7IFJlbmRlckxpbmVzIH0gZnJvbSBcIi4uL3JlbmRlci9yZW5kZXJMaW5lc1wiO1xuaW1wb3J0IHsgT2JqZWN0SUQsIFJlbmRlcklEIH0gZnJvbSBcIi4uL3NjZW5lL3NjZW5lXCI7XG5pbXBvcnQgeyBCb3VuZGluZ0JveCB9IGZyb20gXCIuL2JvdW5kaW5nQm94XCI7XG5pbXBvcnQgeyBGcnVzdHVtIH0gZnJvbSBcIi4vZnJ1c3R1bVwiO1xuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi9nZW9tZXRyeVwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4vaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi9yYXlcIjtcblxuXG5leHBvcnQgY2xhc3MgTGluZSBleHRlbmRzIEdlb21ldHJ5IHtcblxuICBwcml2YXRlIHJlbmRlckxpbmVzITogUmVuZGVySUQ7XG4gIHByaXZhdGUgYm91bmRpbmdCb3ghOiBCb3VuZGluZ0JveDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwYXJlbnQ6IEdlb21ldHJ5IHwgbnVsbCxcbiAgICBwcml2YXRlIHN0YXJ0OiBWZWMzLFxuICAgIHByaXZhdGUgZW5kOiBWZWMzLFxuICAgIG1vZGVsPzogTWF0NCxcbiAgICBtYXRlcmlhbDogTWF0ZXJpYWxOYW1lIHwgbnVsbCA9IG51bGxcbiAgKSB7XG4gICAgc3VwZXIocGFyZW50LCBtb2RlbCwgbWF0ZXJpYWwpO1xuICAgIHRoaXMucmVuZGVyTGluZXMgPSAwO1xuICAgIHRoaXMudXBkYXRlUmVuZGVyTGluZXMoKTtcbiAgICB0aGlzLnVwZGF0ZUJvdW5kaW5nQm94KCk7XG4gIH1cblxuICBwdWJsaWMgaW50ZXJzZWN0KHJheTogUmF5KTogSW50ZXJzZWN0aW9uIHwgbnVsbCB7XG4gICAgaWYgKHRoaXMuaXNIaWRkZW4oKSkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHJheS5hbG1vc3RJbnRlcnNlY3RMaW5lKHRoaXMuZ2V0SUQoKSwgdGhpcy5zdGFydCwgdGhpcy5lbmQsIDEwKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCb3VuZGluZ0JveCgpOiBCb3VuZGluZ0JveCB7XG4gICAgcmV0dXJuIHRoaXMuYm91bmRpbmdCb3g7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZVJlbmRlckxpbmVzKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnJlbmRlckxpbmVzKSBJTlNUQU5DRS5nZXRTY2VuZSgpLnJlbW92ZUxpbmVzKHRoaXMucmVuZGVyTGluZXMpO1xuICAgIGNvbnN0IHJlbmRlckxpbmVzT2JqOiBSZW5kZXJMaW5lcyA9IG5ldyBSZW5kZXJMaW5lcyhcbiAgICAgIHRoaXMsXG4gICAgICBuZXcgRmxvYXQzMkFycmF5KFsuLi50aGlzLnN0YXJ0LCAxLjAsIC4uLnRoaXMuZW5kLCAxLjBdKSxcbiAgICAgIG5ldyBJbnQzMkFycmF5KFswLCAxXSksXG4gICAgKTtcbiAgICB0aGlzLnJlbmRlckxpbmVzID0gcmVuZGVyTGluZXNPYmouZ2V0UmVuZGVySUQoKVxuICAgIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkUmVuZGVyTGluZXMocmVuZGVyTGluZXNPYmopO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldFR5cGVOYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwiTGluZVwiO1xuICB9XG5cbiAgcHVibGljIGlzV2l0aGluRnJ1c3R1bShmcnVzdHVtOiBGcnVzdHVtLCBpbmNsdXNpdmU6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICBpZiAodGhpcy5pc0hpZGRlbigpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGluY2x1c2l2ZSkgcmV0dXJuIGZydXN0dW0uY29udGFpbnNMaW5lUGFydGlhbGx5KHRoaXMuc3RhcnQsIHRoaXMuZW5kKTtcbiAgICByZXR1cm4gZnJ1c3R1bS5jb250YWluc0xpbmVGdWxseSh0aGlzLnN0YXJ0LCB0aGlzLmVuZCk7XG4gIH1cblxuICBwdWJsaWMgZGVsZXRlKCk6IHZvaWQge1xuICAgIElOU1RBTkNFLmdldFNjZW5lKCkucmVtb3ZlTGluZXModGhpcy5yZW5kZXJMaW5lcyk7XG4gIH1cblxuICBwdWJsaWMgZ2V0U3RhcnQoKTogVmVjMyB7XG4gICAgcmV0dXJuIHRoaXMuc3RhcnQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0RW5kKCk6IFZlYzMge1xuICAgIHJldHVybiB0aGlzLmVuZDtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVFbmQocG9pbnQ6IFZlYzMpOiB2b2lkIHtcbiAgICB0aGlzLmVuZCA9IHBvaW50O1xuICAgIHRoaXMudXBkYXRlUmVuZGVyTGluZXMoKTtcbiAgICB0aGlzLnVwZGF0ZUJvdW5kaW5nQm94KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TGVuZ3RoKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHZlYzMuZGlzdGFuY2UodGhpcy5zdGFydCwgdGhpcy5lbmQpO1xuICB9XG5cbiAgcHVibGljIGZsaXAoKTogdm9pZCB7XG4gICAgW3RoaXMuc3RhcnQsIHRoaXMuZW5kXSA9IFt0aGlzLmVuZCwgdGhpcy5zdGFydF07XG4gIH1cbiAgcHJpdmF0ZSB1cGRhdGVCb3VuZGluZ0JveCgpOiB2b2lkIHtcbiAgICB0aGlzLmJvdW5kaW5nQm94ID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgdGhpcy5ib3VuZGluZ0JveC5hZGRWZWMzKHZlYzMudHJhbnNmb3JtTWF0NCh0aGlzLnN0YXJ0LCB0aGlzLmdldE1vZGVsUmVjdXJzaXZlKCkpKTtcbiAgICB0aGlzLmJvdW5kaW5nQm94LmFkZFZlYzModmVjMy50cmFuc2Zvcm1NYXQ0KHRoaXMuZW5kLCB0aGlzLmdldE1vZGVsUmVjdXJzaXZlKCkpKTtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/line.ts\n");

/***/ }),

/***/ "./src/geometry/lineBoundingBoxHeirarchy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/lineBoundingBoxHeirarchy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineBoundingBoxHeirarchy: () => (/* binding */ LineBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass LineBoundingBoxHeirarchyNode {\n    constructor(geometry, verts, indices, depth = 0) {\n        this.geometry = geometry;\n        this.verts = verts;\n        this.depth = depth;\n        this.setup(verts, indices);\n    }\n    setup(verts, indices) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        var average = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 0);\n        for (let index of indices) {\n            this.boundingBox.addVec3(verts[index]);\n            average = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(average, verts[index]);\n        }\n        average = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(average, 1 / indices.length);\n        if (indices.length / 2 <= LineBoundingBoxHeirarchy.MAX_LINES_PER_LEAF) {\n            // leaf\n            this.indices = indices;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // non leaf\n            this.indices = null;\n            var child1Indices = [];\n            var child2Indices = [];\n            for (let i = 0; i < indices.length; i += 2) {\n                const lineCenter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(verts[indices[i]], verts[indices[i + 1]]), 0.5);\n                if (lineCenter[this.axis] < average[this.axis]) {\n                    child1Indices.push(indices[i], indices[i + 1]);\n                }\n                else {\n                    child2Indices.push(indices[i], indices[i + 1]);\n                }\n            }\n            this.child1 = new LineBoundingBoxHeirarchyNode(this.geometry, verts, child1Indices, this.depth + 1);\n            this.child2 = new LineBoundingBoxHeirarchyNode(this.geometry, verts, child2Indices, this.depth + 1);\n        }\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox))\n            return true;\n        if (!frustum.intersectsBoundingBox(this.boundingBox))\n            return false;\n        if (this.isLeaf()) {\n            if (inclusive) {\n                for (let i = 0; i < this.indices.length; i += 2) {\n                    if (frustum.containsLinePartially(this.verts[this.indices[i]], this.verts[this.indices[i + 1]]))\n                        return true;\n                }\n                return false;\n            }\n            else {\n                for (let i = 0; i < this.indices.length; i += 2) {\n                    if (!frustum.containsLineFully(this.verts[this.indices[i]], this.verts[this.indices[i + 1]]))\n                        return false;\n                }\n                return true;\n            }\n        }\n        else {\n            if (inclusive) {\n                return this.child1.isWithinFrustum(frustum, inclusive) || this.child2.isWithinFrustum(frustum, inclusive);\n            }\n            else {\n                return this.child1.isWithinFrustum(frustum, inclusive) && this.child2.isWithinFrustum(frustum, inclusive);\n            }\n        }\n    }\n    almostIntersect(ray, verts, pixels) {\n        if (ray.almostIntersectBoundingBox(this.boundingBox, pixels) === null)\n            return null;\n        if (this.isLeaf()) {\n            // time, dist\n            var closestIntersection = null;\n            for (let i = 0; i < this.indices.length; i += 2) {\n                var intersection = ray.almostIntersectLine(this.geometry.getID(), verts[this.indices[i]], verts[this.indices[i + 1]], pixels);\n                if (intersection !== null) {\n                    if (closestIntersection === null)\n                        closestIntersection = intersection;\n                    else\n                        closestIntersection = (closestIntersection.screenSpaceDist < intersection.screenSpaceDist) ? closestIntersection : intersection;\n                }\n            }\n            return closestIntersection;\n        }\n        else {\n            const t1 = this.child1.almostIntersect(ray, verts, pixels);\n            const t2 = this.child2.almostIntersect(ray, verts, pixels);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return (t1.time < t2.time) ? t1 : t2;\n        }\n    }\n    isLeaf() {\n        return this.indices !== null;\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.indices)\n            str += `${this.indices.length / 2}lines`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n}\nclass LineBoundingBoxHeirarchy {\n    constructor(geometry, verts, indices) {\n        this.geometry = geometry;\n        this.verts = verts;\n        // remove degenerate edges, they can cause infinite loop.\n        let reducedIndices = [];\n        for (let i = 0; i < indices.length; i += 2) {\n            const a = verts[indices[i]];\n            const b = verts[indices[i + 1]];\n            if (a[0] !== b[0] || a[1] !== b[1] || a[2] !== b[2]) {\n                reducedIndices.push(indices[i], indices[i + 1]);\n            }\n        }\n        this.root = new LineBoundingBoxHeirarchyNode(this.geometry, verts, reducedIndices);\n    }\n    print() {\n        console.log(\"========Line-BBH========\");\n        this.root.print();\n    }\n    almostIntersect(ray, pixels) {\n        const model = this.geometry.getModelRecursive();\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_1__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(model));\n        const res = this.root.almostIntersect(objectSpaceRay, this.verts, pixels);\n        res === null || res === void 0 ? void 0 : res.transform(model);\n        return res;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(this.geometry.getModelRecursive()));\n        const res = this.root.isWithinFrustum(frustum, inclusive);\n        frustum.transform(this.geometry.getModelRecursive());\n        return res;\n    }\n}\nLineBoundingBoxHeirarchy.MAX_LINES_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/lineBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/lines.ts":
/*!*******************************!*\
  !*** ./src/geometry/lines.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Lines: () => (/* binding */ Lines)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lineBoundingBoxHeirarchy */ \"./src/geometry/lineBoundingBoxHeirarchy.ts\");\n\n\n\n\n\n\nclass Lines extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(points, indices, parent = null, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.identity(), material = null) {\n        super(parent, model, material);\n        this.points = points;\n        this.indices = indices;\n        this.renderLines = 0;\n        this.update();\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        return this.boundingBoxHeirarchy.almostIntersect(ray, 10);\n    }\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    getSegmentCount() {\n        return this.indices.length / 2;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.boundingBoxHeirarchy.isWithinFrustum(frustum, inclusive);\n    }\n    getTypeName() {\n        return \"Lines\";\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n    }\n    update() {\n        if (this.renderLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n        const verts = [];\n        for (let i = 0; i < this.points.length; i++) {\n            verts.push(...this.points[i], 1.0);\n        }\n        const renderLinesObj = new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(this, new Float32Array(verts), new Int32Array(this.indices));\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(renderLinesObj);\n        this.renderLines = renderLinesObj.getRenderID();\n        this.updateBoundingBox();\n        this.boundingBoxHeirarchy = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__.LineBoundingBoxHeirarchy(this, this.points, this.indices);\n    }\n    updateBoundingBox() {\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        const model = this.getModelRecursive();\n        this.points.forEach((point) => {\n            this.boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.transformMat4(point, model));\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEtBQVcsRUFBRSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLDZDQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzdELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvbGluZXMudHM/YTIwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcbmltcG9ydCB7IE1hdGVyaWFsTmFtZSB9IGZyb20gXCIuLi9tYXRlcmlhbHMvbWF0ZXJpYWxcIjtcbmltcG9ydCB7IFJlbmRlckxpbmVzIH0gZnJvbSBcIi4uL3JlbmRlci9yZW5kZXJMaW5lc1wiO1xuaW1wb3J0IHsgUmVuZGVySUQgfSBmcm9tIFwiLi4vc2NlbmUvc2NlbmVcIjtcbmltcG9ydCB7IEJvdW5kaW5nQm94IH0gZnJvbSBcIi4vYm91bmRpbmdCb3hcIjtcbmltcG9ydCB7IEZydXN0dW0gfSBmcm9tIFwiLi9mcnVzdHVtXCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IExpbmVCb3VuZGluZ0JveEhlaXJhcmNoeSB9IGZyb20gXCIuL2xpbmVCb3VuZGluZ0JveEhlaXJhcmNoeVwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4vcmF5XCI7XG5cbmV4cG9ydCBjbGFzcyBMaW5lcyBleHRlbmRzIEdlb21ldHJ5IHtcblxuICBwcml2YXRlIHJlbmRlckxpbmVzITogUmVuZGVySUQ7XG4gIHByaXZhdGUgYm91bmRpbmdCb3ghOiBCb3VuZGluZ0JveDtcbiAgcHJpdmF0ZSBib3VuZGluZ0JveEhlaXJhcmNoeSE6IExpbmVCb3VuZGluZ0JveEhlaXJhcmNoeTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHBvaW50czogVmVjM1tdLFxuICAgIHByaXZhdGUgaW5kaWNlczogbnVtYmVyW10sXG4gICAgcGFyZW50OiBHZW9tZXRyeSB8IG51bGwgPSBudWxsLFxuICAgIG1vZGVsOiBNYXQ0ID0gbWF0NC5pZGVudGl0eSgpLFxuICAgIG1hdGVyaWFsOiBNYXRlcmlhbE5hbWUgfCBudWxsID0gbnVsbFxuICApIHtcbiAgICBzdXBlcihwYXJlbnQsIG1vZGVsLCBtYXRlcmlhbCk7XG4gICAgdGhpcy5yZW5kZXJMaW5lcyA9IDA7XG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxuXG4gIHB1YmxpYyBpbnRlcnNlY3QocmF5OiBSYXkpOiBJbnRlcnNlY3Rpb24gfCBudWxsIHtcbiAgICBpZiAodGhpcy5pc0hpZGRlbigpKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeS5hbG1vc3RJbnRlcnNlY3QocmF5LCAxMCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0Qm91bmRpbmdCb3goKTogQm91bmRpbmdCb3gge1xuICAgIHJldHVybiB0aGlzLmJvdW5kaW5nQm94O1xuICB9XG5cbiAgcHVibGljIGdldFNlZ21lbnRDb3VudCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmluZGljZXMubGVuZ3RoIC8gMjtcbiAgfVxuXG4gIHB1YmxpYyBpc1dpdGhpbkZydXN0dW0oZnJ1c3R1bTogRnJ1c3R1bSwgaW5jbHVzaXZlOiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgaWYgKHRoaXMuaXNIaWRkZW4oKSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0aGlzLmJvdW5kaW5nQm94SGVpcmFyY2h5LmlzV2l0aGluRnJ1c3R1bShmcnVzdHVtLCBpbmNsdXNpdmUpO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGdldFR5cGVOYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIFwiTGluZXNcIjtcbiAgfVxuXG4gIHB1YmxpYyBkZWxldGUoKTogdm9pZCB7XG4gICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5yZW1vdmVMaW5lcyh0aGlzLnJlbmRlckxpbmVzKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnJlbmRlckxpbmVzKSBJTlNUQU5DRS5nZXRTY2VuZSgpLnJlbW92ZUxpbmVzKHRoaXMucmVuZGVyTGluZXMpO1xuICAgIGNvbnN0IHZlcnRzOiBudW1iZXJbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5wb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZlcnRzLnB1c2goLi4udGhpcy5wb2ludHNbaV0sIDEuMCk7XG4gICAgfVxuICAgIGNvbnN0IHJlbmRlckxpbmVzT2JqOiBSZW5kZXJMaW5lcyA9IG5ldyBSZW5kZXJMaW5lcyhcbiAgICAgIHRoaXMsXG4gICAgICBuZXcgRmxvYXQzMkFycmF5KHZlcnRzKSxcbiAgICAgIG5ldyBJbnQzMkFycmF5KHRoaXMuaW5kaWNlcyksXG4gICAgKTtcbiAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmFkZFJlbmRlckxpbmVzKHJlbmRlckxpbmVzT2JqKTtcbiAgICB0aGlzLnJlbmRlckxpbmVzID0gcmVuZGVyTGluZXNPYmouZ2V0UmVuZGVySUQoKTtcbiAgICB0aGlzLnVwZGF0ZUJvdW5kaW5nQm94KCk7XG4gICAgdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeSA9IG5ldyBMaW5lQm91bmRpbmdCb3hIZWlyYXJjaHkodGhpcywgdGhpcy5wb2ludHMsIHRoaXMuaW5kaWNlcyk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUJvdW5kaW5nQm94KCk6IHZvaWQge1xuICAgIHRoaXMuYm91bmRpbmdCb3ggPSBuZXcgQm91bmRpbmdCb3goKTtcbiAgICBjb25zdCBtb2RlbDogTWF0NCA9IHRoaXMuZ2V0TW9kZWxSZWN1cnNpdmUoKTtcbiAgICB0aGlzLnBvaW50cy5mb3JFYWNoKChwb2ludDogVmVjMykgPT4ge1xuICAgICAgdGhpcy5ib3VuZGluZ0JveC5hZGRWZWMzKHZlYzMudHJhbnNmb3JtTWF0NChwb2ludCwgbW9kZWwpKTtcbiAgICB9KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/lines.ts\n");

/***/ }),

/***/ "./src/geometry/mesh.ts":
/*!******************************!*\
  !*** ./src/geometry/mesh.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mesh: () => (/* binding */ Mesh)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderMesh */ \"./src/render/renderMesh.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./meshBoundingBoxHeirarchy */ \"./src/geometry/meshBoundingBoxHeirarchy.ts\");\n\n\n\n\n\n\nclass Mesh extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(parent, verts, normals, indices, model, material = null) {\n        super(parent, model, material);\n        this.verts = verts;\n        this.normals = normals;\n        this.indices = indices;\n        const vertexBuffer = [];\n        for (let i = 0; i < verts.length; i++) {\n            vertexBuffer.push(...verts[i], 1, ...normals[i], 0);\n        }\n        const renderMeshObj = new _render_renderMesh__WEBPACK_IMPORTED_MODULE_1__.RenderMesh(this, new Float32Array(vertexBuffer), new Int32Array(this.indices));\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderMesh(renderMeshObj);\n        this.renderMesh = renderMeshObj.getRenderID();\n        this.boundingBoxHeirarchy = new _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__.MeshBoundingBoxHeirarchy(this, this.verts, this.indices);\n    }\n    getVerts() {\n        return this.verts;\n    }\n    getIndices() {\n        return this.indices;\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        return this.boundingBoxHeirarchy.firstIntersection(ray);\n    }\n    getTypeName() {\n        return \"Mesh\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.boundingBoxHeirarchy.isWithinFrustum(frustum, inclusive);\n    }\n    destroy() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeMesh(this.renderMesh);\n    }\n    getBoundingBox() {\n        const bb = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        const model = this.getModelRecursive();\n        this.verts.forEach((vert) => {\n            bb.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.transformMat4(vert, model));\n        });\n        return bb;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvbWVzaC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFEO0FBQ25CO0FBRWdCO0FBRU47QUFFTjtBQUVnQztBQUsvRCxNQUFNLElBQUssU0FBUSwrQ0FBUTtJQUtoQyxZQUNFLE1BQXVCLEVBQ2YsS0FBYSxFQUNiLE9BQWUsRUFDZixPQUFpQixFQUN6QixLQUFZLEVBQ1osV0FBZ0MsSUFBSTtRQUVwQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztRQU52QixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUNmLFlBQU8sR0FBUCxPQUFPLENBQVU7UUFNekIsTUFBTSxZQUFZLEdBQWEsRUFBRSxDQUFDO1FBQ2xDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ3JEO1FBQ0QsTUFBTSxhQUFhLEdBQWUsSUFBSSwwREFBVSxDQUM5QyxJQUFJLEVBQ0osSUFBSSxZQUFZLENBQUMsWUFBWSxDQUFDLEVBQzlCLElBQUksVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FDN0I7UUFDRCwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsVUFBVSxHQUFHLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM5QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSwrRUFBd0IsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0YsQ0FBQztJQUVNLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVNLFVBQVU7UUFDZixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVNLFNBQVMsQ0FBQyxHQUFRO1FBRXZCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQ2pDLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTFELENBQUM7SUFFZSxXQUFXO1FBQ3pCLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxlQUFlLENBQUMsT0FBZ0IsRUFBRSxTQUFrQjtRQUN6RCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFBRSxPQUFPLEtBQUssQ0FBQztRQUNsQyxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFTSxPQUFPO1FBQ1osMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTSxjQUFjO1FBQ25CLE1BQU0sRUFBRSxHQUFnQixJQUFJLHFEQUFXLEVBQUUsQ0FBQztRQUMxQyxNQUFNLEtBQUssR0FBUyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVUsRUFBRSxFQUFFO1lBQ2hDLEVBQUUsQ0FBQyxPQUFPLENBQUMsNkNBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDOUMsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L21lc2gudHM/YzA0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcbmltcG9ydCB7IE1hdGVyaWFsTmFtZSB9IGZyb20gXCIuLi9tYXRlcmlhbHMvbWF0ZXJpYWxcIjtcbmltcG9ydCB7IFJlbmRlck1lc2ggfSBmcm9tIFwiLi4vcmVuZGVyL3JlbmRlck1lc2hcIjtcbmltcG9ydCB7IFJlbmRlcklEIH0gZnJvbSBcIi4uL3NjZW5lL3NjZW5lXCI7XG5pbXBvcnQgeyBCb3VuZGluZ0JveCB9IGZyb20gXCIuL2JvdW5kaW5nQm94XCI7XG5pbXBvcnQgeyBGcnVzdHVtIH0gZnJvbSBcIi4vZnJ1c3R1bVwiO1xuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi9nZW9tZXRyeVwiO1xuaW1wb3J0IHsgSW50ZXJzZWN0aW9uIH0gZnJvbSBcIi4vaW50ZXJzZWN0aW9uXCI7XG5pbXBvcnQgeyBNZXNoQm91bmRpbmdCb3hIZWlyYXJjaHkgfSBmcm9tIFwiLi9tZXNoQm91bmRpbmdCb3hIZWlyYXJjaHlcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuL3JheVwiO1xuXG5cblxuZXhwb3J0IGNsYXNzIE1lc2ggZXh0ZW5kcyBHZW9tZXRyeSB7XG5cbiAgcHJpdmF0ZSByZW5kZXJNZXNoOiBSZW5kZXJJRDtcbiAgcHJpdmF0ZSBib3VuZGluZ0JveEhlaXJhcmNoeTogTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHBhcmVudDogR2VvbWV0cnkgfCBudWxsLFxuICAgIHByaXZhdGUgdmVydHM6IFZlYzNbXSxcbiAgICBwcml2YXRlIG5vcm1hbHM6IFZlYzNbXSxcbiAgICBwcml2YXRlIGluZGljZXM6IG51bWJlcltdLFxuICAgIG1vZGVsPzogTWF0NCxcbiAgICBtYXRlcmlhbDogTWF0ZXJpYWxOYW1lIHwgbnVsbCA9IG51bGxcbiAgKSB7XG4gICAgc3VwZXIocGFyZW50LCBtb2RlbCwgbWF0ZXJpYWwpO1xuXG4gICAgY29uc3QgdmVydGV4QnVmZmVyOiBudW1iZXJbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmVydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZlcnRleEJ1ZmZlci5wdXNoKC4uLnZlcnRzW2ldLCAxLCAuLi5ub3JtYWxzW2ldLCAwKTtcbiAgICB9XG4gICAgY29uc3QgcmVuZGVyTWVzaE9iajogUmVuZGVyTWVzaCA9IG5ldyBSZW5kZXJNZXNoKFxuICAgICAgdGhpcyxcbiAgICAgIG5ldyBGbG9hdDMyQXJyYXkodmVydGV4QnVmZmVyKSxcbiAgICAgIG5ldyBJbnQzMkFycmF5KHRoaXMuaW5kaWNlcyksXG4gICAgKVxuICAgIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkUmVuZGVyTWVzaChyZW5kZXJNZXNoT2JqKTtcbiAgICB0aGlzLnJlbmRlck1lc2ggPSByZW5kZXJNZXNoT2JqLmdldFJlbmRlcklEKCk7XG4gICAgdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeSA9IG5ldyBNZXNoQm91bmRpbmdCb3hIZWlyYXJjaHkodGhpcywgdGhpcy52ZXJ0cywgdGhpcy5pbmRpY2VzKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRWZXJ0cygpOiBWZWMzW10ge1xuICAgIHJldHVybiB0aGlzLnZlcnRzO1xuICB9XG5cbiAgcHVibGljIGdldEluZGljZXMoKTogbnVtYmVyW10ge1xuICAgIHJldHVybiB0aGlzLmluZGljZXM7XG4gIH1cblxuICBwdWJsaWMgaW50ZXJzZWN0KHJheTogUmF5KTogSW50ZXJzZWN0aW9uIHwgbnVsbCB7XG5cbiAgICBpZiAodGhpcy5pc0hpZGRlbigpKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeS5maXJzdEludGVyc2VjdGlvbihyYXkpO1xuXG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0VHlwZU5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJNZXNoXCI7XG4gIH1cblxuICBwdWJsaWMgaXNXaXRoaW5GcnVzdHVtKGZydXN0dW06IEZydXN0dW0sIGluY2x1c2l2ZTogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeS5pc1dpdGhpbkZydXN0dW0oZnJ1c3R1bSwgaW5jbHVzaXZlKTtcbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQge1xuICAgIElOU1RBTkNFLmdldFNjZW5lKCkucmVtb3ZlTWVzaCh0aGlzLnJlbmRlck1lc2gpO1xuICB9XG5cbiAgcHVibGljIGdldEJvdW5kaW5nQm94KCk6IEJvdW5kaW5nQm94IHtcbiAgICBjb25zdCBiYjogQm91bmRpbmdCb3ggPSBuZXcgQm91bmRpbmdCb3goKTtcbiAgICBjb25zdCBtb2RlbDogTWF0NCA9IHRoaXMuZ2V0TW9kZWxSZWN1cnNpdmUoKTtcbiAgICB0aGlzLnZlcnRzLmZvckVhY2goKHZlcnQ6IFZlYzMpID0+IHtcbiAgICAgIGJiLmFkZFZlYzModmVjMy50cmFuc2Zvcm1NYXQ0KHZlcnQsIG1vZGVsKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGJiO1xuICB9XG5cbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/mesh.ts\n");

/***/ }),

/***/ "./src/geometry/meshBoundingBoxHeirarchy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/meshBoundingBoxHeirarchy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MeshBoundingBoxHeirarchy: () => (/* binding */ MeshBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _intersection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intersection */ \"./src/geometry/intersection.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass MeshBoundingBoxHeirarchyNode {\n    constructor(id, verts, indices, depth = 0) {\n        this.id = id;\n        this.verts = verts;\n        this.depth = depth;\n        this.setup(indices);\n    }\n    setup(indices) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (let index of indices) {\n            this.boundingBox.addVec3(this.verts[index]);\n        }\n        if (indices.length / 3 <= MeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF) {\n            // leaf\n            this.indices = indices;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // non leaf\n            this.indices = null;\n            const child1Indices = [];\n            const child2Indices = [];\n            for (let i = 0; i < indices.length; i += 3) {\n                const triCenter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.verts[indices[i]], wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.verts[indices[i + 1]], this.verts[indices[i + 1]])), 1 / 3);\n                if (triCenter[this.axis] < this.boundingBox.getCenter()[this.axis]) {\n                    child1Indices.push(indices[i], indices[i + 1], indices[i + 2]);\n                }\n                else {\n                    child2Indices.push(indices[i], indices[i + 1], indices[i + 2]);\n                }\n            }\n            this.child1 = new MeshBoundingBoxHeirarchyNode(this.id, this.verts, child1Indices, this.depth + 1);\n            this.child2 = new MeshBoundingBoxHeirarchyNode(this.id, this.verts, child2Indices, this.depth + 1);\n        }\n    }\n    add(indices, verts) {\n        if (this.isLeaf()) {\n            this.indices.push(...indices);\n            if (this.indices.length / 3 < MeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF) {\n                this.setup(this.indices);\n            }\n        }\n        else {\n            const triCenterPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(verts[indices[0]], wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(verts[indices[1]], verts[indices[2]])), 1 / 3);\n            const bbCenterPoint = this.boundingBox.getCenter();\n            if (triCenterPoint[this.axis] < bbCenterPoint[this.axis]) {\n                this.child1.add(indices, verts);\n            }\n            else {\n                this.child2.add(indices, verts);\n            }\n        }\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox))\n            return true;\n        if (!frustum.intersectsBoundingBox(this.boundingBox))\n            return false;\n        if (this.isLeaf()) {\n            if (inclusive) {\n                for (let i = 0; i < this.indices.length; i += 3) {\n                    if (frustum.containsTriangle(this.verts[this.indices[i]], this.verts[this.indices[i + 1]], this.verts[this.indices[i + 2]], inclusive)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            else {\n                for (let i = 0; i < this.indices.length; i += 3) {\n                    if (!frustum.containsTriangle(this.verts[this.indices[i]], this.verts[this.indices[i + 1]], this.verts[this.indices[i + 2]], inclusive)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        else {\n            if (inclusive) {\n                return this.child1.isWithinFrustum(frustum, inclusive) || this.child2.isWithinFrustum(frustum, inclusive);\n            }\n            else {\n                return this.child1.isWithinFrustum(frustum, inclusive) && this.child2.isWithinFrustum(frustum, inclusive);\n            }\n        }\n    }\n    intersect(ray) {\n        if (ray.intersectBoundingBox(this.boundingBox) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            for (let i = 0; i < this.indices.length; i += 3) {\n                var t = ray.intersectTriangle(this.verts[this.indices[i]], this.verts[this.indices[i + 1]], this.verts[this.indices[i + 2]]);\n                if (t !== null) {\n                    if (res === null)\n                        res = t;\n                    else\n                        res = Math.min(res, t);\n                }\n            }\n            if (res == null)\n                return res;\n            return new _intersection__WEBPACK_IMPORTED_MODULE_1__.Intersection(res, \"mesh\", this.id, ray.at(res), 0, 0);\n        }\n        else {\n            const i1 = this.child1.intersect(ray);\n            const i2 = this.child2.intersect(ray);\n            if (i1 === null)\n                return i2;\n            if (i2 === null)\n                return i1;\n            return (i1.time < i2.time) ? i1 : i2;\n        }\n    }\n    isLeaf() {\n        return this.indices !== null;\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.indices)\n            str += `${this.indices.length / 3}triangles`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n}\nclass MeshBoundingBoxHeirarchy {\n    constructor(mesh, verts, indices) {\n        this.mesh = mesh;\n        // degenerated break the bbh\n        const reducedIndices = [];\n        for (let i = 0; i < indices.length; i += 3) {\n            const d1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(verts[indices[i]], verts[indices[i + 1]]);\n            const d2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(verts[indices[i + 1]], verts[indices[i + 2]]);\n            if (d1 === 0 || d2 == 2)\n                continue;\n            reducedIndices.push(indices[i], indices[i + 1], indices[i + 2]);\n        }\n        this.root = new MeshBoundingBoxHeirarchyNode(this.mesh.getID(), verts, reducedIndices);\n    }\n    print() {\n        console.log(\"========Mesh-BBH========\");\n        this.root.print();\n    }\n    firstIntersection(ray) {\n        const model = this.mesh.getModelRecursive();\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_2__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(model));\n        const res = this.root.intersect(objectSpaceRay);\n        res === null || res === void 0 ? void 0 : res.transform(model);\n        return res;\n    }\n    isWithinFrustum(frustum, inclusive) {\n        frustum.transform(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.inverse(this.mesh.getModelRecursive()));\n        const res = this.root.isWithinFrustum(frustum, inclusive);\n        frustum.transform(this.mesh.getModelRecursive());\n        return res;\n    }\n}\nMeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/meshBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/arc.ts":
/*!***********************************!*\
  !*** ./src/geometry/nurbs/arc.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createArc: () => (/* binding */ createArc)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve */ \"./src/geometry/nurbs/curve.ts\");\n\n\n\nconst createArc = function (origin, xAxis, yAxis, radius, thetaStart, thetaEnd) {\n    if (thetaEnd < thetaStart)\n        thetaEnd += 360;\n    const theta = thetaEnd - thetaStart;\n    let arcCount;\n    if (theta <= Math.PI / 2)\n        arcCount = 1;\n    else if (theta <= Math.PI)\n        arcCount = 2;\n    else if (theta <= 3 * Math.PI / 2)\n        arcCount = 3;\n    else\n        arcCount = 4;\n    const dTheta = theta / arcCount;\n    const weight = Math.cos(dTheta / 2);\n    var point0 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, radius * Math.cos(thetaStart)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, radius * Math.sin(thetaStart))));\n    var tangent0 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, -Math.sin(thetaStart)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, Math.cos(thetaStart)));\n    const weightedControls = [wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(...point0, 1)];\n    const knots = [];\n    var angle = thetaStart;\n    for (let i = 1; i <= arcCount; i++) {\n        angle += dTheta;\n        const point2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, radius * Math.cos(angle)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, radius * Math.sin(angle))));\n        const tangent2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(xAxis, -Math.sin(angle)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(yAxis, Math.cos(angle)));\n        const ray0 = new _ray__WEBPACK_IMPORTED_MODULE_0__.Ray(point0, tangent0);\n        const ray1 = new _ray__WEBPACK_IMPORTED_MODULE_0__.Ray(point2, tangent2);\n        const point1 = ray0.intersect(ray1);\n        weightedControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(...wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(point1, weight), weight), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(...point2, 1));\n        if (i < arcCount) {\n            point0 = point2;\n            tangent0 = tangent2;\n        }\n    }\n    knots.push(0, 0, 0);\n    switch (arcCount) {\n        case 1:\n            break;\n        case 2:\n            knots.push(1 / 2, 1 / 2);\n            break;\n        case 3:\n            knots.push(1 / 3, 1 / 3, 2 / 3, 2 / 3);\n            break;\n        case 4:\n            knots.push(1 / 4, 1 / 4, 2 / 4, 2 / 4, 3 / 4, 3 / 4);\n            break;\n    }\n    knots.push(1, 1, 1);\n    return new _curve__WEBPACK_IMPORTED_MODULE_1__.Curve(null, weightedControls, 2, knots);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxDQUFDLENBQUM7WUFDckQsTUFBTTtLQUNUO0lBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXBCLE9BQU8sSUFBSSx5Q0FBSyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDckQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L251cmJzL2FyYy50cz81ZTlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlYzMsIFZlYzMsIHZlYzQsIFZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuLi9yYXlcIjtcbmltcG9ydCB7IEN1cnZlIH0gZnJvbSBcIi4vY3VydmVcIjtcbmltcG9ydCB7IGdlbmVyaWNLbm90VmVjdG9yIH0gZnJvbSBcIi4vdXRpbHNcIjtcblxuXG5cbmV4cG9ydCBjb25zdCBjcmVhdGVBcmMgPSBmdW5jdGlvbihcbiAgb3JpZ2luOiBWZWMzLFxuICB4QXhpczogVmVjMyxcbiAgeUF4aXM6IFZlYzMsXG4gIHJhZGl1czogbnVtYmVyLFxuICB0aGV0YVN0YXJ0OiBudW1iZXIsXG4gIHRoZXRhRW5kOiBudW1iZXIpOiBDdXJ2ZSB7XG5cbiAgaWYgKHRoZXRhRW5kIDwgdGhldGFTdGFydCkgdGhldGFFbmQgKz0gMzYwO1xuXG4gIGNvbnN0IHRoZXRhOiBudW1iZXIgPSB0aGV0YUVuZCAtIHRoZXRhU3RhcnQ7XG5cbiAgbGV0IGFyY0NvdW50OiBudW1iZXI7XG4gIGlmICh0aGV0YSA8PSBNYXRoLlBJIC8gMikgYXJjQ291bnQgPSAxO1xuICBlbHNlIGlmICh0aGV0YSA8PSBNYXRoLlBJKSBhcmNDb3VudCA9IDI7XG4gIGVsc2UgaWYgKHRoZXRhIDw9IDMgKiBNYXRoLlBJIC8gMikgYXJjQ291bnQgPSAzO1xuICBlbHNlIGFyY0NvdW50ID0gNDtcblxuICBjb25zdCBkVGhldGE6IG51bWJlciA9IHRoZXRhIC8gYXJjQ291bnQ7XG5cbiAgY29uc3Qgd2VpZ2h0OiBudW1iZXIgPSBNYXRoLmNvcyhkVGhldGEgLyAyKTtcblxuICB2YXIgcG9pbnQwOiBWZWMzID0gdmVjMy5hZGQob3JpZ2luLCB2ZWMzLmFkZChcbiAgICB2ZWMzLnNjYWxlKHhBeGlzLCByYWRpdXMgKiBNYXRoLmNvcyh0aGV0YVN0YXJ0KSksXG4gICAgdmVjMy5zY2FsZSh5QXhpcywgcmFkaXVzICogTWF0aC5zaW4odGhldGFTdGFydCkpLFxuICApKTtcblxuICB2YXIgdGFuZ2VudDA6IFZlYzMgPSB2ZWMzLmFkZChcbiAgICB2ZWMzLnNjYWxlKHhBeGlzLCAtTWF0aC5zaW4odGhldGFTdGFydCkpLFxuICAgIHZlYzMuc2NhbGUoeUF4aXMsIE1hdGguY29zKHRoZXRhU3RhcnQpKVxuICApO1xuXG4gIGNvbnN0IHdlaWdodGVkQ29udHJvbHM6IFZlYzRbXSA9IFt2ZWM0LmNyZWF0ZSguLi5wb2ludDAsIDEpXTtcbiAgY29uc3Qga25vdHM6IG51bWJlcltdID0gW107XG5cbiAgdmFyIGFuZ2xlOiBudW1iZXIgPSB0aGV0YVN0YXJ0O1xuXG4gIGZvciAobGV0IGkgPSAxOyBpIDw9IGFyY0NvdW50OyBpKyspIHtcbiAgICBhbmdsZSArPSBkVGhldGE7XG5cbiAgICBjb25zdCBwb2ludDI6IFZlYzMgPSB2ZWMzLmFkZChvcmlnaW4sIHZlYzMuYWRkKFxuICAgICAgdmVjMy5zY2FsZSh4QXhpcywgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUpKSxcbiAgICAgIHZlYzMuc2NhbGUoeUF4aXMsIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKSksXG4gICAgKSk7XG5cbiAgICBjb25zdCB0YW5nZW50MjogVmVjMyA9IHZlYzMuYWRkKFxuICAgICAgdmVjMy5zY2FsZSh4QXhpcywgLU1hdGguc2luKGFuZ2xlKSksXG4gICAgICB2ZWMzLnNjYWxlKHlBeGlzLCBNYXRoLmNvcyhhbmdsZSkpXG4gICAgKTtcblxuICAgIGNvbnN0IHJheTA6IFJheSA9IG5ldyBSYXkocG9pbnQwLCB0YW5nZW50MCk7XG4gICAgY29uc3QgcmF5MTogUmF5ID0gbmV3IFJheShwb2ludDIsIHRhbmdlbnQyKTtcbiAgICBjb25zdCBwb2ludDE6IFZlYzMgPSByYXkwLmludGVyc2VjdChyYXkxKTtcblxuICAgIHdlaWdodGVkQ29udHJvbHMucHVzaChcbiAgICAgIHZlYzQuY3JlYXRlKC4uLnZlYzMuc2NhbGUocG9pbnQxLCB3ZWlnaHQpLCB3ZWlnaHQpLFxuICAgICAgdmVjNC5jcmVhdGUoLi4ucG9pbnQyLCAxKVxuICAgICk7XG5cbiAgICBpZiAoaSA8IGFyY0NvdW50KSB7XG4gICAgICBwb2ludDAgPSBwb2ludDI7XG4gICAgICB0YW5nZW50MCA9IHRhbmdlbnQyO1xuICAgIH1cblxuICB9XG5cbiAga25vdHMucHVzaCgwLCAwLCAwKTtcbiAgc3dpdGNoIChhcmNDb3VudCkge1xuICAgIGNhc2UgMTpcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMjpcbiAgICAgIGtub3RzLnB1c2goMSAvIDIsIDEgLyAyKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMzpcbiAgICAgIGtub3RzLnB1c2goMSAvIDMsIDEgLyAzLCAyIC8gMywgMiAvIDMpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSA0OlxuICAgICAga25vdHMucHVzaCgxIC8gNCwgMSAvIDQsIDIgLyA0LCAyIC8gNCwgMyAvIDQsIDMgLyA0KTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIGtub3RzLnB1c2goMSwgMSwgMSk7XG5cbiAgcmV0dXJuIG5ldyBDdXJ2ZShudWxsLCB3ZWlnaHRlZENvbnRyb2xzLCAyLCBrbm90cyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/arc.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/circle.ts":
/*!**************************************!*\
  !*** ./src/geometry/nurbs/circle.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCircleCenterNormalRadius: () => (/* binding */ createCircleCenterNormalRadius),\n/* harmony export */   createCircleThreePoints: () => (/* binding */ createCircleThreePoints)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve */ \"./src/geometry/nurbs/curve.ts\");\n\n\n\n\nconst UNIT_CIRCLE_DEGREE = 2;\nconst UNIT_CIRCLE_KNOTS = [\n    0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4\n];\nconst w = Math.SQRT2 / 2;\nconst UNIT_CIRCLE_POINTS = [\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(1, 0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(w, w, 0, w), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(0, 1, 0, 1),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-w, w, 0, w), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-1, 0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-w, -w, 0, w),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(0, -1, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(w, -w, 0, w), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(1, 0, 0, 1)\n];\nconst createCircleThreePoints = function (a, b, c) {\n    const ab = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(b, a);\n    const ac = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(c, a);\n    const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(ab, ac));\n    const ro = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(a, b), 0.5);\n    const rd = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(ab, normal));\n    const r = new _ray__WEBPACK_IMPORTED_MODULE_1__.Ray(ro, rd);\n    const po = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(a, c), 0.5);\n    const pn = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(ac);\n    const p = new _plane__WEBPACK_IMPORTED_MODULE_0__.Plane(po, pn);\n    const t = r.intersectPlane(p, true);\n    const center = r.at(t);\n    const radius = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(a, center);\n    return createCircleCenterNormalRadius(center, normal, radius);\n};\nconst createCircleCenterNormalRadius = function (center, normal, radius) {\n    if (normal[2] < 0)\n        normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(normal, -1);\n    const unitZ = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1);\n    var x;\n    var y;\n    if (wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(normal, unitZ) < 0.00001) {\n        x = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(radius, 0, 0);\n        y = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, radius, 0);\n    }\n    else {\n        x = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(normal, unitZ)), radius);\n        y = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(normal, x)), radius);\n    }\n    normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(normal, radius);\n    // swizzle y and z in the matrix\n    // why did they choose this rediculous clipspace\n    const model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.create(x[0], x[1], x[2], 0, y[0], y[1], y[2], 0, normal[0], normal[1], normal[2], 0, center[0], center[1], center[2], 1);\n    return new _curve__WEBPACK_IMPORTED_MODULE_2__.Curve(null, UNIT_CIRCLE_POINTS, UNIT_CIRCLE_DEGREE, UNIT_CIRCLE_KNOTS, model);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDL0Q7SUFDRCxNQUFNLEdBQUcsNkNBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXBDLGdDQUFnQztJQUNoQyxnREFBZ0Q7SUFDaEQsTUFBTSxLQUFLLEdBQVMsNkNBQUksQ0FBQyxNQUFNLENBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFDbkIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUNuQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQ2xDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FDbkMsQ0FBQztJQUNGLE9BQU8sSUFBSSx5Q0FBSyxDQUFDLElBQUksRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxpQkFBaUIsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUUzRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvbnVyYnMvY2lyY2xlLnRzPzRlNzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0NCwgTWF0NCwgdmVjMywgVmVjMywgVmVjNCwgdmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgUGxhbmUgfSBmcm9tIFwiLi4vcGxhbmVcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuLi9yYXlcIjtcbmltcG9ydCB7IEN1cnZlIH0gZnJvbSBcIi4vY3VydmVcIjtcblxuY29uc3QgVU5JVF9DSVJDTEVfREVHUkVFOiBudW1iZXIgPSAyO1xuY29uc3QgVU5JVF9DSVJDTEVfS05PVFM6IG51bWJlcltdID0gW1xuICAwLCAwLCAwLCAxLCAxLCAyLCAyLCAzLCAzLCA0LCA0LCA0XG5dO1xuY29uc3QgdzogbnVtYmVyID0gTWF0aC5TUVJUMiAvIDI7XG5jb25zdCBVTklUX0NJUkNMRV9QT0lOVFM6IFZlYzRbXSA9IFtcbiAgdmVjNC5jcmVhdGUoMSwgMCwgMCwgMSksIHZlYzQuY3JlYXRlKHcsIHcsIDAsIHcpLCB2ZWM0LmNyZWF0ZSgwLCAxLCAwLCAxKSxcbiAgdmVjNC5jcmVhdGUoLXcsIHcsIDAsIHcpLCB2ZWM0LmNyZWF0ZSgtMSwgMCwgMCwgMSksIHZlYzQuY3JlYXRlKC13LCAtdywgMCwgdyksXG4gIHZlYzQuY3JlYXRlKDAsIC0xLCAwLCAxKSwgdmVjNC5jcmVhdGUodywgLXcsIDAsIHcpLCB2ZWM0LmNyZWF0ZSgxLCAwLCAwLCAxKVxuXTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUNpcmNsZVRocmVlUG9pbnRzID0gZnVuY3Rpb24oYTogVmVjMywgYjogVmVjMywgYzogVmVjMyk6IEN1cnZlIHtcbiAgY29uc3QgYWI6IFZlYzMgPSB2ZWMzLnN1YihiLCBhKTtcbiAgY29uc3QgYWM6IFZlYzMgPSB2ZWMzLnN1YihjLCBhKTtcbiAgY29uc3Qgbm9ybWFsOiBWZWMzID0gdmVjMy5ub3JtYWxpemUodmVjMy5jcm9zcyhhYiwgYWMpKTtcblxuICBjb25zdCBybzogVmVjMyA9IHZlYzMuc2NhbGUodmVjMy5hZGQoYSwgYiksIDAuNSk7XG4gIGNvbnN0IHJkOiBWZWMzID0gdmVjMy5ub3JtYWxpemUodmVjMy5jcm9zcyhhYiwgbm9ybWFsKSk7XG4gIGNvbnN0IHI6IFJheSA9IG5ldyBSYXkocm8sIHJkKTtcblxuICBjb25zdCBwbzogVmVjMyA9IHZlYzMuc2NhbGUodmVjMy5hZGQoYSwgYyksIDAuNSk7XG4gIGNvbnN0IHBuOiBWZWMzID0gdmVjMy5ub3JtYWxpemUoYWMpO1xuICBjb25zdCBwOiBQbGFuZSA9IG5ldyBQbGFuZShwbywgcG4pO1xuXG4gIGNvbnN0IHQ6IG51bWJlciA9IHIuaW50ZXJzZWN0UGxhbmUocCwgdHJ1ZSkhO1xuICBjb25zdCBjZW50ZXI6IFZlYzMgPSByLmF0KHQpO1xuICBjb25zdCByYWRpdXM6IG51bWJlciA9IHZlYzMuZGlzdGFuY2UoYSwgY2VudGVyKTtcblxuICByZXR1cm4gY3JlYXRlQ2lyY2xlQ2VudGVyTm9ybWFsUmFkaXVzKGNlbnRlciwgbm9ybWFsLCByYWRpdXMpO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlQ2lyY2xlQ2VudGVyTm9ybWFsUmFkaXVzID0gZnVuY3Rpb24oY2VudGVyOiBWZWMzLCBub3JtYWw6IFZlYzMsIHJhZGl1czogbnVtYmVyKTogQ3VydmUge1xuICBpZiAobm9ybWFsWzJdIDwgMCkgbm9ybWFsID0gdmVjMy5zY2FsZShub3JtYWwsIC0xKTtcbiAgY29uc3QgdW5pdFo6IFZlYzMgPSB2ZWMzLmNyZWF0ZSgwLCAwLCAxKTtcbiAgdmFyIHg6IFZlYzM7XG4gIHZhciB5OiBWZWMzO1xuICBpZiAodmVjMy5kaXN0YW5jZShub3JtYWwsIHVuaXRaKSA8IDAuMDAwMDEpIHtcbiAgICB4ID0gdmVjMy5jcmVhdGUocmFkaXVzLCAwLCAwKTtcbiAgICB5ID0gdmVjMy5jcmVhdGUoMCwgcmFkaXVzLCAwKTtcbiAgfSBlbHNlIHtcbiAgICB4ID0gdmVjMy5zY2FsZSh2ZWMzLm5vcm1hbGl6ZSh2ZWMzLmNyb3NzKG5vcm1hbCwgdW5pdFopKSwgcmFkaXVzKTtcbiAgICB5ID0gdmVjMy5zY2FsZSh2ZWMzLm5vcm1hbGl6ZSh2ZWMzLmNyb3NzKG5vcm1hbCwgeCkpLCByYWRpdXMpO1xuICB9XG4gIG5vcm1hbCA9IHZlYzMuc2NhbGUobm9ybWFsLCByYWRpdXMpO1xuXG4gIC8vIHN3aXp6bGUgeSBhbmQgeiBpbiB0aGUgbWF0cml4XG4gIC8vIHdoeSBkaWQgdGhleSBjaG9vc2UgdGhpcyByZWRpY3Vsb3VzIGNsaXBzcGFjZVxuICBjb25zdCBtb2RlbDogTWF0NCA9IG1hdDQuY3JlYXRlKFxuICAgIHhbMF0sIHhbMV0sIHhbMl0sIDAsXG4gICAgeVswXSwgeVsxXSwgeVsyXSwgMCxcbiAgICBub3JtYWxbMF0sIG5vcm1hbFsxXSwgbm9ybWFsWzJdLCAwLFxuICAgIGNlbnRlclswXSwgY2VudGVyWzFdLCBjZW50ZXJbMl0sIDFcbiAgKTtcbiAgcmV0dXJuIG5ldyBDdXJ2ZShudWxsLCBVTklUX0NJUkNMRV9QT0lOVFMsIFVOSVRfQ0lSQ0xFX0RFR1JFRSwgVU5JVF9DSVJDTEVfS05PVFMsIG1vZGVsKTtcblxufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/circle.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/curve.ts":
/*!*************************************!*\
  !*** ./src/geometry/nurbs/curve.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Curve: () => (/* binding */ Curve)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../points */ \"./src/geometry/points.ts\");\n/* harmony import */ var _polyLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../polyLine */ \"./src/geometry/polyLine.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/geometry/nurbs/utils.ts\");\n\n\n\n\n\nclass Curve extends _geometry__WEBPACK_IMPORTED_MODULE_0__.Geometry {\n    constructor(parent, weightedControlPoints, degree, knots = [], model, material = null) {\n        super(parent, model, material);\n        this.weightedControlPoints = weightedControlPoints;\n        this.degree = degree;\n        this.knots = knots;\n        if (this.knots.length == 0) {\n            this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        }\n        this.controlPoints = null;\n        this.controlCage = null;\n        this.polyline = null;\n        this.updateSamples();\n    }\n    getKnots() {\n        return this.knots;\n    }\n    getWeightedControlPoints() {\n        return this.weightedControlPoints;\n    }\n    getKnotCount() {\n        return this.knots.length;\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        return this.polyline.intersect(ray);\n    }\n    getBoundingBox() {\n        return this.controlCage.getBoundingBox();\n    }\n    getDegree() {\n        return this.degree;\n    }\n    destroy() {\n        this.controlCage.delete();\n        this.controlPoints.delete();\n        this.polyline.delete();\n        this.controlPoints.delete();\n    }\n    addControlPoint(point, weight) {\n        this.weightedControlPoints.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...point, weight));\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    updateLastControlPoint(point, weight) {\n        this.weightedControlPoints[this.weightedControlPoints.length - 1] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(...point, weight);\n        this.updateSamples();\n    }\n    removeLastControlPoint() {\n        this.weightedControlPoints.pop();\n        if (this.degree === this.weightedControlPoints.length)\n            this.degree--;\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    changeDegree(degree) {\n        while (degree >= this.weightedControlPoints.length)\n            degree--;\n        this.degree = degree;\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.genericKnotVector)(this.weightedControlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    getControlPointCount() {\n        return this.weightedControlPoints.length;\n    }\n    updateSamples() {\n        if (this.controlCage)\n            this.controlCage.delete();\n        if (this.polyline)\n            this.polyline.delete();\n        if (this.controlPoints)\n            this.controlPoints.delete();\n        const samples = [];\n        const sampleCount = Curve.SAMPLES_PER_EDGE * (this.weightedControlPoints.length - 1);\n        for (let i = 0; i <= sampleCount; i++) {\n            samples.push(this.sample(i / sampleCount));\n        }\n        const controlPointArray = this.weightedControlPoints.map((point) => {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(point[0] / point[3], point[1] / point[3], point[2] / point[3]);\n        });\n        this.polyline = new _polyLine__WEBPACK_IMPORTED_MODULE_2__.PolyLine(this, samples);\n        this.controlCage = new _polyLine__WEBPACK_IMPORTED_MODULE_2__.PolyLine(this, controlPointArray);\n        this.controlPoints = new _points__WEBPACK_IMPORTED_MODULE_1__.Points(this, controlPointArray);\n        this.controlPoints.setConstantScreenSize(true);\n    }\n    sample(t) {\n        const u = t * (this.knots.at(-1) - this.knots.at(0));\n        const knotSpan = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.span)(this.knots, u, this.degree);\n        const funcs = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.basisFuncs)(this.knots, u, this.degree);\n        let res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(0, 0, 0, 0);\n        for (let i = 0; i <= this.degree; i++) {\n            res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(res, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(this.weightedControlPoints[knotSpan - this.degree + i], funcs[i]));\n        }\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(res[0] / res[3], res[1] / res[3], res[2] / res[3]);\n    }\n    normalizeKnots() {\n        const start = this.knots[0];\n        const end = this.knots[this.knots.length - 1];\n        const dist = end - start;\n        for (let i = 0; i < this.knots.length; i++) {\n            this.knots[i] = (this.knots[i] - start) / dist;\n        }\n    }\n    insertKnot(knot) {\n        const idx = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.span)(this.knots, knot, this.degree);\n        const newWeightedControlPoints = [];\n        newWeightedControlPoints.push(this.weightedControlPoints[0]);\n        for (let i = 1; i < this.weightedControlPoints.length; i++) {\n            let alpha;\n            if (i <= idx - this.degree)\n                alpha = 1;\n            else if (i >= idx + 1)\n                alpha = 0;\n            else\n                alpha = (knot - this.knots[i]) / (this.knots[i + this.degree] - this.knots[i]);\n            newWeightedControlPoints.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(this.weightedControlPoints[i], alpha), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(this.weightedControlPoints[i - 1], 1 - alpha)));\n        }\n        newWeightedControlPoints.push(this.weightedControlPoints[this.weightedControlPoints.length - 1]);\n        this.weightedControlPoints = newWeightedControlPoints;\n        this.knots.push(knot);\n        this.knots.sort();\n        this.updateSamples();\n    }\n    getTypeName() {\n        return \"Curve\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.polyline.isWithinFrustum(frustum, inclusive);\n    }\n    elevateDegree(n) {\n        // TODO: clean up\n        const newDegree = this.degree + n;\n        const bezierAlphas = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.calcBezierAlphas)(this.degree, newDegree);\n        const bezierControls = [];\n        for (let i = 0; i < this.degree + 1; i++)\n            bezierControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create());\n        const elevatedBezierControls = [];\n        for (let i = 0; i < this.degree + n + 1; i++)\n            elevatedBezierControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create());\n        const nextBezierControls = [];\n        const alphas = [];\n        for (let i = 0; i < this.degree - 1; i++) {\n            nextBezierControls.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create());\n            alphas.push(0);\n        }\n        let distinctKnots = 1;\n        for (let i = 1; i < this.knots.length; i++) {\n            if (this.knots[i] != this.knots[i - 1])\n                distinctKnots++;\n        }\n        const newControlPoints = [];\n        for (let i = 0; i < this.weightedControlPoints.length + n * (distinctKnots - 1); i++) {\n            newControlPoints.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create());\n        }\n        const newKnots = [];\n        for (let i = 0; i < this.knots.length + n * distinctKnots; i++)\n            newKnots.push(0);\n        // Initialize First Segment\n        let mh = newDegree;\n        let kind = newDegree + 1;\n        let r = -1;\n        let a = this.degree;\n        let b = this.degree + 1;\n        let cind = 1;\n        let ua = this.knots[0];\n        newControlPoints[0] = this.weightedControlPoints[0];\n        for (let i = 0; i <= newDegree; i++)\n            newKnots[i] = ua;\n        for (let i = 0; i <= this.degree; i++)\n            bezierControls[i] = this.weightedControlPoints[i];\n        //main loop\n        while (b < this.knots.length - 1) {\n            const IDK = b;\n            while (b < this.knots.length - 1 && this.knots[b] == this.knots[b + 1])\n                b++;\n            const mul = b - IDK + 1;\n            mh += mul + n;\n            const ub = this.knots[b];\n            const oldr = r;\n            r = this.degree - mul;\n            const lbz = (oldr > 0) ? Math.floor((oldr + 2) / 2) : 1;\n            const rbz = (r > 0) ? newDegree - Math.floor((r + 1) / 2) : newDegree;\n            // insert knots  \n            if (r > 0) {\n                const num = ub - ua;\n                for (let k = this.degree; k > mul; k--)\n                    alphas[k - mul - 1] = num / (this.knots[a + k] - ua);\n                for (let j = 1; j <= r; j++) {\n                    const save = r - j;\n                    const s = mul + j;\n                    for (let k = this.degree; k >= s; k--) {\n                        bezierControls[k] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(bezierControls[k], alphas[k - s]), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(bezierControls[k - 1], 1 - alphas[k - s]));\n                    }\n                    nextBezierControls[save] = bezierControls[this.degree];\n                }\n            }\n            // Elevate Bezier \n            for (let i = lbz; i <= newDegree; i++) {\n                elevatedBezierControls[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(0, 0, 0, 0);\n                for (let j = Math.max(0, i - n); j <= Math.min(this.degree, i); j++) {\n                    elevatedBezierControls[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(elevatedBezierControls[i], wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(bezierControls[j], bezierAlphas[i][j]));\n                }\n            }\n            //  Remove knots\n            if (oldr > 1) {\n                var first = kind - 2;\n                var last = kind;\n                const den = ub - ua;\n                const bet = (ub - newKnots[kind - 1]) / den;\n                for (let tr = 1; tr < oldr; tr++) {\n                    let i = first;\n                    let j = last;\n                    let kj = j - kind + 1;\n                    while (j - i > tr) {\n                        if (i < cind) {\n                            const alf = (ub - newKnots[i]) / (ua - newKnots[i]);\n                            newControlPoints[i] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(newControlPoints[i], alf), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(newControlPoints[i - 1], 1 - alf));\n                        }\n                        if (j >= lbz) {\n                            if (j - tr <= kind - newDegree - oldr) {\n                                const gam = (ub - newKnots[j - tr]) / den;\n                                elevatedBezierControls[kj] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(elevatedBezierControls[kj], gam), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(elevatedBezierControls[kj + 1], 1 - gam));\n                            }\n                            else {\n                                elevatedBezierControls[kj] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(elevatedBezierControls[kj], bet), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(elevatedBezierControls[kj + 1], 1 - bet));\n                            }\n                        }\n                        i++;\n                        j--;\n                        kj--;\n                    }\n                    first--;\n                    last++;\n                }\n            }\n            if (a != this.degree) {\n                for (let i = 0; i < newDegree - oldr; i++) {\n                    newKnots[kind++] = ua;\n                }\n            }\n            for (let j = lbz; j <= rbz; j++) {\n                newControlPoints[cind++] = elevatedBezierControls[j];\n            }\n            if (b < this.knots.length - 1) {\n                for (let j = 0; j < r; j++)\n                    bezierControls[j] = nextBezierControls[j];\n                for (let j = r; j <= this.degree; j++) {\n                    bezierControls[j] = this.weightedControlPoints[b - this.degree + j];\n                }\n                a = b++;\n                ua = ub;\n            }\n            else {\n                for (let i = 0; i <= newDegree; i++) {\n                    newKnots[kind + i] = ub;\n                }\n            }\n        }\n        this.weightedControlPoints = newControlPoints;\n        this.knots = newKnots;\n        this.degree = newDegree;\n        this.updateSamples();\n    }\n}\nCurve.SAMPLES_PER_EDGE = 20;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UUFBUSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7aUJBQ3pCO2FBQ0Y7U0FFRjtRQUNELElBQUksQ0FBQyxxQkFBcUIsR0FBRyxnQkFBZ0IsQ0FBQztRQUM5QyxJQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQztRQUV4QixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFFdkIsQ0FBQzs7QUFoVHNCLHNCQUFnQixHQUFHLEVBQUUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L251cmJzL2N1cnZlLnRzPzAzZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0NCwgdmVjMywgVmVjMywgdmVjNCwgVmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgTWF0ZXJpYWxOYW1lIH0gZnJvbSBcIi4uLy4uL21hdGVyaWFscy9tYXRlcmlhbFwiO1xuaW1wb3J0IHsgQm91bmRpbmdCb3ggfSBmcm9tIFwiLi4vYm91bmRpbmdCb3hcIjtcbmltcG9ydCB7IEZydXN0dW0gfSBmcm9tIFwiLi4vZnJ1c3R1bVwiO1xuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vZ2VvbWV0cnlcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuLi9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IFBvaW50cyB9IGZyb20gXCIuLi9wb2ludHNcIjtcbmltcG9ydCB7IFBvbHlMaW5lIH0gZnJvbSBcIi4uL3BvbHlMaW5lXCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi4vcmF5XCI7XG5pbXBvcnQgeyBiYXNpc0Z1bmNzLCBjYWxjQmV6aWVyQWxwaGFzLCBnZW5lcmljS25vdFZlY3Rvciwgc3BhbiB9IGZyb20gXCIuL3V0aWxzXCI7XG5cbmV4cG9ydCBjbGFzcyBDdXJ2ZSBleHRlbmRzIEdlb21ldHJ5IHtcbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBTQU1QTEVTX1BFUl9FREdFID0gMjA7XG5cbiAgcHJpdmF0ZSBjb250cm9sQ2FnZTogUG9seUxpbmUgfCBudWxsO1xuICBwcml2YXRlIHBvbHlsaW5lOiBQb2x5TGluZSB8IG51bGw7XG4gIHByaXZhdGUgY29udHJvbFBvaW50czogUG9pbnRzIHwgbnVsbDtcblxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHBhcmVudDogR2VvbWV0cnkgfCBudWxsLFxuICAgIHByaXZhdGUgd2VpZ2h0ZWRDb250cm9sUG9pbnRzOiBWZWM0W10sXG4gICAgcHJpdmF0ZSBkZWdyZWU6IG51bWJlcixcbiAgICBwcml2YXRlIGtub3RzOiBudW1iZXJbXSA9IFtdLFxuICAgIG1vZGVsPzogTWF0NCxcbiAgICBtYXRlcmlhbDogTWF0ZXJpYWxOYW1lIHwgbnVsbCA9IG51bGxcbiAgKSB7XG4gICAgc3VwZXIocGFyZW50LCBtb2RlbCwgbWF0ZXJpYWwpO1xuXG5cbiAgICBpZiAodGhpcy5rbm90cy5sZW5ndGggPT0gMCkge1xuICAgICAgdGhpcy5rbm90cyA9IGdlbmVyaWNLbm90VmVjdG9yKHRoaXMud2VpZ2h0ZWRDb250cm9sUG9pbnRzLmxlbmd0aCwgdGhpcy5kZWdyZWUpO1xuICAgIH1cbiAgICB0aGlzLmNvbnRyb2xQb2ludHMgPSBudWxsO1xuICAgIHRoaXMuY29udHJvbENhZ2UgPSBudWxsO1xuICAgIHRoaXMucG9seWxpbmUgPSBudWxsO1xuICAgIHRoaXMudXBkYXRlU2FtcGxlcygpO1xuICB9XG5cbiAgcHVibGljIGdldEtub3RzKCk6IG51bWJlcltdIHtcbiAgICByZXR1cm4gdGhpcy5rbm90cztcbiAgfVxuXG4gIHB1YmxpYyBnZXRXZWlnaHRlZENvbnRyb2xQb2ludHMoKTogVmVjNFtdIHtcbiAgICByZXR1cm4gdGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHM7XG4gIH1cblxuICBwdWJsaWMgZ2V0S25vdENvdW50KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMua25vdHMubGVuZ3RoO1xuICB9XG5cbiAgcHVibGljIGludGVyc2VjdChyYXk6IFJheSk6IEludGVyc2VjdGlvbiB8IG51bGwge1xuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB0aGlzLnBvbHlsaW5lIS5pbnRlcnNlY3QocmF5KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCb3VuZGluZ0JveCgpOiBCb3VuZGluZ0JveCB7XG4gICAgcmV0dXJuIHRoaXMuY29udHJvbENhZ2UhLmdldEJvdW5kaW5nQm94KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0RGVncmVlKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuZGVncmVlO1xuICB9XG5cbiAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5jb250cm9sQ2FnZSEuZGVsZXRlKCk7XG4gICAgdGhpcy5jb250cm9sUG9pbnRzIS5kZWxldGUoKTtcbiAgICB0aGlzLnBvbHlsaW5lIS5kZWxldGUoKTtcbiAgICB0aGlzLmNvbnRyb2xQb2ludHMhLmRlbGV0ZSgpO1xuICB9XG5cbiAgcHVibGljIGFkZENvbnRyb2xQb2ludChwb2ludDogVmVjMywgd2VpZ2h0OiBudW1iZXIpIHtcbiAgICB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50cy5wdXNoKHZlYzQuY3JlYXRlKC4uLnBvaW50LCB3ZWlnaHQpKTtcbiAgICB0aGlzLmtub3RzID0gZ2VuZXJpY0tub3RWZWN0b3IodGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHMubGVuZ3RoLCB0aGlzLmRlZ3JlZSk7XG4gICAgdGhpcy51cGRhdGVTYW1wbGVzKCk7XG4gIH1cblxuICBwdWJsaWMgdXBkYXRlTGFzdENvbnRyb2xQb2ludChwb2ludDogVmVjMywgd2VpZ2h0OiBudW1iZXIpIHtcbiAgICB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50c1t0aGlzLndlaWdodGVkQ29udHJvbFBvaW50cy5sZW5ndGggLSAxXSA9IHZlYzQuY3JlYXRlKC4uLnBvaW50LCB3ZWlnaHQpO1xuICAgIHRoaXMudXBkYXRlU2FtcGxlcygpO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZUxhc3RDb250cm9sUG9pbnQoKTogdm9pZCB7XG4gICAgdGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHMucG9wKCk7XG4gICAgaWYgKHRoaXMuZGVncmVlID09PSB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50cy5sZW5ndGgpIHRoaXMuZGVncmVlLS07XG4gICAgdGhpcy5rbm90cyA9IGdlbmVyaWNLbm90VmVjdG9yKHRoaXMud2VpZ2h0ZWRDb250cm9sUG9pbnRzLmxlbmd0aCwgdGhpcy5kZWdyZWUpO1xuICAgIHRoaXMudXBkYXRlU2FtcGxlcygpO1xuICB9XG5cbiAgcHVibGljIGNoYW5nZURlZ3JlZShkZWdyZWU6IG51bWJlcikge1xuICAgIHdoaWxlIChkZWdyZWUgPj0gdGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHMubGVuZ3RoKSBkZWdyZWUtLTtcbiAgICB0aGlzLmRlZ3JlZSA9IGRlZ3JlZTtcbiAgICB0aGlzLmtub3RzID0gZ2VuZXJpY0tub3RWZWN0b3IodGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHMubGVuZ3RoLCB0aGlzLmRlZ3JlZSk7XG4gICAgdGhpcy51cGRhdGVTYW1wbGVzKCk7XG4gIH1cblxuXG4gIHB1YmxpYyBnZXRDb250cm9sUG9pbnRDb3VudCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50cy5sZW5ndGg7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZVNhbXBsZXMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY29udHJvbENhZ2UpIHRoaXMuY29udHJvbENhZ2UuZGVsZXRlKCk7XG4gICAgaWYgKHRoaXMucG9seWxpbmUpIHRoaXMucG9seWxpbmUuZGVsZXRlKCk7XG4gICAgaWYgKHRoaXMuY29udHJvbFBvaW50cykgdGhpcy5jb250cm9sUG9pbnRzLmRlbGV0ZSgpO1xuXG4gICAgY29uc3Qgc2FtcGxlczogVmVjM1tdID0gW107XG4gICAgY29uc3Qgc2FtcGxlQ291bnQ6IG51bWJlciA9IEN1cnZlLlNBTVBMRVNfUEVSX0VER0UgKiAodGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHMubGVuZ3RoIC0gMSk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gc2FtcGxlQ291bnQ7IGkrKykge1xuICAgICAgc2FtcGxlcy5wdXNoKHRoaXMuc2FtcGxlKGkgLyBzYW1wbGVDb3VudCkpO1xuICAgIH1cblxuICAgIGNvbnN0IGNvbnRyb2xQb2ludEFycmF5OiBWZWMzW10gPSB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50cy5tYXAoKHBvaW50OiBWZWM0KSA9PiB7XG4gICAgICByZXR1cm4gdmVjMy5jcmVhdGUocG9pbnRbMF0gLyBwb2ludFszXSwgcG9pbnRbMV0gLyBwb2ludFszXSwgcG9pbnRbMl0gLyBwb2ludFszXSk7XG4gICAgfSlcblxuICAgIHRoaXMucG9seWxpbmUgPSBuZXcgUG9seUxpbmUodGhpcywgc2FtcGxlcywpO1xuICAgIHRoaXMuY29udHJvbENhZ2UgPSBuZXcgUG9seUxpbmUodGhpcywgY29udHJvbFBvaW50QXJyYXkpO1xuICAgIHRoaXMuY29udHJvbFBvaW50cyA9IG5ldyBQb2ludHModGhpcywgY29udHJvbFBvaW50QXJyYXkpO1xuICAgIHRoaXMuY29udHJvbFBvaW50cy5zZXRDb25zdGFudFNjcmVlblNpemUodHJ1ZSk7XG5cbiAgfVxuXG4gIHByaXZhdGUgc2FtcGxlKHQ6IG51bWJlcik6IFZlYzMge1xuICAgIGNvbnN0IHU6IG51bWJlciA9IHQgKiAodGhpcy5rbm90cy5hdCgtMSkhIC0gdGhpcy5rbm90cy5hdCgwKSEpO1xuICAgIGNvbnN0IGtub3RTcGFuOiBudW1iZXIgPSBzcGFuKHRoaXMua25vdHMsIHUsIHRoaXMuZGVncmVlKVxuICAgIGNvbnN0IGZ1bmNzOiBudW1iZXJbXSA9IGJhc2lzRnVuY3ModGhpcy5rbm90cywgdSwgdGhpcy5kZWdyZWUpO1xuICAgIGxldCByZXM6IFZlYzQgPSB2ZWM0LmNyZWF0ZSgwLCAwLCAwLCAwKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8PSB0aGlzLmRlZ3JlZTsgaSsrKSB7XG4gICAgICByZXMgPSB2ZWM0LmFkZChyZXMsIHZlYzQuc2NhbGUodGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHNba25vdFNwYW4gLSB0aGlzLmRlZ3JlZSArIGldLCBmdW5jc1tpXSkpO1xuICAgIH1cbiAgICByZXR1cm4gdmVjMy5jcmVhdGUocmVzWzBdIC8gcmVzWzNdLCByZXNbMV0gLyByZXNbM10sIHJlc1syXSAvIHJlc1szXSk7XG4gIH1cblxuICBwdWJsaWMgbm9ybWFsaXplS25vdHMoKTogdm9pZCB7XG4gICAgY29uc3Qgc3RhcnQ6IG51bWJlciA9IHRoaXMua25vdHNbMF07XG4gICAgY29uc3QgZW5kOiBudW1iZXIgPSB0aGlzLmtub3RzW3RoaXMua25vdHMubGVuZ3RoIC0gMV07XG4gICAgY29uc3QgZGlzdCA9IGVuZCAtIHN0YXJ0O1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5rbm90cy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5rbm90c1tpXSA9ICh0aGlzLmtub3RzW2ldIC0gc3RhcnQpIC8gZGlzdDtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaW5zZXJ0S25vdChrbm90OiBudW1iZXIpOiB2b2lkIHtcbiAgICBjb25zdCBpZHg6IG51bWJlciA9IHNwYW4odGhpcy5rbm90cywga25vdCwgdGhpcy5kZWdyZWUpO1xuICAgIGNvbnN0IG5ld1dlaWdodGVkQ29udHJvbFBvaW50czogVmVjNFtdID0gW107XG4gICAgbmV3V2VpZ2h0ZWRDb250cm9sUG9pbnRzLnB1c2godGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHNbMF0pO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxldCBhbHBoYTogbnVtYmVyO1xuICAgICAgaWYgKGkgPD0gaWR4IC0gdGhpcy5kZWdyZWUpIGFscGhhID0gMTtcbiAgICAgIGVsc2UgaWYgKGkgPj0gaWR4ICsgMSkgYWxwaGEgPSAwO1xuICAgICAgZWxzZSBhbHBoYSA9IChrbm90IC0gdGhpcy5rbm90c1tpXSkgLyAodGhpcy5rbm90c1tpICsgdGhpcy5kZWdyZWVdIC0gdGhpcy5rbm90c1tpXSk7XG4gICAgICBuZXdXZWlnaHRlZENvbnRyb2xQb2ludHMucHVzaCh2ZWM0LmFkZChcbiAgICAgICAgdmVjNC5zY2FsZSh0aGlzLndlaWdodGVkQ29udHJvbFBvaW50c1tpXSwgYWxwaGEpLFxuICAgICAgICB2ZWM0LnNjYWxlKHRoaXMud2VpZ2h0ZWRDb250cm9sUG9pbnRzW2kgLSAxXSwgMSAtIGFscGhhKVxuICAgICAgKSk7XG4gICAgfVxuICAgIG5ld1dlaWdodGVkQ29udHJvbFBvaW50cy5wdXNoKHRoaXMud2VpZ2h0ZWRDb250cm9sUG9pbnRzW3RoaXMud2VpZ2h0ZWRDb250cm9sUG9pbnRzLmxlbmd0aCAtIDFdKTtcbiAgICB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50cyA9IG5ld1dlaWdodGVkQ29udHJvbFBvaW50cztcblxuICAgIHRoaXMua25vdHMucHVzaChrbm90KTtcbiAgICB0aGlzLmtub3RzLnNvcnQoKTtcblxuICAgIHRoaXMudXBkYXRlU2FtcGxlcygpO1xuXG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0VHlwZU5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJDdXJ2ZVwiO1xuICB9XG5cbiAgcHVibGljIGlzV2l0aGluRnJ1c3R1bShmcnVzdHVtOiBGcnVzdHVtLCBpbmNsdXNpdmU6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICBpZiAodGhpcy5pc0hpZGRlbigpKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMucG9seWxpbmUhLmlzV2l0aGluRnJ1c3R1bShmcnVzdHVtLCBpbmNsdXNpdmUpO1xuICB9XG5cbiAgcHVibGljIGVsZXZhdGVEZWdyZWUobjogbnVtYmVyKTogdm9pZCB7XG4gICAgLy8gVE9ETzogY2xlYW4gdXBcbiAgICBjb25zdCBuZXdEZWdyZWU6IG51bWJlciA9IHRoaXMuZGVncmVlICsgbjtcbiAgICBjb25zdCBiZXppZXJBbHBoYXMgPSBjYWxjQmV6aWVyQWxwaGFzKHRoaXMuZGVncmVlLCBuZXdEZWdyZWUpO1xuICAgIGNvbnN0IGJlemllckNvbnRyb2xzOiBWZWM0W10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZGVncmVlICsgMTsgaSsrKSBiZXppZXJDb250cm9scy5wdXNoKHZlYzQuY3JlYXRlKCkpO1xuICAgIGNvbnN0IGVsZXZhdGVkQmV6aWVyQ29udHJvbHM6IFZlYzRbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5kZWdyZWUgKyBuICsgMTsgaSsrKSBlbGV2YXRlZEJlemllckNvbnRyb2xzLnB1c2godmVjNC5jcmVhdGUoKSk7XG4gICAgY29uc3QgbmV4dEJlemllckNvbnRyb2xzOiBWZWM0W10gPSBbXTtcbiAgICBjb25zdCBhbHBoYXM6IG51bWJlcltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmRlZ3JlZSAtIDE7IGkrKykge1xuICAgICAgbmV4dEJlemllckNvbnRyb2xzLnB1c2godmVjNC5jcmVhdGUoKSk7XG4gICAgICBhbHBoYXMucHVzaCgwKTtcbiAgICB9XG5cbiAgICBsZXQgZGlzdGluY3RLbm90cyA9IDE7XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCB0aGlzLmtub3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5rbm90c1tpXSAhPSB0aGlzLmtub3RzW2kgLSAxXSkgZGlzdGluY3RLbm90cysrO1xuICAgIH1cblxuICAgIGNvbnN0IG5ld0NvbnRyb2xQb2ludHM6IFZlYzRbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHMubGVuZ3RoICsgbiAqIChkaXN0aW5jdEtub3RzIC0gMSk7IGkrKykge1xuICAgICAgbmV3Q29udHJvbFBvaW50cy5wdXNoKHZlYzQuY3JlYXRlKCkpO1xuICAgIH1cbiAgICBjb25zdCBuZXdLbm90czogbnVtYmVyW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMua25vdHMubGVuZ3RoICsgbiAqIGRpc3RpbmN0S25vdHM7IGkrKykgbmV3S25vdHMucHVzaCgwKTtcblxuXG4gICAgLy8gSW5pdGlhbGl6ZSBGaXJzdCBTZWdtZW50XG4gICAgbGV0IG1oOiBudW1iZXIgPSBuZXdEZWdyZWU7XG4gICAgbGV0IGtpbmQ6IG51bWJlciA9IG5ld0RlZ3JlZSArIDE7XG4gICAgbGV0IHI6IG51bWJlciA9IC0xO1xuICAgIGxldCBhOiBudW1iZXIgPSB0aGlzLmRlZ3JlZTtcbiAgICBsZXQgYjogbnVtYmVyID0gdGhpcy5kZWdyZWUgKyAxO1xuICAgIGxldCBjaW5kOiBudW1iZXIgPSAxO1xuICAgIGxldCB1YTogbnVtYmVyID0gdGhpcy5rbm90c1swXTtcbiAgICBuZXdDb250cm9sUG9pbnRzWzBdID0gdGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHNbMF07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gbmV3RGVncmVlOyBpKyspIG5ld0tub3RzW2ldID0gdWE7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gdGhpcy5kZWdyZWU7IGkrKykgYmV6aWVyQ29udHJvbHNbaV0gPSB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50c1tpXTtcblxuICAgIC8vbWFpbiBsb29wXG4gICAgd2hpbGUgKGIgPCB0aGlzLmtub3RzLmxlbmd0aCAtIDEpIHtcbiAgICAgIGNvbnN0IElESzogbnVtYmVyID0gYjtcbiAgICAgIHdoaWxlIChiIDwgdGhpcy5rbm90cy5sZW5ndGggLSAxICYmIHRoaXMua25vdHNbYl0gPT0gdGhpcy5rbm90c1tiICsgMV0pIGIrKztcbiAgICAgIGNvbnN0IG11bDogbnVtYmVyID0gYiAtIElESyArIDE7XG4gICAgICBtaCArPSBtdWwgKyBuO1xuICAgICAgY29uc3QgdWI6IG51bWJlciA9IHRoaXMua25vdHNbYl07XG4gICAgICBjb25zdCBvbGRyOiBudW1iZXIgPSByO1xuICAgICAgciA9IHRoaXMuZGVncmVlIC0gbXVsO1xuICAgICAgY29uc3QgbGJ6OiBudW1iZXIgPSAob2xkciA+IDApID8gTWF0aC5mbG9vcigob2xkciArIDIpIC8gMikgOiAxO1xuICAgICAgY29uc3QgcmJ6OiBudW1iZXIgPSAociA+IDApID8gbmV3RGVncmVlIC0gTWF0aC5mbG9vcigociArIDEpIC8gMikgOiBuZXdEZWdyZWU7XG4gICAgICAvLyBpbnNlcnQga25vdHMgIFxuICAgICAgaWYgKHIgPiAwKSB7XG4gICAgICAgIGNvbnN0IG51bTogbnVtYmVyID0gdWIgLSB1YTtcbiAgICAgICAgZm9yIChsZXQgayA9IHRoaXMuZGVncmVlOyBrID4gbXVsOyBrLS0pIGFscGhhc1trIC0gbXVsIC0gMV0gPSBudW0gLyAodGhpcy5rbm90c1thICsga10gLSB1YSk7XG4gICAgICAgIGZvciAobGV0IGogPSAxOyBqIDw9IHI7IGorKykge1xuICAgICAgICAgIGNvbnN0IHNhdmU6IG51bWJlciA9IHIgLSBqO1xuICAgICAgICAgIGNvbnN0IHM6IG51bWJlciA9IG11bCArIGo7XG4gICAgICAgICAgZm9yIChsZXQgayA9IHRoaXMuZGVncmVlOyBrID49IHM7IGstLSkge1xuICAgICAgICAgICAgYmV6aWVyQ29udHJvbHNba10gPSB2ZWM0LmFkZChcbiAgICAgICAgICAgICAgdmVjNC5zY2FsZShiZXppZXJDb250cm9sc1trXSwgYWxwaGFzW2sgLSBzXSksXG4gICAgICAgICAgICAgIHZlYzQuc2NhbGUoYmV6aWVyQ29udHJvbHNbayAtIDFdLCAxIC0gYWxwaGFzW2sgLSBzXSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIG5leHRCZXppZXJDb250cm9sc1tzYXZlXSA9IGJlemllckNvbnRyb2xzW3RoaXMuZGVncmVlXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gRWxldmF0ZSBCZXppZXIgXG4gICAgICBmb3IgKGxldCBpID0gbGJ6OyBpIDw9IG5ld0RlZ3JlZTsgaSsrKSB7XG4gICAgICAgIGVsZXZhdGVkQmV6aWVyQ29udHJvbHNbaV0gPSB2ZWM0LmNyZWF0ZSgwLCAwLCAwLCAwKTtcbiAgICAgICAgZm9yIChsZXQgaiA9IE1hdGgubWF4KDAsIGkgLSBuKTsgaiA8PSBNYXRoLm1pbih0aGlzLmRlZ3JlZSwgaSk7IGorKykge1xuICAgICAgICAgIGVsZXZhdGVkQmV6aWVyQ29udHJvbHNbaV0gPSB2ZWM0LmFkZChlbGV2YXRlZEJlemllckNvbnRyb2xzW2ldLFxuICAgICAgICAgICAgdmVjNC5zY2FsZShiZXppZXJDb250cm9sc1tqXSwgYmV6aWVyQWxwaGFzW2ldW2pdKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vICBSZW1vdmUga25vdHNcbiAgICAgIGlmIChvbGRyID4gMSkge1xuICAgICAgICB2YXIgZmlyc3Q6IG51bWJlciA9IGtpbmQgLSAyO1xuICAgICAgICB2YXIgbGFzdDogbnVtYmVyID0ga2luZDtcbiAgICAgICAgY29uc3QgZGVuOiBudW1iZXIgPSB1YiAtIHVhO1xuICAgICAgICBjb25zdCBiZXQ6IG51bWJlciA9ICh1YiAtIG5ld0tub3RzW2tpbmQgLSAxXSkgLyBkZW47XG4gICAgICAgIGZvciAobGV0IHRyID0gMTsgdHIgPCBvbGRyOyB0cisrKSB7XG4gICAgICAgICAgbGV0IGk6IG51bWJlciA9IGZpcnN0O1xuICAgICAgICAgIGxldCBqOiBudW1iZXIgPSBsYXN0O1xuICAgICAgICAgIGxldCBrajogbnVtYmVyID0gaiAtIGtpbmQgKyAxO1xuICAgICAgICAgIHdoaWxlIChqIC0gaSA+IHRyKSB7XG4gICAgICAgICAgICBpZiAoaSA8IGNpbmQpIHtcbiAgICAgICAgICAgICAgY29uc3QgYWxmID0gKHViIC0gbmV3S25vdHNbaV0pIC8gKHVhIC0gbmV3S25vdHNbaV0pO1xuICAgICAgICAgICAgICBuZXdDb250cm9sUG9pbnRzW2ldID0gdmVjNC5hZGQoXG4gICAgICAgICAgICAgICAgdmVjNC5zY2FsZShuZXdDb250cm9sUG9pbnRzW2ldLCBhbGYpLFxuICAgICAgICAgICAgICAgIHZlYzQuc2NhbGUobmV3Q29udHJvbFBvaW50c1tpIC0gMV0sIDEgLSBhbGYpXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaiA+PSBsYnopIHtcbiAgICAgICAgICAgICAgaWYgKGogLSB0ciA8PSBraW5kIC0gbmV3RGVncmVlIC0gb2xkcikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGdhbTogbnVtYmVyID0gKHViIC0gbmV3S25vdHNbaiAtIHRyXSkgLyBkZW47XG4gICAgICAgICAgICAgICAgZWxldmF0ZWRCZXppZXJDb250cm9sc1tral0gPSB2ZWM0LmFkZChcbiAgICAgICAgICAgICAgICAgIHZlYzQuc2NhbGUoZWxldmF0ZWRCZXppZXJDb250cm9sc1tral0sIGdhbSksXG4gICAgICAgICAgICAgICAgICB2ZWM0LnNjYWxlKGVsZXZhdGVkQmV6aWVyQ29udHJvbHNba2ogKyAxXSwgMSAtIGdhbSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsZXZhdGVkQmV6aWVyQ29udHJvbHNba2pdID0gdmVjNC5hZGQoXG4gICAgICAgICAgICAgICAgICB2ZWM0LnNjYWxlKGVsZXZhdGVkQmV6aWVyQ29udHJvbHNba2pdLCBiZXQpLFxuICAgICAgICAgICAgICAgICAgdmVjNC5zY2FsZShlbGV2YXRlZEJlemllckNvbnRyb2xzW2tqICsgMV0sIDEgLSBiZXQpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaSsrOyBqLS07IGtqLS07XG4gICAgICAgICAgfVxuICAgICAgICAgIGZpcnN0LS07IGxhc3QrKztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGEgIT0gdGhpcy5kZWdyZWUpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZXdEZWdyZWUgLSBvbGRyOyBpKyspIHtcbiAgICAgICAgICBuZXdLbm90c1traW5kKytdID0gdWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZvciAobGV0IGogPSBsYno7IGogPD0gcmJ6OyBqKyspIHtcbiAgICAgICAgbmV3Q29udHJvbFBvaW50c1tjaW5kKytdID0gZWxldmF0ZWRCZXppZXJDb250cm9sc1tqXTtcbiAgICAgIH1cbiAgICAgIGlmIChiIDwgdGhpcy5rbm90cy5sZW5ndGggLSAxKSB7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcjsgaisrKSBiZXppZXJDb250cm9sc1tqXSA9IG5leHRCZXppZXJDb250cm9sc1tqXTtcbiAgICAgICAgZm9yIChsZXQgaiA9IHI7IGogPD0gdGhpcy5kZWdyZWU7IGorKykge1xuICAgICAgICAgIGJlemllckNvbnRyb2xzW2pdID0gdGhpcy53ZWlnaHRlZENvbnRyb2xQb2ludHNbYiAtIHRoaXMuZGVncmVlICsgal07XG4gICAgICAgIH1cbiAgICAgICAgYSA9IGIrKztcbiAgICAgICAgdWEgPSB1YjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IG5ld0RlZ3JlZTsgaSsrKSB7XG4gICAgICAgICAgbmV3S25vdHNba2luZCArIGldID0gdWI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cbiAgICB0aGlzLndlaWdodGVkQ29udHJvbFBvaW50cyA9IG5ld0NvbnRyb2xQb2ludHM7XG4gICAgdGhpcy5rbm90cyA9IG5ld0tub3RzO1xuICAgIHRoaXMuZGVncmVlID0gbmV3RGVncmVlO1xuXG4gICAgdGhpcy51cGRhdGVTYW1wbGVzKCk7XG5cbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/curve.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/loft.ts":
/*!************************************!*\
  !*** ./src/geometry/nurbs/loft.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loft: () => (/* binding */ loft)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _surface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./surface */ \"./src/geometry/nurbs/surface.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/geometry/nurbs/utils.ts\");\n\n\n\nconst equals = function (a, b, e = 0.000001) { return Math.abs(a - b) < e; };\nconst loft = function (curves, degree) {\n    // match degrees\n    const degreeU = Math.min(degree, curves.length - 1);\n    let degreeV = 0;\n    for (let curve of curves)\n        degreeV = Math.max(degreeV, curve.getDegree());\n    for (let curve of curves)\n        if (curve.getDegree() < degreeV)\n            curve.elevateDegree(degreeV - curve.getDegree());\n    // match knots\n    for (let curve of curves)\n        curve.normalizeKnots();\n    for (let i = 0; i < curves[0].getKnotCount(); i++) {\n        var smallest = Number.POSITIVE_INFINITY;\n        var finished = true;\n        for (let curve of curves) {\n            if (i < curve.getKnotCount()) {\n                finished = false;\n                smallest = Math.min(smallest, curve.getKnots()[i]);\n            }\n        }\n        if (finished)\n            break;\n        for (let curve of curves) {\n            if (!equals(curve.getKnots()[i], smallest))\n                curve.insertKnot(smallest);\n        }\n    }\n    //loft\n    const points = [];\n    for (let i = 0; i < curves.length; i++) {\n        const curve = curves[i];\n        const curveControls = curve.getWeightedControlPoints();\n        points.push([]);\n        for (let j = 0; j < curveControls.length; j++) {\n            const model = curve.getModelRecursive();\n            const weight = curveControls[j][3];\n            var point = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(curveControls[j][0] / weight, curveControls[j][1] / weight, curveControls[j][2] / weight);\n            point = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.transformMat4(point, model);\n            points[i].push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec4.create(point[0] * weight, point[1] * weight, point[2] * weight, weight));\n        }\n    }\n    const knotsU = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.genericKnotVector)(curves.length, degreeU);\n    return new _surface__WEBPACK_IMPORTED_MODULE_0__.Surface(points, knotsU, curves[0].getKnots(), degreeU, degreeV);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxDQUFDLEdBQUcsTUFBTSxFQUM1QixhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxFQUM1QixhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUM3QixDQUFDO1lBQ0YsS0FBSyxHQUFHLDZDQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztZQUN6QyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLDZDQUFJLENBQUMsTUFBTSxDQUN4QixLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxFQUNqQixLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxFQUNqQixLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxFQUNqQixNQUFNLENBQ1AsQ0FBQyxDQUFDO1NBQ0o7S0FDRjtJQUVELE1BQU0sTUFBTSxHQUFhLHlEQUFpQixDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFbkUsT0FBTyxJQUFJLDZDQUFPLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzdFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9udXJicy9sb2Z0LnRzP2U1NDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0NCwgVmVjMywgdmVjMywgdmVjNCwgVmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgQ3VydmUgfSBmcm9tIFwiLi9jdXJ2ZVwiO1xuaW1wb3J0IHsgU3VyZmFjZSB9IGZyb20gXCIuL3N1cmZhY2VcIjtcbmltcG9ydCB7IGdlbmVyaWNLbm90VmVjdG9yIH0gZnJvbSBcIi4vdXRpbHNcIjtcblxuXG5cbmNvbnN0IGVxdWFscyA9IGZ1bmN0aW9uKGE6IG51bWJlciwgYjogbnVtYmVyLCBlOiBudW1iZXIgPSAwLjAwMDAwMSk6IGJvb2xlYW4geyByZXR1cm4gTWF0aC5hYnMoYSAtIGIpIDwgZTsgfTtcblxuZXhwb3J0IGNvbnN0IGxvZnQgPSBmdW5jdGlvbihjdXJ2ZXM6IEN1cnZlW10sIGRlZ3JlZTogbnVtYmVyKTogU3VyZmFjZSB7XG4gIC8vIG1hdGNoIGRlZ3JlZXNcbiAgY29uc3QgZGVncmVlVTogbnVtYmVyID0gTWF0aC5taW4oZGVncmVlLCBjdXJ2ZXMubGVuZ3RoIC0gMSk7XG4gIGxldCBkZWdyZWVWOiBudW1iZXIgPSAwO1xuICBmb3IgKGxldCBjdXJ2ZSBvZiBjdXJ2ZXMpIGRlZ3JlZVYgPSBNYXRoLm1heChkZWdyZWVWLCBjdXJ2ZS5nZXREZWdyZWUoKSk7XG4gIGZvciAobGV0IGN1cnZlIG9mIGN1cnZlcykgaWYgKGN1cnZlLmdldERlZ3JlZSgpIDwgZGVncmVlVikgY3VydmUuZWxldmF0ZURlZ3JlZShkZWdyZWVWIC0gY3VydmUuZ2V0RGVncmVlKCkpO1xuXG4gIC8vIG1hdGNoIGtub3RzXG4gIGZvciAobGV0IGN1cnZlIG9mIGN1cnZlcykgY3VydmUubm9ybWFsaXplS25vdHMoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjdXJ2ZXNbMF0uZ2V0S25vdENvdW50KCk7IGkrKykge1xuICAgIHZhciBzbWFsbGVzdDogbnVtYmVyID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO1xuICAgIHZhciBmaW5pc2hlZDogYm9vbGVhbiA9IHRydWU7XG4gICAgZm9yIChsZXQgY3VydmUgb2YgY3VydmVzKSB7XG4gICAgICBpZiAoaSA8IGN1cnZlLmdldEtub3RDb3VudCgpKSB7XG4gICAgICAgIGZpbmlzaGVkID0gZmFsc2U7XG4gICAgICAgIHNtYWxsZXN0ID0gTWF0aC5taW4oc21hbGxlc3QsIGN1cnZlLmdldEtub3RzKClbaV0pO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZmluaXNoZWQpIGJyZWFrO1xuICAgIGZvciAobGV0IGN1cnZlIG9mIGN1cnZlcykge1xuICAgICAgaWYgKCFlcXVhbHMoY3VydmUuZ2V0S25vdHMoKVtpXSwgc21hbGxlc3QpKSBjdXJ2ZS5pbnNlcnRLbm90KHNtYWxsZXN0KTtcbiAgICB9XG4gIH1cblxuICAvL2xvZnRcbiAgY29uc3QgcG9pbnRzOiBWZWM0W11bXSA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGN1cnZlcy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGN1cnZlOiBDdXJ2ZSA9IGN1cnZlc1tpXTtcbiAgICBjb25zdCBjdXJ2ZUNvbnRyb2xzOiBWZWM0W10gPSBjdXJ2ZS5nZXRXZWlnaHRlZENvbnRyb2xQb2ludHMoKTtcbiAgICBwb2ludHMucHVzaChbXSk7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBjdXJ2ZUNvbnRyb2xzLmxlbmd0aDsgaisrKSB7XG4gICAgICBjb25zdCBtb2RlbDogTWF0NCA9IGN1cnZlLmdldE1vZGVsUmVjdXJzaXZlKCk7XG4gICAgICBjb25zdCB3ZWlnaHQ6IG51bWJlciA9IGN1cnZlQ29udHJvbHNbal1bM107XG4gICAgICB2YXIgcG9pbnQ6IFZlYzMgPSB2ZWMzLmNyZWF0ZShcbiAgICAgICAgY3VydmVDb250cm9sc1tqXVswXSAvIHdlaWdodCxcbiAgICAgICAgY3VydmVDb250cm9sc1tqXVsxXSAvIHdlaWdodCxcbiAgICAgICAgY3VydmVDb250cm9sc1tqXVsyXSAvIHdlaWdodCxcbiAgICAgICk7XG4gICAgICBwb2ludCA9IHZlYzMudHJhbnNmb3JtTWF0NChwb2ludCwgbW9kZWwpO1xuICAgICAgcG9pbnRzW2ldLnB1c2godmVjNC5jcmVhdGUoXG4gICAgICAgIHBvaW50WzBdICogd2VpZ2h0LFxuICAgICAgICBwb2ludFsxXSAqIHdlaWdodCxcbiAgICAgICAgcG9pbnRbMl0gKiB3ZWlnaHQsXG4gICAgICAgIHdlaWdodFxuICAgICAgKSk7XG4gICAgfVxuICB9XG5cbiAgY29uc3Qga25vdHNVOiBudW1iZXJbXSA9IGdlbmVyaWNLbm90VmVjdG9yKGN1cnZlcy5sZW5ndGgsIGRlZ3JlZVUpO1xuXG4gIHJldHVybiBuZXcgU3VyZmFjZShwb2ludHMsIGtub3RzVSwgY3VydmVzWzBdLmdldEtub3RzKCksIGRlZ3JlZVUsIGRlZ3JlZVYpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/loft.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/surface.ts":
/*!***************************************!*\
  !*** ./src/geometry/nurbs/surface.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Surface: () => (/* binding */ Surface)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mesh */ \"./src/geometry/mesh.ts\");\n/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/geometry/nurbs/utils.ts\");\n\n\n\n\n\nclass Surface extends _geometry__WEBPACK_IMPORTED_MODULE_0__.Geometry {\n    constructor(weightedControlPoints, uKnots, vKnots, degreeU, degreeV, parent = null, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.identity(), material = null) {\n        super(parent, model, material);\n        this.weightedControlPoints = weightedControlPoints;\n        this.uKnots = uKnots;\n        this.vKnots = vKnots;\n        this.degreeU = degreeU;\n        this.degreeV = degreeV;\n        this.mesh = null;\n        this.edgeLowU = null;\n        this.edgeHighU = null;\n        this.edgeLowV = null;\n        this.edgeHighV = null;\n        this.update();\n    }\n    delete() {\n        var _a, _b, _c, _d, _e;\n        (_a = this.mesh) === null || _a === void 0 ? void 0 : _a.destroy();\n        (_b = this.edgeLowU) === null || _b === void 0 ? void 0 : _b.destroy();\n        (_c = this.edgeHighU) === null || _c === void 0 ? void 0 : _c.destroy();\n        (_d = this.edgeLowV) === null || _d === void 0 ? void 0 : _d.destroy();\n        (_e = this.edgeHighV) === null || _e === void 0 ? void 0 : _e.destroy();\n    }\n    getBoundingBox() {\n        return this.mesh.getBoundingBox();\n    }\n    intersect(ray) {\n        // TODO: come back to this...\n        if (this.isHidden())\n            return null;\n        return this.mesh.intersect(ray);\n    }\n    getTypeName() {\n        return \"Surface\";\n    }\n    update() {\n        this.delete();\n        const sampleCountU = _curve__WEBPACK_IMPORTED_MODULE_2__.Curve.SAMPLES_PER_EDGE * (this.weightedControlPoints.length - 1);\n        const sampleCountV = _curve__WEBPACK_IMPORTED_MODULE_2__.Curve.SAMPLES_PER_EDGE * (this.weightedControlPoints[0].length - 1);\n        const firstKnotU = this.uKnots[0];\n        const firstKnotV = this.vKnots[0];\n        const knotSizeU = this.uKnots[this.uKnots.length - 1] - firstKnotU;\n        const knotSizeV = this.vKnots[this.vKnots.length - 1] - firstKnotV;\n        const stepU = knotSizeU / sampleCountU;\n        const stepV = knotSizeV / sampleCountV;\n        const meshVerts = [];\n        const meshNormals = [];\n        const meshIndices = [];\n        for (let i = 0; i <= sampleCountU; i++) {\n            for (let j = 0; j <= sampleCountV; j++) {\n                meshVerts.push(this.sample(firstKnotU + i * stepU, firstKnotV + j * stepV));\n            }\n        }\n        for (let i = 0; i < sampleCountU; i++) {\n            for (let j = 0; j < sampleCountV; j++) {\n                meshIndices.push(i * (sampleCountV + 1) + j);\n                meshIndices.push(i * (sampleCountV + 1) + j + 1);\n                meshIndices.push((i + 1) * (sampleCountV + 1) + j);\n                meshIndices.push(i * (sampleCountV + 1) + j + 1);\n                meshIndices.push((i + 1) * (sampleCountV + 1) + j + 1);\n                meshIndices.push((i + 1) * (sampleCountV + 1) + j);\n            }\n        }\n        for (let i = 0; i <= sampleCountU; i++) {\n            for (let j = 0; j <= sampleCountV; j++) {\n                const v1 = (i == 0)\n                    ? wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[(i + 1) * (sampleCountV + 1) + j])\n                    : wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[(i - 1) * (sampleCountV + 1) + j]);\n                const v2 = (j == 0)\n                    ? wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[i * (sampleCountV + 1) + j + 1])\n                    : wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(meshVerts[i * (sampleCountV + 1) + j], meshVerts[i * (sampleCountV + 1) + j - 1]);\n                var normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(v1, v2));\n                if (i == 0)\n                    normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(normal, -1);\n                if (j == 0)\n                    normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(normal, -1);\n                meshNormals.push(normal);\n            }\n        }\n        this.mesh = new _mesh__WEBPACK_IMPORTED_MODULE_1__.Mesh(this, meshVerts, meshNormals, meshIndices);\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.mesh.isWithinFrustum(frustum, inclusive);\n    }\n    sample(u, v) {\n        const uSpan = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.span)(this.uKnots, u, this.degreeU);\n        const vSpan = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.span)(this.vKnots, v, this.degreeV);\n        const basisFuncsU = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.basisFuncs)(this.uKnots, u, this.degreeU);\n        const basisFuncsV = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.basisFuncs)(this.vKnots, v, this.degreeV);\n        var res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(0, 0, 0, 0);\n        for (let i = 0; i <= this.degreeU; i++) {\n            for (let j = 0; j <= this.degreeV; j++) {\n                res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.add(res, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.scale(this.weightedControlPoints[uSpan - this.degreeU + i][vSpan - this.degreeV + j], basisFuncsV[j] * basisFuncsU[i]));\n            }\n        }\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(res[0] / res[3], res[1] / res[3], res[2] / res[3]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/surface.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/utils.ts":
/*!*************************************!*\
  !*** ./src/geometry/nurbs/utils.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   basisFuncs: () => (/* binding */ basisFuncs),\n/* harmony export */   calcBezierAlphas: () => (/* binding */ calcBezierAlphas),\n/* harmony export */   genericKnotVector: () => (/* binding */ genericKnotVector),\n/* harmony export */   span: () => (/* binding */ span),\n/* harmony export */   toWeightedControlPoints: () => (/* binding */ toWeightedControlPoints)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/math */ \"./src/utils/math.ts\");\n\n\nconst span = function (knots, u, p) {\n    const n = knots.length - p - 2;\n    let l = p;\n    let h = n;\n    let m;\n    while (l < h) {\n        m = Math.floor((l + h) / 2);\n        if (u >= knots[m + 1])\n            l = m + 1;\n        else\n            h = m;\n    }\n    return l;\n};\nconst basisFuncs = function (knots, u, p) {\n    const funcs = [1];\n    const i = span(knots, u, p);\n    const left = (i, j) => { return u - knots[i - j + 1]; };\n    const right = (i, j) => { return knots[i + j] - u; };\n    for (let j = 1; j <= p; j++) {\n        let saved = 0;\n        for (let r = 0; r < j; r++) {\n            const temp = funcs[r] / (right(i, r + 1) + left(i, j - r));\n            funcs[r] = saved + right(i, r + 1) * temp;\n            saved = left(i, j - r) * temp;\n        }\n        funcs.push(saved);\n    }\n    return funcs;\n};\nconst genericKnotVector = function (pointCount, degree) {\n    const res = [];\n    for (let i = 0; i <= degree; i++)\n        res.push(0);\n    for (let i = 1; i < pointCount - degree; i++)\n        res.push(i);\n    for (let i = 0; i <= degree; i++)\n        res.push(pointCount - degree);\n    return res;\n};\nconst toWeightedControlPoints = function (points, weights) {\n    const res = [];\n    if (weights) {\n        for (let i = 0; i < weights.length; i++) {\n            const point = points[i];\n            res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(point[0] * weights[i], point[1] * weights[i], point[2] * weights[i], weights[i]));\n        }\n    }\n    else {\n        for (let point of points) {\n            res.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(...point, 1));\n        }\n    }\n    return res;\n};\nconst calcBezierAlphas = function (startDegree, endDegree) {\n    const bezierAlphas = [];\n    for (let i = 0; i < endDegree + 1; i++) {\n        const temp = [];\n        for (let j = 0; j < startDegree + 1; j++) {\n            temp.push(0);\n        }\n        bezierAlphas.push(temp);\n    }\n    bezierAlphas[0][0] = bezierAlphas[endDegree][startDegree] = 1;\n    for (let i = 1; i <= Math.floor(endDegree / 2); i++) {\n        const inv = 1 / (0,_utils_math__WEBPACK_IMPORTED_MODULE_0__.bin)(endDegree, i);\n        const mpi = Math.min(startDegree, i);\n        for (let j = Math.max(0, i - endDegree + startDegree); j <= mpi; j++)\n            bezierAlphas[i][j] = inv * (0,_utils_math__WEBPACK_IMPORTED_MODULE_0__.bin)(startDegree, j) * (0,_utils_math__WEBPACK_IMPORTED_MODULE_0__.bin)(endDegree - startDegree, i - j);\n    }\n    for (let i = Math.floor(endDegree / 2) + 1; i <= endDegree - 1; i++) {\n        const mpi = Math.min(startDegree, i);\n        for (let j = Math.max(0, i - endDegree + startDegree); j <= mpi; j++)\n            bezierAlphas[i][j] = bezierAlphas[endDegree - i][startDegree - j];\n    }\n    return bezierAlphas;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/utils.ts\n");

/***/ }),

/***/ "./src/geometry/plane.ts":
/*!*******************************!*\
  !*** ./src/geometry/plane.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Plane: () => (/* binding */ Plane)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass Plane {\n    constructor(origin, normal) {\n        this.origin = origin;\n        this.normal = normal;\n        this.normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.normalize(this.normal);\n    }\n    getOrigin() {\n        return this.origin;\n    }\n    getNormal() {\n        return this.normal;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvcGxhbmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFHakMsTUFBTSxLQUFLO0lBRWQsWUFDWSxNQUFZLEVBQ1osTUFBWTtRQURaLFdBQU0sR0FBTixNQUFNLENBQU07UUFDWixXQUFNLEdBQU4sTUFBTSxDQUFNO1FBRXBCLElBQUksQ0FBQyxNQUFNLEdBQUcsNkNBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Q0FFSiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L3BsYW5lLnRzPzg2M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiXG5cblxuZXhwb3J0IGNsYXNzIFBsYW5lIHtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIG9yaWdpbjogVmVjMyxcbiAgICAgICAgcHJpdmF0ZSBub3JtYWw6IFZlYzNcbiAgICApIHtcbiAgICAgICAgdGhpcy5ub3JtYWwgPSB2ZWMzLm5vcm1hbGl6ZSh0aGlzLm5vcm1hbCk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldE9yaWdpbigpOiBWZWMzIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXROb3JtYWwoKTogVmVjMyB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vcm1hbDtcbiAgICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/plane.ts\n");

/***/ }),

/***/ "./src/geometry/points.ts":
/*!********************************!*\
  !*** ./src/geometry/points.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Points: () => (/* binding */ Points)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _instancedMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instancedMesh */ \"./src/geometry/instancedMesh.ts\");\n\n\n\nconst unitPointVerts = [\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(1, 0, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 1, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 1),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(-1, 0, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, -1, 0),\n    wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, -1),\n];\nconst unitPointIndices = [\n    0, 1, 2,\n    0, 2, 4,\n    0, 4, 5,\n    0, 5, 1,\n    3, 1, 5,\n    3, 5, 4,\n    3, 4, 2,\n    3, 2, 1,\n];\n// use instanced mesh\nclass Points extends _geometry__WEBPACK_IMPORTED_MODULE_0__.Geometry {\n    constructor(parent, points, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.identity(), material = null) {\n        super(parent, model, material);\n        this.instancedMesh = null;\n        this.update(points);\n    }\n    update(points) {\n        if (this.instancedMesh)\n            this.instancedMesh.destroy();\n        const transforms = [];\n        for (let i = 0; i < points.length; i++) {\n            const pointXZY = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(points[i][0], points[i][2], points[i][1]);\n            var translation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.translate(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.identity(), pointXZY);\n            var scale = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.identity(), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0.01, 0.01, 0.01));\n            // make sure point scale is not affected by model scale\n            var modelScale = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.scaling(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.getScaling(this.getModelRecursive()));\n            var transform = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.multiply(translation, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.multiply(scale, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.inverse(modelScale)));\n            transforms.push(transform);\n        }\n        this.instancedMesh = new _instancedMesh__WEBPACK_IMPORTED_MODULE_1__.InstancedMesh(this, unitPointVerts, unitPointVerts, unitPointIndices, transforms);\n    }\n    delete() {\n        this.instancedMesh.destroy();\n    }\n    getTypeName() {\n        return \"Points\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        throw new Error(\"Method not implemented.\");\n    }\n    getBoundingBox() {\n        return this.instancedMesh.getBoundingBox();\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        return this.instancedMesh.intersect(ray);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ekIsQ0FDRixDQUFDO1lBRUYsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUM1QjtRQUVELElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSx5REFBYSxDQUFDLElBQUksRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQzdHLENBQUM7SUFFTSxNQUFNO1FBQ1gsSUFBSSxDQUFDLGFBQWMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRWUsV0FBVztRQUN6QixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRU0sZUFBZSxDQUFDLE9BQWdCLEVBQUUsU0FBa0I7UUFDekQsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDbEMsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFHZSxjQUFjO1FBQzVCLE9BQU8sSUFBSSxDQUFDLGFBQWMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUM5QyxDQUFDO0lBQ2UsU0FBUyxDQUFDLEdBQVE7UUFDaEMsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFDakMsT0FBTyxJQUFJLENBQUMsYUFBYyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9wb2ludHMudHM/ZDNlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBNYXRlcmlhbE5hbWUgfSBmcm9tIFwiLi4vbWF0ZXJpYWxzL21hdGVyaWFsXCI7XG5pbXBvcnQgeyBCb3VuZGluZ0JveCB9IGZyb20gXCIuL2JvdW5kaW5nQm94XCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi9yYXlcIjtcbmltcG9ydCB7IEluc3RhbmNlZE1lc2ggfSBmcm9tIFwiLi9pbnN0YW5jZWRNZXNoXCI7XG5pbXBvcnQgeyBJbnRlcnNlY3Rpb24gfSBmcm9tIFwiLi9pbnRlcnNlY3Rpb25cIjtcbmltcG9ydCB7IEZydXN0dW0gfSBmcm9tIFwiLi9mcnVzdHVtXCI7XG5cblxuY29uc3QgdW5pdFBvaW50VmVydHM6IFZlYzNbXSA9IFtcbiAgdmVjMy5jcmVhdGUoMSwgMCwgMCksXG4gIHZlYzMuY3JlYXRlKDAsIDEsIDApLFxuICB2ZWMzLmNyZWF0ZSgwLCAwLCAxKSxcbiAgdmVjMy5jcmVhdGUoLTEsIDAsIDApLFxuICB2ZWMzLmNyZWF0ZSgwLCAtMSwgMCksXG4gIHZlYzMuY3JlYXRlKDAsIDAsIC0xKSxcbl07XG5cbmNvbnN0IHVuaXRQb2ludEluZGljZXM6IG51bWJlcltdID0gW1xuICAwLCAxLCAyLFxuICAwLCAyLCA0LFxuICAwLCA0LCA1LFxuICAwLCA1LCAxLFxuXG4gIDMsIDEsIDUsXG4gIDMsIDUsIDQsXG4gIDMsIDQsIDIsXG4gIDMsIDIsIDEsXG5dXG5cbi8vIHVzZSBpbnN0YW5jZWQgbWVzaFxuZXhwb3J0IGNsYXNzIFBvaW50cyBleHRlbmRzIEdlb21ldHJ5IHtcblxuICBwcml2YXRlIGluc3RhbmNlZE1lc2g6IEluc3RhbmNlZE1lc2ggfCBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHBhcmVudDogR2VvbWV0cnkgfCBudWxsLFxuICAgIHBvaW50czogVmVjM1tdLFxuICAgIG1vZGVsOiBNYXQ0ID0gbWF0NC5pZGVudGl0eSgpLFxuICAgIG1hdGVyaWFsOiBNYXRlcmlhbE5hbWUgfCBudWxsID0gbnVsbFxuICApIHtcbiAgICBzdXBlcihwYXJlbnQsIG1vZGVsLCBtYXRlcmlhbCk7XG4gICAgdGhpcy5pbnN0YW5jZWRNZXNoID0gbnVsbDtcbiAgICB0aGlzLnVwZGF0ZShwb2ludHMpO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGUocG9pbnRzOiBWZWMzW10pOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pbnN0YW5jZWRNZXNoKSB0aGlzLmluc3RhbmNlZE1lc2guZGVzdHJveSgpO1xuXG4gICAgY29uc3QgdHJhbnNmb3JtczogTWF0NFtdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludHMubGVuZ3RoOyBpKyspIHtcblxuICAgICAgY29uc3QgcG9pbnRYWlk6IFZlYzMgPSB2ZWMzLmNyZWF0ZShwb2ludHNbaV1bMF0sIHBvaW50c1tpXVsyXSwgcG9pbnRzW2ldWzFdKTtcbiAgICAgIHZhciB0cmFuc2xhdGlvbjogTWF0NCA9IG1hdDQudHJhbnNsYXRlKG1hdDQuaWRlbnRpdHkoKSwgcG9pbnRYWlkpO1xuXG4gICAgICB2YXIgc2NhbGU6IE1hdDQgPSBtYXQ0LnNjYWxlKG1hdDQuaWRlbnRpdHkoKSwgdmVjMy5jcmVhdGUoMC4wMSwgMC4wMSwgMC4wMSkpO1xuXG4gICAgICAvLyBtYWtlIHN1cmUgcG9pbnQgc2NhbGUgaXMgbm90IGFmZmVjdGVkIGJ5IG1vZGVsIHNjYWxlXG4gICAgICB2YXIgbW9kZWxTY2FsZTogTWF0NCA9IG1hdDQuc2NhbGluZyhtYXQ0LmdldFNjYWxpbmcodGhpcy5nZXRNb2RlbFJlY3Vyc2l2ZSgpKSk7XG5cbiAgICAgIHZhciB0cmFuc2Zvcm06IE1hdDQgPSBtYXQ0Lm11bHRpcGx5KFxuICAgICAgICB0cmFuc2xhdGlvbixcbiAgICAgICAgbWF0NC5tdWx0aXBseShcbiAgICAgICAgICBzY2FsZSxcbiAgICAgICAgICBtYXQ0LmludmVyc2UobW9kZWxTY2FsZSlcbiAgICAgICAgKVxuICAgICAgKTtcblxuICAgICAgdHJhbnNmb3Jtcy5wdXNoKHRyYW5zZm9ybSk7XG4gICAgfVxuXG4gICAgdGhpcy5pbnN0YW5jZWRNZXNoID0gbmV3IEluc3RhbmNlZE1lc2godGhpcywgdW5pdFBvaW50VmVydHMsIHVuaXRQb2ludFZlcnRzLCB1bml0UG9pbnRJbmRpY2VzLCB0cmFuc2Zvcm1zKTtcbiAgfVxuXG4gIHB1YmxpYyBkZWxldGUoKTogdm9pZCB7XG4gICAgdGhpcy5pbnN0YW5jZWRNZXNoIS5kZXN0cm95KCk7XG4gIH1cblxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0VHlwZU5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJQb2ludHNcIjtcbiAgfVxuXG4gIHB1YmxpYyBpc1dpdGhpbkZydXN0dW0oZnJ1c3R1bTogRnJ1c3R1bSwgaW5jbHVzaXZlOiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgaWYgKHRoaXMuaXNIaWRkZW4oKSkgcmV0dXJuIGZhbHNlO1xuICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuXCIpO1xuICB9XG5cblxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0Qm91bmRpbmdCb3goKTogQm91bmRpbmdCb3gge1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlZE1lc2ghLmdldEJvdW5kaW5nQm94KCk7XG4gIH1cbiAgcHVibGljIG92ZXJyaWRlIGludGVyc2VjdChyYXk6IFJheSk6IEludGVyc2VjdGlvbiB8IG51bGwge1xuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlZE1lc2ghLmludGVyc2VjdChyYXkpO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/points.ts\n");

/***/ }),

/***/ "./src/geometry/polyLine.ts":
/*!**********************************!*\
  !*** ./src/geometry/polyLine.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PolyLine: () => (/* binding */ PolyLine)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lineBoundingBoxHeirarchy */ \"./src/geometry/lineBoundingBoxHeirarchy.ts\");\n\n\n\n\n\n\nclass PolyLine extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(parent, points, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.identity(), material = null) {\n        super(parent, model, material);\n        this.points = points;\n        this.renderLines = 0;\n        this.update();\n    }\n    intersect(ray) {\n        if (this.isHidden())\n            return null;\n        return this.boundingBoxHeirarchy.almostIntersect(ray, 10);\n    }\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    getSegmentCount() {\n        return this.points.length - 1;\n    }\n    getTypeName() {\n        return \"PolyLine\";\n    }\n    isWithinFrustum(frustum, inclusive) {\n        if (this.isHidden())\n            return false;\n        return this.boundingBoxHeirarchy.isWithinFrustum(frustum, inclusive);\n    }\n    updateLastPoint(point) {\n        this.points[this.points.length - 1] = point;\n        this.update();\n    }\n    removeLastPoint() {\n        this.points.pop();\n        this.update();\n    }\n    addPoint(point) {\n        this.points.push(point);\n        this.update();\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n    }\n    update() {\n        const verts = [];\n        const indices = [];\n        for (let i = 0; i < this.points.length; i++) {\n            verts.push(...this.points[i], 1.0);\n            indices.push(i, i + 1);\n        }\n        indices.pop();\n        indices.pop();\n        if (this.renderLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n        const renderLinesObj = new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(this, new Float32Array(verts), new Int32Array(indices));\n        this.renderLines = renderLinesObj.getRenderID();\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(renderLinesObj);\n        this.updateBoundingBox();\n        this.boundingBoxHeirarchy = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__.LineBoundingBoxHeirarchy(this, this.points, indices);\n    }\n    updateBoundingBox() {\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        const model = this.getModelRecursive();\n        this.points.forEach((point) => {\n            this.boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.transformMat4(point, model));\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SyxDQUFDLEVBQ3ZCLElBQUksVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUN4QjtRQUNELElBQUksQ0FBQyxXQUFXLEdBQUcsY0FBYyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hELDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRW5ELElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLCtFQUF3QixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZGLENBQUM7SUFFTyxpQkFBaUI7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLHFEQUFXLEVBQUUsQ0FBQztRQUNyQyxNQUFNLEtBQUssR0FBUyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM3QyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQVcsRUFBRSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLDZDQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzdELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvcG9seUxpbmUudHM/YTFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcbmltcG9ydCB7IE1hdGVyaWFsTmFtZSB9IGZyb20gXCIuLi9tYXRlcmlhbHMvbWF0ZXJpYWxcIjtcbmltcG9ydCB7IFJlbmRlckxpbmVzIH0gZnJvbSBcIi4uL3JlbmRlci9yZW5kZXJMaW5lc1wiO1xuaW1wb3J0IHsgUmVuZGVySUQgfSBmcm9tIFwiLi4vc2NlbmUvc2NlbmVcIjtcbmltcG9ydCB7IHByaW50TWF0NCB9IGZyb20gXCIuLi91dGlscy9wcmludFwiO1xuaW1wb3J0IHsgQm91bmRpbmdCb3ggfSBmcm9tIFwiLi9ib3VuZGluZ0JveFwiO1xuaW1wb3J0IHsgRnJ1c3R1bSB9IGZyb20gXCIuL2ZydXN0dW1cIjtcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4vZ2VvbWV0cnlcIjtcbmltcG9ydCB7IEludGVyc2VjdGlvbiB9IGZyb20gXCIuL2ludGVyc2VjdGlvblwiO1xuaW1wb3J0IHsgTGluZUJvdW5kaW5nQm94SGVpcmFyY2h5IH0gZnJvbSBcIi4vbGluZUJvdW5kaW5nQm94SGVpcmFyY2h5XCI7XG5pbXBvcnQgeyBSYXkgfSBmcm9tIFwiLi9yYXlcIjtcblxuXG5leHBvcnQgY2xhc3MgUG9seUxpbmUgZXh0ZW5kcyBHZW9tZXRyeSB7XG5cbiAgcHJpdmF0ZSByZW5kZXJMaW5lcyE6IFJlbmRlcklEO1xuICBwcml2YXRlIGJvdW5kaW5nQm94ITogQm91bmRpbmdCb3g7XG4gIHByaXZhdGUgYm91bmRpbmdCb3hIZWlyYXJjaHkhOiBMaW5lQm91bmRpbmdCb3hIZWlyYXJjaHk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcGFyZW50OiBHZW9tZXRyeSB8IG51bGwsXG4gICAgcHJpdmF0ZSBwb2ludHM6IFZlYzNbXSxcbiAgICBtb2RlbDogTWF0NCA9IG1hdDQuaWRlbnRpdHkoKSxcbiAgICBtYXRlcmlhbDogTWF0ZXJpYWxOYW1lIHwgbnVsbCA9IG51bGxcbiAgKSB7XG4gICAgc3VwZXIocGFyZW50LCBtb2RlbCwgbWF0ZXJpYWwpO1xuICAgIHRoaXMucmVuZGVyTGluZXMgPSAwO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICBwdWJsaWMgaW50ZXJzZWN0KHJheTogUmF5KTogSW50ZXJzZWN0aW9uIHwgbnVsbCB7XG4gICAgaWYgKHRoaXMuaXNIaWRkZW4oKSkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHRoaXMuYm91bmRpbmdCb3hIZWlyYXJjaHkuYWxtb3N0SW50ZXJzZWN0KHJheSwgMTApXG4gIH1cblxuICBwdWJsaWMgZ2V0Qm91bmRpbmdCb3goKTogQm91bmRpbmdCb3gge1xuICAgIHJldHVybiB0aGlzLmJvdW5kaW5nQm94O1xuICB9XG5cbiAgcHVibGljIGdldFNlZ21lbnRDb3VudCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnBvaW50cy5sZW5ndGggLSAxO1xuICB9XG4gIHB1YmxpYyBvdmVycmlkZSBnZXRUeXBlTmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBcIlBvbHlMaW5lXCI7XG4gIH1cblxuICBwdWJsaWMgaXNXaXRoaW5GcnVzdHVtKGZydXN0dW06IEZydXN0dW0sIGluY2x1c2l2ZTogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLmlzSGlkZGVuKCkpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeS5pc1dpdGhpbkZydXN0dW0oZnJ1c3R1bSwgaW5jbHVzaXZlKTtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVMYXN0UG9pbnQocG9pbnQ6IFZlYzMpOiB2b2lkIHtcbiAgICB0aGlzLnBvaW50c1t0aGlzLnBvaW50cy5sZW5ndGggLSAxXSA9IHBvaW50O1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlTGFzdFBvaW50KCk6IHZvaWQge1xuICAgIHRoaXMucG9pbnRzLnBvcCgpO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICBwdWJsaWMgYWRkUG9pbnQocG9pbnQ6IFZlYzMpOiB2b2lkIHtcbiAgICB0aGlzLnBvaW50cy5wdXNoKHBvaW50KTtcbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIGRlbGV0ZSgpOiB2b2lkIHtcbiAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLnJlbW92ZUxpbmVzKHRoaXMucmVuZGVyTGluZXMpO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGUoKTogdm9pZCB7XG5cbiAgICBjb25zdCB2ZXJ0czogbnVtYmVyW10gPSBbXTtcbiAgICBjb25zdCBpbmRpY2VzOiBudW1iZXJbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5wb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZlcnRzLnB1c2goLi4udGhpcy5wb2ludHNbaV0sIDEuMCk7XG4gICAgICBpbmRpY2VzLnB1c2goaSwgaSArIDEpO1xuICAgIH1cbiAgICBpbmRpY2VzLnBvcCgpOyBpbmRpY2VzLnBvcCgpO1xuXG4gICAgaWYgKHRoaXMucmVuZGVyTGluZXMpIElOU1RBTkNFLmdldFNjZW5lKCkucmVtb3ZlTGluZXModGhpcy5yZW5kZXJMaW5lcyk7XG4gICAgY29uc3QgcmVuZGVyTGluZXNPYmogPSBuZXcgUmVuZGVyTGluZXMoXG4gICAgICB0aGlzLFxuICAgICAgbmV3IEZsb2F0MzJBcnJheSh2ZXJ0cyksXG4gICAgICBuZXcgSW50MzJBcnJheShpbmRpY2VzKSxcbiAgICApXG4gICAgdGhpcy5yZW5kZXJMaW5lcyA9IHJlbmRlckxpbmVzT2JqLmdldFJlbmRlcklEKCk7XG4gICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5hZGRSZW5kZXJMaW5lcyhyZW5kZXJMaW5lc09iaik7XG5cbiAgICB0aGlzLnVwZGF0ZUJvdW5kaW5nQm94KCk7XG4gICAgdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeSA9IG5ldyBMaW5lQm91bmRpbmdCb3hIZWlyYXJjaHkodGhpcywgdGhpcy5wb2ludHMsIGluZGljZXMpO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGVCb3VuZGluZ0JveCgpOiB2b2lkIHtcbiAgICB0aGlzLmJvdW5kaW5nQm94ID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgY29uc3QgbW9kZWw6IE1hdDQgPSB0aGlzLmdldE1vZGVsUmVjdXJzaXZlKCk7XG4gICAgdGhpcy5wb2ludHMuZm9yRWFjaCgocG9pbnQ6IFZlYzMpID0+IHtcbiAgICAgIHRoaXMuYm91bmRpbmdCb3guYWRkVmVjMyh2ZWMzLnRyYW5zZm9ybU1hdDQocG9pbnQsIG1vZGVsKSk7XG4gICAgfSk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/polyLine.ts\n");

/***/ }),

/***/ "./src/geometry/ray.ts":
/*!*****************************!*\
  !*** ./src/geometry/ray.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ray: () => (/* binding */ Ray)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _intersection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intersection */ \"./src/geometry/intersection.ts\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plane */ \"./src/geometry/plane.ts\");\n\n\n\n\nclass Ray {\n    constructor(origin, direction) {\n        this.origin = origin;\n        this.direction = direction;\n        this.direction = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(this.direction);\n    }\n    print() {\n        console.log(`RAY: origin: ${this.origin.toString()}, direction: ${this.direction.map((n) => {\n            return Math.round(n * 100);\n        }).toString()}`);\n    }\n    getOrigin() {\n        return this.origin;\n    }\n    getDirection() {\n        return this.direction;\n    }\n    at(time) {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.direction, time));\n    }\n    intersectPlane(plane, allowNegative = false) {\n        const numerator = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(plane.getOrigin(), this.origin), plane.getNormal());\n        const denominator = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(this.direction, plane.getNormal());\n        if (denominator === 0) { // parallel case\n            return null;\n        }\n        const t = numerator / denominator;\n        if (allowNegative)\n            return t;\n        if (t < 0)\n            return null;\n        return t;\n    }\n    almostIntersectBoundingBox(bb, pixels) {\n        var _a, _b, _c, _d, _e, _f;\n        const dxMin = Math.abs(this.origin[0] - bb.getXMin());\n        const dyMin = Math.abs(this.origin[1] - bb.getYMin());\n        const dzMin = Math.abs(this.origin[2] - bb.getZMin());\n        const dxMax = Math.abs(this.origin[0] - bb.getXMax());\n        const dyMax = Math.abs(this.origin[1] - bb.getYMax());\n        const dzMax = Math.abs(this.origin[2] - bb.getZMax());\n        const farthest = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(dxMin < dxMax ? bb.getXMax() : bb.getXMin(), dyMin < dyMax ? bb.getYMax() : bb.getYMin(), dzMin < dzMax ? bb.getZMax() : bb.getZMin());\n        const dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(this.origin, farthest);\n        const maxDist = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().pixelSizeAtDist(dist) * pixels;\n        const min = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin() - maxDist, bb.getYMin() - maxDist, bb.getZMin() - maxDist);\n        const max = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax() + maxDist, bb.getYMax() + maxDist, bb.getZMax() + maxDist);\n        if (this.direction[0] < 0)\n            [min[0], max[0]] = [max[0], min[0]];\n        if (this.direction[1] < 0)\n            [min[1], max[1]] = [max[1], min[1]];\n        if (this.direction[2] < 0)\n            [min[2], max[2]] = [max[2], min[2]];\n        var xMin = (_a = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _a !== void 0 ? _a : -Infinity;\n        var yMin = (_b = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _b !== void 0 ? _b : -Infinity;\n        var zMin = (_c = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _c !== void 0 ? _c : -Infinity;\n        var xMax = (_d = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _d !== void 0 ? _d : Infinity;\n        var yMax = (_e = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _e !== void 0 ? _e : Infinity;\n        var zMax = (_f = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _f !== void 0 ? _f : Infinity;\n        const end = Math.min(xMax, Math.min(yMax, zMax));\n        const start = Math.max(xMin, Math.max(yMin, zMin));\n        if (end < 0 || start > end)\n            return null;\n        return Math.max(start, 0.00001); // so its truthy\n    }\n    // always posotive\n    intersectBoundingBox(bb) {\n        var _a, _b, _c, _d, _e, _f;\n        const min = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMin());\n        const max = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMax());\n        if (this.direction[0] < 0)\n            [min[0], max[0]] = [max[0], min[0]];\n        if (this.direction[1] < 0)\n            [min[1], max[1]] = [max[1], min[1]];\n        if (this.direction[2] < 0)\n            [min[2], max[2]] = [max[2], min[2]];\n        var xMin = (_a = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _a !== void 0 ? _a : -Infinity;\n        var yMin = (_b = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _b !== void 0 ? _b : -Infinity;\n        var zMin = (_c = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _c !== void 0 ? _c : -Infinity;\n        var xMax = (_d = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(1, 0, 0)), true)) !== null && _d !== void 0 ? _d : Infinity;\n        var yMax = (_e = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 1, 0)), true)) !== null && _e !== void 0 ? _e : Infinity;\n        var zMax = (_f = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_2__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)), true)) !== null && _f !== void 0 ? _f : Infinity;\n        const end = Math.min(xMax, Math.min(yMax, zMax));\n        const start = Math.max(xMin, Math.max(yMin, zMin));\n        if (end < 0 || start > end)\n            return null;\n        return Math.max(start, 0.00001); // so its truthy\n    }\n    intersectScene(scene) {\n        const intersection = scene.getBoundingBoxHeirarchy().firstPositiveIntersection(this);\n        if (intersection !== null)\n            return intersection;\n        return null;\n    }\n    intersectTriangle(p1, p2, p3) {\n        const v12 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p2, p1);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p3, p1);\n        const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(v12, v13));\n        const denom = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, this.direction);\n        if (denom === 0)\n            return null;\n        const t = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p1, this.origin), normal) / denom;\n        if (t < 0)\n            return null;\n        const point = this.at(t);\n        const d1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, p1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p2, p1)));\n        const d2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, p2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p3, p2)));\n        const d3 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(point, p3), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p1, p3)));\n        if (\n        // remove one of these lines for back face culling.\n        d1 > 0 && d2 > 0 && d3 > 0 ||\n            d1 < 0 && d2 < 0 && d3 < 0)\n            return t;\n        else\n            return null;\n    }\n    static transform(ray, mat) {\n        const newOrigin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...ray.origin, 1), mat);\n        const newDirection = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.transformMat4(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...ray.direction, 0), mat);\n        return new Ray(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newOrigin[0], newOrigin[1], newOrigin[2]), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(newDirection[0], newDirection[1], newDirection[2]));\n    }\n    intersect(other) {\n        const p = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, this.direction);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(other.origin, this.origin);\n        const v43 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p, this.origin);\n        const v21 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(other.origin, other.direction), other.origin);\n        const d1343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v43);\n        const d4321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v21);\n        const d1321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v21);\n        const d4343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v43);\n        const d2121 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v21, v21);\n        var mua = (d1343 * d4321 - d1321 * d4343) / (d2121 * d4343 - d4321 * d4321);\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(other.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(v21, mua));\n    }\n    almostIntersectLine(id, start, end, pixels) {\n        const p = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, this.direction);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(start, this.origin);\n        const v43 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(p, this.origin);\n        const v21 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(end, start);\n        const d1343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v43);\n        const d4321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v21);\n        const d1321 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v13, v21);\n        const d4343 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v43, v43);\n        const d2121 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.dot(v21, v21);\n        var mua = (d1343 * d4321 - d1321 * d4343) / (d2121 * d4343 - d4321 * d4321);\n        const mub = (d1343 + mua * d4321) / d4343;\n        mua = Math.max(Math.min(mua, 1), 0);\n        // p line\n        const pLine = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(start, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(v21, mua));\n        //p ray\n        const pRay = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(v43, mub));\n        const distToIntersection = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(this.origin, pLine);\n        const closest = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.distance(pLine, pRay);\n        const sizeOfPixel = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().pixelSizeAtDist(distToIntersection);\n        if (closest < sizeOfPixel * pixels) {\n            return new _intersection__WEBPACK_IMPORTED_MODULE_1__.Intersection(mub, \"line\", id, pLine, closest, closest * sizeOfPixel);\n        }\n        else {\n            return null;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/ray.ts\n");

/***/ }),

/***/ "./src/geometry/sceneBoundingBoxHeirarcy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/sceneBoundingBoxHeirarcy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SceneBoundingBoxHeirarchy: () => (/* binding */ SceneBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass BBHNode {\n    constructor(geometry, depth) {\n        this.depth = depth;\n        this.setup(geometry, depth);\n    }\n    setup(geometry, depth) {\n        this.axis = depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_1__.BoundingBox();\n        geometry.forEach((geo) => { this.boundingBox.addBoundingBox(geo.getBoundingBox()); });\n        if (geometry.length <= SceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF) {\n            // leaf\n            this.geometry = geometry;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // not a leaf\n            this.geometry = null;\n            const center = this.boundingBox.getCenter()[this.axis];\n            const child1Geometry = [];\n            const child2Geometry = [];\n            geometry.forEach((geo) => {\n                if (geo.getBoundingBox().getCenter()[this.axis] < center) {\n                    child1Geometry.push(geo);\n                }\n                else {\n                    child2Geometry.push(geo);\n                }\n            });\n            this.child1 = new BBHNode(child1Geometry, depth + 1);\n            this.child2 = new BBHNode(child2Geometry, depth + 1);\n        }\n    }\n    firstIntersectionsWithinMargin(ray, margin) {\n        const intersections = [];\n        if (ray.almostIntersectBoundingBox(this.boundingBox, 10) === null)\n            return intersections;\n        if (this.isLeaf()) {\n            this.geometry.forEach((geo) => {\n                const intersection = geo.intersect(ray);\n                if (intersection !== null)\n                    intersections.push(intersection);\n            });\n        }\n        else {\n            intersections.push(...this.child1.firstIntersectionsWithinMargin(ray, margin));\n            intersections.push(...this.child2.firstIntersectionsWithinMargin(ray, margin));\n        }\n        intersections.sort((a, b) => {\n            return a.time - b.time;\n        });\n        // TODO: filter out stuff thats too far away, the margin part\n        const nearIntersections = [];\n        for (const intersection of intersections) {\n            if (intersection.time <= intersections[0].time * (1 + margin / 100)) {\n                nearIntersections.push(intersection);\n            }\n        }\n        return nearIntersections;\n    }\n    getAllGeometry() {\n        if (this.isLeaf())\n            return this.geometry.map((geo) => { return geo.getID(); });\n        return [...this.child1.getAllGeometry(), ...this.child2.getAllGeometry()];\n    }\n    getWithinFrustum(frustum, sub, inclusive) {\n        if (frustum.containsBoundingBoxFully(this.boundingBox)) {\n            return this.getAllGeometry();\n        }\n        if (!frustum.intersectsBoundingBox(this.boundingBox)) {\n            return [];\n        }\n        if (this.isLeaf()) {\n            const res = [];\n            for (const geo of this.geometry) {\n                if (geo.isWithinFrustum(frustum, inclusive)) {\n                    res.push(geo.getID());\n                }\n            }\n            return res;\n        }\n        else {\n            return [\n                ...this.child1.getWithinFrustum(frustum, sub, inclusive),\n                ...this.child2.getWithinFrustum(frustum, sub, inclusive)\n            ];\n        }\n    }\n    firstPositiveIntersection(ray) {\n        if (ray.intersectBoundingBox(this.boundingBox) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            this.geometry.forEach((geo) => {\n                var t = geo.intersect(ray);\n                if (t !== null && t.time > 0) {\n                    if (res === null)\n                        res = t;\n                    else\n                        res = res.time < t.time ? res : t;\n                }\n            });\n            return res;\n        }\n        else {\n            const t1 = this.child1.firstPositiveIntersection(ray);\n            const t2 = this.child2.firstPositiveIntersection(ray);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return t1.time < t2.time ? t1 : t2;\n        }\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.geometry)\n            str += `${this.geometry.length}geometry`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n    add(geo) {\n        if (this.isLeaf()) {\n            if (this.geometry.length < SceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF) {\n                // leaf node with space\n                this.geometry.push(geo);\n            }\n            else {\n                this.geometry.push(geo);\n                this.setup(this.geometry, this.depth);\n            }\n        }\n        else {\n            // non leaf node\n            const nodeCenter = this.boundingBox.getCenter()[this.axis];\n            const geoCenter = geo.getBoundingBox().getCenter()[this.axis];\n            if (geoCenter < nodeCenter) {\n                this.child1.add(geo);\n            }\n            else {\n                this.child2.add(geo);\n            }\n        }\n        this.boundingBox.addBoundingBox(geo.getBoundingBox());\n    }\n    getDepth() {\n        return this.depth;\n    }\n    getChild1() {\n        return this.child1;\n    }\n    getChild2() {\n        return this.child2;\n    }\n    isLeaf() {\n        return this.geometry != null;\n    }\n}\nclass SceneBoundingBoxHeirarchy {\n    constructor(geometry) {\n        this.root = new BBHNode(geometry, 0);\n    }\n    add(geo) {\n        this.root.add(geo);\n    }\n    getRoot() {\n        return this.root;\n    }\n    firstPositiveIntersection(ray) {\n        const sceneIntersection = this.root.firstPositiveIntersection(ray);\n        if (sceneIntersection)\n            return sceneIntersection;\n        return _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().intersect(ray);\n    }\n    // margin is max percentage of distance from camera behind first intersection\n    firstIntersectionsWithinMargin(ray, margin) {\n        const res = this.root.firstIntersectionsWithinMargin(ray, margin);\n        const iGroundPlane = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().intersect(ray);\n        if (res.length === 0)\n            return iGroundPlane ? [iGroundPlane] : [];\n        if (iGroundPlane && iGroundPlane.time < res[0].time * (1 + (margin / 100))) {\n            res.push(iGroundPlane);\n        }\n        return res;\n    }\n    getWithinFrustum(frustum, sub, inclusive) {\n        return this.root.getWithinFrustum(frustum, sub, inclusive);\n    }\n    print() {\n        console.log(\"==========Scene-BBH===========\");\n        this.root.print();\n    }\n}\nSceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/sceneBoundingBoxHeirarcy.ts\n");

/***/ }),

/***/ "./src/log.ts":
/*!********************!*\
  !*** ./src/log.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Log: () => (/* binding */ Log)\n/* harmony export */ });\nclass Log {\n    constructor() {\n        this.logs = \"<u>LOGS:</u>\";\n    }\n    log(text) {\n        this.logs += \"<br>\" + text;\n    }\n    getLogs() {\n        return this.logs;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9nLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxNQUFNLEdBQUc7SUFJZDtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFTSxHQUFHLENBQUMsSUFBWTtRQUNyQixJQUFJLENBQUMsSUFBSSxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvbG9nLnRzP2RkMzciXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjbGFzcyBMb2cge1xuXG4gIHByaXZhdGUgbG9nczogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubG9ncyA9IFwiPHU+TE9HUzo8L3U+XCI7XG4gIH1cblxuICBwdWJsaWMgbG9nKHRleHQ6IHN0cmluZykge1xuICAgIHRoaXMubG9ncyArPSBcIjxicj5cIiArIHRleHQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0TG9ncygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmxvZ3M7XG4gIH1cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/log.ts\n");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cad */ \"./src/cad.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst main = function () {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.init();\n        yield _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.run();\n    });\n};\nmain();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUVnQztBQUVoQyxNQUFNLElBQUksR0FBRzs7UUFFVCxNQUFNLDBDQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdEIsTUFBTSwwQ0FBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBRXpCLENBQUM7Q0FBQTtBQUVELElBQUksRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvbWFpbi50cz9jZDQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuL2NhZFwiXG5cbmNvbnN0IG1haW4gPSBhc3luYyBmdW5jdGlvbigpIHtcblxuICAgIGF3YWl0IElOU1RBTkNFLmluaXQoKTtcbiAgICBhd2FpdCBJTlNUQU5DRS5ydW4oKTtcblxufVxuXG5tYWluKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/main.ts\n");

/***/ }),

/***/ "./src/materials/material.ts":
/*!***********************************!*\
  !*** ./src/materials/material.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Material: () => (/* binding */ Material)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass Material {\n    constructor(name, color) {\n        this.name = name;\n        this.color = color;\n        // regular color\n        this.diffuseColorBuffer = null;\n        this.updateColor();\n    }\n    updateColor() {\n        if (this.color) {\n            this.diffuseColorBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n                label: \"color buffer for material \" + this.name,\n                size: 16,\n                usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n            });\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.diffuseColorBuffer, 0, this.color);\n        }\n        else {\n            this.diffuseColorBuffer = null;\n        }\n    }\n    getColorBuffer() {\n        return this.diffuseColorBuffer;\n    }\n    getName() {\n        return this.name;\n    }\n    getColor() {\n        return this.color;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL21hdGVyaWFsLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ2tDO0FBSTNCLE1BQU0sUUFBUTtJQUtuQixZQUNVLElBQVksRUFDWixLQUFrQjtRQURsQixTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osVUFBSyxHQUFMLEtBQUssQ0FBYTtRQUw1QixnQkFBZ0I7UUFDUix1QkFBa0IsR0FBcUIsSUFBSSxDQUFDO1FBTWxELElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRU8sV0FBVztRQUNqQixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7Z0JBQ3hFLEtBQUssRUFBRSw0QkFBNEIsR0FBRyxJQUFJLENBQUMsSUFBSTtnQkFDL0MsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsS0FBSyxFQUFFLGNBQWMsQ0FBQyxPQUFPLEdBQUcsY0FBYyxDQUFDLFFBQVE7YUFDeEQsQ0FBQyxDQUFDO1lBQ0gsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLEVBQWdCLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUM1RzthQUFNO1lBQ0wsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztTQUNoQztJQUNILENBQUM7SUFFTSxjQUFjO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDO0lBQ2pDLENBQUM7SUFFTSxPQUFPO1FBQ1osT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFFTSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Q0FHRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL21hdGVyaWFscy9tYXRlcmlhbC50cz8yZjM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuXG5leHBvcnQgdHlwZSBNYXRlcmlhbE5hbWUgPSBzdHJpbmc7XG5cbmV4cG9ydCBjbGFzcyBNYXRlcmlhbCB7XG5cbiAgLy8gcmVndWxhciBjb2xvclxuICBwcml2YXRlIGRpZmZ1c2VDb2xvckJ1ZmZlcjogR1BVQnVmZmVyIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBuYW1lOiBzdHJpbmcsXG4gICAgcHJpdmF0ZSBjb2xvcjogVmVjNCB8IG51bGwsXG4gICkge1xuICAgIHRoaXMudXBkYXRlQ29sb3IoKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlQ29sb3IoKSB7XG4gICAgaWYgKHRoaXMuY29sb3IpIHtcbiAgICAgIHRoaXMuZGlmZnVzZUNvbG9yQnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgICBsYWJlbDogXCJjb2xvciBidWZmZXIgZm9yIG1hdGVyaWFsIFwiICsgdGhpcy5uYW1lLFxuICAgICAgICBzaXplOiAxNixcbiAgICAgICAgdXNhZ2U6IEdQVUJ1ZmZlclVzYWdlLlVOSUZPUk0gfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICAgIH0pO1xuICAgICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLmRpZmZ1c2VDb2xvckJ1ZmZlciwgMCwgPEZsb2F0MzJBcnJheT50aGlzLmNvbG9yKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kaWZmdXNlQ29sb3JCdWZmZXIgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBnZXRDb2xvckJ1ZmZlcigpOiBHUFVCdWZmZXIgfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy5kaWZmdXNlQ29sb3JCdWZmZXI7XG4gIH1cblxuICBwdWJsaWMgZ2V0TmFtZSgpOiBNYXRlcmlhbE5hbWUge1xuICAgIHJldHVybiB0aGlzLm5hbWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q29sb3IoKTogVmVjNCB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLmNvbG9yO1xuICB9XG5cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/materials/material.ts\n");

/***/ }),

/***/ "./src/materials/materialManager.ts":
/*!******************************************!*\
  !*** ./src/materials/materialManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaterialManager: () => (/* binding */ MaterialManager)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./material */ \"./src/materials/material.ts\");\n\n\nclass MaterialManager {\n    constructor() {\n        this.materials = new Map();\n        this.createDefaultMaterial();\n    }\n    createDefaultMaterial() {\n        this.materials.set(\"default\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"default\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(1.0, 1.0, 1.0, 1.0)));\n        this.materials.set(\"darker grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"darker grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.1, 0.1, 0.1, 1.0)));\n        this.materials.set(\"dark grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"dark grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.3, 0.3, 0.3, 1.0)));\n        this.materials.set(\"lighter grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"lighter grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.9, 0.9, 0.9, 1.0)));\n        this.materials.set(\"light grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"light grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.7, 0.7, 0.7, 1.0)));\n        this.materials.set(\"mid grey\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"mid grey\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0.5, 0.5, 0.5)));\n        this.materials.set(\"red\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"red\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(1, 0, 0, 1)));\n        this.materials.set(\"green\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"green\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0, 1, 0, 1)));\n        this.materials.set(\"blue\", new _material__WEBPACK_IMPORTED_MODULE_0__.Material(\"blue\", wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec4.create(0, 0, 1, 1)));\n    }\n    getDefaultMaterial() {\n        if (!this.materials.has(\"default\"))\n            this.createDefaultMaterial();\n        return this.materials.get(\"default\");\n    }\n    getMaterials() {\n        return this.materials;\n    }\n    addMaterial(name, mat) {\n        this.materials.set(name, mat);\n    }\n    removeMaterial(name) {\n        this.materials.delete(name);\n        if (this.materials.size === 0)\n            this.createDefaultMaterial();\n    }\n    getMaterial(name) {\n        return this.materials.get(name);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxjQUFjLENBQUMsSUFBa0I7UUFDdEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksS0FBSyxDQUFDO1lBQUUsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUFDOUQsQ0FBQztJQUVNLFdBQVcsQ0FBQyxJQUFrQjtRQUNuQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL21hdGVyaWFscy9tYXRlcmlhbE1hbmFnZXIudHM/NzdmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZWM0IH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBNYXRlcmlhbCwgTWF0ZXJpYWxOYW1lIH0gZnJvbSBcIi4vbWF0ZXJpYWxcIjtcblxuZXhwb3J0IGNsYXNzIE1hdGVyaWFsTWFuYWdlciB7XG5cbiAgcHJpdmF0ZSBtYXRlcmlhbHM6IE1hcDxNYXRlcmlhbE5hbWUsIE1hdGVyaWFsPjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLm1hdGVyaWFscyA9IG5ldyBNYXA8TWF0ZXJpYWxOYW1lLCBNYXRlcmlhbD4oKTtcbiAgICB0aGlzLmNyZWF0ZURlZmF1bHRNYXRlcmlhbCgpO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVEZWZhdWx0TWF0ZXJpYWwoKTogdm9pZCB7XG4gICAgdGhpcy5tYXRlcmlhbHMuc2V0KFwiZGVmYXVsdFwiLCBuZXcgTWF0ZXJpYWwoXCJkZWZhdWx0XCIsIHZlYzQuY3JlYXRlKDEuMCwgMS4wLCAxLjAsIDEuMCkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJkYXJrZXIgZ3JleVwiLCBuZXcgTWF0ZXJpYWwoXCJkYXJrZXIgZ3JleVwiLCB2ZWM0LmNyZWF0ZSgwLjEsIDAuMSwgMC4xLCAxLjApKSk7XG4gICAgdGhpcy5tYXRlcmlhbHMuc2V0KFwiZGFyayBncmV5XCIsIG5ldyBNYXRlcmlhbChcImRhcmsgZ3JleVwiLCB2ZWM0LmNyZWF0ZSgwLjMsIDAuMywgMC4zLCAxLjApKSk7XG4gICAgdGhpcy5tYXRlcmlhbHMuc2V0KFwibGlnaHRlciBncmV5XCIsIG5ldyBNYXRlcmlhbChcImxpZ2h0ZXIgZ3JleVwiLCB2ZWM0LmNyZWF0ZSgwLjksIDAuOSwgMC45LCAxLjApKSk7XG4gICAgdGhpcy5tYXRlcmlhbHMuc2V0KFwibGlnaHQgZ3JleVwiLCBuZXcgTWF0ZXJpYWwoXCJsaWdodCBncmV5XCIsIHZlYzQuY3JlYXRlKDAuNywgMC43LCAwLjcsIDEuMCkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJtaWQgZ3JleVwiLCBuZXcgTWF0ZXJpYWwoXCJtaWQgZ3JleVwiLCB2ZWM0LmNyZWF0ZSgwLjUsIDAuNSwgMC41KSkpO1xuICAgIHRoaXMubWF0ZXJpYWxzLnNldChcInJlZFwiLCBuZXcgTWF0ZXJpYWwoXCJyZWRcIiwgdmVjNC5jcmVhdGUoMSwgMCwgMCwgMSkpKTtcbiAgICB0aGlzLm1hdGVyaWFscy5zZXQoXCJncmVlblwiLCBuZXcgTWF0ZXJpYWwoXCJncmVlblwiLCB2ZWM0LmNyZWF0ZSgwLCAxLCAwLCAxKSkpO1xuICAgIHRoaXMubWF0ZXJpYWxzLnNldChcImJsdWVcIiwgbmV3IE1hdGVyaWFsKFwiYmx1ZVwiLCB2ZWM0LmNyZWF0ZSgwLCAwLCAxLCAxKSkpO1xuICB9XG5cbiAgcHVibGljIGdldERlZmF1bHRNYXRlcmlhbCgpOiBNYXRlcmlhbCB7XG4gICAgaWYgKCF0aGlzLm1hdGVyaWFscy5oYXMoXCJkZWZhdWx0XCIpKSB0aGlzLmNyZWF0ZURlZmF1bHRNYXRlcmlhbCgpO1xuICAgIHJldHVybiB0aGlzLm1hdGVyaWFscy5nZXQoXCJkZWZhdWx0XCIpITtcbiAgfVxuXG4gIHB1YmxpYyBnZXRNYXRlcmlhbHMoKTogTWFwPE1hdGVyaWFsTmFtZSwgTWF0ZXJpYWw+IHtcbiAgICByZXR1cm4gdGhpcy5tYXRlcmlhbHM7XG4gIH1cblxuICBwdWJsaWMgYWRkTWF0ZXJpYWwobmFtZTogTWF0ZXJpYWxOYW1lLCBtYXQ6IE1hdGVyaWFsKSB7XG4gICAgdGhpcy5tYXRlcmlhbHMuc2V0KG5hbWUsIG1hdCk7XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlTWF0ZXJpYWwobmFtZTogTWF0ZXJpYWxOYW1lKTogdm9pZCB7XG4gICAgdGhpcy5tYXRlcmlhbHMuZGVsZXRlKG5hbWUpO1xuICAgIGlmICh0aGlzLm1hdGVyaWFscy5zaXplID09PSAwKSB0aGlzLmNyZWF0ZURlZmF1bHRNYXRlcmlhbCgpO1xuICB9XG5cbiAgcHVibGljIGdldE1hdGVyaWFsKG5hbWU6IE1hdGVyaWFsTmFtZSk6IE1hdGVyaWFsIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5tYXRlcmlhbHMuZ2V0KG5hbWUpO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/materialManager.ts\n");

/***/ }),

/***/ "./src/mode.ts":
/*!*********************!*\
  !*** ./src/mode.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperatingMode: () => (/* binding */ OperatingMode)\n/* harmony export */ });\nvar OperatingMode;\n(function (OperatingMode) {\n    OperatingMode[OperatingMode[\"Navigation\"] = 0] = \"Navigation\";\n    OperatingMode[OperatingMode[\"Command\"] = 1] = \"Command\";\n})(OperatingMode || (OperatingMode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRUEsSUFBWSxhQUdYO0FBSEQsV0FBWSxhQUFhO0lBQ3JCLDZEQUFVO0lBQ1YsdURBQU87QUFDWCxDQUFDLEVBSFcsYUFBYSxLQUFiLGFBQWEsUUFHeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9tb2RlLnRzP2RlMGQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBlbnVtIE9wZXJhdGluZ01vZGUge1xuICAgIE5hdmlnYXRpb24sIC8vIEtleXMgY29udHJvbCBjYW1lcmEgbW90aW9uXG4gICAgQ29tbWFuZCwgLy8gS2V5cyBjb250cm9sIGNvbW1hbmQgaW5wdXRcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mode.ts\n");

/***/ }),

/***/ "./src/render/flags.ts":
/*!*****************************!*\
  !*** ./src/render/flags.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONSTANT_SCREEN_SIZE_BIT: () => (/* binding */ CONSTANT_SCREEN_SIZE_BIT),\n/* harmony export */   HOVER_BIT: () => (/* binding */ HOVER_BIT),\n/* harmony export */   SELECTED_BIT: () => (/* binding */ SELECTED_BIT)\n/* harmony export */ });\nconst CONSTANT_SCREEN_SIZE_BIT = 1 << 0;\nconst HOVER_BIT = 1 << 1;\nconst SELECTED_BIT = 1 << 2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL2ZsYWdzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUdPLE1BQU0sd0JBQXdCLEdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxNQUFNLFNBQVMsR0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLE1BQU0sWUFBWSxHQUFXLENBQUMsSUFBSSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvZmxhZ3MudHM/NDczZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5leHBvcnQgY29uc3QgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUOiBudW1iZXIgPSAxIDw8IDA7XG5leHBvcnQgY29uc3QgSE9WRVJfQklUOiBudW1iZXIgPSAxIDw8IDE7XG5leHBvcnQgY29uc3QgU0VMRUNURURfQklUOiBudW1iZXIgPSAxIDw8IDI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/flags.ts\n");

/***/ }),

/***/ "./src/render/globalUniforms.ts":
/*!**************************************!*\
  !*** ./src/render/globalUniforms.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalUniforms: () => (/* binding */ GlobalUniforms)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nvar ShadingMode;\n(function (ShadingMode) {\n    ShadingMode[ShadingMode[\"Default\"] = 0] = \"Default\";\n    ShadingMode[ShadingMode[\"Ghosted\"] = 1] = \"Ghosted\";\n})(ShadingMode || (ShadingMode = {}));\nclass GlobalUniforms {\n    constructor(device) {\n        this.device = device;\n        this.cameraPositionBuffer = this.device.createBuffer({\n            label: \"camera position buffer\",\n            size: 12,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.cameraViewProjBuffer = this.device.createBuffer({\n            label: \"camera view proj buffer\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.selectionBuffer = this.device.createBuffer({\n            label: \"selection buffer\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.resolutionBuffer = this.device.createBuffer({\n            label: \"resolutionBuffer\",\n            size: 8,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.layout = this.device.createBindGroupLayout({\n            label: \"global uniforms layout\",\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                },\n                {\n                    binding: 1,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 2,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 3,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    buffer: {}\n                }\n            ]\n        });\n        this.bindGroup = this.device.createBindGroup({\n            label: \"global uniforms\",\n            layout: this.layout,\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.cameraPositionBuffer },\n                }, {\n                    binding: 1,\n                    resource: { buffer: this.cameraViewProjBuffer },\n                }, {\n                    binding: 2,\n                    resource: { buffer: this.selectionBuffer }\n                }, {\n                    binding: 3,\n                    resource: { buffer: this.resolutionBuffer }\n                }\n            ]\n        });\n    }\n    getLayout() {\n        return this.layout;\n    }\n    tick() {\n        this.device.queue.writeBuffer(this.cameraPositionBuffer, 0, _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPosition());\n        this.device.queue.writeBuffer(this.cameraViewProjBuffer, 0, _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getViewProj());\n        this.device.queue.writeBuffer(this.selectionBuffer, 0, _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getTransform());\n        const resolutionArray = new Float32Array([window.innerWidth, window.innerHeight]);\n        this.device.queue.writeBuffer(this.resolutionBuffer, 0, resolutionArray);\n    }\n    bind(pass) {\n        pass.setBindGroup(1, this.bindGroup);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Z0IsRUFBRTtpQkFDNUM7YUFDRjtTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxTQUFTO1FBQ2QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFHTSxJQUFJO1FBQ1QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLEVBQWdCLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztRQUN6SCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUMsRUFBRSwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDM0csSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQyxFQUFnQiwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRTNHLE1BQU0sZUFBZSxHQUFpQixJQUFJLFlBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDaEcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVNLElBQUksQ0FBQyxJQUEwQjtRQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdkMsQ0FBQztDQUlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL2dsb2JhbFVuaWZvcm1zLnRzPzdiY2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMywgVmVjNCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCI7XG5cbmVudW0gU2hhZGluZ01vZGUge1xuICBEZWZhdWx0LFxuICBHaG9zdGVkLFxufVxuXG5leHBvcnQgY2xhc3MgR2xvYmFsVW5pZm9ybXMge1xuXG4gIHByaXZhdGUgY2FtZXJhUG9zaXRpb25CdWZmZXI6IEdQVUJ1ZmZlcjtcbiAgcHJpdmF0ZSBjYW1lcmFWaWV3UHJvakJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcml2YXRlIHNlbGVjdGlvbkJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcml2YXRlIHJlc29sdXRpb25CdWZmZXI6IEdQVUJ1ZmZlcjtcblxuICBwcml2YXRlIGxheW91dDogR1BVQmluZEdyb3VwTGF5b3V0O1xuICBwcml2YXRlIGJpbmRHcm91cDogR1BVQmluZEdyb3VwO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZGV2aWNlOiBHUFVEZXZpY2UsXG4gICkge1xuICAgIHRoaXMuY2FtZXJhUG9zaXRpb25CdWZmZXIgPSB0aGlzLmRldmljZS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwiY2FtZXJhIHBvc2l0aW9uIGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogMTIsIC8vIDMgKiA0XG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVU5JRk9STSB8IEdQVUJ1ZmZlclVzYWdlLkNPUFlfRFNULFxuICAgIH0pO1xuICAgIHRoaXMuY2FtZXJhVmlld1Byb2pCdWZmZXIgPSB0aGlzLmRldmljZS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwiY2FtZXJhIHZpZXcgcHJvaiBidWZmZXJcIixcbiAgICAgIHNpemU6IDY0LFxuICAgICAgdXNhZ2U6IEdQVUJ1ZmZlclVzYWdlLlVOSUZPUk0gfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICB0aGlzLnNlbGVjdGlvbkJ1ZmZlciA9IHRoaXMuZGV2aWNlLmNyZWF0ZUJ1ZmZlcih7XG4gICAgICBsYWJlbDogXCJzZWxlY3Rpb24gYnVmZmVyXCIsXG4gICAgICBzaXplOiA2NCxcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5VTklGT1JNIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgdGhpcy5yZXNvbHV0aW9uQnVmZmVyID0gdGhpcy5kZXZpY2UuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcInJlc29sdXRpb25CdWZmZXJcIixcbiAgICAgIHNpemU6IDgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVU5JRk9STSB8IEdQVUJ1ZmZlclVzYWdlLkNPUFlfRFNULFxuICAgIH0pO1xuICAgIHRoaXMubGF5b3V0ID0gdGhpcy5kZXZpY2UuY3JlYXRlQmluZEdyb3VwTGF5b3V0KHtcbiAgICAgIGxhYmVsOiBcImdsb2JhbCB1bmlmb3JtcyBsYXlvdXRcIixcbiAgICAgIGVudHJpZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGJpbmRpbmc6IDAsIC8vIGNhbWVyYSBwb3NcbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5WRVJURVgsXG4gICAgICAgICAgYnVmZmVyOiB7fVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgYmluZGluZzogMSwgLy8gY2FtZXIgdmlldyBwcm9qXG4gICAgICAgICAgdmlzaWJpbGl0eTogR1BVU2hhZGVyU3RhZ2UuVkVSVEVYLFxuICAgICAgICAgIGJ1ZmZlcjoge31cbiAgICAgICAgfSwge1xuICAgICAgICAgIGJpbmRpbmc6IDIsIC8vIHNlbGVjdGlvbiB0cmFuc2Zvcm1cbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5WRVJURVgsXG4gICAgICAgICAgYnVmZmVyOiB7fVxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMywgLy8gcmVzb2x1dGlvbiBidWZmZXJcbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5GUkFHTUVOVCxcbiAgICAgICAgICBidWZmZXI6IHt9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9KTtcbiAgICB0aGlzLmJpbmRHcm91cCA9IHRoaXMuZGV2aWNlLmNyZWF0ZUJpbmRHcm91cCh7XG4gICAgICBsYWJlbDogXCJnbG9iYWwgdW5pZm9ybXNcIixcbiAgICAgIGxheW91dDogdGhpcy5sYXlvdXQsXG4gICAgICBlbnRyaWVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBiaW5kaW5nOiAwLFxuICAgICAgICAgIHJlc291cmNlOiB7IGJ1ZmZlcjogdGhpcy5jYW1lcmFQb3NpdGlvbkJ1ZmZlciB9LFxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMSxcbiAgICAgICAgICByZXNvdXJjZTogeyBidWZmZXI6IHRoaXMuY2FtZXJhVmlld1Byb2pCdWZmZXIgfSxcbiAgICAgICAgfSwge1xuICAgICAgICAgIGJpbmRpbmc6IDIsXG4gICAgICAgICAgcmVzb3VyY2U6IHsgYnVmZmVyOiB0aGlzLnNlbGVjdGlvbkJ1ZmZlciB9XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBiaW5kaW5nOiAzLFxuICAgICAgICAgIHJlc291cmNlOiB7IGJ1ZmZlcjogdGhpcy5yZXNvbHV0aW9uQnVmZmVyIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGdldExheW91dCgpOiBHUFVCaW5kR3JvdXBMYXlvdXQge1xuICAgIHJldHVybiB0aGlzLmxheW91dDtcbiAgfVxuXG5cbiAgcHVibGljIHRpY2soKTogdm9pZCB7XG4gICAgdGhpcy5kZXZpY2UucXVldWUud3JpdGVCdWZmZXIodGhpcy5jYW1lcmFQb3NpdGlvbkJ1ZmZlciwgMCwgPEZsb2F0MzJBcnJheT5JTlNUQU5DRS5nZXRTY2VuZSgpLmdldENhbWVyYSgpLmdldFBvc2l0aW9uKCkpO1xuICAgIHRoaXMuZGV2aWNlLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMuY2FtZXJhVmlld1Byb2pCdWZmZXIsIDAsIElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q2FtZXJhKCkuZ2V0Vmlld1Byb2ooKSk7XG4gICAgdGhpcy5kZXZpY2UucXVldWUud3JpdGVCdWZmZXIodGhpcy5zZWxlY3Rpb25CdWZmZXIsIDAsIDxGbG9hdDMyQXJyYXk+SU5TVEFOQ0UuZ2V0U2VsZWN0b3IoKS5nZXRUcmFuc2Zvcm0oKSlcblxuICAgIGNvbnN0IHJlc29sdXRpb25BcnJheTogRmxvYXQzMkFycmF5ID0gbmV3IEZsb2F0MzJBcnJheShbd2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodF0pO1xuICAgIHRoaXMuZGV2aWNlLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMucmVzb2x1dGlvbkJ1ZmZlciwgMCwgcmVzb2x1dGlvbkFycmF5KTtcbiAgfVxuXG4gIHB1YmxpYyBiaW5kKHBhc3M6IEdQVVJlbmRlclBhc3NFbmNvZGVyKTogdm9pZCB7XG4gICAgcGFzcy5zZXRCaW5kR3JvdXAoMSwgdGhpcy5iaW5kR3JvdXApO1xuICB9XG5cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/globalUniforms.ts\n");

/***/ }),

/***/ "./src/render/pipeline.ts":
/*!********************************!*\
  !*** ./src/render/pipeline.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pipeline: () => (/* binding */ Pipeline),\n/* harmony export */   PipelinePrimitive: () => (/* binding */ PipelinePrimitive)\n/* harmony export */ });\n/* harmony import */ var _renderMesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./renderMesh */ \"./src/render/renderMesh.ts\");\n/* harmony import */ var _renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _renderPoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderPoints */ \"./src/render/renderPoints.ts\");\n\n\n\nvar PipelinePrimitive;\n(function (PipelinePrimitive) {\n    PipelinePrimitive[PipelinePrimitive[\"Triangle\"] = 0] = \"Triangle\";\n    PipelinePrimitive[PipelinePrimitive[\"Line\"] = 1] = \"Line\";\n    PipelinePrimitive[PipelinePrimitive[\"Point\"] = 2] = \"Point\";\n})(PipelinePrimitive || (PipelinePrimitive = {}));\nclass Pipeline {\n    constructor(device, format, layouts, shaderModule, primitive) {\n        const pipelineLayout = device.createPipelineLayout({\n            label: getLabel(primitive) + \" label\",\n            bindGroupLayouts: layouts,\n        });\n        this.gpuPipeline = device.createRenderPipeline({\n            label: getLabel(primitive),\n            primitive: {\n                topology: getTopology(primitive),\n                cullMode: \"none\"\n            },\n            layout: pipelineLayout,\n            depthStencil: {\n                depthWriteEnabled: true,\n                depthCompare: \"less\",\n                format: \"depth24plus\"\n            },\n            vertex: {\n                module: shaderModule,\n                entryPoint: \"vertexMain\",\n                buffers: [getVertexBufferLayout(primitive)]\n            },\n            fragment: {\n                module: shaderModule,\n                entryPoint: \"fragmentMain\",\n                targets: [\n                    {\n                        format: format\n                    }\n                ]\n            },\n            multisample: {\n                count: 4\n            }\n        });\n    }\n    get() {\n        return this.gpuPipeline;\n    }\n}\nfunction getTopology(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return \"triangle-list\";\n        case PipelinePrimitive.Line: return \"line-list\";\n        case PipelinePrimitive.Point: return \"point-list\";\n        default:\n            console.error(\"unimplemented primitive\");\n            return \"triangle-list\";\n    }\n}\nfunction getVertexBufferLayout(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return _renderMesh__WEBPACK_IMPORTED_MODULE_0__.RenderMesh.getVertexBufferLayout();\n        case PipelinePrimitive.Line: return _renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines.getVertexBufferLayout();\n        case PipelinePrimitive.Point: return _renderPoints__WEBPACK_IMPORTED_MODULE_2__.RenderPoints.getVertexBufferLayout();\n        default:\n            console.error(\"unimplemented primitive\");\n            return _renderMesh__WEBPACK_IMPORTED_MODULE_0__.RenderMesh.getVertexBufferLayout();\n    }\n}\nfunction getLabel(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return \"trinagle pipeline\";\n        case PipelinePrimitive.Line: return \"line pipeline\";\n        case PipelinePrimitive.Point: return \"point pipeline\";\n        default: throw new Error(\"not implemented\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sZUFBZSxDQUFDO1FBQ3BELEtBQUssaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxnQkFBZ0IsQ0FBQztRQUN0RCxPQUFPLENBQUMsQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7S0FDN0M7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3BpcGVsaW5lLnRzP2IzMGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVuZGVyTWVzaCB9IGZyb20gXCIuL3JlbmRlck1lc2hcIlxuaW1wb3J0IHsgUmVuZGVyTGluZXMgfSBmcm9tIFwiLi9yZW5kZXJMaW5lc1wiXG5pbXBvcnQgeyBSZW5kZXJQb2ludHMgfSBmcm9tIFwiLi9yZW5kZXJQb2ludHNcIjtcblxuZXhwb3J0IGVudW0gUGlwZWxpbmVQcmltaXRpdmUge1xuICBUcmlhbmdsZSxcbiAgTGluZSxcbiAgUG9pbnQsXG59XG5cbmV4cG9ydCBjbGFzcyBQaXBlbGluZSB7XG5cblxuICBwcml2YXRlIGdwdVBpcGVsaW5lOiBHUFVSZW5kZXJQaXBlbGluZTtcblxuICBjb25zdHJ1Y3RvcihkZXZpY2U6IEdQVURldmljZSwgZm9ybWF0OiBHUFVUZXh0dXJlRm9ybWF0LCBsYXlvdXRzOiBHUFVCaW5kR3JvdXBMYXlvdXRbXSwgc2hhZGVyTW9kdWxlOiBHUFVTaGFkZXJNb2R1bGUsIHByaW1pdGl2ZTogUGlwZWxpbmVQcmltaXRpdmUpIHtcblxuXG4gICAgY29uc3QgcGlwZWxpbmVMYXlvdXQ6IEdQVVBpcGVsaW5lTGF5b3V0ID0gZGV2aWNlLmNyZWF0ZVBpcGVsaW5lTGF5b3V0KHtcbiAgICAgIGxhYmVsOiBnZXRMYWJlbChwcmltaXRpdmUpICsgXCIgbGFiZWxcIixcbiAgICAgIGJpbmRHcm91cExheW91dHM6IGxheW91dHMsXG4gICAgfSk7XG5cbiAgICB0aGlzLmdwdVBpcGVsaW5lID0gZGV2aWNlLmNyZWF0ZVJlbmRlclBpcGVsaW5lKHtcbiAgICAgIGxhYmVsOiBnZXRMYWJlbChwcmltaXRpdmUpLFxuICAgICAgcHJpbWl0aXZlOiB7XG4gICAgICAgIHRvcG9sb2d5OiBnZXRUb3BvbG9neShwcmltaXRpdmUpLFxuICAgICAgICBjdWxsTW9kZTogXCJub25lXCJcbiAgICAgIH0sXG4gICAgICBsYXlvdXQ6IHBpcGVsaW5lTGF5b3V0LFxuICAgICAgZGVwdGhTdGVuY2lsOiB7XG4gICAgICAgIGRlcHRoV3JpdGVFbmFibGVkOiB0cnVlLFxuICAgICAgICBkZXB0aENvbXBhcmU6IFwibGVzc1wiLFxuICAgICAgICBmb3JtYXQ6IFwiZGVwdGgyNHBsdXNcIlxuICAgICAgfSxcbiAgICAgIHZlcnRleDoge1xuICAgICAgICBtb2R1bGU6IHNoYWRlck1vZHVsZSxcbiAgICAgICAgZW50cnlQb2ludDogXCJ2ZXJ0ZXhNYWluXCIsXG4gICAgICAgIGJ1ZmZlcnM6IFtnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQocHJpbWl0aXZlKV1cbiAgICAgIH0sXG4gICAgICBmcmFnbWVudDoge1xuICAgICAgICBtb2R1bGU6IHNoYWRlck1vZHVsZSxcbiAgICAgICAgZW50cnlQb2ludDogXCJmcmFnbWVudE1haW5cIixcbiAgICAgICAgdGFyZ2V0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGZvcm1hdDogZm9ybWF0XG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgbXVsdGlzYW1wbGU6IHtcbiAgICAgICAgY291bnQ6IDRcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQoKTogR1BVUmVuZGVyUGlwZWxpbmUge1xuICAgIHJldHVybiB0aGlzLmdwdVBpcGVsaW5lO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gZ2V0VG9wb2xvZ3kocHJpbWl0aXZlOiBQaXBlbGluZVByaW1pdGl2ZSk6IEdQVVByaW1pdGl2ZVRvcG9sb2d5IHtcbiAgc3dpdGNoIChwcmltaXRpdmUpIHtcbiAgICBjYXNlIFBpcGVsaW5lUHJpbWl0aXZlLlRyaWFuZ2xlOiByZXR1cm4gXCJ0cmlhbmdsZS1saXN0XCI7XG4gICAgY2FzZSBQaXBlbGluZVByaW1pdGl2ZS5MaW5lOiByZXR1cm4gXCJsaW5lLWxpc3RcIjtcbiAgICBjYXNlIFBpcGVsaW5lUHJpbWl0aXZlLlBvaW50OiByZXR1cm4gXCJwb2ludC1saXN0XCI7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJ1bmltcGxlbWVudGVkIHByaW1pdGl2ZVwiKTtcbiAgICAgIHJldHVybiBcInRyaWFuZ2xlLWxpc3RcIjtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0VmVydGV4QnVmZmVyTGF5b3V0KHByaW1pdGl2ZTogUGlwZWxpbmVQcmltaXRpdmUpOiBHUFVWZXJ0ZXhCdWZmZXJMYXlvdXQge1xuICBzd2l0Y2ggKHByaW1pdGl2ZSkge1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuVHJpYW5nbGU6IHJldHVybiBSZW5kZXJNZXNoLmdldFZlcnRleEJ1ZmZlckxheW91dCgpO1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuTGluZTogcmV0dXJuIFJlbmRlckxpbmVzLmdldFZlcnRleEJ1ZmZlckxheW91dCgpO1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuUG9pbnQ6IHJldHVybiBSZW5kZXJQb2ludHMuZ2V0VmVydGV4QnVmZmVyTGF5b3V0KCk7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJ1bmltcGxlbWVudGVkIHByaW1pdGl2ZVwiKTtcbiAgICAgIHJldHVybiBSZW5kZXJNZXNoLmdldFZlcnRleEJ1ZmZlckxheW91dCgpO1xuICB9XG59XG5mdW5jdGlvbiBnZXRMYWJlbChwcmltaXRpdmU6IFBpcGVsaW5lUHJpbWl0aXZlKTogc3RyaW5nIHtcbiAgc3dpdGNoIChwcmltaXRpdmUpIHtcbiAgICBjYXNlIFBpcGVsaW5lUHJpbWl0aXZlLlRyaWFuZ2xlOiByZXR1cm4gXCJ0cmluYWdsZSBwaXBlbGluZVwiO1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuTGluZTogcmV0dXJuIFwibGluZSBwaXBlbGluZVwiO1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuUG9pbnQ6IHJldHVybiBcInBvaW50IHBpcGVsaW5lXCI7XG4gICAgZGVmYXVsdDogdGhyb3cgbmV3IEVycm9yKFwibm90IGltcGxlbWVudGVkXCIpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/pipeline.ts\n");

/***/ }),

/***/ "./src/render/renderLines.ts":
/*!***********************************!*\
  !*** ./src/render/renderLines.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderLines: () => (/* binding */ RenderLines)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderable */ \"./src/render/renderable.ts\");\n\n\nclass RenderLines extends _renderable__WEBPACK_IMPORTED_MODULE_1__.Renderable {\n    constructor(parent, vertices, indices) {\n        super(parent);\n        // vertex\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"vertex buffer\",\n            size: vertices.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertices);\n        //index\n        this.indexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"index buffer\",\n            size: indices.byteLength,\n            usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.indexBuffer, 0, indices);\n        this.indexCount = indices.length;\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount);\n    }\n    static getVertexBufferLayout() {\n        return RenderLines.vertexBufferLayout;\n    }\n}\nRenderLines.vertexBufferLayout = {\n    arrayStride: 16,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3JlbmRlckxpbmVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUNpQztBQUlTO0FBRW5DLE1BQU0sV0FBWSxTQUFRLG1EQUFVO0lBbUJ6QyxZQUNFLE1BQWdCLEVBQ2hCLFFBQXNCLEVBQ3RCLE9BQW1CO1FBR25CLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVkLFNBQVM7UUFDVCxJQUFJLENBQUMsWUFBWSxHQUFHLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ2xFLEtBQUssRUFBRSxlQUFlO1lBQ3RCLElBQUksRUFBRSxRQUFRLENBQUMsVUFBVTtZQUN6QixLQUFLLEVBQUUsY0FBYyxDQUFDLE1BQU0sR0FBRyxjQUFjLENBQUMsUUFBUTtTQUN2RCxDQUFDLENBQUM7UUFDSCwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFHckYsT0FBTztRQUNQLElBQUksQ0FBQyxXQUFXLEdBQUcsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDakUsS0FBSyxFQUFFLGNBQWM7WUFDckIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxVQUFVO1lBQ3hCLEtBQUssRUFBRSxjQUFjLENBQUMsS0FBSyxHQUFHLGNBQWMsQ0FBQyxRQUFRO1NBQ3RELENBQUMsQ0FBQztRQUNILDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNuRixJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDbkMsQ0FBQztJQUVNLElBQUksQ0FBQyxJQUEwQjtRQUNwQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFO1lBQUUsT0FBTztRQUNuQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBSU0sTUFBTSxDQUFDLHFCQUFxQjtRQUNqQyxPQUFPLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQztJQUN4QyxDQUFDOztBQXhEdUIsOEJBQWtCLEdBQTBCO0lBQ2xFLFdBQVcsRUFBRSxFQUFFO0lBQ2YsVUFBVSxFQUFFO1FBQ1Y7WUFDRSxNQUFNLEVBQUUsV0FBVztZQUNuQixNQUFNLEVBQUUsQ0FBQztZQUNULGNBQWMsRUFBRSxDQUFDO1NBQ2xCO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3JlbmRlckxpbmVzLnRzP2RiNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0NCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiXG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIlxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vZ2VvbWV0cnkvZ2VvbWV0cnlcIjtcbmltcG9ydCB7IHN3aXp6bGVZWiB9IGZyb20gXCIuLi91dGlscy9tYXRoXCI7XG5pbXBvcnQgeyBDT05TVEFOVF9TQ1JFRU5fU0laRV9CSVQsIEhPVkVSX0JJVCwgU0VMRUNURURfQklUIH0gZnJvbSBcIi4vZmxhZ3NcIjtcbmltcG9ydCB7IFJlbmRlcmFibGUgfSBmcm9tIFwiLi9yZW5kZXJhYmxlXCI7XG5cbmV4cG9ydCBjbGFzcyBSZW5kZXJMaW5lcyBleHRlbmRzIFJlbmRlcmFibGUge1xuXG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IHZlcnRleEJ1ZmZlckxheW91dDogR1BVVmVydGV4QnVmZmVyTGF5b3V0ID0ge1xuICAgIGFycmF5U3RyaWRlOiAxNixcbiAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICB7IC8vIGxvY2F0aW9uXG4gICAgICAgIGZvcm1hdDogXCJmbG9hdDMyeDRcIixcbiAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICBzaGFkZXJMb2NhdGlvbjogMCxcbiAgICAgIH1cbiAgICBdXG4gIH07XG5cblxuICBwcml2YXRlIHZlcnRleEJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcml2YXRlIGluZGV4QnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByaXZhdGUgaW5kZXhDb3VudDogbnVtYmVyO1xuXG5cbiAgY29uc3RydWN0b3IoXG4gICAgcGFyZW50OiBHZW9tZXRyeSxcbiAgICB2ZXJ0aWNlczogRmxvYXQzMkFycmF5LFxuICAgIGluZGljZXM6IEludDMyQXJyYXksXG4gICkge1xuXG4gICAgc3VwZXIocGFyZW50KTtcblxuICAgIC8vIHZlcnRleFxuICAgIHRoaXMudmVydGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwidmVydGV4IGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogdmVydGljZXMuYnl0ZUxlbmd0aCxcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5WRVJURVggfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMudmVydGV4QnVmZmVyLCAwLCB2ZXJ0aWNlcyk7XG5cblxuICAgIC8vaW5kZXhcbiAgICB0aGlzLmluZGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwiaW5kZXggYnVmZmVyXCIsXG4gICAgICBzaXplOiBpbmRpY2VzLmJ5dGVMZW5ndGgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuSU5ERVggfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMuaW5kZXhCdWZmZXIsIDAsIGluZGljZXMpO1xuICAgIHRoaXMuaW5kZXhDb3VudCA9IGluZGljZXMubGVuZ3RoO1xuICB9XG5cbiAgcHVibGljIGRyYXcocGFzczogR1BVUmVuZGVyUGFzc0VuY29kZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wYXJlbnQuaXNIaWRkZW4oKSkgcmV0dXJuO1xuICAgIHBhc3Muc2V0QmluZEdyb3VwKDAsIHRoaXMuYmluZEdyb3VwKTtcbiAgICBwYXNzLnNldFZlcnRleEJ1ZmZlcigwLCB0aGlzLnZlcnRleEJ1ZmZlcik7XG4gICAgcGFzcy5zZXRJbmRleEJ1ZmZlcih0aGlzLmluZGV4QnVmZmVyLCBcInVpbnQzMlwiKTtcbiAgICBwYXNzLmRyYXdJbmRleGVkKHRoaXMuaW5kZXhDb3VudCk7XG4gIH1cblxuXG5cbiAgcHVibGljIHN0YXRpYyBnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQoKTogR1BVVmVydGV4QnVmZmVyTGF5b3V0IHtcbiAgICByZXR1cm4gUmVuZGVyTGluZXMudmVydGV4QnVmZmVyTGF5b3V0O1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/render/renderLines.ts\n");

/***/ }),

/***/ "./src/render/renderMesh.ts":
/*!**********************************!*\
  !*** ./src/render/renderMesh.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderMesh: () => (/* binding */ RenderMesh)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderable */ \"./src/render/renderable.ts\");\n\n\nclass RenderMesh extends _renderable__WEBPACK_IMPORTED_MODULE_1__.Renderable {\n    constructor(parent, vertices, indices) {\n        super(parent);\n        //vertex\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"vertex buffer\",\n            size: vertices.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertices);\n        //index\n        this.indexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"index buffer\",\n            size: indices.byteLength,\n            usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.indexBuffer, 0, indices);\n        this.indexCount = indices.length;\n    }\n    isOverlay() {\n        return this.parent.isOverlay();\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount);\n    }\n    static getVertexBufferLayout() {\n        return this.vertexBufferLayout;\n    }\n}\nRenderMesh.vertexBufferLayout = {\n    arrayStride: 32,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }, {\n            format: \"float32x4\",\n            offset: 16,\n            shaderLocation: 1,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3JlbmRlck1lc2gudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBTVM7QUFFbkMsTUFBTSxVQUFXLFNBQVEsbURBQVU7SUFzQnhDLFlBQ0UsTUFBZ0IsRUFDaEIsUUFBc0IsRUFDdEIsT0FBbUI7UUFFbkIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRWQsUUFBUTtRQUNSLElBQUksQ0FBQyxZQUFZLEdBQUcsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDbEUsS0FBSyxFQUFFLGVBQWU7WUFDdEIsSUFBSSxFQUFFLFFBQVEsQ0FBQyxVQUFVO1lBQ3pCLEtBQUssRUFBRSxjQUFjLENBQUMsTUFBTSxHQUFHLGNBQWMsQ0FBQyxRQUFRO1NBQ3ZELENBQUMsQ0FBQztRQUNILDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUVyRixPQUFPO1FBQ1AsSUFBSSxDQUFDLFdBQVcsR0FBRywwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLFlBQVksQ0FBQztZQUNqRSxLQUFLLEVBQUUsY0FBYztZQUNyQixJQUFJLEVBQUUsT0FBTyxDQUFDLFVBQVU7WUFDeEIsS0FBSyxFQUFFLGNBQWMsQ0FBQyxLQUFLLEdBQUcsY0FBYyxDQUFDLFFBQVE7U0FDdEQsQ0FBQyxDQUFDO1FBQ0gsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ25GLElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQztJQUVuQyxDQUFDO0lBRU0sU0FBUztRQUNkLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBR00sSUFBSSxDQUFDLElBQTBCO1FBQ3BDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFBRSxPQUFPO1FBQ25DLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxNQUFNLENBQUMscUJBQXFCO1FBQzFCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDO0lBQ2pDLENBQUM7O0FBN0R1Qiw2QkFBa0IsR0FBMEI7SUFDbEUsV0FBVyxFQUFFLEVBQUU7SUFDZixVQUFVLEVBQUU7UUFDVjtZQUNFLE1BQU0sRUFBRSxXQUFXO1lBQ25CLE1BQU0sRUFBRSxDQUFDO1lBQ1QsY0FBYyxFQUFFLENBQUM7U0FDbEIsRUFBRTtZQUNELE1BQU0sRUFBRSxXQUFXO1lBQ25CLE1BQU0sRUFBRSxFQUFFO1lBQ1YsY0FBYyxFQUFFLENBQUM7U0FDbEI7S0FDRjtDQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvcmVuZGVyTWVzaC50cz80ZjI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiXG5pbXBvcnQgeyBtYXQ0LCBNYXQ0IH0gZnJvbSBcIndncHUtbWF0cml4XCJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL2dlb21ldHJ5L2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBSZW5kZXJJRCB9IGZyb20gXCIuLi9zY2VuZS9zY2VuZVwiO1xuaW1wb3J0IHsgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklULCBIT1ZFUl9CSVQsIFNFTEVDVEVEX0JJVCB9IGZyb20gXCIuL2ZsYWdzXCI7XG5pbXBvcnQgeyBzd2l6emxlWVogfSBmcm9tIFwiLi4vdXRpbHMvbWF0aFwiO1xuaW1wb3J0IHsgUmVuZGVyYWJsZSB9IGZyb20gXCIuL3JlbmRlcmFibGVcIjtcblxuZXhwb3J0IGNsYXNzIFJlbmRlck1lc2ggZXh0ZW5kcyBSZW5kZXJhYmxlIHtcblxuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSB2ZXJ0ZXhCdWZmZXJMYXlvdXQ6IEdQVVZlcnRleEJ1ZmZlckxheW91dCA9IHtcbiAgICBhcnJheVN0cmlkZTogMzIsXG4gICAgYXR0cmlidXRlczogW1xuICAgICAgeyAvLyBsb2NhdGlvblxuICAgICAgICBmb3JtYXQ6IFwiZmxvYXQzMng0XCIsXG4gICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgc2hhZGVyTG9jYXRpb246IDAsXG4gICAgICB9LCB7IC8vIG5vcm1hbFxuICAgICAgICBmb3JtYXQ6IFwiZmxvYXQzMng0XCIsXG4gICAgICAgIG9mZnNldDogMTYsXG4gICAgICAgIHNoYWRlckxvY2F0aW9uOiAxLFxuICAgICAgfVxuICAgIF1cbiAgfTtcblxuICBwcm90ZWN0ZWQgdmVydGV4QnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByb3RlY3RlZCBpbmRleEJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcm90ZWN0ZWQgaW5kZXhDb3VudDogbnVtYmVyO1xuXG5cbiAgY29uc3RydWN0b3IoXG4gICAgcGFyZW50OiBHZW9tZXRyeSxcbiAgICB2ZXJ0aWNlczogRmxvYXQzMkFycmF5LFxuICAgIGluZGljZXM6IEludDMyQXJyYXksXG4gICkge1xuICAgIHN1cGVyKHBhcmVudCk7XG5cbiAgICAvL3ZlcnRleFxuICAgIHRoaXMudmVydGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwidmVydGV4IGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogdmVydGljZXMuYnl0ZUxlbmd0aCxcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5WRVJURVggfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMudmVydGV4QnVmZmVyLCAwLCB2ZXJ0aWNlcyk7XG5cbiAgICAvL2luZGV4XG4gICAgdGhpcy5pbmRleEJ1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcImluZGV4IGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogaW5kaWNlcy5ieXRlTGVuZ3RoLFxuICAgICAgdXNhZ2U6IEdQVUJ1ZmZlclVzYWdlLklOREVYIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLmluZGV4QnVmZmVyLCAwLCBpbmRpY2VzKTtcbiAgICB0aGlzLmluZGV4Q291bnQgPSBpbmRpY2VzLmxlbmd0aDtcblxuICB9XG5cbiAgcHVibGljIGlzT3ZlcmxheSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnQuaXNPdmVybGF5KCk7XG4gIH1cblxuXG4gIHB1YmxpYyBkcmF3KHBhc3M6IEdQVVJlbmRlclBhc3NFbmNvZGVyKTogdm9pZCB7XG4gICAgaWYgKHRoaXMucGFyZW50LmlzSGlkZGVuKCkpIHJldHVybjtcbiAgICBwYXNzLnNldEJpbmRHcm91cCgwLCB0aGlzLmJpbmRHcm91cCk7XG4gICAgcGFzcy5zZXRWZXJ0ZXhCdWZmZXIoMCwgdGhpcy52ZXJ0ZXhCdWZmZXIpO1xuICAgIHBhc3Muc2V0SW5kZXhCdWZmZXIodGhpcy5pbmRleEJ1ZmZlciwgXCJ1aW50MzJcIik7XG4gICAgcGFzcy5kcmF3SW5kZXhlZCh0aGlzLmluZGV4Q291bnQpO1xuICB9XG5cbiAgc3RhdGljIGdldFZlcnRleEJ1ZmZlckxheW91dCgpOiBHUFVWZXJ0ZXhCdWZmZXJMYXlvdXQge1xuICAgIHJldHVybiB0aGlzLnZlcnRleEJ1ZmZlckxheW91dDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renderMesh.ts\n");

/***/ }),

/***/ "./src/render/renderPoints.ts":
/*!************************************!*\
  !*** ./src/render/renderPoints.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderPoints: () => (/* binding */ RenderPoints)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderable */ \"./src/render/renderable.ts\");\n\n\nclass RenderPoints extends _renderable__WEBPACK_IMPORTED_MODULE_1__.Renderable {\n    constructor(parent, points) {\n        super(parent);\n        // vertex\n        const verts = [];\n        for (let i = 0; i < points.length; i++)\n            verts.push(...points[i], 1);\n        const vertexArray = new Float32Array(verts);\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"points vertex buffer\",\n            size: vertexArray.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertexArray);\n        this.vertexCount = vertexArray.length / 4;\n        this.update();\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.draw(this.vertexCount);\n    }\n    static getVertexBufferLayout() {\n        return RenderPoints.vertexBufferLayout;\n    }\n}\nRenderPoints.vertexBufferLayout = {\n    arrayStride: 16,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3JlbmRlclBvaW50cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDaUM7QUFJUztBQUVuQyxNQUFNLFlBQWEsU0FBUSxtREFBVTtJQWdCMUMsWUFDRSxNQUFnQixFQUNoQixNQUFjO1FBR2QsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRWQsU0FBUztRQUNULE1BQU0sS0FBSyxHQUFhLEVBQUUsQ0FBQztRQUMzQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUU7WUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sV0FBVyxHQUFpQixJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxRCxJQUFJLENBQUMsWUFBWSxHQUFHLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ2xFLEtBQUssRUFBRSxzQkFBc0I7WUFDN0IsSUFBSSxFQUFFLFdBQVcsQ0FBQyxVQUFVO1lBQzVCLEtBQUssRUFBRSxjQUFjLENBQUMsTUFBTSxHQUFHLGNBQWMsQ0FBQyxRQUFRO1NBQ3ZELENBQUMsQ0FBQztRQUNILDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUN4RixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRTFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBR00sSUFBSSxDQUFDLElBQTBCO1FBQ3BDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFBRSxPQUFPO1FBQ25DLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxxQkFBcUI7UUFDakMsT0FBTyxZQUFZLENBQUMsa0JBQWtCLENBQUM7SUFDekMsQ0FBQzs7QUE5Q3VCLCtCQUFrQixHQUEwQjtJQUNsRSxXQUFXLEVBQUUsRUFBRTtJQUNmLFVBQVUsRUFBRTtRQUNWO1lBQ0UsTUFBTSxFQUFFLFdBQVc7WUFDbkIsTUFBTSxFQUFFLENBQUM7WUFDVCxjQUFjLEVBQUUsQ0FBQztTQUNsQjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9yZW5kZXJQb2ludHMudHM/ZDFmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXQ0LCBtYXQ0LCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCJcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiXG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi9nZW9tZXRyeS9nZW9tZXRyeVwiO1xuaW1wb3J0IHsgc3dpenpsZVlaIH0gZnJvbSBcIi4uL3V0aWxzL21hdGhcIjtcbmltcG9ydCB7IENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVCwgSE9WRVJfQklULCBTRUxFQ1RFRF9CSVQgfSBmcm9tIFwiLi9mbGFnc1wiO1xuaW1wb3J0IHsgUmVuZGVyYWJsZSB9IGZyb20gXCIuL3JlbmRlcmFibGVcIjtcblxuZXhwb3J0IGNsYXNzIFJlbmRlclBvaW50cyBleHRlbmRzIFJlbmRlcmFibGUge1xuXG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IHZlcnRleEJ1ZmZlckxheW91dDogR1BVVmVydGV4QnVmZmVyTGF5b3V0ID0ge1xuICAgIGFycmF5U3RyaWRlOiAxNixcbiAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICB7IC8vIGxvY2F0aW9uXG4gICAgICAgIGZvcm1hdDogXCJmbG9hdDMyeDRcIixcbiAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICBzaGFkZXJMb2NhdGlvbjogMCxcbiAgICAgIH1cbiAgICBdXG4gIH07XG5cbiAgcHJpdmF0ZSB2ZXJ0ZXhCdWZmZXI6IEdQVUJ1ZmZlcjtcbiAgcHJpdmF0ZSB2ZXJ0ZXhDb3VudDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHBhcmVudDogR2VvbWV0cnksXG4gICAgcG9pbnRzOiBWZWMzW10sXG4gICkge1xuXG4gICAgc3VwZXIocGFyZW50KTtcblxuICAgIC8vIHZlcnRleFxuICAgIGNvbnN0IHZlcnRzOiBudW1iZXJbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRzLmxlbmd0aDsgaSsrKSB2ZXJ0cy5wdXNoKC4uLnBvaW50c1tpXSwgMSk7XG4gICAgY29uc3QgdmVydGV4QXJyYXk6IEZsb2F0MzJBcnJheSA9IG5ldyBGbG9hdDMyQXJyYXkodmVydHMpO1xuICAgIHRoaXMudmVydGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwicG9pbnRzIHZlcnRleCBidWZmZXJcIixcbiAgICAgIHNpemU6IHZlcnRleEFycmF5LmJ5dGVMZW5ndGgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVkVSVEVYIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLnZlcnRleEJ1ZmZlciwgMCwgdmVydGV4QXJyYXkpO1xuICAgIHRoaXMudmVydGV4Q291bnQgPSB2ZXJ0ZXhBcnJheS5sZW5ndGggLyA0O1xuXG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxuXG5cbiAgcHVibGljIGRyYXcocGFzczogR1BVUmVuZGVyUGFzc0VuY29kZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wYXJlbnQuaXNIaWRkZW4oKSkgcmV0dXJuO1xuICAgIHBhc3Muc2V0QmluZEdyb3VwKDAsIHRoaXMuYmluZEdyb3VwKTtcbiAgICBwYXNzLnNldFZlcnRleEJ1ZmZlcigwLCB0aGlzLnZlcnRleEJ1ZmZlcik7XG4gICAgcGFzcy5kcmF3KHRoaXMudmVydGV4Q291bnQpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQoKTogR1BVVmVydGV4QnVmZmVyTGF5b3V0IHtcbiAgICByZXR1cm4gUmVuZGVyUG9pbnRzLnZlcnRleEJ1ZmZlckxheW91dDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renderPoints.ts\n");

/***/ }),

/***/ "./src/render/renderable.ts":
/*!**********************************!*\
  !*** ./src/render/renderable.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Renderable: () => (/* binding */ Renderable)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math */ \"./src/utils/math.ts\");\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flags */ \"./src/render/flags.ts\");\n\n\n\nclass Renderable {\n    constructor(parent) {\n        this.parent = parent;\n        this.renderID = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().generateNewRenderID();\n        //model\n        this.modelBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"mvp\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        // id\n        this.objectIDBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"id buffer\",\n            size: 4,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        const objectIDArray = new Int32Array([this.parent.getID()]);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.objectIDBuffer, 0, objectIDArray);\n        //flags\n        this.flagsBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"renderable flag buffer\",\n            size: 4,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.flags = new Int32Array([0]);\n    }\n    update() {\n        this.updateFlags();\n        this.updateModel();\n        this.updateBindGroup();\n    }\n    updateFlags() {\n        if (this.parent.isSelected())\n            this.flags[0] |= _flags__WEBPACK_IMPORTED_MODULE_2__.SELECTED_BIT;\n        else\n            this.flags[0] &= ~_flags__WEBPACK_IMPORTED_MODULE_2__.SELECTED_BIT;\n        if (this.parent.isHovered())\n            this.flags[0] |= _flags__WEBPACK_IMPORTED_MODULE_2__.HOVER_BIT;\n        else\n            this.flags[0] &= ~_flags__WEBPACK_IMPORTED_MODULE_2__.HOVER_BIT;\n        if (this.parent.isConstantScreenSize())\n            this.flags[0] |= _flags__WEBPACK_IMPORTED_MODULE_2__.CONSTANT_SCREEN_SIZE_BIT;\n        else\n            this.flags[0] &= ~_flags__WEBPACK_IMPORTED_MODULE_2__.CONSTANT_SCREEN_SIZE_BIT;\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.flagsBuffer, 0, this.flags);\n    }\n    updateModel() {\n        const model = this.parent.getModelRecursive();\n        (0,_utils_math__WEBPACK_IMPORTED_MODULE_1__.swizzleYZ)(model);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.modelBuffer, 0, model);\n    }\n    updateBindGroup() {\n        this.bindGroup = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBindGroup({\n            label: \"renderable bind group\",\n            layout: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getBindGroupLayout(),\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.modelBuffer },\n                }, {\n                    binding: 1,\n                    resource: { buffer: this.parent.getColorBuffer() },\n                }, {\n                    binding: 2,\n                    resource: { buffer: this.flagsBuffer }\n                }, {\n                    binding: 3,\n                    resource: { buffer: this.objectIDBuffer }\n                }\n            ]\n        });\n    }\n    getRenderID() {\n        return this.renderID;\n    }\n    getParent() {\n        return this.parent;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3JlbmRlcmFibGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNrQztBQUdRO0FBQ2tDO0FBS3JFLE1BQWUsVUFBVTtJQVM5QixZQUNZLE1BQWdCO1FBQWhCLFdBQU0sR0FBTixNQUFNLENBQVU7UUFHMUIsSUFBSSxDQUFDLFFBQVEsR0FBRywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFHMUQsT0FBTztRQUNQLElBQUksQ0FBQyxXQUFXLEdBQUcsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDakUsS0FBSyxFQUFFLEtBQUs7WUFDWixJQUFJLEVBQUUsRUFBRTtZQUNSLEtBQUssRUFBRSxjQUFjLENBQUMsT0FBTyxHQUFHLGNBQWMsQ0FBQyxRQUFRO1NBQ3hELENBQUMsQ0FBQztRQUdILEtBQUs7UUFDTCxJQUFJLENBQUMsY0FBYyxHQUFHLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ3BFLEtBQUssRUFBRSxXQUFXO1lBQ2xCLElBQUksRUFBRSxDQUFDO1lBQ1AsS0FBSyxFQUFFLGNBQWMsQ0FBQyxPQUFPLEdBQUcsY0FBYyxDQUFDLFFBQVE7U0FDeEQsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxhQUFhLEdBQWUsSUFBSSxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDdkUsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBRzVGLE9BQU87UUFDUCxJQUFJLENBQUMsV0FBVyxHQUFHLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ2pFLEtBQUssRUFBRSx3QkFBd0I7WUFDL0IsSUFBSSxFQUFFLENBQUM7WUFDUCxLQUFLLEVBQUUsY0FBYyxDQUFDLE9BQU8sR0FBRyxjQUFjLENBQUMsUUFBUTtTQUN4RCxDQUFDO1FBQ0YsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFbkMsQ0FBQztJQUVNLE1BQU07UUFDWCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRVMsV0FBVztRQUNuQixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFO1lBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxnREFBWSxDQUFDOztZQUN2RCxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0RBQVksQ0FBQztRQUNwQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFO1lBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSw2Q0FBUyxDQUFDOztZQUNuRCxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsNkNBQVMsQ0FBQztRQUNqQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsb0JBQW9CLEVBQUU7WUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLDREQUF3QixDQUFDOztZQUM3RSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsNERBQXdCLENBQUM7UUFDaEQsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4RixDQUFDO0lBRVMsV0FBVztRQUNuQixNQUFNLEtBQUssR0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDcEQsc0RBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQiwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQWdCLEtBQUssQ0FBQyxDQUFDO0lBQ2pHLENBQUM7SUFFUyxlQUFlO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxlQUFlLENBQUM7WUFDbEUsS0FBSyxFQUFFLHVCQUF1QjtZQUM5QixNQUFNLEVBQUUsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRTtZQUNuRCxPQUFPLEVBQUU7Z0JBQ1A7b0JBQ0UsT0FBTyxFQUFFLENBQUM7b0JBQ1YsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUU7aUJBQ3ZDLEVBQUU7b0JBQ0QsT0FBTyxFQUFFLENBQUM7b0JBQ1YsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLEVBQUU7aUJBQ25ELEVBQUU7b0JBQ0QsT0FBTyxFQUFFLENBQUM7b0JBQ1YsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUU7aUJBQ3ZDLEVBQUU7b0JBQ0QsT0FBTyxFQUFFLENBQUM7b0JBQ1YsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUU7aUJBQzFDO2FBQ0Y7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sV0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLFNBQVM7UUFDZCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3JlbmRlcmFibGUudHM/ZDE1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXQ0IH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL2dlb21ldHJ5L2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBPYmplY3RJRCB9IGZyb20gXCIuLi9zY2VuZS9zY2VuZVwiO1xuaW1wb3J0IHsgc3dpenpsZVlaIH0gZnJvbSBcIi4uL3V0aWxzL21hdGhcIjtcbmltcG9ydCB7IENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVCwgSE9WRVJfQklULCBTRUxFQ1RFRF9CSVQgfSBmcm9tIFwiLi9mbGFnc1wiO1xuXG5cblxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUmVuZGVyYWJsZSB7XG5cbiAgcHJvdGVjdGVkIHJlbmRlcklEOiBudW1iZXI7XG4gIHByb3RlY3RlZCBmbGFnczogSW50MzJBcnJheTtcbiAgcHJvdGVjdGVkIG9iamVjdElEQnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByb3RlY3RlZCBmbGFnc0J1ZmZlcjogR1BVQnVmZmVyO1xuICBwcm90ZWN0ZWQgbW9kZWxCdWZmZXI6IEdQVUJ1ZmZlcjtcbiAgcHJvdGVjdGVkIGJpbmRHcm91cCE6IEdQVUJpbmRHcm91cDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgcGFyZW50OiBHZW9tZXRyeSxcbiAgKSB7XG5cbiAgICB0aGlzLnJlbmRlcklEID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZW5lcmF0ZU5ld1JlbmRlcklEKCk7XG5cblxuICAgIC8vbW9kZWxcbiAgICB0aGlzLm1vZGVsQnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwibXZwXCIsXG4gICAgICBzaXplOiA2NCxcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5VTklGT1JNIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG5cblxuICAgIC8vIGlkXG4gICAgdGhpcy5vYmplY3RJREJ1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcImlkIGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogNCxcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5VTklGT1JNIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgY29uc3Qgb2JqZWN0SURBcnJheTogSW50MzJBcnJheSA9IG5ldyBJbnQzMkFycmF5KFt0aGlzLnBhcmVudC5nZXRJRCgpXSlcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMub2JqZWN0SURCdWZmZXIsIDAsIG9iamVjdElEQXJyYXkpO1xuXG5cbiAgICAvL2ZsYWdzXG4gICAgdGhpcy5mbGFnc0J1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcInJlbmRlcmFibGUgZmxhZyBidWZmZXJcIixcbiAgICAgIHNpemU6IDQsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVU5JRk9STSB8IEdQVUJ1ZmZlclVzYWdlLkNPUFlfRFNULFxuICAgIH0pXG4gICAgdGhpcy5mbGFncyA9IG5ldyBJbnQzMkFycmF5KFswXSk7XG5cbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGUoKTogdm9pZCB7XG4gICAgdGhpcy51cGRhdGVGbGFncygpO1xuICAgIHRoaXMudXBkYXRlTW9kZWwoKTtcbiAgICB0aGlzLnVwZGF0ZUJpbmRHcm91cCgpO1xuICB9XG5cbiAgcHJvdGVjdGVkIHVwZGF0ZUZsYWdzKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnBhcmVudC5pc1NlbGVjdGVkKCkpIHRoaXMuZmxhZ3NbMF0gfD0gU0VMRUNURURfQklUO1xuICAgIGVsc2UgdGhpcy5mbGFnc1swXSAmPSB+U0VMRUNURURfQklUO1xuICAgIGlmICh0aGlzLnBhcmVudC5pc0hvdmVyZWQoKSkgdGhpcy5mbGFnc1swXSB8PSBIT1ZFUl9CSVQ7XG4gICAgZWxzZSB0aGlzLmZsYWdzWzBdICY9IH5IT1ZFUl9CSVQ7XG4gICAgaWYgKHRoaXMucGFyZW50LmlzQ29uc3RhbnRTY3JlZW5TaXplKCkpIHRoaXMuZmxhZ3NbMF0gfD0gQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUO1xuICAgIGVsc2UgdGhpcy5mbGFnc1swXSAmPSB+Q09OU1RBTlRfU0NSRUVOX1NJWkVfQklUO1xuICAgIElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkucXVldWUud3JpdGVCdWZmZXIodGhpcy5mbGFnc0J1ZmZlciwgMCwgdGhpcy5mbGFncyk7XG4gIH1cblxuICBwcm90ZWN0ZWQgdXBkYXRlTW9kZWwoKTogdm9pZCB7XG4gICAgY29uc3QgbW9kZWw6IE1hdDQgPSB0aGlzLnBhcmVudC5nZXRNb2RlbFJlY3Vyc2l2ZSgpO1xuICAgIHN3aXp6bGVZWihtb2RlbCk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLm1vZGVsQnVmZmVyLCAwLCA8RmxvYXQzMkFycmF5Pm1vZGVsKTtcbiAgfVxuXG4gIHByb3RlY3RlZCB1cGRhdGVCaW5kR3JvdXAoKTogdm9pZCB7XG4gICAgdGhpcy5iaW5kR3JvdXAgPSBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLmNyZWF0ZUJpbmRHcm91cCh7XG4gICAgICBsYWJlbDogXCJyZW5kZXJhYmxlIGJpbmQgZ3JvdXBcIixcbiAgICAgIGxheW91dDogSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXRCaW5kR3JvdXBMYXlvdXQoKSxcbiAgICAgIGVudHJpZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGJpbmRpbmc6IDAsXG4gICAgICAgICAgcmVzb3VyY2U6IHsgYnVmZmVyOiB0aGlzLm1vZGVsQnVmZmVyIH0sXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBiaW5kaW5nOiAxLFxuICAgICAgICAgIHJlc291cmNlOiB7IGJ1ZmZlcjogdGhpcy5wYXJlbnQuZ2V0Q29sb3JCdWZmZXIoKSB9LFxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMixcbiAgICAgICAgICByZXNvdXJjZTogeyBidWZmZXI6IHRoaXMuZmxhZ3NCdWZmZXIgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMyxcbiAgICAgICAgICByZXNvdXJjZTogeyBidWZmZXI6IHRoaXMub2JqZWN0SURCdWZmZXIgfVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0UmVuZGVySUQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5yZW5kZXJJRDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRQYXJlbnQoKTogR2VvbWV0cnkge1xuICAgIHJldHVybiB0aGlzLnBhcmVudDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renderable.ts\n");

/***/ }),

/***/ "./src/render/renderer.ts":
/*!********************************!*\
  !*** ./src/render/renderer.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Renderer: () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var _shaders_triangleShader_wgsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shaders/triangleShader.wgsl */ \"./src/render/shaders/triangleShader.wgsl\");\n/* harmony import */ var _shaders_lineShader_wgsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shaders/lineShader.wgsl */ \"./src/render/shaders/lineShader.wgsl\");\n/* harmony import */ var _shaders_pointShader_wgsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shaders/pointShader.wgsl */ \"./src/render/shaders/pointShader.wgsl\");\n/* harmony import */ var _shaders_instancedTriangleShader_wgsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shaders/instancedTriangleShader.wgsl */ \"./src/render/shaders/instancedTriangleShader.wgsl\");\n/* harmony import */ var _shaders_overlayMeshShader_wgsl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shaders/overlayMeshShader.wgsl */ \"./src/render/shaders/overlayMeshShader.wgsl\");\n/* harmony import */ var _pipeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pipeline */ \"./src/render/pipeline.ts\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _globalUniforms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./globalUniforms */ \"./src/render/globalUniforms.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\nconst compatibilityCheck = document.getElementById(\"compatibility-check\");\nclass Renderer {\n    constructor() {\n        this.clearColor = [0.1, 0.1, 0.1, 1.0];\n    }\n    getDevice() {\n        return this.device;\n    }\n    getBindGroupLayout() {\n        return this.bindGroupLayout;\n    }\n    getBindGroupLayoutInstanced() {\n        return this.bindGroupLayoutInstanced;\n    }\n    setClearColor(color) {\n        this.clearColor = color;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createDevice();\n            this.createResources();\n            this.createPipelines();\n            this.updateScreenSize();\n        });\n    }\n    createDevice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!navigator.gpu) {\n                alert(\"Your browser / computer does not support WebGPU.\");\n                compatibilityCheck.innerText = \"This browser does not support WebGPU. Check here for a list of supported browsers https://caniuse.com/webgpu\";\n                return;\n            }\n            var adapter;\n            try {\n                adapter = yield navigator.gpu.requestAdapter();\n            }\n            catch (error) {\n                console.log(error);\n            }\n            if (adapter == null) {\n                alert(\"Your browser / computer does not support WebGPU.\");\n                compatibilityCheck.innerText = \"No valid gpu adapter. Check here for a list of supported browsers https://caniuse.com/webgpu\";\n                return;\n            }\n            this.device = (yield adapter.requestDevice());\n            this.canvas = document.getElementById(\"screen\");\n            this.context = this.canvas.getContext(\"webgpu\");\n            this.canvasFormat = navigator.gpu.getPreferredCanvasFormat();\n            this.context.configure({\n                device: this.device,\n                format: this.canvasFormat,\n            });\n        });\n    }\n    createResources() {\n        this.triangleShaderModule = this.device.createShaderModule({\n            label: \"triangle shader module\",\n            code: _shaders_triangleShader_wgsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        });\n        this.lineShaderModule = this.device.createShaderModule({\n            label: \"line shader module\",\n            code: _shaders_lineShader_wgsl__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        });\n        this.pointShaderModule = this.device.createShaderModule({\n            label: \"point shader module\",\n            code: _shaders_pointShader_wgsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        });\n        this.instancedTriangleShaderModule = this.device.createShaderModule({\n            label: \"instanced triangle shader module\",\n            code: _shaders_instancedTriangleShader_wgsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n        });\n        this.overlayMeshShaderModule = this.device.createShaderModule({\n            label: \"overlay mesh shader module\",\n            code: _shaders_overlayMeshShader_wgsl__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        });\n        this.bindGroupLayout = this.device.createBindGroupLayout({\n            label: \"bind group layout\",\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 1,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    buffer: {},\n                }, {\n                    binding: 2,\n                    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n                    buffer: {},\n                }, {\n                    binding: 3,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    buffer: {},\n                }\n            ]\n        });\n        // TODO: factor\n        this.bindGroupLayoutInstanced = this.device.createBindGroupLayout({\n            label: \"bind group layout instanced\",\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: { type: \"read-only-storage\" },\n                }\n            ]\n        });\n        this.globalUniforms = new _globalUniforms__WEBPACK_IMPORTED_MODULE_7__.GlobalUniforms(this.device);\n        this.updateScreenSize();\n    }\n    createPipelines() {\n        this.trianglePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_5__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.triangleShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_5__.PipelinePrimitive.Triangle);\n        this.linePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_5__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.lineShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_5__.PipelinePrimitive.Line);\n        this.pointPipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_5__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.pointShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_5__.PipelinePrimitive.Point);\n        this.instancedTrianglePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_5__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout(), this.bindGroupLayoutInstanced], this.instancedTriangleShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_5__.PipelinePrimitive.Triangle);\n        this.overlayMeshPipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_5__.Pipeline(this.device, this.canvasFormat, [this.bindGroupLayout, this.globalUniforms.getLayout()], this.overlayMeshShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_5__.PipelinePrimitive.Triangle);\n    }\n    updateScreenSize() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n        this.depthTexture = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 4,\n            format: \"depth24plus\",\n            usage: GPUTextureUsage.RENDER_ATTACHMENT\n        });\n        this.renderTarget = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 4,\n            format: this.canvasFormat,\n            usage: GPUTextureUsage.RENDER_ATTACHMENT\n        });\n    }\n    render(scene) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Factor this stuff out of main loop\n            this.globalUniforms.tick();\n            var drawCallCounter = 0;\n            const encoder = this.device.createCommandEncoder();\n            const mainPass = encoder.beginRenderPass({\n                colorAttachments: [\n                    {\n                        view: this.renderTarget.createView(),\n                        resolveTarget: this.context.getCurrentTexture().createView(),\n                        loadOp: \"clear\",\n                        clearValue: this.clearColor,\n                        storeOp: \"store\",\n                    },\n                ],\n                depthStencilAttachment: {\n                    view: this.depthTexture.createView(),\n                    depthClearValue: 1.0,\n                    depthLoadOp: \"clear\",\n                    depthStoreOp: \"store\"\n                }\n            });\n            this.globalUniforms.bind(mainPass);\n            mainPass.setPipeline(this.trianglePipeline.get());\n            for (let mesh of scene.getAllMeshes()) {\n                if (!mesh.isOverlay()) {\n                    mesh.draw(mainPass);\n                    drawCallCounter++;\n                }\n            }\n            ;\n            mainPass.setPipeline(this.linePipeline.get());\n            for (let lines of scene.getAllLines()) {\n                lines.draw(mainPass);\n                drawCallCounter++;\n            }\n            ;\n            mainPass.setPipeline(this.pointPipeline.get());\n            for (let points of scene.getAllPoints()) {\n                points.draw(mainPass);\n                drawCallCounter++;\n            }\n            mainPass.setPipeline(this.instancedTrianglePipeline.get());\n            for (let mesh of scene.getAllMeshesInstanced()) {\n                mesh.draw(mainPass);\n                drawCallCounter++;\n            }\n            mainPass.end();\n            const overlayPass = encoder.beginRenderPass({\n                colorAttachments: [\n                    {\n                        view: this.renderTarget.createView(),\n                        resolveTarget: this.context.getCurrentTexture().createView(),\n                        loadOp: \"load\",\n                        clearValue: this.clearColor,\n                        storeOp: \"store\",\n                    },\n                ],\n                depthStencilAttachment: {\n                    view: this.depthTexture.createView(),\n                    depthClearValue: 1.0,\n                    depthLoadOp: \"clear\",\n                    depthStoreOp: \"store\"\n                }\n            });\n            overlayPass.setPipeline(this.overlayMeshPipeline.get());\n            this.globalUniforms.bind(overlayPass);\n            for (let mesh of scene.getAllMeshes()) {\n                if (mesh.isOverlay()) {\n                    mesh.draw(overlayPass);\n                    drawCallCounter++;\n                }\n            }\n            overlayPass.end();\n            const commandBuffer = encoder.finish();\n            this.device.queue.submit([commandBuffer]);\n            _cad__WEBPACK_IMPORTED_MODULE_6__.INSTANCE.getStats().setDrawCalls(drawCallCounter);\n            yield this.device.queue.onSubmittedWorkDone();\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2pCO2lCQUNGO2dCQUNELHNCQUFzQixFQUFFO29CQUN0QixJQUFJLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUU7b0JBQ3BDLGVBQWUsRUFBRSxHQUFHO29CQUNwQixXQUFXLEVBQUUsT0FBTztvQkFDcEIsWUFBWSxFQUFFLE9BQU87aUJBQ3RCO2FBQ0YsQ0FBQztZQUNGLFdBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFFeEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDdEMsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLENBQUMsWUFBWSxFQUFFLEVBQUU7Z0JBQ3JDLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFO29CQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO29CQUN2QixlQUFlLEVBQUUsQ0FBQztpQkFDbkI7YUFDRjtZQUNELFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUVsQixNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDdkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUUxQywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUVsRCxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFFaEQsQ0FBQztLQUFBO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvcmVuZGVyZXIudHM/YjVjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB0cmlhbmdsZVNoYWRlciBmcm9tIFwiLi9zaGFkZXJzL3RyaWFuZ2xlU2hhZGVyLndnc2xcIjtcbmltcG9ydCBsaW5lU2hhZGVyIGZyb20gXCIuL3NoYWRlcnMvbGluZVNoYWRlci53Z3NsXCI7XG5pbXBvcnQgcG9pbnRTaGFkZXIgZnJvbSBcIi4vc2hhZGVycy9wb2ludFNoYWRlci53Z3NsXCI7XG5pbXBvcnQgaW5zdGFuY2VkVHJpYW5nbGVTaGFkZXIgZnJvbSBcIi4vc2hhZGVycy9pbnN0YW5jZWRUcmlhbmdsZVNoYWRlci53Z3NsXCJcbmltcG9ydCBvdmVybGF5TWVzaFNoYWRlciBmcm9tIFwiLi9zaGFkZXJzL292ZXJsYXlNZXNoU2hhZGVyLndnc2xcIlxuaW1wb3J0IHsgU2NlbmUgfSBmcm9tIFwiLi4vc2NlbmUvc2NlbmVcIlxuaW1wb3J0IHsgUGlwZWxpbmUsIFBpcGVsaW5lUHJpbWl0aXZlIH0gZnJvbSBcIi4vcGlwZWxpbmVcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCI7XG5pbXBvcnQgeyBHbG9iYWxVbmlmb3JtcyB9IGZyb20gXCIuL2dsb2JhbFVuaWZvcm1zXCI7XG5cbmNvbnN0IGNvbXBhdGliaWxpdHlDaGVjazogSFRNTEVsZW1lbnQgPSA8SFRNTEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb21wYXRpYmlsaXR5LWNoZWNrXCIpO1xuXG5leHBvcnQgY2xhc3MgUmVuZGVyZXIge1xuXG4gIHByaXZhdGUgZGV2aWNlITogR1BVRGV2aWNlO1xuICBwcml2YXRlIGNvbnRleHQhOiBHUFVDYW52YXNDb250ZXh0O1xuICBwcml2YXRlIGNhbnZhcyE6IEhUTUxDYW52YXNFbGVtZW50O1xuICBwcml2YXRlIGNhbnZhc0Zvcm1hdCE6IEdQVVRleHR1cmVGb3JtYXQ7XG5cbiAgcHJpdmF0ZSB0cmlhbmdsZVNoYWRlck1vZHVsZSE6IEdQVVNoYWRlck1vZHVsZTtcbiAgcHJpdmF0ZSBsaW5lU2hhZGVyTW9kdWxlITogR1BVU2hhZGVyTW9kdWxlO1xuICBwcml2YXRlIHBvaW50U2hhZGVyTW9kdWxlITogR1BVU2hhZGVyTW9kdWxlO1xuICBwcml2YXRlIGluc3RhbmNlZFRyaWFuZ2xlU2hhZGVyTW9kdWxlITogR1BVU2hhZGVyTW9kdWxlO1xuICBwcml2YXRlIG92ZXJsYXlNZXNoU2hhZGVyTW9kdWxlITogR1BVU2hhZGVyTW9kdWxlO1xuXG4gIHByaXZhdGUgZGVwdGhUZXh0dXJlITogR1BVVGV4dHVyZTtcbiAgcHJpdmF0ZSByZW5kZXJUYXJnZXQhOiBHUFVUZXh0dXJlO1xuXG4gIHByaXZhdGUgYmluZEdyb3VwTGF5b3V0ITogR1BVQmluZEdyb3VwTGF5b3V0O1xuICBwcml2YXRlIGJpbmRHcm91cExheW91dEluc3RhbmNlZCE6IEdQVUJpbmRHcm91cExheW91dDtcblxuICBwcml2YXRlIGdsb2JhbFVuaWZvcm1zITogR2xvYmFsVW5pZm9ybXM7XG5cbiAgcHJpdmF0ZSB0cmlhbmdsZVBpcGVsaW5lITogUGlwZWxpbmU7XG4gIHByaXZhdGUgbGluZVBpcGVsaW5lITogUGlwZWxpbmU7XG4gIHByaXZhdGUgcG9pbnRQaXBlbGluZSE6IFBpcGVsaW5lO1xuICBwcml2YXRlIGluc3RhbmNlZFRyaWFuZ2xlUGlwZWxpbmUhOiBQaXBlbGluZTtcbiAgcHJpdmF0ZSBvdmVybGF5TWVzaFBpcGVsaW5lITogUGlwZWxpbmU7XG5cbiAgcHJpdmF0ZSBjbGVhckNvbG9yOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNsZWFyQ29sb3IgPSBbMC4xLCAwLjEsIDAuMSwgMS4wXTtcbiAgfVxuXG4gIHB1YmxpYyBnZXREZXZpY2UoKTogR1BVRGV2aWNlIHtcbiAgICByZXR1cm4gdGhpcy5kZXZpY2U7XG4gIH1cblxuICBwdWJsaWMgZ2V0QmluZEdyb3VwTGF5b3V0KCk6IEdQVUJpbmRHcm91cExheW91dCB7XG4gICAgcmV0dXJuIHRoaXMuYmluZEdyb3VwTGF5b3V0O1xuICB9XG5cbiAgcHVibGljIGdldEJpbmRHcm91cExheW91dEluc3RhbmNlZCgpOiBHUFVCaW5kR3JvdXBMYXlvdXQge1xuICAgIHJldHVybiB0aGlzLmJpbmRHcm91cExheW91dEluc3RhbmNlZDtcbiAgfVxuXG4gIHB1YmxpYyBzZXRDbGVhckNvbG9yKGNvbG9yOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSk6IHZvaWQge1xuICAgIHRoaXMuY2xlYXJDb2xvciA9IGNvbG9yO1xuICB9XG5cbiAgYXN5bmMgaW5pdCgpIHtcblxuXG4gICAgYXdhaXQgdGhpcy5jcmVhdGVEZXZpY2UoKTtcbiAgICB0aGlzLmNyZWF0ZVJlc291cmNlcygpO1xuICAgIHRoaXMuY3JlYXRlUGlwZWxpbmVzKCk7XG4gICAgdGhpcy51cGRhdGVTY3JlZW5TaXplKCk7XG5cbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgY3JlYXRlRGV2aWNlKCkge1xuXG4gICAgaWYgKCFuYXZpZ2F0b3IuZ3B1KSB7XG4gICAgICBhbGVydChcIllvdXIgYnJvd3NlciAvIGNvbXB1dGVyIGRvZXMgbm90IHN1cHBvcnQgV2ViR1BVLlwiKTtcbiAgICAgIGNvbXBhdGliaWxpdHlDaGVjay5pbm5lclRleHQgPSBcIlRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IFdlYkdQVS4gQ2hlY2sgaGVyZSBmb3IgYSBsaXN0IG9mIHN1cHBvcnRlZCBicm93c2VycyBodHRwczovL2Nhbml1c2UuY29tL3dlYmdwdVwiO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBhZGFwdGVyOiBHUFVBZGFwdGVyIHwgbnVsbDtcbiAgICB0cnkge1xuICAgICAgYWRhcHRlciA9IGF3YWl0IG5hdmlnYXRvci5ncHUucmVxdWVzdEFkYXB0ZXIoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cblxuICAgIGlmIChhZGFwdGVyISA9PSBudWxsKSB7XG4gICAgICBhbGVydChcIllvdXIgYnJvd3NlciAvIGNvbXB1dGVyIGRvZXMgbm90IHN1cHBvcnQgV2ViR1BVLlwiKTtcbiAgICAgIGNvbXBhdGliaWxpdHlDaGVjay5pbm5lclRleHQgPSBcIk5vIHZhbGlkIGdwdSBhZGFwdGVyLiBDaGVjayBoZXJlIGZvciBhIGxpc3Qgb2Ygc3VwcG9ydGVkIGJyb3dzZXJzIGh0dHBzOi8vY2FuaXVzZS5jb20vd2ViZ3B1XCI7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5kZXZpY2UgPSA8R1BVRGV2aWNlPmF3YWl0IGFkYXB0ZXIucmVxdWVzdERldmljZSgpO1xuICAgIHRoaXMuY2FudmFzID0gPEhUTUxDYW52YXNFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2NyZWVuXCIpO1xuICAgIHRoaXMuY29udGV4dCA9IDxHUFVDYW52YXNDb250ZXh0PnRoaXMuY2FudmFzLmdldENvbnRleHQoXCJ3ZWJncHVcIik7XG5cblxuICAgIHRoaXMuY2FudmFzRm9ybWF0ID0gbmF2aWdhdG9yLmdwdS5nZXRQcmVmZXJyZWRDYW52YXNGb3JtYXQoKTtcbiAgICB0aGlzLmNvbnRleHQuY29uZmlndXJlKHtcbiAgICAgIGRldmljZTogdGhpcy5kZXZpY2UsXG4gICAgICBmb3JtYXQ6IHRoaXMuY2FudmFzRm9ybWF0LFxuICAgIH0pO1xuXG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZVJlc291cmNlcygpIHtcblxuXG4gICAgdGhpcy50cmlhbmdsZVNoYWRlck1vZHVsZSA9IHRoaXMuZGV2aWNlLmNyZWF0ZVNoYWRlck1vZHVsZSh7XG4gICAgICBsYWJlbDogXCJ0cmlhbmdsZSBzaGFkZXIgbW9kdWxlXCIsXG4gICAgICBjb2RlOiB0cmlhbmdsZVNoYWRlcixcbiAgICB9KTtcbiAgICB0aGlzLmxpbmVTaGFkZXJNb2R1bGUgPSB0aGlzLmRldmljZS5jcmVhdGVTaGFkZXJNb2R1bGUoe1xuICAgICAgbGFiZWw6IFwibGluZSBzaGFkZXIgbW9kdWxlXCIsXG4gICAgICBjb2RlOiBsaW5lU2hhZGVyLFxuICAgIH0pO1xuICAgIHRoaXMucG9pbnRTaGFkZXJNb2R1bGUgPSB0aGlzLmRldmljZS5jcmVhdGVTaGFkZXJNb2R1bGUoe1xuICAgICAgbGFiZWw6IFwicG9pbnQgc2hhZGVyIG1vZHVsZVwiLFxuICAgICAgY29kZTogcG9pbnRTaGFkZXIsXG4gICAgfSk7XG4gICAgdGhpcy5pbnN0YW5jZWRUcmlhbmdsZVNoYWRlck1vZHVsZSA9IHRoaXMuZGV2aWNlLmNyZWF0ZVNoYWRlck1vZHVsZSh7XG4gICAgICBsYWJlbDogXCJpbnN0YW5jZWQgdHJpYW5nbGUgc2hhZGVyIG1vZHVsZVwiLFxuICAgICAgY29kZTogaW5zdGFuY2VkVHJpYW5nbGVTaGFkZXIsXG4gICAgfSk7XG4gICAgdGhpcy5vdmVybGF5TWVzaFNoYWRlck1vZHVsZSA9IHRoaXMuZGV2aWNlLmNyZWF0ZVNoYWRlck1vZHVsZSh7XG4gICAgICBsYWJlbDogXCJvdmVybGF5IG1lc2ggc2hhZGVyIG1vZHVsZVwiLFxuICAgICAgY29kZTogb3ZlcmxheU1lc2hTaGFkZXIsXG4gICAgfSlcblxuICAgIHRoaXMuYmluZEdyb3VwTGF5b3V0ID0gdGhpcy5kZXZpY2UuY3JlYXRlQmluZEdyb3VwTGF5b3V0KHtcbiAgICAgIGxhYmVsOiBcImJpbmQgZ3JvdXAgbGF5b3V0XCIsXG4gICAgICBlbnRyaWVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBiaW5kaW5nOiAwLCAvLyBtdnBcbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5WRVJURVgsXG4gICAgICAgICAgYnVmZmVyOiB7fVxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMSwgLy8gY29sb3JcbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5GUkFHTUVOVCxcbiAgICAgICAgICBidWZmZXI6IHt9LFxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMiwgLy8gZmxhZ3NcbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5WRVJURVggfCBHUFVTaGFkZXJTdGFnZS5GUkFHTUVOVCxcbiAgICAgICAgICBidWZmZXI6IHt9LFxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMywgLy8gaWRcbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5GUkFHTUVOVCxcbiAgICAgICAgICBidWZmZXI6IHt9LFxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSk7XG5cbiAgICAvLyBUT0RPOiBmYWN0b3JcbiAgICB0aGlzLmJpbmRHcm91cExheW91dEluc3RhbmNlZCA9IHRoaXMuZGV2aWNlLmNyZWF0ZUJpbmRHcm91cExheW91dCh7XG4gICAgICBsYWJlbDogXCJiaW5kIGdyb3VwIGxheW91dCBpbnN0YW5jZWRcIixcbiAgICAgIGVudHJpZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGJpbmRpbmc6IDAsIC8vIHRyYW5zZm9ybSBidWZmZXJcbiAgICAgICAgICB2aXNpYmlsaXR5OiBHUFVTaGFkZXJTdGFnZS5WRVJURVgsXG4gICAgICAgICAgYnVmZmVyOiB7IHR5cGU6IFwicmVhZC1vbmx5LXN0b3JhZ2VcIiB9LFxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSk7XG5cbiAgICB0aGlzLmdsb2JhbFVuaWZvcm1zID0gbmV3IEdsb2JhbFVuaWZvcm1zKHRoaXMuZGV2aWNlKTtcblxuICAgIHRoaXMudXBkYXRlU2NyZWVuU2l6ZSgpO1xuXG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZVBpcGVsaW5lcygpIHtcbiAgICB0aGlzLnRyaWFuZ2xlUGlwZWxpbmUgPSBuZXcgUGlwZWxpbmUoXG4gICAgICB0aGlzLmRldmljZSxcbiAgICAgIHRoaXMuY2FudmFzRm9ybWF0LFxuICAgICAgW3RoaXMuYmluZEdyb3VwTGF5b3V0LCB0aGlzLmdsb2JhbFVuaWZvcm1zLmdldExheW91dCgpXSxcbiAgICAgIHRoaXMudHJpYW5nbGVTaGFkZXJNb2R1bGUsXG4gICAgICBQaXBlbGluZVByaW1pdGl2ZS5UcmlhbmdsZSk7XG4gICAgdGhpcy5saW5lUGlwZWxpbmUgPSBuZXcgUGlwZWxpbmUoXG4gICAgICB0aGlzLmRldmljZSxcbiAgICAgIHRoaXMuY2FudmFzRm9ybWF0LFxuICAgICAgW3RoaXMuYmluZEdyb3VwTGF5b3V0LCB0aGlzLmdsb2JhbFVuaWZvcm1zLmdldExheW91dCgpXSxcbiAgICAgIHRoaXMubGluZVNoYWRlck1vZHVsZSxcbiAgICAgIFBpcGVsaW5lUHJpbWl0aXZlLkxpbmUpO1xuICAgIHRoaXMucG9pbnRQaXBlbGluZSA9IG5ldyBQaXBlbGluZShcbiAgICAgIHRoaXMuZGV2aWNlLFxuICAgICAgdGhpcy5jYW52YXNGb3JtYXQsXG4gICAgICBbdGhpcy5iaW5kR3JvdXBMYXlvdXQsIHRoaXMuZ2xvYmFsVW5pZm9ybXMuZ2V0TGF5b3V0KCldLFxuICAgICAgdGhpcy5wb2ludFNoYWRlck1vZHVsZSxcbiAgICAgIFBpcGVsaW5lUHJpbWl0aXZlLlBvaW50KTtcbiAgICB0aGlzLmluc3RhbmNlZFRyaWFuZ2xlUGlwZWxpbmUgPSBuZXcgUGlwZWxpbmUoXG4gICAgICB0aGlzLmRldmljZSxcbiAgICAgIHRoaXMuY2FudmFzRm9ybWF0LFxuICAgICAgW3RoaXMuYmluZEdyb3VwTGF5b3V0LCB0aGlzLmdsb2JhbFVuaWZvcm1zLmdldExheW91dCgpLCB0aGlzLmJpbmRHcm91cExheW91dEluc3RhbmNlZF0sXG4gICAgICB0aGlzLmluc3RhbmNlZFRyaWFuZ2xlU2hhZGVyTW9kdWxlLFxuICAgICAgUGlwZWxpbmVQcmltaXRpdmUuVHJpYW5nbGUpO1xuICAgIHRoaXMub3ZlcmxheU1lc2hQaXBlbGluZSA9IG5ldyBQaXBlbGluZShcbiAgICAgIHRoaXMuZGV2aWNlLFxuICAgICAgdGhpcy5jYW52YXNGb3JtYXQsXG4gICAgICBbdGhpcy5iaW5kR3JvdXBMYXlvdXQsIHRoaXMuZ2xvYmFsVW5pZm9ybXMuZ2V0TGF5b3V0KCldLFxuICAgICAgdGhpcy5vdmVybGF5TWVzaFNoYWRlck1vZHVsZSxcbiAgICAgIFBpcGVsaW5lUHJpbWl0aXZlLlRyaWFuZ2xlKTtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVTY3JlZW5TaXplKCk6IHZvaWQge1xuICAgIHRoaXMuY2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgdGhpcy5jYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgIHRoaXMuZGVwdGhUZXh0dXJlID0gdGhpcy5kZXZpY2UuY3JlYXRlVGV4dHVyZSh7XG4gICAgICBzaXplOiBbdGhpcy5jYW52YXMud2lkdGgsIHRoaXMuY2FudmFzLmhlaWdodF0sXG4gICAgICBzYW1wbGVDb3VudDogNCxcbiAgICAgIGZvcm1hdDogXCJkZXB0aDI0cGx1c1wiLFxuICAgICAgdXNhZ2U6IEdQVVRleHR1cmVVc2FnZS5SRU5ERVJfQVRUQUNITUVOVFxuICAgIH0pO1xuXG4gICAgdGhpcy5yZW5kZXJUYXJnZXQgPSB0aGlzLmRldmljZS5jcmVhdGVUZXh0dXJlKHtcbiAgICAgIHNpemU6IFt0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0XSxcbiAgICAgIHNhbXBsZUNvdW50OiA0LFxuICAgICAgZm9ybWF0OiB0aGlzLmNhbnZhc0Zvcm1hdCxcbiAgICAgIHVzYWdlOiBHUFVUZXh0dXJlVXNhZ2UuUkVOREVSX0FUVEFDSE1FTlRcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIHJlbmRlcihzY2VuZTogU2NlbmUpIHtcblxuICAgIC8vIFRPRE86IEZhY3RvciB0aGlzIHN0dWZmIG91dCBvZiBtYWluIGxvb3BcblxuICAgIHRoaXMuZ2xvYmFsVW5pZm9ybXMudGljaygpO1xuXG4gICAgdmFyIGRyYXdDYWxsQ291bnRlcjogbnVtYmVyID0gMDtcblxuICAgIGNvbnN0IGVuY29kZXI6IEdQVUNvbW1hbmRFbmNvZGVyID0gdGhpcy5kZXZpY2UuY3JlYXRlQ29tbWFuZEVuY29kZXIoKTtcblxuICAgIGNvbnN0IG1haW5QYXNzOiBHUFVSZW5kZXJQYXNzRW5jb2RlciA9IGVuY29kZXIuYmVnaW5SZW5kZXJQYXNzKHtcbiAgICAgIGNvbG9yQXR0YWNobWVudHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHZpZXc6IHRoaXMucmVuZGVyVGFyZ2V0LmNyZWF0ZVZpZXcoKSxcbiAgICAgICAgICByZXNvbHZlVGFyZ2V0OiB0aGlzLmNvbnRleHQuZ2V0Q3VycmVudFRleHR1cmUoKS5jcmVhdGVWaWV3KCksXG4gICAgICAgICAgbG9hZE9wOiBcImNsZWFyXCIsXG4gICAgICAgICAgY2xlYXJWYWx1ZTogdGhpcy5jbGVhckNvbG9yLFxuICAgICAgICAgIHN0b3JlT3A6IFwic3RvcmVcIixcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgICBkZXB0aFN0ZW5jaWxBdHRhY2htZW50OiB7XG4gICAgICAgIHZpZXc6IHRoaXMuZGVwdGhUZXh0dXJlLmNyZWF0ZVZpZXcoKSxcbiAgICAgICAgZGVwdGhDbGVhclZhbHVlOiAxLjAsXG4gICAgICAgIGRlcHRoTG9hZE9wOiBcImNsZWFyXCIsXG4gICAgICAgIGRlcHRoU3RvcmVPcDogXCJzdG9yZVwiXG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5nbG9iYWxVbmlmb3Jtcy5iaW5kKG1haW5QYXNzKTtcblxuICAgIG1haW5QYXNzLnNldFBpcGVsaW5lKHRoaXMudHJpYW5nbGVQaXBlbGluZS5nZXQoKSk7XG4gICAgZm9yIChsZXQgbWVzaCBvZiBzY2VuZS5nZXRBbGxNZXNoZXMoKSkge1xuICAgICAgaWYgKCFtZXNoLmlzT3ZlcmxheSgpKSB7XG4gICAgICAgIG1lc2guZHJhdyhtYWluUGFzcyk7XG4gICAgICAgIGRyYXdDYWxsQ291bnRlcisrO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBtYWluUGFzcy5zZXRQaXBlbGluZSh0aGlzLmxpbmVQaXBlbGluZS5nZXQoKSk7XG4gICAgZm9yIChsZXQgbGluZXMgb2Ygc2NlbmUuZ2V0QWxsTGluZXMoKSkge1xuICAgICAgbGluZXMuZHJhdyhtYWluUGFzcyk7XG4gICAgICBkcmF3Q2FsbENvdW50ZXIrKztcbiAgICB9O1xuXG4gICAgbWFpblBhc3Muc2V0UGlwZWxpbmUodGhpcy5wb2ludFBpcGVsaW5lLmdldCgpKTtcbiAgICBmb3IgKGxldCBwb2ludHMgb2Ygc2NlbmUuZ2V0QWxsUG9pbnRzKCkpIHtcbiAgICAgIHBvaW50cy5kcmF3KG1haW5QYXNzKTtcbiAgICAgIGRyYXdDYWxsQ291bnRlcisrO1xuICAgIH1cblxuICAgIG1haW5QYXNzLnNldFBpcGVsaW5lKHRoaXMuaW5zdGFuY2VkVHJpYW5nbGVQaXBlbGluZS5nZXQoKSk7XG4gICAgZm9yIChsZXQgbWVzaCBvZiBzY2VuZS5nZXRBbGxNZXNoZXNJbnN0YW5jZWQoKSkge1xuICAgICAgbWVzaC5kcmF3KG1haW5QYXNzKTtcbiAgICAgIGRyYXdDYWxsQ291bnRlcisrO1xuICAgIH1cblxuICAgIG1haW5QYXNzLmVuZCgpO1xuXG4gICAgY29uc3Qgb3ZlcmxheVBhc3MgPSBlbmNvZGVyLmJlZ2luUmVuZGVyUGFzcyh7XG4gICAgICBjb2xvckF0dGFjaG1lbnRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICB2aWV3OiB0aGlzLnJlbmRlclRhcmdldC5jcmVhdGVWaWV3KCksXG4gICAgICAgICAgcmVzb2x2ZVRhcmdldDogdGhpcy5jb250ZXh0LmdldEN1cnJlbnRUZXh0dXJlKCkuY3JlYXRlVmlldygpLFxuICAgICAgICAgIGxvYWRPcDogXCJsb2FkXCIsXG4gICAgICAgICAgY2xlYXJWYWx1ZTogdGhpcy5jbGVhckNvbG9yLFxuICAgICAgICAgIHN0b3JlT3A6IFwic3RvcmVcIixcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgICBkZXB0aFN0ZW5jaWxBdHRhY2htZW50OiB7XG4gICAgICAgIHZpZXc6IHRoaXMuZGVwdGhUZXh0dXJlLmNyZWF0ZVZpZXcoKSxcbiAgICAgICAgZGVwdGhDbGVhclZhbHVlOiAxLjAsXG4gICAgICAgIGRlcHRoTG9hZE9wOiBcImNsZWFyXCIsXG4gICAgICAgIGRlcHRoU3RvcmVPcDogXCJzdG9yZVwiXG4gICAgICB9XG4gICAgfSlcbiAgICBvdmVybGF5UGFzcy5zZXRQaXBlbGluZSh0aGlzLm92ZXJsYXlNZXNoUGlwZWxpbmUuZ2V0KCkpO1xuXG4gICAgdGhpcy5nbG9iYWxVbmlmb3Jtcy5iaW5kKG92ZXJsYXlQYXNzKTtcbiAgICBmb3IgKGxldCBtZXNoIG9mIHNjZW5lLmdldEFsbE1lc2hlcygpKSB7XG4gICAgICBpZiAobWVzaC5pc092ZXJsYXkoKSkge1xuICAgICAgICBtZXNoLmRyYXcob3ZlcmxheVBhc3MpO1xuICAgICAgICBkcmF3Q2FsbENvdW50ZXIrKztcbiAgICAgIH1cbiAgICB9XG4gICAgb3ZlcmxheVBhc3MuZW5kKCk7XG5cbiAgICBjb25zdCBjb21tYW5kQnVmZmVyID0gZW5jb2Rlci5maW5pc2goKTtcbiAgICB0aGlzLmRldmljZS5xdWV1ZS5zdWJtaXQoW2NvbW1hbmRCdWZmZXJdKTtcblxuICAgIElOU1RBTkNFLmdldFN0YXRzKCkuc2V0RHJhd0NhbGxzKGRyYXdDYWxsQ291bnRlcik7XG5cbiAgICBhd2FpdCB0aGlzLmRldmljZS5xdWV1ZS5vblN1Ym1pdHRlZFdvcmtEb25lKCk7XG5cbiAgfVxuXG59XG5cblxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renderer.ts\n");

/***/ }),

/***/ "./src/render/renterMeshInstanced.ts":
/*!*******************************************!*\
  !*** ./src/render/renterMeshInstanced.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderMeshInstanced: () => (/* binding */ RenderMeshInstanced)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _renderMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderMesh */ \"./src/render/renderMesh.ts\");\n\n\nclass RenderMeshInstanced extends _renderMesh__WEBPACK_IMPORTED_MODULE_1__.RenderMesh {\n    constructor(parent, vertices, indices, transforms) {\n        super(parent, vertices, indices);\n        this.instanceCount = transforms.length;\n        const transformsList = [];\n        for (let i = 0; i < transforms.length; i++)\n            transformsList.push(...transforms[i]);\n        const transformsArray = new Float32Array(transformsList);\n        this.transformBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"transform array\",\n            size: transformsArray.byteLength,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.transformBuffer, 0, transformsArray);\n    }\n    updateBindGroup() {\n        super.updateBindGroup();\n        this.instanceBindGroup = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBindGroup({\n            label: \"bind group instanced mesh\",\n            layout: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getBindGroupLayoutInstanced(),\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.transformBuffer }\n                }\n            ]\n        });\n    }\n    draw(pass) {\n        if (this.parent.isHidden())\n            return;\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setBindGroup(2, this.instanceBindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount, this.instanceCount);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3JlbnRlck1lc2hJbnN0YW5jZWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ2lDO0FBR1M7QUFFbkMsTUFBTSxtQkFBb0IsU0FBUSxtREFBVTtJQU1qRCxZQUNFLE1BQWdCLEVBQ2hCLFFBQXNCLEVBQ3RCLE9BQW1CLEVBQ25CLFVBQWtCO1FBRWxCLEtBQUssQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRWpDLElBQUksQ0FBQyxhQUFhLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUV2QyxNQUFNLGNBQWMsR0FBYSxFQUFFLENBQUM7UUFDcEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFO1lBQUUsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xGLE1BQU0sZUFBZSxHQUFpQixJQUFJLFlBQVksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN2RSxJQUFJLENBQUMsZUFBZSxHQUFHLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ3JFLEtBQUssRUFBRSxpQkFBaUI7WUFDeEIsSUFBSSxFQUFFLGVBQWUsQ0FBQyxVQUFVO1lBQ2hDLEtBQUssRUFBRSxjQUFjLENBQUMsT0FBTyxHQUFHLGNBQWMsQ0FBQyxRQUFRO1NBQ3hELENBQUMsQ0FBQztRQUNILDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUVqRyxDQUFDO0lBRWtCLGVBQWU7UUFFaEMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBRXhCLElBQUksQ0FBQyxpQkFBaUIsR0FBRywwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLGVBQWUsQ0FBQztZQUMxRSxLQUFLLEVBQUUsMkJBQTJCO1lBQ2xDLE1BQU0sRUFBRSwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLDJCQUEyQixFQUFFO1lBQzVELE9BQU8sRUFBRTtnQkFDUDtvQkFDRSxPQUFPLEVBQUUsQ0FBQztvQkFDVixRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRTtpQkFDM0M7YUFDRjtTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFZSxJQUFJLENBQUMsSUFBMEI7UUFDN0MsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUFFLE9BQU87UUFDbkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN4RCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvcmVudGVyTWVzaEluc3RhbmNlZC50cz84YWM0Il0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IG1hdDQsIE1hdDQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIlxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vZ2VvbWV0cnkvZ2VvbWV0cnlcIjtcbmltcG9ydCB7IFJlbmRlck1lc2ggfSBmcm9tIFwiLi9yZW5kZXJNZXNoXCI7XG5cbmV4cG9ydCBjbGFzcyBSZW5kZXJNZXNoSW5zdGFuY2VkIGV4dGVuZHMgUmVuZGVyTWVzaCB7XG5cbiAgcHJpdmF0ZSBpbnN0YW5jZUNvdW50OiBudW1iZXI7XG4gIHByaXZhdGUgdHJhbnNmb3JtQnVmZmVyITogR1BVQnVmZmVyO1xuICBwcml2YXRlIGluc3RhbmNlQmluZEdyb3VwITogR1BVQmluZEdyb3VwO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHBhcmVudDogR2VvbWV0cnksXG4gICAgdmVydGljZXM6IEZsb2F0MzJBcnJheSxcbiAgICBpbmRpY2VzOiBJbnQzMkFycmF5LFxuICAgIHRyYW5zZm9ybXM6IE1hdDRbXVxuICApIHtcbiAgICBzdXBlcihwYXJlbnQsIHZlcnRpY2VzLCBpbmRpY2VzKTtcblxuICAgIHRoaXMuaW5zdGFuY2VDb3VudCA9IHRyYW5zZm9ybXMubGVuZ3RoO1xuXG4gICAgY29uc3QgdHJhbnNmb3Jtc0xpc3Q6IG51bWJlcltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmFuc2Zvcm1zLmxlbmd0aDsgaSsrKSB0cmFuc2Zvcm1zTGlzdC5wdXNoKC4uLnRyYW5zZm9ybXNbaV0pO1xuICAgIGNvbnN0IHRyYW5zZm9ybXNBcnJheTogRmxvYXQzMkFycmF5ID0gbmV3IEZsb2F0MzJBcnJheSh0cmFuc2Zvcm1zTGlzdCk7XG4gICAgdGhpcy50cmFuc2Zvcm1CdWZmZXIgPSBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLmNyZWF0ZUJ1ZmZlcih7XG4gICAgICBsYWJlbDogXCJ0cmFuc2Zvcm0gYXJyYXlcIixcbiAgICAgIHNpemU6IHRyYW5zZm9ybXNBcnJheS5ieXRlTGVuZ3RoLFxuICAgICAgdXNhZ2U6IEdQVUJ1ZmZlclVzYWdlLlNUT1JBR0UgfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMudHJhbnNmb3JtQnVmZmVyLCAwLCB0cmFuc2Zvcm1zQXJyYXkpO1xuXG4gIH1cblxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgdXBkYXRlQmluZEdyb3VwKCk6IHZvaWQge1xuXG4gICAgc3VwZXIudXBkYXRlQmluZEdyb3VwKCk7XG5cbiAgICB0aGlzLmluc3RhbmNlQmluZEdyb3VwID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCaW5kR3JvdXAoe1xuICAgICAgbGFiZWw6IFwiYmluZCBncm91cCBpbnN0YW5jZWQgbWVzaFwiLFxuICAgICAgbGF5b3V0OiBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldEJpbmRHcm91cExheW91dEluc3RhbmNlZCgpLFxuICAgICAgZW50cmllczogW1xuICAgICAgICB7XG4gICAgICAgICAgYmluZGluZzogMCxcbiAgICAgICAgICByZXNvdXJjZTogeyBidWZmZXI6IHRoaXMudHJhbnNmb3JtQnVmZmVyIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIG92ZXJyaWRlIGRyYXcocGFzczogR1BVUmVuZGVyUGFzc0VuY29kZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wYXJlbnQuaXNIaWRkZW4oKSkgcmV0dXJuO1xuICAgIHBhc3Muc2V0QmluZEdyb3VwKDAsIHRoaXMuYmluZEdyb3VwKTtcbiAgICBwYXNzLnNldEJpbmRHcm91cCgyLCB0aGlzLmluc3RhbmNlQmluZEdyb3VwKTtcbiAgICBwYXNzLnNldFZlcnRleEJ1ZmZlcigwLCB0aGlzLnZlcnRleEJ1ZmZlcik7XG4gICAgcGFzcy5zZXRJbmRleEJ1ZmZlcih0aGlzLmluZGV4QnVmZmVyLCBcInVpbnQzMlwiKTtcbiAgICBwYXNzLmRyYXdJbmRleGVkKHRoaXMuaW5kZXhDb3VudCwgdGhpcy5pbnN0YW5jZUNvdW50KTtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renterMeshInstanced.ts\n");

/***/ }),

/***/ "./src/scene/camera.ts":
/*!*****************************!*\
  !*** ./src/scene/camera.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Camera: () => (/* binding */ Camera)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/plane */ \"./src/geometry/plane.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mode */ \"./src/mode.ts\");\n\n\n\n\n\nclass Camera {\n    constructor(position, up, forward, fovy, screen) {\n        this.position = position;\n        this.up = up;\n        this.forward = forward;\n        this.fovy = fovy;\n        this.screen = screen;\n        this.isTurningRight = false;\n        this.isTurningLeft = false;\n        this.isMovingForward = false;\n        this.isMovingBackward = false;\n        this.isLookingUp = false;\n        this.isLookingDown = false;\n        this.isMovingLeft = false;\n        this.isMovingRight = false;\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(this.up);\n        this.lastFrameTime = performance.now();\n        this.viewProj = new Float32Array(16);\n        this.addEvents();\n    }\n    getViewProj() {\n        return this.viewProj;\n    }\n    getPosition() {\n        return this.position;\n    }\n    getFovy() {\n        return this.fovy;\n    }\n    setFovy(newFovy) {\n        this.fovy = newFovy;\n        this.updateViewProj();\n    }\n    getPixelAtPoint(point) {\n        const dir = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(point, this.position));\n        const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(this.position, this.forward);\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.forward, this.up);\n        const xRes = window.innerWidth;\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        const sizeX = sizeY / yRes * xRes;\n        const ray = new _geometry_ray__WEBPACK_IMPORTED_MODULE_2__.Ray(this.position, dir);\n        const tScreen = ray.intersectPlane(new _geometry_plane__WEBPACK_IMPORTED_MODULE_1__.Plane(center, this.forward), true);\n        const pScreen = ray.at(tScreen);\n        const topLeft = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(this.up, sizeY / 2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(right, sizeX / -2)));\n        const topLeftToPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(pScreen, topLeft);\n        const x = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.dot(topLeftToPoint, right);\n        const y = -wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.dot(topLeftToPoint, this.up);\n        return [\n            Math.floor(x / sizeX * xRes),\n            Math.floor(y / sizeY * yRes)\n        ];\n    }\n    getRayAtPixel(x, y) {\n        const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(this.position, this.forward);\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.forward, this.up);\n        const xRes = window.innerWidth;\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        const sizeX = sizeY / yRes * xRes;\n        const screenPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(right, sizeX / xRes * (x - xRes / 2.0)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(this.up, sizeY / yRes * (y - yRes / 2.0))));\n        return new _geometry_ray__WEBPACK_IMPORTED_MODULE_2__.Ray(this.position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.sub(screenPoint, this.position));\n    }\n    pixelSizeAtDist(dist) {\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        return sizeY / yRes * dist;\n    }\n    addEvents() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.isTurningLeft = true;\n                    break;\n                case 'ArrowRight':\n                    this.isTurningRight = true;\n                    break;\n                case 'ArrowUp':\n                    this.isLookingUp = true;\n                    break;\n                case 'ArrowDown':\n                    this.isLookingDown = true;\n                    break;\n                case 'KeyW':\n                    this.isMovingForward = true;\n                    break;\n                case 'KeyS':\n                    this.isMovingBackward = true;\n                    break;\n                case 'KeyA':\n                    this.isMovingLeft = true;\n                    break;\n                case 'KeyD':\n                    this.isMovingRight = true;\n                    break;\n            }\n        }, false);\n        document.addEventListener('keyup', (event) => {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.isTurningLeft = false;\n                    break;\n                case 'ArrowRight':\n                    this.isTurningRight = false;\n                    break;\n                case 'ArrowUp':\n                    this.isLookingUp = false;\n                    break;\n                case 'ArrowDown':\n                    this.isLookingDown = false;\n                    break;\n                case 'KeyW':\n                    this.isMovingForward = false;\n                    break;\n                case 'KeyS':\n                    this.isMovingBackward = false;\n                    break;\n                case 'KeyA':\n                    this.isMovingLeft = false;\n                    break;\n                case 'KeyD':\n                    this.isMovingRight = false;\n                    break;\n            }\n        }, false);\n    }\n    tick() {\n        var now = performance.now();\n        if (_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_3__.OperatingMode.Navigation) {\n            if (this.isTurningLeft) {\n                this.turnRight((this.lastFrameTime - now) / 500);\n            }\n            else if (this.isTurningRight == true) {\n                this.turnRight((now - this.lastFrameTime) / 500);\n            }\n            if (this.isLookingUp) {\n                this.lookUp((now - this.lastFrameTime) / 500);\n            }\n            else if (this.isLookingDown) {\n                this.lookUp((this.lastFrameTime - now) / 500);\n            }\n            if (this.isMovingForward) {\n                this.goForward((now - this.lastFrameTime) / 20);\n            }\n            else if (this.isMovingBackward) {\n                this.goForward((this.lastFrameTime - now) / 20);\n            }\n            if (this.isMovingRight) {\n                this.goRight((now - this.lastFrameTime) / 20);\n            }\n            else if (this.isMovingLeft) {\n                this.goRight((this.lastFrameTime - now) / 20);\n            }\n        }\n        this.updateViewProj();\n        this.lastFrameTime = now;\n    }\n    turnRight(amount) {\n        const rotation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.rotateZ(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.identity(), -amount);\n        this.forward = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.forward, rotation);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.up, rotation);\n    }\n    lookUp(amount) {\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.forward, this.up);\n        const rotation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.axisRotate(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.identity(), right, amount);\n        this.forward = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.forward, rotation);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.up, rotation);\n    }\n    goForward(amount) {\n        this.position = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(this.forward, amount), this.position);\n    }\n    goRight(amount) {\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.cross(this.up, this.forward);\n        this.position = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(this.position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.scale(right, -amount));\n    }\n    updateViewProj() {\n        const view = new Float32Array(16);\n        const proj = new Float32Array(16);\n        const swapYZ = (v) => {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(v[0], v[2], v[1]);\n        };\n        const forward = swapYZ(this.forward);\n        const position = swapYZ(this.position);\n        const up = swapYZ(this.up);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.lookAt(position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.add(position, forward), up, view);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.perspective(this.fovy, this.screen.width / this.screen.height, 0.1, 10000.0, proj);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.multiply(proj, view, this.viewProj);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scene/camera.ts\n");

/***/ }),

/***/ "./src/scene/constructionPlane.ts":
/*!****************************************!*\
  !*** ./src/scene/constructionPlane.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConstructionPlane: () => (/* binding */ ConstructionPlane)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_intersection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/intersection */ \"./src/geometry/intersection.ts\");\n/* harmony import */ var _geometry_line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/line */ \"./src/geometry/line.ts\");\n/* harmony import */ var _geometry_lines__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geometry/lines */ \"./src/geometry/lines.ts\");\n/* harmony import */ var _geometry_plane__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../geometry/plane */ \"./src/geometry/plane.ts\");\n\n\n\n\n\n\n// TODO: draw this first, disable depth buffer while drawing\nclass ConstructionPlane {\n    constructor(majorCount = 10, minorCount = 10, cellSize = 1) {\n        this.majorCount = majorCount;\n        this.minorCount = minorCount;\n        this.cellSize = cellSize;\n        this.majorLines = null;\n        this.minorLines = null;\n        this.xAxis = null;\n        this.yAxis = null;\n        this.setup();\n    }\n    setup() {\n        const cellCount = this.majorCount * this.minorCount;\n        const size = cellCount * this.cellSize;\n        const majorVerts = [];\n        const minorVerts = [];\n        const majorIndices = [];\n        const minorIndices = [];\n        var majorIndex = 0;\n        var minorIndex = 0;\n        const halfSize = size / 2.0;\n        const start = -halfSize;\n        const z = -0.001;\n        for (var i = 0; i <= cellCount; i++) {\n            let midOrEnd = (i === cellCount / 2) ? 0 : halfSize;\n            if (i % this.minorCount === 0) { // major line\n                majorVerts.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, -halfSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, midOrEnd, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(-halfSize, start + i * this.cellSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(midOrEnd, start + i * this.cellSize));\n                majorIndices.push(majorIndex, majorIndex + 1, majorIndex + 2, majorIndex + 3);\n                majorIndex += 4;\n            }\n            else { // minor line\n                minorVerts.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, -halfSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(start + i * this.cellSize, midOrEnd, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(-halfSize, start + i * this.cellSize, z), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(midOrEnd, start + i * this.cellSize, z));\n                minorIndices.push(minorIndex, minorIndex + 1, minorIndex + 2, minorIndex + 3);\n                minorIndex += 4;\n            }\n        }\n        if (this.majorLines)\n            this.majorLines.delete();\n        if (this.minorLines)\n            this.minorLines.delete();\n        if (this.xAxis)\n            this.xAxis.delete();\n        if (this.yAxis)\n            this.yAxis.delete();\n        this.majorLines = new _geometry_lines__WEBPACK_IMPORTED_MODULE_3__.Lines(majorVerts, majorIndices, null, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.identity(), \"lighter grey\");\n        this.minorLines = new _geometry_lines__WEBPACK_IMPORTED_MODULE_3__.Lines(minorVerts, minorIndices, null, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.identity(), \"mid grey\");\n        this.xAxis = new _geometry_line__WEBPACK_IMPORTED_MODULE_2__.Line(null, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(halfSize, 0, 0), undefined, \"red\");\n        this.yAxis = new _geometry_line__WEBPACK_IMPORTED_MODULE_2__.Line(null, wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, halfSize, 0), undefined, \"green\");\n    }\n    snapToGrid(point) {\n        const alignedWithOrigin = ((this.minorCount * this.majorCount) & 1) === 0;\n        var dx = point[0] % this.cellSize;\n        var dy = point[1] % this.cellSize;\n        if (dx < 0)\n            dx += this.cellSize;\n        if (dy < 0)\n            dy += this.cellSize;\n        if (!alignedWithOrigin) {\n            point[0] += this.cellSize / 2;\n            point[1] += this.cellSize / 2;\n        }\n        if (dx < this.cellSize / 2)\n            point[0] -= dx;\n        else\n            point[0] += this.cellSize - dx;\n        if (dy < this.cellSize / 2)\n            point[1] -= dy;\n        else\n            point[1] += this.cellSize - dy;\n        if (!alignedWithOrigin) {\n            point[0] -= this.cellSize / 2;\n            point[1] -= this.cellSize / 2;\n        }\n        return point;\n    }\n    intersect(ray) {\n        const tGroundPlane = ray.intersectPlane(new _geometry_plane__WEBPACK_IMPORTED_MODULE_4__.Plane(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.create(0, 0, 1)));\n        if (tGroundPlane) { // intrsected ground plane;\n            var pGroundPlane = tGroundPlane ? ray.at(tGroundPlane) : null;\n            if (pGroundPlane && _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getSnapSettings().snapGrid) {\n                pGroundPlane = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().snapToGrid(pGroundPlane);\n            }\n            if (pGroundPlane) {\n                return new _geometry_intersection__WEBPACK_IMPORTED_MODULE_1__.Intersection(tGroundPlane, \"ground plane\", 0, pGroundPlane, 0, 0);\n            }\n        }\n        return null;\n    }\n    getMinorCount() {\n        return this.minorCount;\n    }\n    getMajorCount() {\n        return this.majorCount;\n    }\n    getCellSize() {\n        return this.cellSize;\n    }\n    setMajorMaterial(mat) {\n        this.majorLines.setMaterial(mat);\n    }\n    setMinorMaterial(mat) {\n        this.minorLines.setMaterial(mat);\n    }\n    setMinorCount(count) {\n        this.minorCount = count;\n        this.setup();\n    }\n    setMajorCount(count) {\n        this.majorCount = count;\n        this.setup();\n    }\n    setCellSize(size) {\n        this.cellSize = size;\n        this.setup();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scene/constructionPlane.ts\n");

/***/ }),

/***/ "./src/scene/scene.ts":
/*!****************************!*\
  !*** ./src/scene/scene.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scene: () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./camera */ \"./src/scene/camera.ts\");\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _constructionPlane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constructionPlane */ \"./src/scene/constructionPlane.ts\");\n/* harmony import */ var _geometry_sceneBoundingBoxHeirarcy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/sceneBoundingBoxHeirarcy */ \"./src/geometry/sceneBoundingBoxHeirarcy.ts\");\n\n\n\n\nclass Scene {\n    constructor() {\n        this.renderLines = new Map();\n        this.renderMeshes = new Map();\n        this.renderPoints = new Map();\n        this.renderMeshesInstanced = new Map();\n        this.rootGeometry = new Map(); // stores geometry with no parents\n        this.geometry = new Map(); // stores all geometry\n        this.renderIDGenerator = 1;\n        this.objectIDGenerator = 1;\n        this.boundingBoxHeirarchy = new _geometry_sceneBoundingBoxHeirarcy__WEBPACK_IMPORTED_MODULE_2__.SceneBoundingBoxHeirarchy([]);\n        this.camera = new _camera__WEBPACK_IMPORTED_MODULE_0__.Camera(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0.0, -80.0, 20.0), //position\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0.0, 0.0, 1.0), //up\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0.0, 1.0, 0.0), //forward\n        1, //fovy\n        document.getElementById(\"screen\"));\n    }\n    getRootGeometry() {\n        return this.rootGeometry.values();\n    }\n    getConstructionPlane() {\n        return this.constructionPlane;\n    }\n    getBoundingBoxHeirarchy() {\n        return this.boundingBoxHeirarchy;\n    }\n    init() {\n        this.constructionPlane = new _constructionPlane__WEBPACK_IMPORTED_MODULE_1__.ConstructionPlane();\n    }\n    generateNewObjectID(geo) {\n        this.geometry.set(this.objectIDGenerator, geo);\n        return this.objectIDGenerator++;\n    }\n    addGeometry(geo) {\n        this.boundingBoxHeirarchy.add(geo);\n        this.rootGeometry.set(geo.getID(), geo);\n    }\n    getGeometry(id) {\n        return this.geometry.get(id);\n    }\n    generateNewRenderID() {\n        return this.renderIDGenerator++;\n    }\n    addRenderMesh(mesh) { this.renderMeshes.set(mesh.getRenderID(), mesh); }\n    addRenderMeshInstanced(mesh) { this.renderMeshesInstanced.set(mesh.getRenderID(), mesh); }\n    addRenderLines(lines) { this.renderLines.set(lines.getRenderID(), lines); }\n    addRenderPoints(points) { this.renderPoints.set(points.getRenderID(), points); }\n    getLines(id) { return this.renderLines.get(id); }\n    getMesh(id) { return this.renderMeshes.get(id); }\n    getPoints(id) { return this.renderPoints.get(id); }\n    getMeshInstanced(id) { return this.renderMeshesInstanced.get(id); }\n    getAllLines() { return this.renderLines.values(); }\n    getAllMeshes() { return this.renderMeshes.values(); }\n    getAllPoints() { return this.renderPoints.values(); }\n    getAllMeshesInstanced() { return this.renderMeshesInstanced.values(); }\n    removeMesh(id) { this.renderMeshes.delete(id); }\n    removeLines(id) { this.renderLines.delete(id); }\n    removePoints(id) { this.renderPoints.delete(id); }\n    removeMeshInstanced(id) { this.renderMeshesInstanced.delete(id); }\n    tick() {\n        this.camera.tick();\n        for (const line of this.renderLines.values()) {\n            line.update();\n        }\n        for (const mesh of this.renderMeshes.values()) {\n            mesh.update();\n        }\n        for (const point of this.renderPoints.values()) {\n            point.update();\n        }\n        for (const mesh of this.renderMeshesInstanced.values()) {\n            mesh.update();\n        }\n    }\n    getCamera() {\n        return this.camera;\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scene/scene.ts\n");

/***/ }),

/***/ "./src/settings/settingsManager.ts":
/*!*****************************************!*\
  !*** ./src/settings/settingsManager.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsManager: () => (/* binding */ SettingsManager)\n/* harmony export */ });\n/* harmony import */ var _snapsManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./snapsManager */ \"./src/settings/snapsManager.ts\");\n\nclass SettingsManager {\n    constructor() {\n        this.snapSettingsManager = new _snapsManager__WEBPACK_IMPORTED_MODULE_0__.SnapSettingsManager();\n    }\n    getSnapSettingsManager() {\n        return this.snapSettingsManager;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2V0dGluZ3Mvc2V0dGluZ3NNYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBRTlDLE1BQU0sZUFBZTtJQUkxQjtRQUNFLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLDhEQUFtQixFQUFFLENBQUM7SUFDdkQsQ0FBQztJQUVNLHNCQUFzQjtRQUMzQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztJQUNsQyxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9zZXR0aW5ncy9zZXR0aW5nc01hbmFnZXIudHM/ZjBmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTbmFwU2V0dGluZ3NNYW5hZ2VyIH0gZnJvbSBcIi4vc25hcHNNYW5hZ2VyXCI7XG5cbmV4cG9ydCBjbGFzcyBTZXR0aW5nc01hbmFnZXIge1xuXG4gIHByaXZhdGUgc25hcFNldHRpbmdzTWFuYWdlcjogU25hcFNldHRpbmdzTWFuYWdlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnNuYXBTZXR0aW5nc01hbmFnZXIgPSBuZXcgU25hcFNldHRpbmdzTWFuYWdlcigpO1xuICB9XG5cbiAgcHVibGljIGdldFNuYXBTZXR0aW5nc01hbmFnZXIoKTogU25hcFNldHRpbmdzTWFuYWdlciB7XG4gICAgcmV0dXJuIHRoaXMuc25hcFNldHRpbmdzTWFuYWdlcjtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/settings/settingsManager.ts\n");

/***/ }),

/***/ "./src/settings/snapsManager.ts":
/*!**************************************!*\
  !*** ./src/settings/snapsManager.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapSettings: () => (/* binding */ SnapSettings),\n/* harmony export */   SnapSettingsManager: () => (/* binding */ SnapSettingsManager)\n/* harmony export */ });\nclass SnapSettings {\n    constructor() {\n        this.snapGrid = true;\n        this.snapLine = true;\n        this.snapPoint = true;\n        this.snapScreenPercent = false;\n    }\n}\nclass SnapSettingsManager {\n    constructor() {\n        this.stack = [new SnapSettings()];\n    }\n    push() {\n        this.stack.push(new SnapSettings());\n    }\n    pop() {\n        this.stack.pop();\n    }\n    getSnapSettings() {\n        return this.stack.at(-1);\n    }\n    getHTML() {\n        const settings = this.stack.at(-1);\n        return `\n      <u>SNAPS:</u><br>\n      <br>\n      grid(${settings.snapGrid ? \"on\" : \"off\"})<br>\n      line(${settings.snapLine ? \"on\" : \"off\"})<br>\n      point(${settings.snapPoint ? \"on\" : \"off\"})<br>\n    `;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2V0dGluZ3Mvc25hcHNNYW5hZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRU8sTUFBTSxZQUFZO0lBQXpCO1FBRUUsYUFBUSxHQUFZLElBQUksQ0FBQztRQUN6QixhQUFRLEdBQVksSUFBSSxDQUFDO1FBQ3pCLGNBQVMsR0FBWSxJQUFJLENBQUM7UUFDMUIsc0JBQWlCLEdBQVksS0FBSyxDQUFDO0lBRXJDLENBQUM7Q0FBQTtBQUdNLE1BQU0sbUJBQW1CO0lBSTlCO1FBQ0UsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksWUFBWSxFQUFFLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRU0sSUFBSTtRQUNULElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksWUFBWSxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRU0sR0FBRztRQUNSLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUVNLGVBQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDO0lBQzVCLENBQUM7SUFFTSxPQUFPO1FBQ1osTUFBTSxRQUFRLEdBQWlCLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7UUFDbEQsT0FBTzs7O2FBR0UsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO2FBQ2hDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSztjQUMvQixRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUs7S0FDMUMsQ0FBQztJQUNKLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3NldHRpbmdzL3NuYXBzTWFuYWdlci50cz9kMzVlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgY2xhc3MgU25hcFNldHRpbmdzIHtcblxuICBzbmFwR3JpZDogYm9vbGVhbiA9IHRydWU7XG4gIHNuYXBMaW5lOiBib29sZWFuID0gdHJ1ZTtcbiAgc25hcFBvaW50OiBib29sZWFuID0gdHJ1ZTtcbiAgc25hcFNjcmVlblBlcmNlbnQ6IGJvb2xlYW4gPSBmYWxzZTtcblxufVxuXG5cbmV4cG9ydCBjbGFzcyBTbmFwU2V0dGluZ3NNYW5hZ2VyIHtcblxuICBwcml2YXRlIHN0YWNrOiBTbmFwU2V0dGluZ3NbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnN0YWNrID0gW25ldyBTbmFwU2V0dGluZ3MoKV07XG4gIH1cblxuICBwdWJsaWMgcHVzaCgpOiB2b2lkIHtcbiAgICB0aGlzLnN0YWNrLnB1c2gobmV3IFNuYXBTZXR0aW5ncygpKTtcbiAgfVxuXG4gIHB1YmxpYyBwb3AoKTogdm9pZCB7XG4gICAgdGhpcy5zdGFjay5wb3AoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTbmFwU2V0dGluZ3MoKTogU25hcFNldHRpbmdzIHtcbiAgICByZXR1cm4gdGhpcy5zdGFjay5hdCgtMSkhO1xuICB9XG5cbiAgcHVibGljIGdldEhUTUwoKTogc3RyaW5nIHtcbiAgICBjb25zdCBzZXR0aW5nczogU25hcFNldHRpbmdzID0gdGhpcy5zdGFjay5hdCgtMSkhO1xuICAgIHJldHVybiBgXG4gICAgICA8dT5TTkFQUzo8L3U+PGJyPlxuICAgICAgPGJyPlxuICAgICAgZ3JpZCgke3NldHRpbmdzLnNuYXBHcmlkID8gXCJvblwiIDogXCJvZmZcIn0pPGJyPlxuICAgICAgbGluZSgke3NldHRpbmdzLnNuYXBMaW5lID8gXCJvblwiIDogXCJvZmZcIn0pPGJyPlxuICAgICAgcG9pbnQoJHtzZXR0aW5ncy5zbmFwUG9pbnQgPyBcIm9uXCIgOiBcIm9mZlwifSk8YnI+XG4gICAgYDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/settings/snapsManager.ts\n");

/***/ }),

/***/ "./src/stats.ts":
/*!**********************!*\
  !*** ./src/stats.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderStats: () => (/* binding */ RenderStats)\n/* harmony export */ });\nclass RenderStats {\n    constructor() {\n        this.reset();\n    }\n    reset() {\n        this.renderTime = NaN;\n        this.frameTime = NaN;\n        this.sceneTime = NaN;\n        this.framesOver100ms = 0;\n        this.totalFrames = 0;\n        this.startTime = Date.now();\n    }\n    setRenderTime(renderTime) {\n        this.renderTime = renderTime;\n    }\n    setFrameTime(frameTime) {\n        this.totalFrames++;\n        if (frameTime > 0.1)\n            this.framesOver100ms++;\n        this.frameTime = frameTime;\n    }\n    setSceneTime(sceneTime) {\n        this.sceneTime = sceneTime;\n    }\n    setDrawCalls(count) {\n        this.drawCalls = count;\n    }\n    getInnerHTML() {\n        var _a, _b, _c, _d;\n        const fps = (1.0 / this.frameTime).toFixed(3);\n        const averageFps = (1000.0 * this.totalFrames / (Date.now() - this.startTime)).toFixed(3);\n        const html = \"<u>STATS:</u><br>\" +\n            \"<br>\" +\n            \"FPS: \" + fps + \"<br>\" +\n            \"Average FPS: \" + averageFps + \"<br>\" +\n            \"<br>\" +\n            \"Render Time: \" + ((_a = this.renderTime) === null || _a === void 0 ? void 0 : _a.toFixed(3)) + \"<br>\" +\n            \"Frame Time: \" + ((_b = this.frameTime) === null || _b === void 0 ? void 0 : _b.toFixed(3)) + \"<br>\" +\n            \"Scene Time: \" + ((_c = this.sceneTime) === null || _c === void 0 ? void 0 : _c.toFixed(3)) + \"<br>\" +\n            \"<br>\" +\n            \"Frames Over 100ms: \" + this.framesOver100ms.toString() + \"<br>\" +\n            \"<br>\" +\n            \"Draw Calls: \" + ((_d = this.drawCalls) === null || _d === void 0 ? void 0 : _d.toString());\n        return html;\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3RhdHMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUNPLE1BQU0sV0FBVztJQVd0QjtRQUNFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNmLENBQUM7SUFFTSxLQUFLO1FBRVYsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7UUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVNLGFBQWEsQ0FBQyxVQUFrQjtRQUNyQyxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztJQUMvQixDQUFDO0lBRU0sWUFBWSxDQUFDLFNBQWlCO1FBQ25DLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLFNBQVMsR0FBRyxHQUFHO1lBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzVDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFTSxZQUFZLENBQUMsU0FBaUI7UUFDbkMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDN0IsQ0FBQztJQUVNLFlBQVksQ0FBQyxLQUFhO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7SUFFTSxZQUFZOztRQUNqQixNQUFNLEdBQUcsR0FBVyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RELE1BQU0sVUFBVSxHQUFXLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xHLE1BQU0sSUFBSSxHQUFXLG1CQUFtQjtZQUN0QyxNQUFNO1lBQ04sT0FBTyxHQUFHLEdBQUcsR0FBRyxNQUFNO1lBQ3RCLGVBQWUsR0FBRyxVQUFVLEdBQUcsTUFBTTtZQUNyQyxNQUFNO1lBQ04sZUFBZSxJQUFHLFVBQUksQ0FBQyxVQUFVLDBDQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBRyxNQUFNO1lBQ3RELGNBQWMsSUFBRyxVQUFJLENBQUMsU0FBUywwQ0FBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUcsTUFBTTtZQUNwRCxjQUFjLElBQUcsVUFBSSxDQUFDLFNBQVMsMENBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFHLE1BQU07WUFDcEQsTUFBTTtZQUNOLHFCQUFxQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLEdBQUcsTUFBTTtZQUNoRSxNQUFNO1lBQ04sY0FBYyxJQUFHLFVBQUksQ0FBQyxTQUFTLDBDQUFFLFFBQVEsRUFBRSxFQUFDO1FBQzlDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUdGO0FBQUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3N0YXRzLnRzPzAyNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgY2xhc3MgUmVuZGVyU3RhdHMge1xuXG4gIC8vcHJpdmF0ZSBlbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcbiAgcHJpdmF0ZSByZW5kZXJUaW1lITogbnVtYmVyO1xuICBwcml2YXRlIGZyYW1lVGltZSE6IG51bWJlcjtcbiAgcHJpdmF0ZSBzY2VuZVRpbWUhOiBudW1iZXI7XG4gIHByaXZhdGUgZnJhbWVzT3ZlcjEwMG1zITogbnVtYmVyO1xuICBwcml2YXRlIHRvdGFsRnJhbWVzITogbnVtYmVyO1xuICBwcml2YXRlIHN0YXJ0VGltZSE6IG51bWJlcjtcbiAgcHJpdmF0ZSBkcmF3Q2FsbHMhOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5yZXNldCgpO1xuICB9XG5cbiAgcHVibGljIHJlc2V0KCk6IHZvaWQge1xuXG4gICAgdGhpcy5yZW5kZXJUaW1lID0gTmFOO1xuICAgIHRoaXMuZnJhbWVUaW1lID0gTmFOO1xuICAgIHRoaXMuc2NlbmVUaW1lID0gTmFOO1xuICAgIHRoaXMuZnJhbWVzT3ZlcjEwMG1zID0gMDtcbiAgICB0aGlzLnRvdGFsRnJhbWVzID0gMDtcbiAgICB0aGlzLnN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gIH1cblxuICBwdWJsaWMgc2V0UmVuZGVyVGltZShyZW5kZXJUaW1lOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLnJlbmRlclRpbWUgPSByZW5kZXJUaW1lO1xuICB9XG5cbiAgcHVibGljIHNldEZyYW1lVGltZShmcmFtZVRpbWU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMudG90YWxGcmFtZXMrKztcbiAgICBpZiAoZnJhbWVUaW1lID4gMC4xKSB0aGlzLmZyYW1lc092ZXIxMDBtcysrO1xuICAgIHRoaXMuZnJhbWVUaW1lID0gZnJhbWVUaW1lO1xuICB9XG5cbiAgcHVibGljIHNldFNjZW5lVGltZShzY2VuZVRpbWU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuc2NlbmVUaW1lID0gc2NlbmVUaW1lO1xuICB9XG5cbiAgcHVibGljIHNldERyYXdDYWxscyhjb3VudDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5kcmF3Q2FsbHMgPSBjb3VudDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRJbm5lckhUTUwoKTogc3RyaW5nIHtcbiAgICBjb25zdCBmcHM6IHN0cmluZyA9ICgxLjAgLyB0aGlzLmZyYW1lVGltZSkudG9GaXhlZCgzKTtcbiAgICBjb25zdCBhdmVyYWdlRnBzOiBzdHJpbmcgPSAoMTAwMC4wICogdGhpcy50b3RhbEZyYW1lcyAvIChEYXRlLm5vdygpIC0gdGhpcy5zdGFydFRpbWUpKS50b0ZpeGVkKDMpO1xuICAgIGNvbnN0IGh0bWw6IHN0cmluZyA9IFwiPHU+U1RBVFM6PC91Pjxicj5cIiArXG4gICAgICBcIjxicj5cIiArXG4gICAgICBcIkZQUzogXCIgKyBmcHMgKyBcIjxicj5cIiArXG4gICAgICBcIkF2ZXJhZ2UgRlBTOiBcIiArIGF2ZXJhZ2VGcHMgKyBcIjxicj5cIiArXG4gICAgICBcIjxicj5cIiArXG4gICAgICBcIlJlbmRlciBUaW1lOiBcIiArIHRoaXMucmVuZGVyVGltZT8udG9GaXhlZCgzKSArIFwiPGJyPlwiICtcbiAgICAgIFwiRnJhbWUgVGltZTogXCIgKyB0aGlzLmZyYW1lVGltZT8udG9GaXhlZCgzKSArIFwiPGJyPlwiICtcbiAgICAgIFwiU2NlbmUgVGltZTogXCIgKyB0aGlzLnNjZW5lVGltZT8udG9GaXhlZCgzKSArIFwiPGJyPlwiICtcbiAgICAgIFwiPGJyPlwiICtcbiAgICAgIFwiRnJhbWVzIE92ZXIgMTAwbXM6IFwiICsgdGhpcy5mcmFtZXNPdmVyMTAwbXMudG9TdHJpbmcoKSArIFwiPGJyPlwiICtcbiAgICAgIFwiPGJyPlwiICtcbiAgICAgIFwiRHJhdyBDYWxsczogXCIgKyB0aGlzLmRyYXdDYWxscz8udG9TdHJpbmcoKTtcbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG5cbn07XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/stats.ts\n");

/***/ }),

/***/ "./src/tests/testSceneComplex.ts":
/*!***************************************!*\
  !*** ./src/tests/testSceneComplex.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTestSceneComplex: () => (/* binding */ addTestSceneComplex)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_mesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/mesh */ \"./src/geometry/mesh.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geometry/nurbs/loft */ \"./src/geometry/nurbs/loft.ts\");\n\n\n\n\n\nconst addTestSceneComplex = function () {\n    const mesh = new _geometry_mesh__WEBPACK_IMPORTED_MODULE_1__.Mesh(null, [wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(-5, -5, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(5, -5, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(5, 5, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(-5, 5, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0]);\n    const curve1 = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_2__.Curve(null, [\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(-50, -50, 0, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(-50, 50, 0, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(50, 50, 0, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(50, -50, 0, 1)\n    ], 2);\n    const curve2 = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_2__.Curve(null, [\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(-40, -40, 10, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(-40, 40, 10, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(40, 40, 10, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(40, -40, 10, 1)\n    ], 2);\n    const curve3 = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_2__.Curve(null, [\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(-50, -50, 30, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(-50, 50, 30, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(50, 50, 30, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec4.create(50, -50, 30, 1),\n    ], 3);\n    const surface = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_3__.loft)([curve1,\n        curve2,\n        curve3], 2);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(mesh);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(curve1);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(curve2);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(curve3);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(surface);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGVzdHMvdGVzdFNjZW5lQ29tcGxleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBd0M7QUFDUDtBQUNNO0FBQ1M7QUFDRjtBQUd2QyxNQUFNLG1CQUFtQixHQUFHO0lBRWpDLE1BQU0sSUFBSSxHQUFTLElBQUksZ0RBQUksQ0FDekIsSUFBSSxFQUNKLENBQUMsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQzVGLENBQUMsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUN4RixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQ25CLENBQUM7SUFDRixNQUFNLE1BQU0sR0FBVSxJQUFJLHdEQUFLLENBQzdCLElBQUksRUFBRTtRQUNOLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0IsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDMUIsNkNBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3pCLDZDQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQzNCLEVBQ0MsQ0FBQyxDQUNGLENBQUM7SUFDRixNQUFNLE1BQU0sR0FDVixJQUFJLHdEQUFLLENBQUMsSUFBSSxFQUFFO1FBQ2QsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUM1Qiw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUMzQiw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDMUIsNkNBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDNUIsRUFDQyxDQUFDLENBQ0YsQ0FBQztJQUNKLE1BQU0sTUFBTSxHQUNWLElBQUksd0RBQUssQ0FBQyxJQUFJLEVBQUU7UUFDZCw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzVCLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzNCLDZDQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUMxQiw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztLQUM1QixFQUNDLENBQUMsQ0FDRixDQUFDO0lBRUosTUFBTSxPQUFPLEdBQ1gsMERBQUksQ0FDRixDQUFDLE1BQU07UUFDTCxNQUFNO1FBQ04sTUFBTSxDQUFDLEVBQ1QsQ0FBQyxDQUNGLENBQUM7SUFFSiwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN0QywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4QywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4QywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4QywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUUzQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvdGVzdHMvdGVzdFNjZW5lQ29tcGxleC50cz8wZDY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlYzMsIHZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IE1lc2ggfSBmcm9tIFwiLi4vZ2VvbWV0cnkvbWVzaFwiXG5pbXBvcnQgeyBDdXJ2ZSB9IGZyb20gXCIuLi9nZW9tZXRyeS9udXJicy9jdXJ2ZVwiO1xuaW1wb3J0IHsgbG9mdCB9IGZyb20gXCIuLi9nZW9tZXRyeS9udXJicy9sb2Z0XCI7XG5pbXBvcnQgeyBTdXJmYWNlIH0gZnJvbSBcIi4uL2dlb21ldHJ5L251cmJzL3N1cmZhY2VcIjtcblxuZXhwb3J0IGNvbnN0IGFkZFRlc3RTY2VuZUNvbXBsZXggPSBmdW5jdGlvbigpIHtcblxuICBjb25zdCBtZXNoOiBNZXNoID0gbmV3IE1lc2goXG4gICAgbnVsbCxcbiAgICBbdmVjMy5jcmVhdGUoLTUsIC01LCAxKSwgdmVjMy5jcmVhdGUoNSwgLTUsIDEpLCB2ZWMzLmNyZWF0ZSg1LCA1LCAxKSwgdmVjMy5jcmVhdGUoLTUsIDUsIDEpXSxcbiAgICBbdmVjMy5jcmVhdGUoMCwgMCwgMSksIHZlYzMuY3JlYXRlKDAsIDAsIDEpLCB2ZWMzLmNyZWF0ZSgwLCAwLCAxKSwgdmVjMy5jcmVhdGUoMCwgMCwgMSldLFxuICAgIFswLCAxLCAyLCAyLCAzLCAwXVxuICApO1xuICBjb25zdCBjdXJ2ZTE6IEN1cnZlID0gbmV3IEN1cnZlKFxuICAgIG51bGwsIFtcbiAgICB2ZWM0LmNyZWF0ZSgtNTAsIC01MCwgMCwgMSksXG4gICAgdmVjNC5jcmVhdGUoLTUwLCA1MCwgMCwgMSksXG4gICAgdmVjNC5jcmVhdGUoNTAsIDUwLCAwLCAxKSxcbiAgICB2ZWM0LmNyZWF0ZSg1MCwgLTUwLCAwLCAxKVxuICBdLFxuICAgIDJcbiAgKTtcbiAgY29uc3QgY3VydmUyOiBDdXJ2ZSA9XG4gICAgbmV3IEN1cnZlKG51bGwsIFtcbiAgICAgIHZlYzQuY3JlYXRlKC00MCwgLTQwLCAxMCwgMSksXG4gICAgICB2ZWM0LmNyZWF0ZSgtNDAsIDQwLCAxMCwgMSksXG4gICAgICB2ZWM0LmNyZWF0ZSg0MCwgNDAsIDEwLCAxKSxcbiAgICAgIHZlYzQuY3JlYXRlKDQwLCAtNDAsIDEwLCAxKVxuICAgIF0sXG4gICAgICAyXG4gICAgKTtcbiAgY29uc3QgY3VydmUzOiBDdXJ2ZSA9XG4gICAgbmV3IEN1cnZlKG51bGwsIFtcbiAgICAgIHZlYzQuY3JlYXRlKC01MCwgLTUwLCAzMCwgMSksXG4gICAgICB2ZWM0LmNyZWF0ZSgtNTAsIDUwLCAzMCwgMSksXG4gICAgICB2ZWM0LmNyZWF0ZSg1MCwgNTAsIDMwLCAxKSxcbiAgICAgIHZlYzQuY3JlYXRlKDUwLCAtNTAsIDMwLCAxKSxcbiAgICBdLFxuICAgICAgM1xuICAgICk7XG5cbiAgY29uc3Qgc3VyZmFjZTogU3VyZmFjZSA9XG4gICAgbG9mdChcbiAgICAgIFtjdXJ2ZTEsXG4gICAgICAgIGN1cnZlMixcbiAgICAgICAgY3VydmUzXSxcbiAgICAgIDJcbiAgICApO1xuXG4gIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkobWVzaCk7XG4gIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkoY3VydmUxKTtcbiAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5hZGRHZW9tZXRyeShjdXJ2ZTIpO1xuICBJTlNUQU5DRS5nZXRTY2VuZSgpLmFkZEdlb21ldHJ5KGN1cnZlMyk7XG4gIElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkoc3VyZmFjZSk7XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/tests/testSceneComplex.ts\n");

/***/ }),

/***/ "./src/utils/math.ts":
/*!***************************!*\
  !*** ./src/utils/math.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bin: () => (/* binding */ bin),\n/* harmony export */   swizzleYZ: () => (/* binding */ swizzleYZ)\n/* harmony export */ });\nconst swizzleYZ = function (mat) {\n    [mat[1], mat[2]] = [mat[2], mat[1]];\n    [mat[7], mat[11]] = [mat[11], mat[7]];\n    [mat[14], mat[13]] = [mat[13], mat[14]];\n    [mat[8], mat[4]] = [mat[4], mat[8]];\n    [mat[6], mat[9]] = [mat[9], mat[6]];\n    [mat[5], mat[10]] = [mat[10], mat[5]];\n    return mat;\n};\nconst bin = function (a, b) {\n    let res = 1;\n    for (let i = a; i > a - b; i--)\n        res *= i;\n    for (let i = 2; i <= b; i++)\n        res = res / i;\n    return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvbWF0aC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUdPLE1BQU0sU0FBUyxHQUFHLFVBQVMsR0FBUztJQUN6QyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0QyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0QyxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFDTSxNQUFNLEdBQUcsR0FBRyxVQUFTLENBQVMsRUFBRSxDQUFTO0lBQzlDLElBQUksR0FBRyxHQUFXLENBQUMsQ0FBQztJQUNwQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQ3pDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1FBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDM0MsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy91dGlscy9tYXRoLnRzP2IyY2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0NCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuXG5cbmV4cG9ydCBjb25zdCBzd2l6emxlWVogPSBmdW5jdGlvbihtYXQ6IE1hdDQpOiBNYXQ0IHtcbiAgW21hdFsxXSwgbWF0WzJdXSA9IFttYXRbMl0sIG1hdFsxXV07XG4gIFttYXRbN10sIG1hdFsxMV1dID0gW21hdFsxMV0sIG1hdFs3XV07XG4gIFttYXRbMTRdLCBtYXRbMTNdXSA9IFttYXRbMTNdLCBtYXRbMTRdXTtcbiAgW21hdFs4XSwgbWF0WzRdXSA9IFttYXRbNF0sIG1hdFs4XV07XG4gIFttYXRbNl0sIG1hdFs5XV0gPSBbbWF0WzldLCBtYXRbNl1dO1xuICBbbWF0WzVdLCBtYXRbMTBdXSA9IFttYXRbMTBdLCBtYXRbNV1dO1xuICByZXR1cm4gbWF0O1xufVxuZXhwb3J0IGNvbnN0IGJpbiA9IGZ1bmN0aW9uKGE6IG51bWJlciwgYjogbnVtYmVyKTogbnVtYmVyIHtcbiAgbGV0IHJlczogbnVtYmVyID0gMTtcbiAgZm9yIChsZXQgaSA9IGE7IGkgPiBhIC0gYjsgaS0tKSByZXMgKj0gaTtcbiAgZm9yIChsZXQgaSA9IDI7IGkgPD0gYjsgaSsrKSByZXMgPSByZXMgLyBpO1xuICByZXR1cm4gcmVzO1xufTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/math.ts\n");

/***/ }),

/***/ "./src/utils/print.ts":
/*!****************************!*\
  !*** ./src/utils/print.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   printMat4: () => (/* binding */ printMat4),\n/* harmony export */   printVec3: () => (/* binding */ printVec3),\n/* harmony export */   vec3ToString: () => (/* binding */ vec3ToString),\n/* harmony export */   vec4ToString: () => (/* binding */ vec4ToString)\n/* harmony export */ });\nconst printMat4 = function (m) {\n    var str = \"\";\n    for (var i = 0; i < 4; i++) {\n        for (var j = 0; j < 4; j++) {\n            str += m[4 * i + j].toFixed(2) + \",  \";\n        }\n        str += \"\\n\";\n    }\n    console.log(str);\n};\nconst printVec3 = function (v, decimals = 2) {\n    console.log(vec3ToString(v, decimals));\n};\nconst vec3ToString = function (v, decimals = 2) {\n    var str = \"\";\n    for (var i = 0; i < 3; i++) {\n        str += v[i].toFixed(decimals) + \",  \";\n    }\n    str = str.slice(0, -1);\n    return str;\n};\nconst vec4ToString = function (v, decimals = 2) {\n    var str = \"[\";\n    for (var i = 0; i < 4; i++) {\n        str += v[i].toFixed(decimals) + \",\";\n    }\n    str = str.slice(0, -1);\n    return str + \"]\";\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvcHJpbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdPLE1BQU0sU0FBUyxHQUFHLFVBQVMsQ0FBTztJQUN2QyxJQUFJLEdBQUcsR0FBVyxFQUFFLENBQUM7SUFDckIsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNsQyxLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2xDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1NBQ3hDO1FBQ0QsR0FBRyxJQUFJLElBQUksQ0FBQztLQUNiO0lBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNuQixDQUFDO0FBRU0sTUFBTSxTQUFTLEdBQUcsVUFBUyxDQUFPLEVBQUUsV0FBbUIsQ0FBQztJQUM3RCxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRU0sTUFBTSxZQUFZLEdBQUcsVUFBUyxDQUFPLEVBQUUsV0FBbUIsQ0FBQztJQUNoRSxJQUFJLEdBQUcsR0FBVyxFQUFFLENBQUM7SUFDckIsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNsQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxLQUFLLENBQUM7S0FDdkM7SUFDRCxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2QixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFTSxNQUFNLFlBQVksR0FBRyxVQUFTLENBQU8sRUFBRSxXQUFtQixDQUFDO0lBQ2hFLElBQUksR0FBRyxHQUFXLEdBQUcsQ0FBQztJQUN0QixLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ2xDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUcsQ0FBQztLQUNyQztJQUNELEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLE9BQU8sR0FBRyxHQUFHLEdBQUcsQ0FBQztBQUNuQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvdXRpbHMvcHJpbnQudHM/ZDc2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3YXJuIH0gZnJvbSBcImNvbnNvbGVcIjtcbmltcG9ydCB7IG1hdDQsIG1hdDMsIE1hdDQsIFZlYzMsIFZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIjtcblxuZXhwb3J0IGNvbnN0IHByaW50TWF0NCA9IGZ1bmN0aW9uKG06IE1hdDQpOiB2b2lkIHtcbiAgdmFyIHN0cjogc3RyaW5nID0gXCJcIjtcbiAgZm9yICh2YXIgaTogbnVtYmVyID0gMDsgaSA8IDQ7IGkrKykge1xuICAgIGZvciAodmFyIGo6IG51bWJlciA9IDA7IGogPCA0OyBqKyspIHtcbiAgICAgIHN0ciArPSBtWzQgKiBpICsgal0udG9GaXhlZCgyKSArIFwiLCAgXCI7XG4gICAgfVxuICAgIHN0ciArPSBcIlxcblwiO1xuICB9XG4gIGNvbnNvbGUubG9nKHN0cik7XG59XG5cbmV4cG9ydCBjb25zdCBwcmludFZlYzMgPSBmdW5jdGlvbih2OiBWZWMzLCBkZWNpbWFsczogbnVtYmVyID0gMik6IHZvaWQge1xuICBjb25zb2xlLmxvZyh2ZWMzVG9TdHJpbmcodiwgZGVjaW1hbHMpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHZlYzNUb1N0cmluZyA9IGZ1bmN0aW9uKHY6IFZlYzMsIGRlY2ltYWxzOiBudW1iZXIgPSAyKTogc3RyaW5nIHtcbiAgdmFyIHN0cjogc3RyaW5nID0gXCJcIjtcbiAgZm9yICh2YXIgaTogbnVtYmVyID0gMDsgaSA8IDM7IGkrKykge1xuICAgIHN0ciArPSB2W2ldLnRvRml4ZWQoZGVjaW1hbHMpICsgXCIsICBcIjtcbiAgfVxuICBzdHIgPSBzdHIuc2xpY2UoMCwgLTEpO1xuICByZXR1cm4gc3RyO1xufVxuXG5leHBvcnQgY29uc3QgdmVjNFRvU3RyaW5nID0gZnVuY3Rpb24odjogVmVjNCwgZGVjaW1hbHM6IG51bWJlciA9IDIpOiBzdHJpbmcge1xuICB2YXIgc3RyOiBzdHJpbmcgPSBcIltcIjtcbiAgZm9yICh2YXIgaTogbnVtYmVyID0gMDsgaSA8IDQ7IGkrKykge1xuICAgIHN0ciArPSB2W2ldLnRvRml4ZWQoZGVjaW1hbHMpICsgXCIsXCI7XG4gIH1cbiAgc3RyID0gc3RyLnNsaWNlKDAsIC0xKTtcbiAgcmV0dXJuIHN0ciArIFwiXVwiO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/print.ts\n");

/***/ }),

/***/ "./src/utils/timer.ts":
/*!****************************!*\
  !*** ./src/utils/timer.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Timer: () => (/* binding */ Timer)\n/* harmony export */ });\nclass Timer {\n    constructor() {\n        this.startTime = 0;\n        this.reset();\n    }\n    reset() {\n        this.startTime = Date.now();\n    }\n    logTime() {\n        console.log((Date.now() - this.startTime) / 1000.0);\n    }\n    getTime() {\n        return (Date.now() - this.startTime) / 1000.0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdGltZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUdPLE1BQU0sS0FBSztJQUlkO1FBRlEsY0FBUyxHQUFXLENBQUMsQ0FBQztRQUcxQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVNLEtBQUs7UUFDUixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ2xELENBQUM7Q0FFSiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3V0aWxzL3RpbWVyLnRzPzI4ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuZXhwb3J0IGNsYXNzIFRpbWVyIHtcblxuICAgIHByaXZhdGUgc3RhcnRUaW1lOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVzZXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgbG9nVGltZSgpOiB2b2lkIHtcbiAgICAgICAgY29uc29sZS5sb2coKERhdGUubm93KCkgLSB0aGlzLnN0YXJ0VGltZSkgLyAxMDAwLjApO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUaW1lKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAoRGF0ZS5ub3coKSAtIHRoaXMuc3RhcnRUaW1lKSAvIDEwMDAuMDtcbiAgICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/timer.ts\n");

/***/ }),

/***/ "./src/widgets/cursor.ts":
/*!*******************************!*\
  !*** ./src/widgets/cursor.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cursor: () => (/* binding */ cursor)\n/* harmony export */ });\nclass Cursor {\n    constructor() {\n        this.cursor = this.createCursor();\n    }\n    setPosition(pos) {\n        this.cursor[0].style.left = (pos[0]).toString() + \"px\";\n        this.cursor[0].style.top = (pos[1] - 5).toString() + \"px\";\n        this.cursor[1].style.left = (pos[0] - 5).toString() + \"px\";\n        this.cursor[1].style.top = (pos[1]).toString() + \"px\";\n    }\n    show() {\n        this.cursor[0].hidden = false;\n        this.cursor[1].hidden = false;\n    }\n    hide() {\n        this.cursor[0].hidden = true;\n        this.cursor[1].hidden = true;\n    }\n    createCursor() {\n        const cursorVertical = document.createElement(\"div\");\n        const cursorHorizontal = document.createElement(\"div\");\n        cursorVertical.className = \"floating-window\";\n        cursorVertical.style.borderRadius = \"0px\";\n        cursorVertical.style.padding = \"0px\";\n        cursorVertical.style.margin = \"0px\";\n        cursorVertical.style.width = \"0px\";\n        cursorVertical.style.height = \"10px\";\n        cursorHorizontal.className = \"floating-window\";\n        cursorHorizontal.style.borderRadius = \"0px\";\n        cursorHorizontal.style.padding = \"0px\";\n        cursorHorizontal.style.margin = \"0px\";\n        cursorHorizontal.style.width = \"10px\";\n        cursorHorizontal.style.height = \"0px\";\n        document.body.appendChild(cursorVertical);\n        document.body.appendChild(cursorHorizontal);\n        const res = [cursorVertical, cursorHorizontal];\n        return res;\n    }\n}\nconst cursor = new Cursor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQztDQUdGO0FBRU0sTUFBTSxNQUFNLEdBQVcsSUFBSSxNQUFNLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aWRnZXRzL2N1cnNvci50cz9lZTA3Il0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEN1cnNvciB7XG5cbiAgcHJpdmF0ZSBjdXJzb3I6IFtIVE1MRGl2RWxlbWVudCwgSFRNTERpdkVsZW1lbnRdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY3Vyc29yID0gdGhpcy5jcmVhdGVDdXJzb3IoKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRQb3NpdGlvbihwb3M6IFtudW1iZXIsIG51bWJlcl0pOiB2b2lkIHtcbiAgICB0aGlzLmN1cnNvclswXS5zdHlsZS5sZWZ0ID0gKHBvc1swXSkudG9TdHJpbmcoKSArIFwicHhcIjtcbiAgICB0aGlzLmN1cnNvclswXS5zdHlsZS50b3AgPSAocG9zWzFdIC0gNSkudG9TdHJpbmcoKSArIFwicHhcIjtcbiAgICB0aGlzLmN1cnNvclsxXS5zdHlsZS5sZWZ0ID0gKHBvc1swXSAtIDUpLnRvU3RyaW5nKCkgKyBcInB4XCI7XG4gICAgdGhpcy5jdXJzb3JbMV0uc3R5bGUudG9wID0gKHBvc1sxXSkudG9TdHJpbmcoKSArIFwicHhcIjtcbiAgfVxuXG4gIHB1YmxpYyBzaG93KCk6IHZvaWQge1xuICAgIHRoaXMuY3Vyc29yWzBdLmhpZGRlbiA9IGZhbHNlO1xuICAgIHRoaXMuY3Vyc29yWzFdLmhpZGRlbiA9IGZhbHNlO1xuICB9XG4gIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xuICAgIHRoaXMuY3Vyc29yWzBdLmhpZGRlbiA9IHRydWU7XG4gICAgdGhpcy5jdXJzb3JbMV0uaGlkZGVuID0gdHJ1ZTtcbiAgfVxuXG5cbiAgcHJpdmF0ZSBjcmVhdGVDdXJzb3IoKTogW0hUTUxEaXZFbGVtZW50LCBIVE1MRGl2RWxlbWVudF0ge1xuICAgIGNvbnN0IGN1cnNvclZlcnRpY2FsOiBIVE1MRGl2RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29uc3QgY3Vyc29ySG9yaXpvbnRhbDogSFRNTERpdkVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGN1cnNvclZlcnRpY2FsLmNsYXNzTmFtZSA9IFwiZmxvYXRpbmctd2luZG93XCI7XG4gICAgY3Vyc29yVmVydGljYWwuc3R5bGUuYm9yZGVyUmFkaXVzID0gXCIwcHhcIjtcbiAgICBjdXJzb3JWZXJ0aWNhbC5zdHlsZS5wYWRkaW5nID0gXCIwcHhcIjtcbiAgICBjdXJzb3JWZXJ0aWNhbC5zdHlsZS5tYXJnaW4gPSBcIjBweFwiO1xuICAgIGN1cnNvclZlcnRpY2FsLnN0eWxlLndpZHRoID0gXCIwcHhcIjtcbiAgICBjdXJzb3JWZXJ0aWNhbC5zdHlsZS5oZWlnaHQgPSBcIjEwcHhcIjtcbiAgICBjdXJzb3JIb3Jpem9udGFsLmNsYXNzTmFtZSA9IFwiZmxvYXRpbmctd2luZG93XCI7XG4gICAgY3Vyc29ySG9yaXpvbnRhbC5zdHlsZS5ib3JkZXJSYWRpdXMgPSBcIjBweFwiO1xuICAgIGN1cnNvckhvcml6b250YWwuc3R5bGUucGFkZGluZyA9IFwiMHB4XCI7XG4gICAgY3Vyc29ySG9yaXpvbnRhbC5zdHlsZS5tYXJnaW4gPSBcIjBweFwiO1xuICAgIGN1cnNvckhvcml6b250YWwuc3R5bGUud2lkdGggPSBcIjEwcHhcIjtcbiAgICBjdXJzb3JIb3Jpem9udGFsLnN0eWxlLmhlaWdodCA9IFwiMHB4XCI7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjdXJzb3JWZXJ0aWNhbCk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjdXJzb3JIb3Jpem9udGFsKTtcbiAgICBjb25zdCByZXM6IFtIVE1MRGl2RWxlbWVudCwgSFRNTERpdkVsZW1lbnRdID0gW2N1cnNvclZlcnRpY2FsLCBjdXJzb3JIb3Jpem9udGFsXTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cblxufVxuXG5leHBvcnQgY29uc3QgY3Vyc29yOiBDdXJzb3IgPSBuZXcgQ3Vyc29yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/widgets/cursor.ts\n");

/***/ }),

/***/ "./src/widgets/mover.ts":
/*!******************************!*\
  !*** ./src/widgets/mover.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mover: () => (/* binding */ Mover)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_boundingBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/group */ \"./src/geometry/group.ts\");\n/* harmony import */ var _geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geometry/nurbs/arc */ \"./src/geometry/nurbs/arc.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../geometry/nurbs/loft */ \"./src/geometry/nurbs/loft.ts\");\n\n\n\n\n\n\n\nclass Mover {\n    constructor() {\n        this.enabled = false;\n        this.transformBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"selection transform buffer\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.transformBuffer, 0, wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity());\n        this.build();\n    }\n    build() {\n        const origin = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.create(0, 0, 0);\n        const xAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.create(1, 0, 0);\n        const yAxis = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.create(0, 1, 0);\n        // create construction lines\n        const planeMoverInner = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_4__.Curve(null, [\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec4.create(1, 0, 0, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec4.create(1, 1, 0, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec4.create(0, 1, 0, 1)\n        ], 1);\n        const planeMoverOuter = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_4__.Curve(null, [\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec4.create(2, 0, 0, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec4.create(2, 2, 0, 1),\n            wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec4.create(0, 2, 0, 1)\n        ], 1);\n        const spinnerInner = (0,_geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_3__.createArc)(origin, xAxis, yAxis, Math.sqrt(8), 0, Math.PI / 2);\n        const spinnerOuter = (0,_geometry_nurbs_arc__WEBPACK_IMPORTED_MODULE_3__.createArc)(origin, xAxis, yAxis, Math.sqrt(8) + 1, 0, Math.PI / 2);\n        // create surfaces\n        this.xyPlaneMover = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__.loft)([planeMoverInner, planeMoverOuter], 1);\n        this.xyPlaneMover.setMaterial(\"blue\");\n        this.zSpinner = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__.loft)([spinnerInner, spinnerOuter], 1);\n        this.zSpinner.setMaterial(\"blue\");\n        this.xzPlaneMover = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__.loft)([planeMoverInner, planeMoverOuter], 1);\n        this.xzPlaneMover.setMaterial(\"green\");\n        this.ySpinner = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__.loft)([spinnerInner, spinnerOuter], 1);\n        this.ySpinner.setMaterial(\"green\");\n        this.yzPlaneMover = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__.loft)([planeMoverInner, planeMoverOuter], 1);\n        this.yzPlaneMover.setMaterial(\"red\");\n        this.xSpinner = (0,_geometry_nurbs_loft__WEBPACK_IMPORTED_MODULE_5__.loft)([spinnerInner, spinnerOuter], 1);\n        this.xSpinner.setMaterial(\"red\");\n        this.surfaces = new _geometry_group__WEBPACK_IMPORTED_MODULE_2__.Group([this.xyPlaneMover, this.xzPlaneMover, this.yzPlaneMover, this.xSpinner, this.ySpinner, this.zSpinner]);\n        this.surfaces.hide();\n        this.surfaces.setOverlay(true);\n        this.surfaces.setConstantScreenSize(true);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.surfaces);\n        // cleanup construction curves\n        spinnerInner.destroy();\n        spinnerOuter.destroy();\n        planeMoverInner.destroy();\n        planeMoverOuter.destroy();\n    }\n    updatedSelection() {\n        const selection = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSelector().getSelection();\n        if (selection.size === 0) {\n            this.enabled = false;\n            this.surfaces.hide();\n        }\n        else {\n            this.enabled = true;\n            this.surfaces.show();\n            const selectionBB = new _geometry_boundingBox__WEBPACK_IMPORTED_MODULE_1__.BoundingBox();\n            for (const id of selection) {\n                const geo = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getGeometry(id);\n                selectionBB.addBoundingBox(geo.getBoundingBox());\n            }\n            this.originalModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.translate(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity(), selectionBB.getCenter());\n            this.currentModel = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.clone(this.originalModel);\n            this.surfaces.setModel(this.originalModel);\n        }\n    }\n    tick() {\n        if (!this.enabled)\n            return;\n        const cameraPos = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getPosition();\n        const thisPos = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.getTranslation(this.originalModel);\n        const dx = thisPos[0] - cameraPos[0];\n        const dy = thisPos[1] - cameraPos[1];\n        const dz = thisPos[2] - cameraPos[2];\n        var flipper = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity(), wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.create(dx > 0 ? -1 : 1, dy > 0 ? -1 : 1, dz > 0 ? -1 : 1));\n        this.xyPlaneMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(flipper, Mover.toXYPlane));\n        this.zSpinner.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(flipper, Mover.toXYPlane));\n        this.xzPlaneMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(flipper, Mover.toXZPlane));\n        this.ySpinner.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(flipper, Mover.toXZPlane));\n        this.yzPlaneMover.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(flipper, Mover.toYZPlane));\n        this.xSpinner.setModel(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(flipper, Mover.toYZPlane));\n    }\n    getTransform() {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.mul(this.currentModel, wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.inverse(this.originalModel));\n    }\n    getSelectionTransformBuffer() {\n        return this.transformBuffer;\n    }\n}\nMover.toXZPlane = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.uniformScale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.rotateX(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity(), Math.PI / 2), 0.02);\nMover.toYZPlane = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.uniformScale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.rotateY(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity(), Math.PI / -2), 0.02);\nMover.toXYPlane = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.uniformScale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity(), 0.02);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/widgets/mover.ts\n");

/***/ }),

/***/ "./src/window/window.ts":
/*!******************************!*\
  !*** ./src/window/window.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CADWindow: () => (/* binding */ CADWindow)\n/* harmony export */ });\nclass CADWindow {\n    constructor(name, start, end) {\n        this.start = start;\n        this.end = end;\n        this.element = document.createElement(\"div\");\n        this.element.id = name;\n        this.element.className = \"floating-window\";\n        this.updateSize();\n        document.body.appendChild(this.element);\n        this.populate();\n    }\n    updateEnd(end) {\n        this.end = end;\n        this.updateSize();\n    }\n    updateSize() {\n        const left = Math.min(this.start[0], this.end[0]);\n        const top = Math.min(this.start[1], this.end[1]);\n        const width = Math.abs(this.start[0] - this.end[0]) - 10;\n        const height = Math.abs(this.start[1] - this.end[1]) - 10;\n        this.element.setAttribute(\"style\", `\n      left:${left}px;\n      top:${top}px;\n      width:${width}px;\n      height:${height}px;`);\n    }\n    destroy() {\n        document.body.removeChild(this.element);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvdy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBZSxTQUFTO0lBSTdCLFlBQVksSUFBWSxFQUNkLEtBQXVCLEVBQ3ZCLEdBQXFCO1FBRHJCLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBQ3ZCLFFBQUcsR0FBSCxHQUFHLENBQWtCO1FBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsaUJBQWlCLENBQUM7UUFDM0MsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2xCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVNLFNBQVMsQ0FBQyxHQUFxQjtRQUNwQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNmLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRU8sVUFBVTtRQUNoQixNQUFNLElBQUksR0FBVyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFELE1BQU0sR0FBRyxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekQsTUFBTSxLQUFLLEdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDakUsTUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFO2FBQzFCLElBQUk7WUFDTCxHQUFHO2NBQ0QsS0FBSztlQUNKLE1BQU0sS0FBSyxDQUNyQixDQUFDO0lBQ0osQ0FBQztJQUVNLE9BQU87UUFDWixRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUMsQ0FBQztDQUtGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvd2luZG93L3dpbmRvdy50cz9kN2NhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDQURXaW5kb3cge1xuXG4gIHByb3RlY3RlZCBlbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcblxuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsXG4gICAgcHJpdmF0ZSBzdGFydDogW251bWJlciwgbnVtYmVyXSxcbiAgICBwcml2YXRlIGVuZDogW251bWJlciwgbnVtYmVyXSkge1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGhpcy5lbGVtZW50LmlkID0gbmFtZTtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NOYW1lID0gXCJmbG9hdGluZy13aW5kb3dcIjtcbiAgICB0aGlzLnVwZGF0ZVNpemUoKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7XG4gICAgdGhpcy5wb3B1bGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZUVuZChlbmQ6IFtudW1iZXIsIG51bWJlcl0pOiB2b2lkIHtcbiAgICB0aGlzLmVuZCA9IGVuZDtcbiAgICB0aGlzLnVwZGF0ZVNpemUoKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlU2l6ZSgpOiB2b2lkIHtcbiAgICBjb25zdCBsZWZ0OiBudW1iZXIgPSBNYXRoLm1pbih0aGlzLnN0YXJ0WzBdLCB0aGlzLmVuZFswXSk7XG4gICAgY29uc3QgdG9wOiBudW1iZXIgPSBNYXRoLm1pbih0aGlzLnN0YXJ0WzFdLCB0aGlzLmVuZFsxXSk7XG4gICAgY29uc3Qgd2lkdGg6IG51bWJlciA9IE1hdGguYWJzKHRoaXMuc3RhcnRbMF0gLSB0aGlzLmVuZFswXSkgLSAxMDtcbiAgICBjb25zdCBoZWlnaHQ6IG51bWJlciA9IE1hdGguYWJzKHRoaXMuc3RhcnRbMV0gLSB0aGlzLmVuZFsxXSkgLSAxMDtcbiAgICB0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgYFxuICAgICAgbGVmdDoke2xlZnR9cHg7XG4gICAgICB0b3A6JHt0b3B9cHg7XG4gICAgICB3aWR0aDoke3dpZHRofXB4O1xuICAgICAgaGVpZ2h0OiR7aGVpZ2h0fXB4O2BcbiAgICApO1xuICB9XG5cbiAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpO1xuICB9XG5cbiAgcHVibGljIGFic3RyYWN0IHBvcHVsYXRlKCk6IHZvaWQ7XG4gIHB1YmxpYyBhYnN0cmFjdCB0aWNrKCk6IHZvaWQ7XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/window/window.ts\n");

/***/ }),

/***/ "./src/window/windowManager.ts":
/*!*************************************!*\
  !*** ./src/window/windowManager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WINDOW_NAMES: () => (/* binding */ WINDOW_NAMES),\n/* harmony export */   WindowManager: () => (/* binding */ WindowManager)\n/* harmony export */ });\n/* harmony import */ var _windows_logWindow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./windows/logWindow */ \"./src/window/windows/logWindow.ts\");\n/* harmony import */ var _windows_materialsWindow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./windows/materialsWindow */ \"./src/window/windows/materialsWindow.ts\");\n/* harmony import */ var _windows_sceneWindow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./windows/sceneWindow */ \"./src/window/windows/sceneWindow.ts\");\n/* harmony import */ var _windows_snapsWindow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./windows/snapsWindow */ \"./src/window/windows/snapsWindow.ts\");\n/* harmony import */ var _windows_statsWindow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./windows/statsWindow */ \"./src/window/windows/statsWindow.ts\");\n\n\n\n\n\nconst WINDOW_NAMES = new Map();\nWINDOW_NAMES.set(1, \"stats\");\nWINDOW_NAMES.set(2, \"log\");\nWINDOW_NAMES.set(3, \"materials\");\nWINDOW_NAMES.set(4, \"scene\");\nWINDOW_NAMES.set(5, \"snaps\");\nclass WindowManager {\n    constructor() {\n        this.windows = new Map();\n        this.setupDefaultWindows();\n    }\n    setupDefaultWindows() {\n        this.addWindow(\"log\", [10, 10], [200, 400]);\n        this.addWindow(\"stats\", [220, 10], [400, 210]);\n        this.addWindow(\"snaps\", [420, 10], [550, 100]);\n    }\n    getWindows() {\n        return this.windows;\n    }\n    addWindow(windowName, start, end) {\n        this.removeWindow(windowName);\n        switch (windowName) {\n            case \"stats\":\n                this.windows.set(\"stats\", new _windows_statsWindow__WEBPACK_IMPORTED_MODULE_4__.StatsWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"log\":\n                this.windows.set(\"log\", new _windows_logWindow__WEBPACK_IMPORTED_MODULE_0__.LogWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"materials\":\n                this.windows.set(\"materials\", new _windows_materialsWindow__WEBPACK_IMPORTED_MODULE_1__.MaterialsWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"scene\":\n                this.windows.set(\"scene\", new _windows_sceneWindow__WEBPACK_IMPORTED_MODULE_2__.SceneWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            case \"snaps\":\n                this.windows.set(\"snaps\", new _windows_snapsWindow__WEBPACK_IMPORTED_MODULE_3__.SnapsWindow(windowName, start, end !== null && end !== void 0 ? end : start));\n                break;\n            default:\n                throw new Error(\"not implemented\");\n        }\n    }\n    removeWindow(windowName) {\n        var _a;\n        (_a = this.windows.get(windowName)) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.windows.delete(windowName);\n    }\n    tick() {\n        for (let window of this.windows.values()) {\n            window.tick();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRU0sWUFBWSxDQUFDLFVBQWtCOztRQUNwQyxVQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsMENBQUUsT0FBTyxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLElBQUk7UUFDVCxLQUFLLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDeEMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2Y7SUFDSCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93TWFuYWdlci50cz80YTM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENBRFdpbmRvdyB9IGZyb20gXCIuL3dpbmRvd1wiO1xuaW1wb3J0IHsgTG9nV2luZG93IH0gZnJvbSBcIi4vd2luZG93cy9sb2dXaW5kb3dcIjtcbmltcG9ydCB7IE1hdGVyaWFsc1dpbmRvdyB9IGZyb20gXCIuL3dpbmRvd3MvbWF0ZXJpYWxzV2luZG93XCI7XG5pbXBvcnQgeyBTY2VuZVdpbmRvdyB9IGZyb20gXCIuL3dpbmRvd3Mvc2NlbmVXaW5kb3dcIjtcbmltcG9ydCB7IFNuYXBzV2luZG93IH0gZnJvbSBcIi4vd2luZG93cy9zbmFwc1dpbmRvd1wiO1xuaW1wb3J0IHsgU3RhdHNXaW5kb3cgfSBmcm9tIFwiLi93aW5kb3dzL3N0YXRzV2luZG93XCI7XG5cbmV4cG9ydCBjb25zdCBXSU5ET1dfTkFNRVM6IE1hcDxudW1iZXIsIHN0cmluZz4gPSBuZXcgTWFwPG51bWJlciwgc3RyaW5nPigpO1xuV0lORE9XX05BTUVTLnNldCgxLCBcInN0YXRzXCIpO1xuV0lORE9XX05BTUVTLnNldCgyLCBcImxvZ1wiKTtcbldJTkRPV19OQU1FUy5zZXQoMywgXCJtYXRlcmlhbHNcIik7XG5XSU5ET1dfTkFNRVMuc2V0KDQsIFwic2NlbmVcIik7XG5XSU5ET1dfTkFNRVMuc2V0KDUsIFwic25hcHNcIik7XG5cbmV4cG9ydCBjbGFzcyBXaW5kb3dNYW5hZ2VyIHtcblxuICBwcml2YXRlIHdpbmRvd3M6IE1hcDxzdHJpbmcsIENBRFdpbmRvdz47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy53aW5kb3dzID0gbmV3IE1hcDxzdHJpbmcsIENBRFdpbmRvdz4oKTtcbiAgICB0aGlzLnNldHVwRGVmYXVsdFdpbmRvd3MoKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0dXBEZWZhdWx0V2luZG93cygpOiB2b2lkIHtcbiAgICB0aGlzLmFkZFdpbmRvdyhcImxvZ1wiLCBbMTAsIDEwXSwgWzIwMCwgNDAwXSk7XG4gICAgdGhpcy5hZGRXaW5kb3coXCJzdGF0c1wiLCBbMjIwLCAxMF0sIFs0MDAsIDIxMF0pO1xuICAgIHRoaXMuYWRkV2luZG93KFwic25hcHNcIiwgWzQyMCwgMTBdLCBbNTUwLCAxMDBdKTtcbiAgfVxuICBwdWJsaWMgZ2V0V2luZG93cygpOiBNYXA8c3RyaW5nLCBDQURXaW5kb3c+IHtcbiAgICByZXR1cm4gdGhpcy53aW5kb3dzO1xuICB9XG5cbiAgcHVibGljIGFkZFdpbmRvdyh3aW5kb3dOYW1lOiBzdHJpbmcsIHN0YXJ0OiBbbnVtYmVyLCBudW1iZXJdLCBlbmQ/OiBbbnVtYmVyLCBudW1iZXJdKSB7XG4gICAgdGhpcy5yZW1vdmVXaW5kb3cod2luZG93TmFtZSk7XG4gICAgc3dpdGNoICh3aW5kb3dOYW1lKSB7XG4gICAgICBjYXNlIFwic3RhdHNcIjpcbiAgICAgICAgdGhpcy53aW5kb3dzLnNldChcInN0YXRzXCIsIG5ldyBTdGF0c1dpbmRvdyh3aW5kb3dOYW1lLCBzdGFydCwgZW5kID8/IHN0YXJ0KSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImxvZ1wiOlxuICAgICAgICB0aGlzLndpbmRvd3Muc2V0KFwibG9nXCIsIG5ldyBMb2dXaW5kb3cod2luZG93TmFtZSwgc3RhcnQsIGVuZCA/PyBzdGFydCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJtYXRlcmlhbHNcIjpcbiAgICAgICAgdGhpcy53aW5kb3dzLnNldChcIm1hdGVyaWFsc1wiLCBuZXcgTWF0ZXJpYWxzV2luZG93KHdpbmRvd05hbWUsIHN0YXJ0LCBlbmQgPz8gc3RhcnQpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwic2NlbmVcIjpcbiAgICAgICAgdGhpcy53aW5kb3dzLnNldChcInNjZW5lXCIsIG5ldyBTY2VuZVdpbmRvdyh3aW5kb3dOYW1lLCBzdGFydCwgZW5kID8/IHN0YXJ0KSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInNuYXBzXCI6XG4gICAgICAgIHRoaXMud2luZG93cy5zZXQoXCJzbmFwc1wiLCBuZXcgU25hcHNXaW5kb3cod2luZG93TmFtZSwgc3RhcnQsIGVuZCA/PyBzdGFydCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIm5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlV2luZG93KHdpbmRvd05hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMud2luZG93cy5nZXQod2luZG93TmFtZSk/LmRlc3Ryb3koKTtcbiAgICB0aGlzLndpbmRvd3MuZGVsZXRlKHdpbmRvd05hbWUpO1xuICB9XG5cbiAgcHVibGljIHRpY2soKTogdm9pZCB7XG4gICAgZm9yIChsZXQgd2luZG93IG9mIHRoaXMud2luZG93cy52YWx1ZXMoKSkge1xuICAgICAgd2luZG93LnRpY2soKTtcbiAgICB9XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windowManager.ts\n");

/***/ }),

/***/ "./src/window/windows/logWindow.ts":
/*!*****************************************!*\
  !*** ./src/window/windows/logWindow.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogWindow: () => (/* binding */ LogWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass LogWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().getLogs();\n    }\n    tick() {\n        this.populate();\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3MvbG9nV2luZG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBRS9CLE1BQU0sU0FBVSxTQUFRLDhDQUFTO0lBRS9CLFFBQVE7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3ZELENBQUM7SUFFTSxJQUFJO1FBRVQsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0lBQ3JELENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL2xvZ1dpbmRvdy50cz83NWEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgQ0FEV2luZG93IH0gZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5leHBvcnQgY2xhc3MgTG9nV2luZG93IGV4dGVuZHMgQ0FEV2luZG93IHtcblxuICBwdWJsaWMgcG9wdWxhdGUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IElOU1RBTkNFLmdldExvZygpLmdldExvZ3MoKTtcbiAgfVxuXG4gIHB1YmxpYyB0aWNrKCk6IHZvaWQge1xuXG4gICAgdGhpcy5wb3B1bGF0ZSgpO1xuICAgIHRoaXMuZWxlbWVudC5zY3JvbGxUb3AgPSB0aGlzLmVsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/window/windows/logWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/materialsWindow.ts":
/*!***********************************************!*\
  !*** ./src/window/windows/materialsWindow.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaterialsWindow: () => (/* binding */ MaterialsWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _utils_print__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/print */ \"./src/utils/print.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\n\nclass MaterialsWindow extends _window__WEBPACK_IMPORTED_MODULE_2__.CADWindow {\n    populate() {\n        const materials = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMaterialManager().getMaterials();\n        var html = \"<u>MATERIALS</u><br>\";\n        materials.forEach((mat) => {\n            html +=\n                \"name:\" + mat.getName() +\n                    \", color:\" + (mat.getColor() !== null ? (0,_utils_print__WEBPACK_IMPORTED_MODULE_1__.vec4ToString)(mat.getColor()) : \"none\") +\n                    \"<br>\";\n        });\n        this.element.innerHTML = html;\n    }\n    tick() {\n        this.populate();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3MvbWF0ZXJpYWxzV2luZG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDcUM7QUFFWTtBQUNaO0FBRzlCLE1BQU0sZUFBZ0IsU0FBUSw4Q0FBUztJQUVyQyxRQUFRO1FBQ2IsTUFBTSxTQUFTLEdBQTBCLDBDQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN0RixJQUFJLElBQUksR0FBVyxzQkFBc0IsQ0FBQztRQUMxQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBYSxFQUFFLEVBQUU7WUFDbEMsSUFBSTtnQkFDRixPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sRUFBRTtvQkFDdkIsVUFBVSxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsMERBQVksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO29CQUMvRSxNQUFNLENBQUM7UUFDWCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztJQUNoQyxDQUFDO0lBRU0sSUFBSTtRQUNULElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93cy9tYXRlcmlhbHNXaW5kb3cudHM/MzQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3YXJuIH0gZnJvbSBcImNvbnNvbGVcIjtcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgTWF0ZXJpYWwgfSBmcm9tIFwiLi4vLi4vbWF0ZXJpYWxzL21hdGVyaWFsXCI7XG5pbXBvcnQgeyB2ZWM0VG9TdHJpbmcgfSBmcm9tIFwiLi4vLi4vdXRpbHMvcHJpbnRcIjtcbmltcG9ydCB7IENBRFdpbmRvdyB9IGZyb20gXCIuLi93aW5kb3dcIlxuXG5cbmV4cG9ydCBjbGFzcyBNYXRlcmlhbHNXaW5kb3cgZXh0ZW5kcyBDQURXaW5kb3cge1xuXG4gIHB1YmxpYyBwb3B1bGF0ZSgpOiB2b2lkIHtcbiAgICBjb25zdCBtYXRlcmlhbHM6IE1hcDxzdHJpbmcsIE1hdGVyaWFsPiA9IElOU1RBTkNFLmdldE1hdGVyaWFsTWFuYWdlcigpLmdldE1hdGVyaWFscygpO1xuICAgIHZhciBodG1sOiBzdHJpbmcgPSBcIjx1Pk1BVEVSSUFMUzwvdT48YnI+XCI7XG4gICAgbWF0ZXJpYWxzLmZvckVhY2goKG1hdDogTWF0ZXJpYWwpID0+IHtcbiAgICAgIGh0bWwgKz1cbiAgICAgICAgXCJuYW1lOlwiICsgbWF0LmdldE5hbWUoKSArXG4gICAgICAgIFwiLCBjb2xvcjpcIiArIChtYXQuZ2V0Q29sb3IoKSAhPT0gbnVsbCA/IHZlYzRUb1N0cmluZyhtYXQuZ2V0Q29sb3IoKSEpIDogXCJub25lXCIpICtcbiAgICAgICAgXCI8YnI+XCI7XG4gICAgfSk7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IGh0bWw7XG4gIH1cblxuICBwdWJsaWMgdGljaygpOiB2b2lkIHtcbiAgICB0aGlzLnBvcHVsYXRlKCk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/materialsWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/sceneWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/sceneWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SceneWindow: () => (/* binding */ SceneWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass SceneWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = \"<u>SCENE:</u><br>\";\n        const list = document.createElement(\"ul\");\n        for (let geo of _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getRootGeometry()) {\n            const item = document.createElement(\"li\");\n            item.innerHTML = geo.getTypeName() +\n                \" id:\" + geo.getID().toString() +\n                \" selected:\" + geo.isSelected().toString();\n            list.appendChild(item);\n        }\n        this.element.appendChild(list);\n    }\n    tick() {\n        this.populate();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc2NlbmVXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFFakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLG1CQUFtQixDQUFDO1FBQzdDLE1BQU0sSUFBSSxHQUFnQixRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZELEtBQUssSUFBSSxHQUFHLElBQUksMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxlQUFlLEVBQUUsRUFBRTtZQUNyRCxNQUFNLElBQUksR0FBZ0IsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN2RCxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxXQUFXLEVBQUU7Z0JBQ2hDLE1BQU0sR0FBRyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsUUFBUSxFQUFFO2dCQUMvQixZQUFZLEdBQUcsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQzdDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDeEI7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU0sSUFBSTtRQUNULElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93cy9zY2VuZVdpbmRvdy50cz82OTdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuaW1wb3J0IHsgQ0FEV2luZG93IH0gZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5leHBvcnQgY2xhc3MgU2NlbmVXaW5kb3cgZXh0ZW5kcyBDQURXaW5kb3cge1xuXG4gIHB1YmxpYyBwb3B1bGF0ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gXCI8dT5TQ0VORTo8L3U+PGJyPlwiO1xuICAgIGNvbnN0IGxpc3Q6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgIGZvciAobGV0IGdlbyBvZiBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldFJvb3RHZW9tZXRyeSgpKSB7XG4gICAgICBjb25zdCBpdGVtOiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICAgIGl0ZW0uaW5uZXJIVE1MID0gZ2VvLmdldFR5cGVOYW1lKCkgK1xuICAgICAgICBcIiBpZDpcIiArIGdlby5nZXRJRCgpLnRvU3RyaW5nKCkgK1xuICAgICAgICBcIiBzZWxlY3RlZDpcIiArIGdlby5pc1NlbGVjdGVkKCkudG9TdHJpbmcoKTtcbiAgICAgIGxpc3QuYXBwZW5kQ2hpbGQoaXRlbSk7XG4gICAgfVxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChsaXN0KTtcbiAgfVxuXG4gIHB1YmxpYyB0aWNrKCk6IHZvaWQge1xuICAgIHRoaXMucG9wdWxhdGUoKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/sceneWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/snapsWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/snapsWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapsWindow: () => (/* binding */ SnapsWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass SnapsWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getSettingsManager().getSnapSettingsManager().getHTML();\n    }\n    tick() {\n        this.populate();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc25hcHNXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFHakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLDBDQUFRLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzVGLENBQUM7SUFFTSxJQUFJO1FBQ1QsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2xCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL3NuYXBzV2luZG93LnRzPzk5MmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBDQURXaW5kb3cgfSBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmV4cG9ydCBjbGFzcyBTbmFwc1dpbmRvdyBleHRlbmRzIENBRFdpbmRvdyB7XG5cblxuICBwdWJsaWMgcG9wdWxhdGUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IElOU1RBTkNFLmdldFNldHRpbmdzTWFuYWdlcigpLmdldFNuYXBTZXR0aW5nc01hbmFnZXIoKS5nZXRIVE1MKCk7XG4gIH1cblxuICBwdWJsaWMgdGljaygpOiB2b2lkIHtcbiAgICB0aGlzLnBvcHVsYXRlKCk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/snapsWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/statsWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/statsWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatsWindow: () => (/* binding */ StatsWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass StatsWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getStats().getInnerHTML();\n    }\n    tick() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getStats().getInnerHTML();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc3RhdHNXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFFakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDOUQsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzlELENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL3N0YXRzV2luZG93LnRzPzUyNGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBDQURXaW5kb3cgfSBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmV4cG9ydCBjbGFzcyBTdGF0c1dpbmRvdyBleHRlbmRzIENBRFdpbmRvdyB7XG5cbiAgcHVibGljIHBvcHVsYXRlKCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSBJTlNUQU5DRS5nZXRTdGF0cygpLmdldElubmVySFRNTCgpO1xuICB9XG5cbiAgcHVibGljIHRpY2soKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IElOU1RBTkNFLmdldFN0YXRzKCkuZ2V0SW5uZXJIVE1MKCk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/statsWindow.ts\n");

/***/ }),

/***/ "./src/render/shaders/instancedTriangleShader.wgsl":
/*!*********************************************************!*\
  !*** ./src/render/shaders/instancedTriangleShader.wgsl ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n  @builtin(position) position: vec4<f32>,\\n    @location(0) @interpolate(linear) normal: vec4<f32>\\n}\\n\\n// local uniforms:\\n@group(0) @binding(0) var<uniform> model: mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color: vec4<f32>;\\n@group(0) @binding(2) var<uniform> flags: i32;\\n@group(0) @binding(3) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> resolution: vec2<f32>;\\n\\n// instance uniforms:\\n@group(2) @binding(0) var<storage, read> transforms: array<mat4x4<f32>>;\\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) objectSpacePosition: vec4<f32>,\\n    @location(1) normal: vec4<f32>,\\n    @builtin(instance_index) instanceID: u32) -> VertexOutput \\n{\\n\\n  var toWorldSpace = model * transforms[instanceID];\\n  var worldSpacePosition = toWorldSpace * objectSpacePosition.xzyw;\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xzy);\\n    worldSpacePosition = toWorldSpace * vec4<f32>(objectSpacePosition.xzy * dist, objectSpacePosition.w);\\n  } \\n\\n  var output: VertexOutput;\\n  output.normal = normal.xzyw;\\n  output.position = cameraViewProj * worldSpacePosition;\\n  return output;\\n}\\n\\nstruct FragInput {\\n  @location(0) @interpolate(linear) normal: vec4<f32>,\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n\\n@fragment\\nfn fragmentMain(inputs: FragInput) -> @location(0) vec4f {\\n\\n  var normalizedNormal: vec3<f32> = normalize(inputs.normal.xyz);\\n  var fragColor: vec4<f32> = vec4<f32>(normalizedNormal/2.0 + vec3<f32>(0.5, 0.5, 0.5), 1.0);\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoords.xy / STRIPE_WIDTH;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    \\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n   \\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n\\n  }\\n  return fragColor;\\n\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvaW5zdGFuY2VkVHJpYW5nbGVTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0JBQXdCLHVHQUF1Ryw4RUFBOEUsc0RBQXNELGdEQUFnRCw2Q0FBNkMsaUZBQWlGLGlFQUFpRSxxRUFBcUUsMkRBQTJELG1HQUFtRyxpREFBaUQsZ0NBQWdDLG1DQUFtQyxtQ0FBbUMscUxBQXFMLHdEQUF3RCxxRUFBcUUsb0RBQW9ELHNFQUFzRSwyR0FBMkcsTUFBTSwrQkFBK0IsZ0NBQWdDLDBEQUEwRCxrQkFBa0IsR0FBRyxzQkFBc0Isd0dBQXdHLDJFQUEyRSxxRUFBcUUsK0ZBQStGLDBFQUEwRSxpREFBaUQscUVBQXFFLCtEQUErRCxxREFBcUQsb0RBQW9ELFNBQVMsVUFBVSwyQ0FBMkMsaUVBQWlFLCtEQUErRCxxREFBcUQsb0RBQW9ELFNBQVMsT0FBTyxxQkFBcUIsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9zaGFkZXJzL2luc3RhbmNlZFRyaWFuZ2xlU2hhZGVyLndnc2w/MWM5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIlxcbnN0cnVjdCBWZXJ0ZXhPdXRwdXQge1xcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIHBvc2l0aW9uOiB2ZWM0PGYzMj4sXFxuICAgIEBsb2NhdGlvbigwKSBAaW50ZXJwb2xhdGUobGluZWFyKSBub3JtYWw6IHZlYzQ8ZjMyPlxcbn1cXG5cXG4vLyBsb2NhbCB1bmlmb3JtczpcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IG1vZGVsOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IGNvbG9yOiB2ZWM0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBmbGFnczogaTMyO1xcbkBncm91cCgwKSBAYmluZGluZygzKSB2YXI8dW5pZm9ybT4gaWQ6IGkzMjtcXG5cXG4vLyBnbG9iYWwgdW5pZm9ybXM6XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDApIHZhcjx1bmlmb3JtPiBjYW1lcmFQb3M6IHZlYzM8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IGNhbWVyYVZpZXdQcm9qOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMikgdmFyPHVuaWZvcm0+IHNlbGVjdGlvblRyYW5zZm9ybTogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDMpIHZhcjx1bmlmb3JtPiByZXNvbHV0aW9uOiB2ZWMyPGYzMj47XFxuXFxuLy8gaW5zdGFuY2UgdW5pZm9ybXM6XFxuQGdyb3VwKDIpIEBiaW5kaW5nKDApIHZhcjxzdG9yYWdlLCByZWFkPiB0cmFuc2Zvcm1zOiBhcnJheTxtYXQ0eDQ8ZjMyPj47XFxuXFxuY29uc3QgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUOiBpMzIgPSAxIDw8IDA7XFxuY29uc3QgSE9WRVJfQklUOiBpMzIgPSAxIDw8IDE7XFxuY29uc3QgU0VMRUNURURfQklUOiBpMzIgPSAxIDw8IDI7XFxuXFxuY29uc3QgU1RSSVBFX1dJRFRIOiBmMzIgPSAxMC4wO1xcblxcbkB2ZXJ0ZXhcXG5mbiB2ZXJ0ZXhNYWluKFxcbiAgICBAbG9jYXRpb24oMCkgb2JqZWN0U3BhY2VQb3NpdGlvbjogdmVjNDxmMzI+LFxcbiAgICBAbG9jYXRpb24oMSkgbm9ybWFsOiB2ZWM0PGYzMj4sXFxuICAgIEBidWlsdGluKGluc3RhbmNlX2luZGV4KSBpbnN0YW5jZUlEOiB1MzIpIC0+IFZlcnRleE91dHB1dCBcXG57XFxuXFxuICB2YXIgdG9Xb3JsZFNwYWNlID0gbW9kZWwgKiB0cmFuc2Zvcm1zW2luc3RhbmNlSURdO1xcbiAgdmFyIHdvcmxkU3BhY2VQb3NpdGlvbiA9IHRvV29ybGRTcGFjZSAqIG9iamVjdFNwYWNlUG9zaXRpb24ueHp5dztcXG5cXG4gIGlmICgoZmxhZ3MgJiBDT05TVEFOVF9TQ1JFRU5fU0laRV9CSVQpICE9IDApIHtcXG4gICAgdmFyIGRpc3Q6IGYzMiA9IGRpc3RhbmNlKHdvcmxkU3BhY2VQb3NpdGlvbi54eXosIGNhbWVyYVBvcy54enkpO1xcbiAgICB3b3JsZFNwYWNlUG9zaXRpb24gPSB0b1dvcmxkU3BhY2UgKiB2ZWM0PGYzMj4ob2JqZWN0U3BhY2VQb3NpdGlvbi54enkgKiBkaXN0LCBvYmplY3RTcGFjZVBvc2l0aW9uLncpO1xcbiAgfSBcXG5cXG4gIHZhciBvdXRwdXQ6IFZlcnRleE91dHB1dDtcXG4gIG91dHB1dC5ub3JtYWwgPSBub3JtYWwueHp5dztcXG4gIG91dHB1dC5wb3NpdGlvbiA9IGNhbWVyYVZpZXdQcm9qICogd29ybGRTcGFjZVBvc2l0aW9uO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuc3RydWN0IEZyYWdJbnB1dCB7XFxuICBAbG9jYXRpb24oMCkgQGludGVycG9sYXRlKGxpbmVhcikgbm9ybWFsOiB2ZWM0PGYzMj4sXFxuICBAYnVpbHRpbihwb3NpdGlvbikgZnJhZ0Nvb3JkczogdmVjNDxmMzI+LFxcbn1cXG5cXG5cXG5AZnJhZ21lbnRcXG5mbiBmcmFnbWVudE1haW4oaW5wdXRzOiBGcmFnSW5wdXQpIC0+IEBsb2NhdGlvbigwKSB2ZWM0ZiB7XFxuXFxuICB2YXIgbm9ybWFsaXplZE5vcm1hbDogdmVjMzxmMzI+ID0gbm9ybWFsaXplKGlucHV0cy5ub3JtYWwueHl6KTtcXG4gIHZhciBmcmFnQ29sb3I6IHZlYzQ8ZjMyPiA9IHZlYzQ8ZjMyPihub3JtYWxpemVkTm9ybWFsLzIuMCArIHZlYzM8ZjMyPigwLjUsIDAuNSwgMC41KSwgMS4wKTtcXG4gIHZhciBzY2FsZWRGcmFnQ29vcmRzOiB2ZWMyPGYzMj4gPSBpbnB1dHMuZnJhZ0Nvb3Jkcy54eSAvIFNUUklQRV9XSURUSDtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICBcXG4gICAgICB2YXIgZXZlblg6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueCkuZnJhY3QgPCAwLjU7XFxuICAgICAgdmFyIGV2ZW5ZOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLnkpLmZyYWN0IDwgMC41O1xcbiAgICAgIGlmICgoZXZlblggJiYgIWV2ZW5ZKSB8fCAoZXZlblkgJiYgIWV2ZW5YKSkge1xcbiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDEuMCwgMS4wLCAwLjAsIDEuMCk7XFxuICAgICAgfVxcbiAgIFxcbiAgfVxcbiAgaWYgKChmbGFncyAmIEhPVkVSX0JJVCkgPT0gSE9WRVJfQklUKSB7XFxuXFxuICAgICAgdmFyIGV2ZW5YOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLngpLmZyYWN0IDwgMC41O1xcbiAgICAgIHZhciBldmVuWTogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy55KS5mcmFjdCA8IDAuNTtcXG4gICAgICBpZiAoKGV2ZW5YICYmICFldmVuWSkgfHwgKGV2ZW5ZICYmICFldmVuWCkpIHtcXG4gICAgICAgIGZyYWdDb2xvciA9IHZlYzQ8ZjMyPigwLjAsIDAuMCwgMS4wLCAxLjApO1xcbiAgICAgIH1cXG5cXG4gIH1cXG4gIHJldHVybiBmcmFnQ29sb3I7XFxuXFxufVxcblxcblxcblxcblwiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/shaders/instancedTriangleShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/lineShader.wgsl":
/*!********************************************!*\
  !*** ./src/render/shaders/lineShader.wgsl ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color : vec4<f32>;\\n@group(0) @binding(2) var<uniform> flags: i32;\\n@group(0) @binding(3) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> resolution: vec2<f32>;\\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) position : vec4<f32>,\\n    ) -> VertexOutput\\n{\\n  var worldSpacePosition = model * position.xzyw;\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xzy);\\n    worldSpacePosition = model * vec4<f32>(position.xzy * dist, position.w);\\n  } \\n\\n  var output: VertexOutput;\\n  output.position = cameraViewProj * worldSpacePosition;\\n  return output;\\n}\\n\\nstruct FragOutputs {\\n  @builtin(frag_depth) depth: f32,\\n  @location(0) color: vec4f,\\n}\\n\\nstruct FragInputs {\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: FragInputs) -> FragOutputs {\\n\\n  // set up frag color\\n  var fragColor: vec4<f32> = color - vec4<f32>(0.5, 0.5, 0.5, 0);\\n  if (fragColor.x < 0){ fragColor.x += 1;}\\n  if (fragColor.y < 0){ fragColor.y += 1;}\\n  if (fragColor.z < 0){ fragColor.z += 1;}\\n\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoords.xy / STRIPE_WIDTH;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    \\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n   \\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n\\n  }\\n\\n  var output: FragOutputs;\\n  output.color = fragColor;\\n  output.depth = inputs.fragCoords.z * 0.99999;\\n  return output;\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvbGluZVNoYWRlci53Z3NsIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSx3QkFBd0IsK0NBQStDLHNCQUFzQix5REFBeUQsdURBQXVELGdEQUFnRCw2Q0FBNkMsaUZBQWlGLGlFQUFpRSxxRUFBcUUsMkRBQTJELGlEQUFpRCxnQ0FBZ0MsbUNBQW1DLG1DQUFtQyw2RkFBNkYsbURBQW1ELG9EQUFvRCxzRUFBc0UsOEVBQThFLE1BQU0sK0JBQStCLDBEQUEwRCxrQkFBa0IsR0FBRyx3QkFBd0IscUVBQXFFLHVCQUF1QixnREFBZ0QsbUVBQW1FLDZGQUE2RiwwQkFBMEIsa0JBQWtCLDBCQUEwQixrQkFBa0IsMEJBQTBCLGtCQUFrQiw0RUFBNEUsaURBQWlELHFFQUFxRSwrREFBK0QscURBQXFELG9EQUFvRCxTQUFTLFVBQVUsMkNBQTJDLGlFQUFpRSwrREFBK0QscURBQXFELG9EQUFvRCxTQUFTLE9BQU8sOEJBQThCLDZCQUE2QixpREFBaUQsa0JBQWtCLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9yZW5kZXIvc2hhZGVycy9saW5lU2hhZGVyLndnc2w/MjU0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIlxcbnN0cnVjdCBWZXJ0ZXhPdXRwdXQge1xcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcbn1cXG5cXG4vLyBsb2NhbCB1bmlmb3JtcztcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IG1vZGVsIDogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBjb2xvciA6IHZlYzQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMikgdmFyPHVuaWZvcm0+IGZsYWdzOiBpMzI7XFxuQGdyb3VwKDApIEBiaW5kaW5nKDMpIHZhcjx1bmlmb3JtPiBpZDogaTMyO1xcblxcbi8vIGdsb2JhbCB1bmlmb3JtczpcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IGNhbWVyYVBvczogdmVjMzxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygxKSB2YXI8dW5pZm9ybT4gY2FtZXJhVmlld1Byb2o6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygyKSB2YXI8dW5pZm9ybT4gc2VsZWN0aW9uVHJhbnNmb3JtOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMSkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IHJlc29sdXRpb246IHZlYzI8ZjMyPjtcXG5cXG5jb25zdCBDT05TVEFOVF9TQ1JFRU5fU0laRV9CSVQ6IGkzMiA9IDEgPDwgMDtcXG5jb25zdCBIT1ZFUl9CSVQ6IGkzMiA9IDEgPDwgMTtcXG5jb25zdCBTRUxFQ1RFRF9CSVQ6IGkzMiA9IDEgPDwgMjtcXG5cXG5jb25zdCBTVFJJUEVfV0lEVEg6IGYzMiA9IDEwLjA7XFxuXFxuQHZlcnRleFxcbmZuIHZlcnRleE1haW4oXFxuICAgIEBsb2NhdGlvbigwKSBwb3NpdGlvbiA6IHZlYzQ8ZjMyPixcXG4gICAgKSAtPiBWZXJ0ZXhPdXRwdXRcXG57XFxuICB2YXIgd29ybGRTcGFjZVBvc2l0aW9uID0gbW9kZWwgKiBwb3NpdGlvbi54enl3O1xcblxcbiAgaWYgKChmbGFncyAmIENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVCkgIT0gMCkge1xcbiAgICB2YXIgZGlzdDogZjMyID0gZGlzdGFuY2Uod29ybGRTcGFjZVBvc2l0aW9uLnh5eiwgY2FtZXJhUG9zLnh6eSk7XFxuICAgIHdvcmxkU3BhY2VQb3NpdGlvbiA9IG1vZGVsICogdmVjNDxmMzI+KHBvc2l0aW9uLnh6eSAqIGRpc3QsIHBvc2l0aW9uLncpO1xcbiAgfSBcXG5cXG4gIHZhciBvdXRwdXQ6IFZlcnRleE91dHB1dDtcXG4gIG91dHB1dC5wb3NpdGlvbiA9IGNhbWVyYVZpZXdQcm9qICogd29ybGRTcGFjZVBvc2l0aW9uO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuc3RydWN0IEZyYWdPdXRwdXRzIHtcXG4gIEBidWlsdGluKGZyYWdfZGVwdGgpIGRlcHRoOiBmMzIsXFxuICBAbG9jYXRpb24oMCkgY29sb3I6IHZlYzRmLFxcbn1cXG5cXG5zdHJ1Y3QgRnJhZ0lucHV0cyB7XFxuICBAYnVpbHRpbihwb3NpdGlvbikgZnJhZ0Nvb3JkczogdmVjNDxmMzI+LFxcbn1cXG5cXG5AZnJhZ21lbnRcXG5mbiBmcmFnbWVudE1haW4oaW5wdXRzOiBGcmFnSW5wdXRzKSAtPiBGcmFnT3V0cHV0cyB7XFxuXFxuICAvLyBzZXQgdXAgZnJhZyBjb2xvclxcbiAgdmFyIGZyYWdDb2xvcjogdmVjNDxmMzI+ID0gY29sb3IgLSB2ZWM0PGYzMj4oMC41LCAwLjUsIDAuNSwgMCk7XFxuICBpZiAoZnJhZ0NvbG9yLnggPCAwKXsgZnJhZ0NvbG9yLnggKz0gMTt9XFxuICBpZiAoZnJhZ0NvbG9yLnkgPCAwKXsgZnJhZ0NvbG9yLnkgKz0gMTt9XFxuICBpZiAoZnJhZ0NvbG9yLnogPCAwKXsgZnJhZ0NvbG9yLnogKz0gMTt9XFxuXFxuICB2YXIgc2NhbGVkRnJhZ0Nvb3JkczogdmVjMjxmMzI+ID0gaW5wdXRzLmZyYWdDb29yZHMueHkgLyBTVFJJUEVfV0lEVEg7XFxuICBpZiAoKGZsYWdzICYgU0VMRUNURURfQklUKSA9PSBTRUxFQ1RFRF9CSVQpIHtcXG4gICAgXFxuICAgICAgdmFyIGV2ZW5YOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLngpLmZyYWN0IDwgMC41O1xcbiAgICAgIHZhciBldmVuWTogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy55KS5mcmFjdCA8IDAuNTtcXG4gICAgICBpZiAoKGV2ZW5YICYmICFldmVuWSkgfHwgKGV2ZW5ZICYmICFldmVuWCkpIHtcXG4gICAgICAgIGZyYWdDb2xvciA9IHZlYzQ8ZjMyPigxLjAsIDEuMCwgMC4wLCAxLjApO1xcbiAgICAgIH1cXG4gICBcXG4gIH1cXG4gIGlmICgoZmxhZ3MgJiBIT1ZFUl9CSVQpID09IEhPVkVSX0JJVCkge1xcblxcbiAgICAgIHZhciBldmVuWDogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy54KS5mcmFjdCA8IDAuNTtcXG4gICAgICB2YXIgZXZlblk6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueSkuZnJhY3QgPCAwLjU7XFxuICAgICAgaWYgKChldmVuWCAmJiAhZXZlblkpIHx8IChldmVuWSAmJiAhZXZlblgpKSB7XFxuICAgICAgICBmcmFnQ29sb3IgPSB2ZWM0PGYzMj4oMC4wLCAwLjAsIDEuMCwgMS4wKTtcXG4gICAgICB9XFxuXFxuICB9XFxuXFxuICB2YXIgb3V0cHV0OiBGcmFnT3V0cHV0cztcXG4gIG91dHB1dC5jb2xvciA9IGZyYWdDb2xvcjtcXG4gIG91dHB1dC5kZXB0aCA9IGlucHV0cy5mcmFnQ29vcmRzLnogKiAwLjk5OTk5O1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuXFxuXFxuXCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/shaders/lineShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/overlayMeshShader.wgsl":
/*!***************************************************!*\
  !*** ./src/render/shaders/overlayMeshShader.wgsl ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n    @location(0) @interpolate(linear) normal : vec4<f32>\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color : vec4<f32>;\\n@group(0) @binding(2) var<uniform> flags: i32;\\n@group(0) @binding(3) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> resolution: vec2<f32>;\\n// TODO: why is resolution.x 0? \\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) position : vec4<f32>,\\n    @location(1) normal : vec4<f32>\\n    ) -> VertexOutput\\n{\\n  var worldSpacePosition = model * position.xzyw;\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xzy);\\n    worldSpacePosition = model * vec4<f32>(position.xzy * dist, position.w);\\n  } \\n\\n  var output: VertexOutput;\\n  output.normal = normal.xzyw;\\n  output.position = cameraViewProj * worldSpacePosition;\\n  return output;\\n\\n}\\n\\n\\nstruct FragInputs {\\n  @location(0) @interpolate(linear) normal : vec4f,\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: FragInputs) -> @location(0) vec4f {\\n\\n  var normalizedNormal: vec3<f32> = normalize(inputs.normal.xyz);\\n  //var fragColor: vec4<f32> = vec4<f32>(normalizedNormal/2.0 + vec3<f32>(0.5, 0.5, 0.5), 1.0);\\n  var fragColor: vec4<f32> = color;\\n\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoords.xy / STRIPE_WIDTH;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    \\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n   \\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n\\n  }\\n  return fragColor;\\n\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvb3ZlcmxheU1lc2hTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0JBQXdCLHlHQUF5RyxzQkFBc0IseURBQXlELHVEQUF1RCxnREFBZ0QsNkNBQTZDLGlGQUFpRixpRUFBaUUscUVBQXFFLDJEQUEyRCxtRkFBbUYsZ0NBQWdDLG1DQUFtQyxtQ0FBbUMsa0lBQWtJLG1EQUFtRCxvREFBb0Qsc0VBQXNFLDhFQUE4RSxNQUFNLCtCQUErQixnQ0FBZ0MsMERBQTBELGtCQUFrQixLQUFLLHlCQUF5QixxR0FBcUcsMEVBQTBFLHFFQUFxRSxpR0FBaUcscUNBQXFDLDRFQUE0RSxpREFBaUQscUVBQXFFLCtEQUErRCxxREFBcUQsb0RBQW9ELFNBQVMsVUFBVSwyQ0FBMkMsaUVBQWlFLCtEQUErRCxxREFBcUQsb0RBQW9ELFNBQVMsT0FBTyxxQkFBcUIsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9zaGFkZXJzL292ZXJsYXlNZXNoU2hhZGVyLndnc2w/Mzc1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIlxcbnN0cnVjdCBWZXJ0ZXhPdXRwdXQge1xcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcbiAgICBAbG9jYXRpb24oMCkgQGludGVycG9sYXRlKGxpbmVhcikgbm9ybWFsIDogdmVjNDxmMzI+XFxufVxcblxcbi8vIGxvY2FsIHVuaWZvcm1zO1xcbkBncm91cCgwKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gbW9kZWwgOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IGNvbG9yIDogdmVjNDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygyKSB2YXI8dW5pZm9ybT4gZmxhZ3M6IGkzMjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IGlkOiBpMzI7XFxuXFxuLy8gZ2xvYmFsIHVuaWZvcm1zOlxcbkBncm91cCgxKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gY2FtZXJhUG9zOiB2ZWMzPGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBjYW1lcmFWaWV3UHJvajogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBzZWxlY3Rpb25UcmFuc2Zvcm06IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygzKSB2YXI8dW5pZm9ybT4gcmVzb2x1dGlvbjogdmVjMjxmMzI+O1xcbi8vIFRPRE86IHdoeSBpcyByZXNvbHV0aW9uLnggMD8gXFxuXFxuY29uc3QgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUOiBpMzIgPSAxIDw8IDA7XFxuY29uc3QgSE9WRVJfQklUOiBpMzIgPSAxIDw8IDE7XFxuY29uc3QgU0VMRUNURURfQklUOiBpMzIgPSAxIDw8IDI7XFxuXFxuY29uc3QgU1RSSVBFX1dJRFRIOiBmMzIgPSAxMC4wO1xcblxcbkB2ZXJ0ZXhcXG5mbiB2ZXJ0ZXhNYWluKFxcbiAgICBAbG9jYXRpb24oMCkgcG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuICAgIEBsb2NhdGlvbigxKSBub3JtYWwgOiB2ZWM0PGYzMj5cXG4gICAgKSAtPiBWZXJ0ZXhPdXRwdXRcXG57XFxuICB2YXIgd29ybGRTcGFjZVBvc2l0aW9uID0gbW9kZWwgKiBwb3NpdGlvbi54enl3O1xcblxcbiAgaWYgKChmbGFncyAmIENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVCkgIT0gMCkge1xcbiAgICB2YXIgZGlzdDogZjMyID0gZGlzdGFuY2Uod29ybGRTcGFjZVBvc2l0aW9uLnh5eiwgY2FtZXJhUG9zLnh6eSk7XFxuICAgIHdvcmxkU3BhY2VQb3NpdGlvbiA9IG1vZGVsICogdmVjNDxmMzI+KHBvc2l0aW9uLnh6eSAqIGRpc3QsIHBvc2l0aW9uLncpO1xcbiAgfSBcXG5cXG4gIHZhciBvdXRwdXQ6IFZlcnRleE91dHB1dDtcXG4gIG91dHB1dC5ub3JtYWwgPSBub3JtYWwueHp5dztcXG4gIG91dHB1dC5wb3NpdGlvbiA9IGNhbWVyYVZpZXdQcm9qICogd29ybGRTcGFjZVBvc2l0aW9uO1xcbiAgcmV0dXJuIG91dHB1dDtcXG5cXG59XFxuXFxuXFxuc3RydWN0IEZyYWdJbnB1dHMge1xcbiAgQGxvY2F0aW9uKDApIEBpbnRlcnBvbGF0ZShsaW5lYXIpIG5vcm1hbCA6IHZlYzRmLFxcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIGZyYWdDb29yZHM6IHZlYzQ8ZjMyPixcXG59XFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKGlucHV0czogRnJhZ0lucHV0cykgLT4gQGxvY2F0aW9uKDApIHZlYzRmIHtcXG5cXG4gIHZhciBub3JtYWxpemVkTm9ybWFsOiB2ZWMzPGYzMj4gPSBub3JtYWxpemUoaW5wdXRzLm5vcm1hbC54eXopO1xcbiAgLy92YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSB2ZWM0PGYzMj4obm9ybWFsaXplZE5vcm1hbC8yLjAgKyB2ZWMzPGYzMj4oMC41LCAwLjUsIDAuNSksIDEuMCk7XFxuICB2YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSBjb2xvcjtcXG5cXG4gIHZhciBzY2FsZWRGcmFnQ29vcmRzOiB2ZWMyPGYzMj4gPSBpbnB1dHMuZnJhZ0Nvb3Jkcy54eSAvIFNUUklQRV9XSURUSDtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICBcXG4gICAgICB2YXIgZXZlblg6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueCkuZnJhY3QgPCAwLjU7XFxuICAgICAgdmFyIGV2ZW5ZOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLnkpLmZyYWN0IDwgMC41O1xcbiAgICAgIGlmICgoZXZlblggJiYgIWV2ZW5ZKSB8fCAoZXZlblkgJiYgIWV2ZW5YKSkge1xcbiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDEuMCwgMS4wLCAwLjAsIDEuMCk7XFxuICAgICAgfVxcbiAgIFxcbiAgfVxcbiAgaWYgKChmbGFncyAmIEhPVkVSX0JJVCkgPT0gSE9WRVJfQklUKSB7XFxuXFxuICAgICAgdmFyIGV2ZW5YOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLngpLmZyYWN0IDwgMC41O1xcbiAgICAgIHZhciBldmVuWTogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy55KS5mcmFjdCA8IDAuNTtcXG4gICAgICBpZiAoKGV2ZW5YICYmICFldmVuWSkgfHwgKGV2ZW5ZICYmICFldmVuWCkpIHtcXG4gICAgICAgIGZyYWdDb2xvciA9IHZlYzQ8ZjMyPigwLjAsIDAuMCwgMS4wLCAxLjApO1xcbiAgICAgIH1cXG5cXG4gIH1cXG4gIHJldHVybiBmcmFnQ29sb3I7XFxuXFxufVxcblxcblxcblxcblwiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/shaders/overlayMeshShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/pointShader.wgsl":
/*!*********************************************!*\
  !*** ./src/render/shaders/pointShader.wgsl ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color : vec4<f32>;\\n@group(0) @binding(2) var<uniform> flags: i32;\\n@group(0) @binding(3) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> resolution: vec2<f32>;\\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) position : vec4<f32>,\\n    ) -> VertexOutput\\n{\\n  var worldSpacePosition = model * position.xzyw;\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xzy);\\n    worldSpacePosition = model * vec4<f32>(position.xzy * dist, position.w);\\n  } \\n\\n  var output: VertexOutput;\\n  output.position = cameraViewProj * model * worldSpacePosition;\\n  return output;\\n}\\n\\nstruct FragOutputs {\\n  @builtin(frag_depth) depth: f32,\\n  @location(0) color: vec4f,\\n}\\n\\nstruct FragInputs {\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: FragInputs) -> FragOutputs {\\n\\n  var fragColor: vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 1.0);\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoords.xy / STRIPE_WIDTH;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    \\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n   \\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n\\n  }\\n  var output: FragOutputs;\\n  output.color = fragColor;\\n  output.depth = inputs.fragCoords.z * 0.9999;\\n  return output;\\n}\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvcG9pbnRTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0JBQXdCLCtDQUErQyxzQkFBc0IseURBQXlELHVEQUF1RCxnREFBZ0QsNkNBQTZDLGlGQUFpRixpRUFBaUUscUVBQXFFLDJEQUEyRCxpREFBaUQsZ0NBQWdDLG1DQUFtQyxtQ0FBbUMsNkZBQTZGLG1EQUFtRCxvREFBb0Qsc0VBQXNFLDhFQUE4RSxNQUFNLCtCQUErQixrRUFBa0Usa0JBQWtCLEdBQUcsd0JBQXdCLHFFQUFxRSx1QkFBdUIsZ0RBQWdELG1FQUFtRSwrREFBK0QsMEVBQTBFLGlEQUFpRCxxRUFBcUUsK0RBQStELHFEQUFxRCxvREFBb0QsU0FBUyxVQUFVLDJDQUEyQyxpRUFBaUUsK0RBQStELHFEQUFxRCxvREFBb0QsU0FBUyxPQUFPLDRCQUE0Qiw2QkFBNkIsZ0RBQWdELGtCQUFrQixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3NoYWRlcnMvcG9pbnRTaGFkZXIud2dzbD82MGQ1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiXFxuc3RydWN0IFZlcnRleE91dHB1dCB7XFxuICBAYnVpbHRpbihwb3NpdGlvbikgcG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxufVxcblxcbi8vIGxvY2FsIHVuaWZvcm1zO1xcbkBncm91cCgwKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gbW9kZWwgOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IGNvbG9yIDogdmVjNDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygyKSB2YXI8dW5pZm9ybT4gZmxhZ3M6IGkzMjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IGlkOiBpMzI7XFxuXFxuLy8gZ2xvYmFsIHVuaWZvcm1zOlxcbkBncm91cCgxKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gY2FtZXJhUG9zOiB2ZWMzPGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBjYW1lcmFWaWV3UHJvajogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBzZWxlY3Rpb25UcmFuc2Zvcm06IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygzKSB2YXI8dW5pZm9ybT4gcmVzb2x1dGlvbjogdmVjMjxmMzI+O1xcblxcbmNvbnN0IENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVDogaTMyID0gMSA8PCAwO1xcbmNvbnN0IEhPVkVSX0JJVDogaTMyID0gMSA8PCAxO1xcbmNvbnN0IFNFTEVDVEVEX0JJVDogaTMyID0gMSA8PCAyO1xcblxcbmNvbnN0IFNUUklQRV9XSURUSDogZjMyID0gMTAuMDtcXG5cXG5AdmVydGV4XFxuZm4gdmVydGV4TWFpbihcXG4gICAgQGxvY2F0aW9uKDApIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcbiAgICApIC0+IFZlcnRleE91dHB1dFxcbntcXG4gIHZhciB3b3JsZFNwYWNlUG9zaXRpb24gPSBtb2RlbCAqIHBvc2l0aW9uLnh6eXc7XFxuXFxuICBpZiAoKGZsYWdzICYgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUKSAhPSAwKSB7XFxuICAgIHZhciBkaXN0OiBmMzIgPSBkaXN0YW5jZSh3b3JsZFNwYWNlUG9zaXRpb24ueHl6LCBjYW1lcmFQb3MueHp5KTtcXG4gICAgd29ybGRTcGFjZVBvc2l0aW9uID0gbW9kZWwgKiB2ZWM0PGYzMj4ocG9zaXRpb24ueHp5ICogZGlzdCwgcG9zaXRpb24udyk7XFxuICB9IFxcblxcbiAgdmFyIG91dHB1dDogVmVydGV4T3V0cHV0O1xcbiAgb3V0cHV0LnBvc2l0aW9uID0gY2FtZXJhVmlld1Byb2ogKiBtb2RlbCAqIHdvcmxkU3BhY2VQb3NpdGlvbjtcXG4gIHJldHVybiBvdXRwdXQ7XFxufVxcblxcbnN0cnVjdCBGcmFnT3V0cHV0cyB7XFxuICBAYnVpbHRpbihmcmFnX2RlcHRoKSBkZXB0aDogZjMyLFxcbiAgQGxvY2F0aW9uKDApIGNvbG9yOiB2ZWM0ZixcXG59XFxuXFxuc3RydWN0IEZyYWdJbnB1dHMge1xcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIGZyYWdDb29yZHM6IHZlYzQ8ZjMyPixcXG59XFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKGlucHV0czogRnJhZ0lucHV0cykgLT4gRnJhZ091dHB1dHMge1xcblxcbiAgdmFyIGZyYWdDb2xvcjogdmVjNDxmMzI+ID0gdmVjNDxmMzI+KDAuMCwgMC4wLCAwLjAsIDEuMCk7XFxuICB2YXIgc2NhbGVkRnJhZ0Nvb3JkczogdmVjMjxmMzI+ID0gaW5wdXRzLmZyYWdDb29yZHMueHkgLyBTVFJJUEVfV0lEVEg7XFxuICBpZiAoKGZsYWdzICYgU0VMRUNURURfQklUKSA9PSBTRUxFQ1RFRF9CSVQpIHtcXG4gICAgXFxuICAgICAgdmFyIGV2ZW5YOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLngpLmZyYWN0IDwgMC41O1xcbiAgICAgIHZhciBldmVuWTogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy55KS5mcmFjdCA8IDAuNTtcXG4gICAgICBpZiAoKGV2ZW5YICYmICFldmVuWSkgfHwgKGV2ZW5ZICYmICFldmVuWCkpIHtcXG4gICAgICAgIGZyYWdDb2xvciA9IHZlYzQ8ZjMyPigxLjAsIDEuMCwgMC4wLCAxLjApO1xcbiAgICAgIH1cXG4gICBcXG4gIH1cXG4gIGlmICgoZmxhZ3MgJiBIT1ZFUl9CSVQpID09IEhPVkVSX0JJVCkge1xcblxcbiAgICAgIHZhciBldmVuWDogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy54KS5mcmFjdCA8IDAuNTtcXG4gICAgICB2YXIgZXZlblk6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueSkuZnJhY3QgPCAwLjU7XFxuICAgICAgaWYgKChldmVuWCAmJiAhZXZlblkpIHx8IChldmVuWSAmJiAhZXZlblgpKSB7XFxuICAgICAgICBmcmFnQ29sb3IgPSB2ZWM0PGYzMj4oMC4wLCAwLjAsIDEuMCwgMS4wKTtcXG4gICAgICB9XFxuXFxuICB9XFxuICB2YXIgb3V0cHV0OiBGcmFnT3V0cHV0cztcXG4gIG91dHB1dC5jb2xvciA9IGZyYWdDb2xvcjtcXG4gIG91dHB1dC5kZXB0aCA9IGlucHV0cy5mcmFnQ29vcmRzLnogKiAwLjk5OTk7XFxuICByZXR1cm4gb3V0cHV0O1xcbn1cXG5cXG5cXG5cIiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/render/shaders/pointShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/triangleShader.wgsl":
/*!************************************************!*\
  !*** ./src/render/shaders/triangleShader.wgsl ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"struct VertexOutput {\\n  @builtin(position) position : vec4<f32>,\\n    @location(0) @interpolate(linear) normal : vec4<f32>\\n}\\n\\n// local uniforms;\\n@group(0) @binding(0) var<uniform> model : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color : vec4<f32>;\\n@group(0) @binding(2) var<uniform> flags: i32;\\n@group(0) @binding(3) var<uniform> id: i32;\\n\\n// global uniforms:\\n@group(1) @binding(0) var<uniform> cameraPos: vec3<f32>;\\n@group(1) @binding(1) var<uniform> cameraViewProj: mat4x4<f32>;\\n@group(1) @binding(2) var<uniform> selectionTransform: mat4x4<f32>;\\n@group(1) @binding(3) var<uniform> resolution: vec2<f32>;\\n// TODO: why is resolution.x 0? \\n\\nconst CONSTANT_SCREEN_SIZE_BIT: i32 = 1 << 0;\\nconst HOVER_BIT: i32 = 1 << 1;\\nconst SELECTED_BIT: i32 = 1 << 2;\\n\\nconst STRIPE_WIDTH: f32 = 10.0;\\n\\n@vertex\\nfn vertexMain(\\n    @location(0) position : vec4<f32>,\\n    @location(1) normal : vec4<f32>\\n    ) -> VertexOutput\\n{\\n  var worldSpacePosition = model * position.xzyw;\\n\\n  if ((flags & CONSTANT_SCREEN_SIZE_BIT) != 0) {\\n    var dist: f32 = distance(worldSpacePosition.xyz, cameraPos.xzy);\\n    worldSpacePosition = model * vec4<f32>(position.xzy * dist, position.w);\\n  } \\n\\n  var output: VertexOutput;\\n  output.normal = normal.xzyw;\\n  output.position = cameraViewProj * worldSpacePosition;\\n  return output;\\n}\\n\\n\\nstruct FragInputs {\\n  @location(0) @interpolate(linear) normal : vec4f,\\n  @builtin(position) fragCoords: vec4<f32>,\\n}\\n\\n@fragment\\nfn fragmentMain(inputs: FragInputs) -> @location(0) vec4f {\\n\\n  var normalizedNormal: vec3<f32> = normalize(inputs.normal.xyz);\\n  //var fragColor: vec4<f32> = vec4<f32>(normalizedNormal/2.0 + vec3<f32>(0.5, 0.5, 0.5), 1.0);\\n  var fragColor: vec4<f32> = color;\\n\\n  var scaledFragCoords: vec2<f32> = inputs.fragCoords.xy / STRIPE_WIDTH;\\n  if ((flags & SELECTED_BIT) == SELECTED_BIT) {\\n    \\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(1.0, 1.0, 0.0, 1.0);\\n      }\\n   \\n  }\\n  if ((flags & HOVER_BIT) == HOVER_BIT) {\\n\\n      var evenX: bool = modf(scaledFragCoords.x).fract < 0.5;\\n      var evenY: bool = modf(scaledFragCoords.y).fract < 0.5;\\n      if ((evenX && !evenY) || (evenY && !evenX)) {\\n        fragColor = vec4<f32>(0.0, 0.0, 1.0, 1.0);\\n      }\\n\\n  }\\n  return fragColor;\\n\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvdHJpYW5nbGVTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsc0JBQXNCLHlHQUF5RyxzQkFBc0IseURBQXlELHVEQUF1RCxnREFBZ0QsNkNBQTZDLGlGQUFpRixpRUFBaUUscUVBQXFFLDJEQUEyRCxtRkFBbUYsZ0NBQWdDLG1DQUFtQyxtQ0FBbUMsa0lBQWtJLG1EQUFtRCxvREFBb0Qsc0VBQXNFLDhFQUE4RSxNQUFNLCtCQUErQixnQ0FBZ0MsMERBQTBELGtCQUFrQixHQUFHLHlCQUF5QixxR0FBcUcsMEVBQTBFLHFFQUFxRSxpR0FBaUcscUNBQXFDLDRFQUE0RSxpREFBaUQscUVBQXFFLCtEQUErRCxxREFBcUQsb0RBQW9ELFNBQVMsVUFBVSwyQ0FBMkMsaUVBQWlFLCtEQUErRCxxREFBcUQsb0RBQW9ELFNBQVMsT0FBTyxxQkFBcUIsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9zaGFkZXJzL3RyaWFuZ2xlU2hhZGVyLndnc2w/ZDNkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcInN0cnVjdCBWZXJ0ZXhPdXRwdXQge1xcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcbiAgICBAbG9jYXRpb24oMCkgQGludGVycG9sYXRlKGxpbmVhcikgbm9ybWFsIDogdmVjNDxmMzI+XFxufVxcblxcbi8vIGxvY2FsIHVuaWZvcm1zO1xcbkBncm91cCgwKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gbW9kZWwgOiBtYXQ0eDQ8ZjMyPjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMSkgdmFyPHVuaWZvcm0+IGNvbG9yIDogdmVjNDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygyKSB2YXI8dW5pZm9ybT4gZmxhZ3M6IGkzMjtcXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMykgdmFyPHVuaWZvcm0+IGlkOiBpMzI7XFxuXFxuLy8gZ2xvYmFsIHVuaWZvcm1zOlxcbkBncm91cCgxKSBAYmluZGluZygwKSB2YXI8dW5pZm9ybT4gY2FtZXJhUG9zOiB2ZWMzPGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBjYW1lcmFWaWV3UHJvajogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDEpIEBiaW5kaW5nKDIpIHZhcjx1bmlmb3JtPiBzZWxlY3Rpb25UcmFuc2Zvcm06IG1hdDR4NDxmMzI+O1xcbkBncm91cCgxKSBAYmluZGluZygzKSB2YXI8dW5pZm9ybT4gcmVzb2x1dGlvbjogdmVjMjxmMzI+O1xcbi8vIFRPRE86IHdoeSBpcyByZXNvbHV0aW9uLnggMD8gXFxuXFxuY29uc3QgQ09OU1RBTlRfU0NSRUVOX1NJWkVfQklUOiBpMzIgPSAxIDw8IDA7XFxuY29uc3QgSE9WRVJfQklUOiBpMzIgPSAxIDw8IDE7XFxuY29uc3QgU0VMRUNURURfQklUOiBpMzIgPSAxIDw8IDI7XFxuXFxuY29uc3QgU1RSSVBFX1dJRFRIOiBmMzIgPSAxMC4wO1xcblxcbkB2ZXJ0ZXhcXG5mbiB2ZXJ0ZXhNYWluKFxcbiAgICBAbG9jYXRpb24oMCkgcG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuICAgIEBsb2NhdGlvbigxKSBub3JtYWwgOiB2ZWM0PGYzMj5cXG4gICAgKSAtPiBWZXJ0ZXhPdXRwdXRcXG57XFxuICB2YXIgd29ybGRTcGFjZVBvc2l0aW9uID0gbW9kZWwgKiBwb3NpdGlvbi54enl3O1xcblxcbiAgaWYgKChmbGFncyAmIENPTlNUQU5UX1NDUkVFTl9TSVpFX0JJVCkgIT0gMCkge1xcbiAgICB2YXIgZGlzdDogZjMyID0gZGlzdGFuY2Uod29ybGRTcGFjZVBvc2l0aW9uLnh5eiwgY2FtZXJhUG9zLnh6eSk7XFxuICAgIHdvcmxkU3BhY2VQb3NpdGlvbiA9IG1vZGVsICogdmVjNDxmMzI+KHBvc2l0aW9uLnh6eSAqIGRpc3QsIHBvc2l0aW9uLncpO1xcbiAgfSBcXG5cXG4gIHZhciBvdXRwdXQ6IFZlcnRleE91dHB1dDtcXG4gIG91dHB1dC5ub3JtYWwgPSBub3JtYWwueHp5dztcXG4gIG91dHB1dC5wb3NpdGlvbiA9IGNhbWVyYVZpZXdQcm9qICogd29ybGRTcGFjZVBvc2l0aW9uO1xcbiAgcmV0dXJuIG91dHB1dDtcXG59XFxuXFxuXFxuc3RydWN0IEZyYWdJbnB1dHMge1xcbiAgQGxvY2F0aW9uKDApIEBpbnRlcnBvbGF0ZShsaW5lYXIpIG5vcm1hbCA6IHZlYzRmLFxcbiAgQGJ1aWx0aW4ocG9zaXRpb24pIGZyYWdDb29yZHM6IHZlYzQ8ZjMyPixcXG59XFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKGlucHV0czogRnJhZ0lucHV0cykgLT4gQGxvY2F0aW9uKDApIHZlYzRmIHtcXG5cXG4gIHZhciBub3JtYWxpemVkTm9ybWFsOiB2ZWMzPGYzMj4gPSBub3JtYWxpemUoaW5wdXRzLm5vcm1hbC54eXopO1xcbiAgLy92YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSB2ZWM0PGYzMj4obm9ybWFsaXplZE5vcm1hbC8yLjAgKyB2ZWMzPGYzMj4oMC41LCAwLjUsIDAuNSksIDEuMCk7XFxuICB2YXIgZnJhZ0NvbG9yOiB2ZWM0PGYzMj4gPSBjb2xvcjtcXG5cXG4gIHZhciBzY2FsZWRGcmFnQ29vcmRzOiB2ZWMyPGYzMj4gPSBpbnB1dHMuZnJhZ0Nvb3Jkcy54eSAvIFNUUklQRV9XSURUSDtcXG4gIGlmICgoZmxhZ3MgJiBTRUxFQ1RFRF9CSVQpID09IFNFTEVDVEVEX0JJVCkge1xcbiAgICBcXG4gICAgICB2YXIgZXZlblg6IGJvb2wgPSBtb2RmKHNjYWxlZEZyYWdDb29yZHMueCkuZnJhY3QgPCAwLjU7XFxuICAgICAgdmFyIGV2ZW5ZOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLnkpLmZyYWN0IDwgMC41O1xcbiAgICAgIGlmICgoZXZlblggJiYgIWV2ZW5ZKSB8fCAoZXZlblkgJiYgIWV2ZW5YKSkge1xcbiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNDxmMzI+KDEuMCwgMS4wLCAwLjAsIDEuMCk7XFxuICAgICAgfVxcbiAgIFxcbiAgfVxcbiAgaWYgKChmbGFncyAmIEhPVkVSX0JJVCkgPT0gSE9WRVJfQklUKSB7XFxuXFxuICAgICAgdmFyIGV2ZW5YOiBib29sID0gbW9kZihzY2FsZWRGcmFnQ29vcmRzLngpLmZyYWN0IDwgMC41O1xcbiAgICAgIHZhciBldmVuWTogYm9vbCA9IG1vZGYoc2NhbGVkRnJhZ0Nvb3Jkcy55KS5mcmFjdCA8IDAuNTtcXG4gICAgICBpZiAoKGV2ZW5YICYmICFldmVuWSkgfHwgKGV2ZW5ZICYmICFldmVuWCkpIHtcXG4gICAgICAgIGZyYWdDb2xvciA9IHZlYzQ8ZjMyPigwLjAsIDAuMCwgMS4wLCAxLjApO1xcbiAgICAgIH1cXG5cXG4gIH1cXG4gIHJldHVybiBmcmFnQ29sb3I7XFxuXFxufVxcblxcblxcblxcblwiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/shaders/triangleShader.wgsl\n");

/***/ }),

/***/ "./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js":
/*!*****************************************************************!*\
  !*** ./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mat3: () => (/* binding */ mat3Impl),\n/* harmony export */   mat4: () => (/* binding */ mat4Impl),\n/* harmony export */   quat: () => (/* binding */ quatImpl),\n/* harmony export */   setDefaultType: () => (/* binding */ setDefaultType),\n/* harmony export */   utils: () => (/* binding */ utils),\n/* harmony export */   vec2: () => (/* binding */ vec2Impl),\n/* harmony export */   vec3: () => (/* binding */ vec3Impl),\n/* harmony export */   vec4: () => (/* binding */ vec4Impl)\n/* harmony export */ });\n/* wgpu-matrix@2.5.0, license MIT */\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nlet EPSILON = 0.000001;\n/**\n * Set the value for EPSILON for various checks\n * @param v - Value to use for EPSILON.\n * @returns previous value of EPSILON;\n */\nfunction setEpsilon(v) {\n    const old = EPSILON;\n    EPSILON = v;\n    return old;\n}\n/**\n * Convert degrees to radians\n * @param degrees - Angle in degrees\n * @returns angle converted to radians\n */\nfunction degToRad(degrees) {\n    return degrees * Math.PI / 180;\n}\n/**\n * Convert radians to degrees\n * @param radians - Angle in radians\n * @returns angle converted to degrees\n */\nfunction radToDeg(radians) {\n    return radians * 180 / Math.PI;\n}\n/**\n * Lerps between a and b via t\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @returns a + (b - a) * t\n */\nfunction lerp$4(a, b, t) {\n    return a + (b - a) * t;\n}\n/**\n * Compute the opposite of lerp. Given a and b and a value between\n * a and b returns a value between 0 and 1. 0 if a, 1 if b.\n * Note: no clamping is done.\n * @param a - start value\n * @param b - end value\n * @param v - value between a and b\n * @returns (v - a) / (b - a)\n */\nfunction inverseLerp(a, b, v) {\n    const d = b - a;\n    return (Math.abs(b - a) < EPSILON)\n        ? a\n        : (v - a) / d;\n}\n/**\n * Compute the euclidean modulo\n *\n * ```\n * // table for n / 3\n * -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5   <- n\n * ------------------------------------\n * -2  -1  -0  -2  -1   0,  1,  2,  0,  1,  2   <- n % 3\n *  1   2   0   1   2   0,  1,  2,  0,  1,  2   <- euclideanModule(n, 3)\n * ```\n *\n * @param n - dividend\n * @param m - divisor\n * @returns the euclidean modulo of n / m\n */\nfunction euclideanModulo(n, m) {\n    return ((n % m) + m) % m;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get EPSILON () { return EPSILON; },\n    setEpsilon: setEpsilon,\n    degToRad: degToRad,\n    radToDeg: radToDeg,\n    lerp: lerp$4,\n    inverseLerp: inverseLerp,\n    euclideanModulo: euclideanModulo\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec2 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec2. In other words you can do this\n *\n *     const v = vec2.cross(v1, v2);  // Creates a new Vec2 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec2.create();\n *     vec2.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec2.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType$2 = Float32Array;\n/**\n * Sets the type this library creates for a Vec2\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec2\n */\nfunction setDefaultType$6(ctor) {\n    const oldType = VecType$2;\n    VecType$2 = ctor;\n    return oldType;\n}\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values.\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Vec2's specified type\n * it would be faster to use\n *\n * ```\n * const v = vec2.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Vec2Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `vec2.create` is usually used\n * to create a Vec2 to be filled out as in\n *\n * ```\n * const sum = vec2.create();\n * vec2.add(v1, v2, sum);\n * ```\n *\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nfunction create$5(x = 0, y = 0) {\n    const dst = new VecType$2(2);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nconst fromValues$3 = create$5;\n/**\n * Sets the values of a Vec2\n * Also see {@link vec2.create} and {@link vec2.copy}\n *\n * @param x first value\n * @param y second value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$5(x, y, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = x;\n    dst[1] = y;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp$2(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add$3(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled$2(a, b, scale, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    return dst;\n}\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nfunction angle$2(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const bx = a[0];\n    const by = a[1];\n    const mag1 = Math.sqrt(ax * ax + ay * ay);\n    const mag2 = Math.sqrt(bx * bx + by * by);\n    const mag = mag1 * mag2;\n    const cosine = mag && dot$3(a, b) / mag;\n    return Math.acos(cosine);\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract$3(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub$3 = subtract$3;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately$5(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals$5(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$3(a, b, t, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV$2(a, b, t, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar$3(v, k, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale$5 = mulScalar$3;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar$3(v, k, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse$5(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert$4 = inverse$5;\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nfunction cross$1(a, b, dst) {\n    dst = dst || new VecType$2(3);\n    const z = a[0] * b[1] - a[1] * b[0];\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = z;\n    return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot$3(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length$3(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    return Math.sqrt(v0 * v0 + v1 * v1);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len$3 = length$3;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq$3(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    return v0 * v0 + v1 * v1;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq$3 = lengthSq$3;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance$2(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist$2 = distance$2;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq$2(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    return dx * dx + dy * dy;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq$2 = distanceSq$2;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize$3(v, dst) {\n    dst = dst || new VecType$2(2);\n    const v0 = v[0];\n    const v1 = v[1];\n    const len = Math.sqrt(v0 * v0 + v1 * v1);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate$4(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec2.clone})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy$5(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec2.copy})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone$5 = copy$5;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply$5(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul$5 = multiply$5;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div$2 = divide$2;\n/**\n * Creates a random unit vector * scale\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nfunction random$1(scale = 1, dst) {\n    dst = dst || new VecType$2(2);\n    const angle = Math.random() * 2 * Math.PI;\n    dst[0] = Math.cos(angle) * scale;\n    dst[1] = Math.sin(angle) * scale;\n    return dst;\n}\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero$2(dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = 0;\n    dst[1] = 0;\n    return dst;\n}\n/**\n * transform Vec2 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4$2(v, m, dst) {\n    dst = dst || new VecType$2(2);\n    const x = v[0];\n    const y = v[1];\n    dst[0] = x * m[0] + y * m[4] + m[12];\n    dst[1] = x * m[1] + y * m[5] + m[13];\n    return dst;\n}\n/**\n * Transforms vec4 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat3$1(v, m, dst) {\n    dst = dst || new VecType$2(2);\n    const x = v[0];\n    const y = v[1];\n    dst[0] = m[0] * x + m[4] * y + m[8];\n    dst[1] = m[1] * x + m[5] * y + m[9];\n    return dst;\n}\n\nvar vec2Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$5,\n    setDefaultType: setDefaultType$6,\n    fromValues: fromValues$3,\n    set: set$5,\n    ceil: ceil$2,\n    floor: floor$2,\n    round: round$2,\n    clamp: clamp$2,\n    add: add$3,\n    addScaled: addScaled$2,\n    angle: angle$2,\n    subtract: subtract$3,\n    sub: sub$3,\n    equalsApproximately: equalsApproximately$5,\n    equals: equals$5,\n    lerp: lerp$3,\n    lerpV: lerpV$2,\n    max: max$2,\n    min: min$2,\n    mulScalar: mulScalar$3,\n    scale: scale$5,\n    divScalar: divScalar$3,\n    inverse: inverse$5,\n    invert: invert$4,\n    cross: cross$1,\n    dot: dot$3,\n    length: length$3,\n    len: len$3,\n    lengthSq: lengthSq$3,\n    lenSq: lenSq$3,\n    distance: distance$2,\n    dist: dist$2,\n    distanceSq: distanceSq$2,\n    distSq: distSq$2,\n    normalize: normalize$3,\n    negate: negate$4,\n    copy: copy$5,\n    clone: clone$5,\n    multiply: multiply$5,\n    mul: mul$5,\n    divide: divide$2,\n    div: div$2,\n    random: random$1,\n    zero: zero$2,\n    transformMat4: transformMat4$2,\n    transformMat3: transformMat3$1\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * 3x3 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat3.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat3.create();\n *     mat3.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat3.identity();\n *     const trans = mat3.translation([1, 2, 3]);\n *     mat3.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType$1 = Float32Array;\n// This mess is because with Mat3 we have 3 unused elements.\n// For Float32Array and Float64Array that's not an issue\n// but for Array it's troublesome\nconst ctorMap = new Map([\n    [Float32Array, () => new Float32Array(12)],\n    [Float64Array, () => new Float64Array(12)],\n    [Array, () => new Array(12).fill(0)],\n]);\nlet newMat3 = ctorMap.get(Float32Array);\n/**\n * Sets the type this library creates for a Mat3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat3\n */\nfunction setDefaultType$5(ctor) {\n    const oldType = MatType$1;\n    MatType$1 = ctor;\n    newMat3 = ctorMap.get(ctor);\n    return oldType;\n}\n/**\n * Create a Mat3 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat3's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat3.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat3Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat3.create` is usually used\n * to create a Mat3 to be filled out as in\n *\n * ```\n * const m = mat3.create();\n * mat3.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @returns matrix created from values.\n */\nfunction create$4(v0, v1, v2, v3, v4, v5, v6, v7, v8) {\n    const dst = newMat3();\n    // to make the array homogenous\n    dst[3] = 0;\n    dst[7] = 0;\n    dst[11] = 0;\n    if (v0 !== undefined) {\n        dst[0] = v0;\n        if (v1 !== undefined) {\n            dst[1] = v1;\n            if (v2 !== undefined) {\n                dst[2] = v2;\n                if (v3 !== undefined) {\n                    dst[4] = v3;\n                    if (v4 !== undefined) {\n                        dst[5] = v4;\n                        if (v5 !== undefined) {\n                            dst[6] = v5;\n                            if (v6 !== undefined) {\n                                dst[8] = v6;\n                                if (v7 !== undefined) {\n                                    dst[9] = v7;\n                                    if (v8 !== undefined) {\n                                        dst[10] = v8;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dst;\n}\n/**\n * Sets the values of a Mat3\n * Also see {@link mat3.create} and {@link mat3.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 set from values.\n */\nfunction set$4(v0, v1, v2, v3, v4, v5, v6, v7, v8, dst) {\n    dst = dst || newMat3();\n    dst[0] = v0;\n    dst[1] = v1;\n    dst[2] = v2;\n    dst[3] = 0;\n    dst[4] = v3;\n    dst[5] = v4;\n    dst[6] = v5;\n    dst[7] = 0;\n    dst[8] = v6;\n    dst[9] = v7;\n    dst[10] = v8;\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Creates a Mat3 from the upper left 3x3 part of a Mat4\n * @param m4 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from m4\n */\nfunction fromMat4(m4, dst) {\n    dst = dst || newMat3();\n    dst[0] = m4[0];\n    dst[1] = m4[1];\n    dst[2] = m4[2];\n    dst[3] = 0;\n    dst[4] = m4[4];\n    dst[5] = m4[5];\n    dst[6] = m4[6];\n    dst[7] = 0;\n    dst[8] = m4[8];\n    dst[9] = m4[9];\n    dst[10] = m4[10];\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Creates a Mat3 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from q\n */\nfunction fromQuat$1(q, dst) {\n    dst = dst || newMat3();\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    dst[0] = 1 - yy - zz;\n    dst[1] = yx + wz;\n    dst[2] = zx - wy;\n    dst[3] = 0;\n    dst[4] = yx - wz;\n    dst[5] = 1 - xx - zz;\n    dst[6] = zy + wx;\n    dst[7] = 0;\n    dst[8] = zx + wy;\n    dst[9] = zy - wx;\n    dst[10] = 1 - xx - yy;\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nfunction negate$3(m, dst) {\n    dst = dst || newMat3();\n    dst[0] = -m[0];\n    dst[1] = -m[1];\n    dst[2] = -m[2];\n    dst[4] = -m[4];\n    dst[5] = -m[5];\n    dst[6] = -m[6];\n    dst[8] = -m[8];\n    dst[9] = -m[9];\n    dst[10] = -m[10];\n    return dst;\n}\n/**\n * Copies a matrix. (same as {@link mat3.clone})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nfunction copy$4(m, dst) {\n    dst = dst || newMat3();\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    return dst;\n}\n/**\n * Copies a matrix (same as {@link mat3.copy})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nconst clone$4 = copy$4;\n/**\n * Check if 2 matrices are approximately equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are approximately equal\n */\nfunction equalsApproximately$4(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[4] - b[4]) < EPSILON &&\n        Math.abs(a[5] - b[5]) < EPSILON &&\n        Math.abs(a[6] - b[6]) < EPSILON &&\n        Math.abs(a[8] - b[8]) < EPSILON &&\n        Math.abs(a[9] - b[9]) < EPSILON &&\n        Math.abs(a[10] - b[10]) < EPSILON;\n}\n/**\n * Check if 2 matrices are exactly equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are exactly equal\n */\nfunction equals$4(a, b) {\n    return a[0] === b[0] &&\n        a[1] === b[1] &&\n        a[2] === b[2] &&\n        a[4] === b[4] &&\n        a[5] === b[5] &&\n        a[6] === b[6] &&\n        a[8] === b[8] &&\n        a[9] === b[9] &&\n        a[10] === b[10];\n}\n/**\n * Creates a 3-by-3 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 3-by-3 identity matrix.\n */\nfunction identity$2(dst) {\n    dst = dst || newMat3();\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nfunction transpose$1(m, dst) {\n    dst = dst || newMat3();\n    if (dst === m) {\n        let t;\n        // 0 1 2\n        // 4 5 6\n        // 8 9 10\n        t = m[1];\n        m[1] = m[4];\n        m[4] = t;\n        t = m[2];\n        m[2] = m[8];\n        m[8] = t;\n        t = m[6];\n        m[6] = m[9];\n        m[9] = t;\n        return dst;\n    }\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    dst[0] = m00;\n    dst[1] = m10;\n    dst[2] = m20;\n    dst[4] = m01;\n    dst[5] = m11;\n    dst[6] = m21;\n    dst[8] = m02;\n    dst[9] = m12;\n    dst[10] = m22;\n    return dst;\n}\n/**\n * Computes the inverse of a 3-by-3 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nfunction inverse$4(m, dst) {\n    dst = dst || newMat3();\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const b01 = m22 * m11 - m12 * m21;\n    const b11 = -m22 * m10 + m12 * m20;\n    const b21 = m21 * m10 - m11 * m20;\n    const invDet = 1 / (m00 * b01 + m01 * b11 + m02 * b21);\n    dst[0] = b01 * invDet;\n    dst[1] = (-m22 * m01 + m02 * m21) * invDet;\n    dst[2] = (m12 * m01 - m02 * m11) * invDet;\n    dst[4] = b11 * invDet;\n    dst[5] = (m22 * m00 - m02 * m20) * invDet;\n    dst[6] = (-m12 * m00 + m02 * m10) * invDet;\n    dst[8] = b21 * invDet;\n    dst[9] = (-m21 * m00 + m01 * m20) * invDet;\n    dst[10] = (m11 * m00 - m01 * m10) * invDet;\n    return dst;\n}\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nfunction determinant$1(m) {\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    return m00 * (m11 * m22 - m21 * m12) -\n        m10 * (m01 * m22 - m21 * m02) +\n        m20 * (m01 * m12 - m11 * m02);\n}\n/**\n * Computes the inverse of a 3-by-3 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nconst invert$3 = inverse$4;\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nfunction multiply$4(a, b, dst) {\n    dst = dst || newMat3();\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[4 + 0];\n    const a11 = a[4 + 1];\n    const a12 = a[4 + 2];\n    const a20 = a[8 + 0];\n    const a21 = a[8 + 1];\n    const a22 = a[8 + 2];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b10 = b[4 + 0];\n    const b11 = b[4 + 1];\n    const b12 = b[4 + 2];\n    const b20 = b[8 + 0];\n    const b21 = b[8 + 1];\n    const b22 = b[8 + 2];\n    dst[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    dst[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    dst[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    dst[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    dst[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    dst[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    dst[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    dst[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    dst[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    return dst;\n}\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nconst mul$4 = multiply$4;\n/**\n * Sets the translation component of a 3-by-3 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nfunction setTranslation$1(a, v, dst) {\n    dst = dst || identity$2();\n    if (a !== dst) {\n        dst[0] = a[0];\n        dst[1] = a[1];\n        dst[2] = a[2];\n        dst[4] = a[4];\n        dst[5] = a[5];\n        dst[6] = a[6];\n    }\n    dst[8] = v[0];\n    dst[9] = v[1];\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Returns the translation component of a 3-by-3 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation$2(m, dst) {\n    dst = dst || create$5();\n    dst[0] = m[8];\n    dst[1] = m[9];\n    return dst;\n}\n/**\n * Returns an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y,\n * @returns The axis component of m.\n */\nfunction getAxis$2(m, axis, dst) {\n    dst = dst || create$5();\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    return dst;\n}\n/**\n * Sets an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nfunction setAxis$1(m, v, axis, dst) {\n    if (dst !== m) {\n        dst = copy$4(m, dst);\n    }\n    const off = axis * 4;\n    dst[off + 0] = v[0];\n    dst[off + 1] = v[1];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling$2(m, dst) {\n    dst = dst || create$5();\n    const xx = m[0];\n    const xy = m[1];\n    const yx = m[4];\n    const yy = m[5];\n    dst[0] = Math.sqrt(xx * xx + xy * xy);\n    dst[1] = Math.sqrt(yx * yx + yy * yy);\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which translates by the given vector v.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nfunction translation$1(v, dst) {\n    dst = dst || newMat3();\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[8] = v[0];\n    dst[9] = v[1];\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Translates the given 3-by-3 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nfunction translate$1(m, v, dst) {\n    dst = dst || newMat3();\n    const v0 = v[0];\n    const v1 = v[1];\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    if (m !== dst) {\n        dst[0] = m00;\n        dst[1] = m01;\n        dst[2] = m02;\n        dst[4] = m10;\n        dst[5] = m11;\n        dst[6] = m12;\n    }\n    dst[8] = m00 * v0 + m10 * v1 + m20;\n    dst[9] = m01 * v0 + m11 * v1 + m21;\n    dst[10] = m02 * v0 + m12 * v1 + m22;\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which rotates  by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotation$1(angleInRadians, dst) {\n    dst = dst || newMat3();\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = s;\n    dst[2] = 0;\n    dst[4] = -s;\n    dst[5] = c;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Rotates the given 3-by-3 matrix  by the given angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotate$1(m, angleInRadians, dst) {\n    dst = dst || newMat3();\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 + s * m10;\n    dst[1] = c * m01 + s * m11;\n    dst[2] = c * m02 + s * m12;\n    dst[4] = c * m10 - s * m00;\n    dst[5] = c * m11 - s * m01;\n    dst[6] = c * m12 - s * m02;\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     2 entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction scaling$1(v, dst) {\n    dst = dst || newMat3();\n    dst[0] = v[0];\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = v[1];\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of 2 entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction scale$4(m, v, dst) {\n    dst = dst || newMat3();\n    const v0 = v[0];\n    const v1 = v[1];\n    dst[0] = v0 * m[0 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2];\n    dst[4] = v1 * m[1 * 4 + 0];\n    dst[5] = v1 * m[1 * 4 + 1];\n    dst[6] = v1 * m[1 * 4 + 2];\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which scales uniformly in each dimension\n * @param s - Amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction uniformScaling$1(s, dst) {\n    dst = dst || newMat3();\n    dst[0] = s;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = s;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given.\n * @param m - The matrix to be modified.\n * @param s - Amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction uniformScale$1(m, s, dst) {\n    dst = dst || newMat3();\n    dst[0] = s * m[0 * 4 + 0];\n    dst[1] = s * m[0 * 4 + 1];\n    dst[2] = s * m[0 * 4 + 2];\n    dst[4] = s * m[1 * 4 + 0];\n    dst[5] = s * m[1 * 4 + 1];\n    dst[6] = s * m[1 * 4 + 2];\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n\nvar mat3Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    setDefaultType: setDefaultType$5,\n    create: create$4,\n    set: set$4,\n    fromMat4: fromMat4,\n    fromQuat: fromQuat$1,\n    negate: negate$3,\n    copy: copy$4,\n    clone: clone$4,\n    equalsApproximately: equalsApproximately$4,\n    equals: equals$4,\n    identity: identity$2,\n    transpose: transpose$1,\n    inverse: inverse$4,\n    determinant: determinant$1,\n    invert: invert$3,\n    multiply: multiply$4,\n    mul: mul$4,\n    setTranslation: setTranslation$1,\n    getTranslation: getTranslation$2,\n    getAxis: getAxis$2,\n    setAxis: setAxis$1,\n    getScaling: getScaling$2,\n    translation: translation$1,\n    translate: translate$1,\n    rotation: rotation$1,\n    rotate: rotate$1,\n    scaling: scaling$1,\n    scale: scale$4,\n    uniformScaling: uniformScaling$1,\n    uniformScale: uniformScale$1\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec3 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec3`. In other words you can do this\n *\n *     const v = vec3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec3.create();\n *     vec3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType$1 = Float32Array;\n/**\n * Sets the type this library creates for a Vec3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec3\n */\nfunction setDefaultType$4(ctor) {\n    const oldType = VecType$1;\n    VecType$1 = ctor;\n    return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nfunction create$3(x, y, z) {\n    const dst = new VecType$1(3);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a vec3; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nconst fromValues$2 = create$3;\n/**\n * Sets the values of a Vec3\n * Also see {@link vec3.create} and {@link vec3.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$3(x, y, z, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    dst[2] = Math.ceil(v[2]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    dst[2] = Math.floor(v[2]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    dst[2] = Math.round(v[2]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp$1(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    dst[2] = Math.min(max, Math.max(min, v[2]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add$2(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled$1(a, b, scale, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    dst[2] = a[2] + b[2] * scale;\n    return dst;\n}\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nfunction angle$1(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[0];\n    const by = a[1];\n    const bz = a[2];\n    const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n    const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n    const mag = mag1 * mag2;\n    const cosine = mag && dot$2(a, b) / mag;\n    return Math.acos(cosine);\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract$2(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub$2 = subtract$2;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately$3(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals$3(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$2(a, b, t, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV$1(a, b, t, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    dst[2] = a[2] + t[2] * (b[2] - a[2]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    dst[2] = Math.max(a[2], b[2]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    dst[2] = Math.min(a[2], b[2]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar$2(v, k, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale$3 = mulScalar$2;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar$2(v, k, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse$3(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    dst[2] = 1 / v[2];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert$2 = inverse$3;\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nfunction cross(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    const t1 = a[2] * b[0] - a[0] * b[2];\n    const t2 = a[0] * b[1] - a[1] * b[0];\n    dst[0] = a[1] * b[2] - a[2] * b[1];\n    dst[1] = t1;\n    dst[2] = t2;\n    return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot$2(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length$2(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len$2 = length$2;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq$2(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return v0 * v0 + v1 * v1 + v2 * v2;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq$2 = lengthSq$2;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance$1(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist$1 = distance$1;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq$1(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq$1 = distanceSq$1;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize$2(v, dst) {\n    dst = dst || new VecType$1(3);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate$2(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    dst[2] = -v[2];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec3.clone})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy$3(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    dst[2] = v[2];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec3.copy})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone$3 = copy$3;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply$3(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    dst[2] = a[2] * b[2];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul$3 = multiply$3;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    dst[2] = a[2] / b[2];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div$1 = divide$1;\n/**\n * Creates a random vector\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nfunction random(scale = 1, dst) {\n    dst = dst || new VecType$1(3);\n    const angle = Math.random() * 2 * Math.PI;\n    const z = Math.random() * 2 - 1;\n    const zScale = Math.sqrt(1 - z * z) * scale;\n    dst[0] = Math.cos(angle) * zScale;\n    dst[1] = Math.sin(angle) * zScale;\n    dst[2] = z * scale;\n    return dst;\n}\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero$1(dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    return dst;\n}\n/**\n * transform vec3 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4$1(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1;\n    dst[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    dst[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    dst[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return dst;\n}\n/**\n * Transform vec4 by upper 3x3 matrix inside 4x4 matrix.\n * @param v - The direction.\n * @param m - The matrix.\n * @param dst - optional Vec3 to store result. If not passed a new one is created.\n * @returns The transformed vector.\n */\nfunction transformMat4Upper3x3(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n    return dst;\n}\n/**\n * Transforms vec3 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat3(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    dst[0] = x * m[0] + y * m[4] + z * m[8];\n    dst[1] = x * m[1] + y * m[5] + z * m[9];\n    dst[2] = x * m[2] + y * m[6] + z * m[10];\n    return dst;\n}\n/**\n * Transforms vec3 by Quaternion\n * @param v - the vector to transform\n * @param q - the quaternion to transform by\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed\n */\nfunction transformQuat(v, q, dst) {\n    dst = dst || new VecType$1(3);\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const w2 = q[3] * 2;\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const uvX = qy * z - qz * y;\n    const uvY = qz * x - qx * z;\n    const uvZ = qx * y - qy * x;\n    dst[0] = x + uvX * w2 + (qy * uvZ - qz * uvY) * 2;\n    dst[1] = y + uvY * w2 + (qz * uvX - qx * uvZ) * 2;\n    dst[2] = z + uvZ * w2 + (qx * uvY - qy * uvX) * 2;\n    return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation$1(m, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nfunction getAxis$1(m, axis, dst) {\n    dst = dst || new VecType$1(3);\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling$1(m, dst) {\n    dst = dst || new VecType$1(3);\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n\nvar vec3Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$3,\n    setDefaultType: setDefaultType$4,\n    fromValues: fromValues$2,\n    set: set$3,\n    ceil: ceil$1,\n    floor: floor$1,\n    round: round$1,\n    clamp: clamp$1,\n    add: add$2,\n    addScaled: addScaled$1,\n    angle: angle$1,\n    subtract: subtract$2,\n    sub: sub$2,\n    equalsApproximately: equalsApproximately$3,\n    equals: equals$3,\n    lerp: lerp$2,\n    lerpV: lerpV$1,\n    max: max$1,\n    min: min$1,\n    mulScalar: mulScalar$2,\n    scale: scale$3,\n    divScalar: divScalar$2,\n    inverse: inverse$3,\n    invert: invert$2,\n    cross: cross,\n    dot: dot$2,\n    length: length$2,\n    len: len$2,\n    lengthSq: lengthSq$2,\n    lenSq: lenSq$2,\n    distance: distance$1,\n    dist: dist$1,\n    distanceSq: distanceSq$1,\n    distSq: distSq$1,\n    normalize: normalize$2,\n    negate: negate$2,\n    copy: copy$3,\n    clone: clone$3,\n    multiply: multiply$3,\n    mul: mul$3,\n    divide: divide$1,\n    div: div$1,\n    random: random,\n    zero: zero$1,\n    transformMat4: transformMat4$1,\n    transformMat4Upper3x3: transformMat4Upper3x3,\n    transformMat3: transformMat3,\n    transformQuat: transformQuat,\n    getTranslation: getTranslation$1,\n    getAxis: getAxis$1,\n    getScaling: getScaling$1\n});\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat4.create();\n *     mat4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat4.identity();\n *     const trans = mat4.translation([1, 2, 3]);\n *     mat4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType = Float32Array;\n/**\n * Sets the type this library creates for a Mat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat4\n */\nfunction setDefaultType$3(ctor) {\n    const oldType = MatType;\n    MatType = ctor;\n    return oldType;\n}\n/**\n * Create a Mat4 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat4's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat4.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat4Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat4.create` is usually used\n * to create a Mat4 to be filled out as in\n *\n * ```\n * const m = mat4.create();\n * mat4.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @returns created from values.\n */\nfunction create$2(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {\n    const dst = new MatType(16);\n    if (v0 !== undefined) {\n        dst[0] = v0;\n        if (v1 !== undefined) {\n            dst[1] = v1;\n            if (v2 !== undefined) {\n                dst[2] = v2;\n                if (v3 !== undefined) {\n                    dst[3] = v3;\n                    if (v4 !== undefined) {\n                        dst[4] = v4;\n                        if (v5 !== undefined) {\n                            dst[5] = v5;\n                            if (v6 !== undefined) {\n                                dst[6] = v6;\n                                if (v7 !== undefined) {\n                                    dst[7] = v7;\n                                    if (v8 !== undefined) {\n                                        dst[8] = v8;\n                                        if (v9 !== undefined) {\n                                            dst[9] = v9;\n                                            if (v10 !== undefined) {\n                                                dst[10] = v10;\n                                                if (v11 !== undefined) {\n                                                    dst[11] = v11;\n                                                    if (v12 !== undefined) {\n                                                        dst[12] = v12;\n                                                        if (v13 !== undefined) {\n                                                            dst[13] = v13;\n                                                            if (v14 !== undefined) {\n                                                                dst[14] = v14;\n                                                                if (v15 !== undefined) {\n                                                                    dst[15] = v15;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dst;\n}\n/**\n * Sets the values of a Mat4\n * Also see {@link mat4.create} and {@link mat4.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 created from values.\n */\nfunction set$2(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = v0;\n    dst[1] = v1;\n    dst[2] = v2;\n    dst[3] = v3;\n    dst[4] = v4;\n    dst[5] = v5;\n    dst[6] = v6;\n    dst[7] = v7;\n    dst[8] = v8;\n    dst[9] = v9;\n    dst[10] = v10;\n    dst[11] = v11;\n    dst[12] = v12;\n    dst[13] = v13;\n    dst[14] = v14;\n    dst[15] = v15;\n    return dst;\n}\n/**\n * Creates a Mat4 from a Mat3\n * @param m3 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from m3\n */\nfunction fromMat3(m3, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = m3[0];\n    dst[1] = m3[1];\n    dst[2] = m3[2];\n    dst[3] = 0;\n    dst[4] = m3[4];\n    dst[5] = m3[5];\n    dst[6] = m3[6];\n    dst[7] = 0;\n    dst[8] = m3[8];\n    dst[9] = m3[9];\n    dst[10] = m3[10];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a Mat4 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from q\n */\nfunction fromQuat(q, dst) {\n    dst = dst || new MatType(16);\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    dst[0] = 1 - yy - zz;\n    dst[1] = yx + wz;\n    dst[2] = zx - wy;\n    dst[3] = 0;\n    dst[4] = yx - wz;\n    dst[5] = 1 - xx - zz;\n    dst[6] = zy + wx;\n    dst[7] = 0;\n    dst[8] = zx + wy;\n    dst[9] = zy - wx;\n    dst[10] = 1 - xx - yy;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nfunction negate$1(m, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = -m[0];\n    dst[1] = -m[1];\n    dst[2] = -m[2];\n    dst[3] = -m[3];\n    dst[4] = -m[4];\n    dst[5] = -m[5];\n    dst[6] = -m[6];\n    dst[7] = -m[7];\n    dst[8] = -m[8];\n    dst[9] = -m[9];\n    dst[10] = -m[10];\n    dst[11] = -m[11];\n    dst[12] = -m[12];\n    dst[13] = -m[13];\n    dst[14] = -m[14];\n    dst[15] = -m[15];\n    return dst;\n}\n/**\n * Copies a matrix. (same as {@link mat4.clone})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nfunction copy$2(m, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n    return dst;\n}\n/**\n * Copies a matrix (same as {@link mat4.copy})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nconst clone$2 = copy$2;\n/**\n * Check if 2 matrices are approximately equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are approximately equal\n */\nfunction equalsApproximately$2(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON &&\n        Math.abs(a[4] - b[4]) < EPSILON &&\n        Math.abs(a[5] - b[5]) < EPSILON &&\n        Math.abs(a[6] - b[6]) < EPSILON &&\n        Math.abs(a[7] - b[7]) < EPSILON &&\n        Math.abs(a[8] - b[8]) < EPSILON &&\n        Math.abs(a[9] - b[9]) < EPSILON &&\n        Math.abs(a[10] - b[10]) < EPSILON &&\n        Math.abs(a[11] - b[11]) < EPSILON &&\n        Math.abs(a[12] - b[12]) < EPSILON &&\n        Math.abs(a[13] - b[13]) < EPSILON &&\n        Math.abs(a[14] - b[14]) < EPSILON &&\n        Math.abs(a[15] - b[15]) < EPSILON;\n}\n/**\n * Check if 2 matrices are exactly equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are exactly equal\n */\nfunction equals$2(a, b) {\n    return a[0] === b[0] &&\n        a[1] === b[1] &&\n        a[2] === b[2] &&\n        a[3] === b[3] &&\n        a[4] === b[4] &&\n        a[5] === b[5] &&\n        a[6] === b[6] &&\n        a[7] === b[7] &&\n        a[8] === b[8] &&\n        a[9] === b[9] &&\n        a[10] === b[10] &&\n        a[11] === b[11] &&\n        a[12] === b[12] &&\n        a[13] === b[13] &&\n        a[14] === b[14] &&\n        a[15] === b[15];\n}\n/**\n * Creates a 4-by-4 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 4-by-4 identity matrix.\n */\nfunction identity$1(dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nfunction transpose(m, dst) {\n    dst = dst || new MatType(16);\n    if (dst === m) {\n        let t;\n        t = m[1];\n        m[1] = m[4];\n        m[4] = t;\n        t = m[2];\n        m[2] = m[8];\n        m[8] = t;\n        t = m[3];\n        m[3] = m[12];\n        m[12] = t;\n        t = m[6];\n        m[6] = m[9];\n        m[9] = t;\n        t = m[7];\n        m[7] = m[13];\n        m[13] = t;\n        t = m[11];\n        m[11] = m[14];\n        m[14] = t;\n        return dst;\n    }\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    dst[0] = m00;\n    dst[1] = m10;\n    dst[2] = m20;\n    dst[3] = m30;\n    dst[4] = m01;\n    dst[5] = m11;\n    dst[6] = m21;\n    dst[7] = m31;\n    dst[8] = m02;\n    dst[9] = m12;\n    dst[10] = m22;\n    dst[11] = m32;\n    dst[12] = m03;\n    dst[13] = m13;\n    dst[14] = m23;\n    dst[15] = m33;\n    return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nfunction inverse$2(m, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    const tmp0 = m22 * m33;\n    const tmp1 = m32 * m23;\n    const tmp2 = m12 * m33;\n    const tmp3 = m32 * m13;\n    const tmp4 = m12 * m23;\n    const tmp5 = m22 * m13;\n    const tmp6 = m02 * m33;\n    const tmp7 = m32 * m03;\n    const tmp8 = m02 * m23;\n    const tmp9 = m22 * m03;\n    const tmp10 = m02 * m13;\n    const tmp11 = m12 * m03;\n    const tmp12 = m20 * m31;\n    const tmp13 = m30 * m21;\n    const tmp14 = m10 * m31;\n    const tmp15 = m30 * m11;\n    const tmp16 = m10 * m21;\n    const tmp17 = m20 * m11;\n    const tmp18 = m00 * m31;\n    const tmp19 = m30 * m01;\n    const tmp20 = m00 * m21;\n    const tmp21 = m20 * m01;\n    const tmp22 = m00 * m11;\n    const tmp23 = m10 * m01;\n    const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n        (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n    const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n        (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n    const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n        (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n    const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n        (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n    const d = 1 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n    dst[0] = d * t0;\n    dst[1] = d * t1;\n    dst[2] = d * t2;\n    dst[3] = d * t3;\n    dst[4] = d * ((tmp1 * m10 + tmp2 * m20 + tmp5 * m30) -\n        (tmp0 * m10 + tmp3 * m20 + tmp4 * m30));\n    dst[5] = d * ((tmp0 * m00 + tmp7 * m20 + tmp8 * m30) -\n        (tmp1 * m00 + tmp6 * m20 + tmp9 * m30));\n    dst[6] = d * ((tmp3 * m00 + tmp6 * m10 + tmp11 * m30) -\n        (tmp2 * m00 + tmp7 * m10 + tmp10 * m30));\n    dst[7] = d * ((tmp4 * m00 + tmp9 * m10 + tmp10 * m20) -\n        (tmp5 * m00 + tmp8 * m10 + tmp11 * m20));\n    dst[8] = d * ((tmp12 * m13 + tmp15 * m23 + tmp16 * m33) -\n        (tmp13 * m13 + tmp14 * m23 + tmp17 * m33));\n    dst[9] = d * ((tmp13 * m03 + tmp18 * m23 + tmp21 * m33) -\n        (tmp12 * m03 + tmp19 * m23 + tmp20 * m33));\n    dst[10] = d * ((tmp14 * m03 + tmp19 * m13 + tmp22 * m33) -\n        (tmp15 * m03 + tmp18 * m13 + tmp23 * m33));\n    dst[11] = d * ((tmp17 * m03 + tmp20 * m13 + tmp23 * m23) -\n        (tmp16 * m03 + tmp21 * m13 + tmp22 * m23));\n    dst[12] = d * ((tmp14 * m22 + tmp17 * m32 + tmp13 * m12) -\n        (tmp16 * m32 + tmp12 * m12 + tmp15 * m22));\n    dst[13] = d * ((tmp20 * m32 + tmp12 * m02 + tmp19 * m22) -\n        (tmp18 * m22 + tmp21 * m32 + tmp13 * m02));\n    dst[14] = d * ((tmp18 * m12 + tmp23 * m32 + tmp15 * m02) -\n        (tmp22 * m32 + tmp14 * m02 + tmp19 * m12));\n    dst[15] = d * ((tmp22 * m22 + tmp16 * m02 + tmp21 * m12) -\n        (tmp20 * m12 + tmp23 * m22 + tmp17 * m02));\n    return dst;\n}\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nfunction determinant(m) {\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    const tmp0 = m22 * m33;\n    const tmp1 = m32 * m23;\n    const tmp2 = m12 * m33;\n    const tmp3 = m32 * m13;\n    const tmp4 = m12 * m23;\n    const tmp5 = m22 * m13;\n    const tmp6 = m02 * m33;\n    const tmp7 = m32 * m03;\n    const tmp8 = m02 * m23;\n    const tmp9 = m22 * m03;\n    const tmp10 = m02 * m13;\n    const tmp11 = m12 * m03;\n    const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n        (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n    const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n        (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n    const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n        (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n    const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n        (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n    return m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nconst invert$1 = inverse$2;\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nfunction multiply$2(a, b, dst) {\n    dst = dst || new MatType(16);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4 + 0];\n    const a11 = a[4 + 1];\n    const a12 = a[4 + 2];\n    const a13 = a[4 + 3];\n    const a20 = a[8 + 0];\n    const a21 = a[8 + 1];\n    const a22 = a[8 + 2];\n    const a23 = a[8 + 3];\n    const a30 = a[12 + 0];\n    const a31 = a[12 + 1];\n    const a32 = a[12 + 2];\n    const a33 = a[12 + 3];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4 + 0];\n    const b11 = b[4 + 1];\n    const b12 = b[4 + 2];\n    const b13 = b[4 + 3];\n    const b20 = b[8 + 0];\n    const b21 = b[8 + 1];\n    const b22 = b[8 + 2];\n    const b23 = b[8 + 3];\n    const b30 = b[12 + 0];\n    const b31 = b[12 + 1];\n    const b32 = b[12 + 2];\n    const b33 = b[12 + 3];\n    dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n    dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n    dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n    dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n    dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n    dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n    dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n    dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n    dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n    dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n    dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n    dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n    dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n    dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n    dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n    dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n    return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nconst mul$2 = multiply$2;\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nfunction setTranslation(a, v, dst) {\n    dst = dst || identity$1();\n    if (a !== dst) {\n        dst[0] = a[0];\n        dst[1] = a[1];\n        dst[2] = a[2];\n        dst[3] = a[3];\n        dst[4] = a[4];\n        dst[5] = a[5];\n        dst[6] = a[6];\n        dst[7] = a[7];\n        dst[8] = a[8];\n        dst[9] = a[9];\n        dst[10] = a[10];\n        dst[11] = a[11];\n    }\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation(m, dst) {\n    dst = dst || create$3();\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nfunction getAxis(m, axis, dst) {\n    dst = dst || create$3();\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y, 2 = z;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nfunction setAxis(a, v, axis, dst) {\n    if (dst !== a) {\n        dst = copy$2(a, dst);\n    }\n    const off = axis * 4;\n    dst[off + 0] = v[0];\n    dst[off + 1] = v[1];\n    dst[off + 2] = v[2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling(m, dst) {\n    dst = dst || create$3();\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n *\n * Note: If you pass `Infinity` for zFar then it will produce a projection matrix\n * returns -Infinity for Z when transforming coordinates with Z <= 0 and +Infinity for Z\n * otherwise.\n *\n * @param fieldOfViewYInRadians - The camera angle from top to bottom (in radians).\n * @param aspect - The aspect ratio width / height.\n * @param zNear - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param zFar - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The perspective matrix.\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n    dst = dst || new MatType(16);\n    const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n    dst[0] = f / aspect;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = f;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[11] = -1;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[15] = 0;\n    if (zFar === Infinity) {\n        dst[10] = -1;\n        dst[14] = -zNear;\n    }\n    else {\n        const rangeInv = 1 / (zNear - zFar);\n        dst[10] = zFar * rangeInv;\n        dst[14] = zFar * zNear * rangeInv;\n    }\n    return dst;\n}\n/**\n * Computes a 4-by-4 orthogonal transformation matrix that transforms from\n * the given the left, right, bottom, and top dimensions to -1 +1 in x, and y\n * and 0 to +1 in z.\n * @param left - Left side of the near clipping plane viewport.\n * @param right - Right side of the near clipping plane viewport.\n * @param bottom - Bottom of the near clipping plane viewport.\n * @param top - Top of the near clipping plane viewport.\n * @param near - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param far - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The orthographic projection matrix.\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 2 / (right - left);\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 2 / (top - bottom);\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1 / (near - far);\n    dst[11] = 0;\n    dst[12] = (right + left) / (left - right);\n    dst[13] = (top + bottom) / (bottom - top);\n    dst[14] = near / (near - far);\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param left - The x coordinate of the left plane of the box.\n * @param right - The x coordinate of the right plane of the box.\n * @param bottom - The y coordinate of the bottom plane of the box.\n * @param top - The y coordinate of the right plane of the box.\n * @param near - The negative z coordinate of the near plane of the box.\n * @param far - The negative z coordinate of the far plane of the box.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The perspective projection matrix.\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n    const dx = (right - left);\n    const dy = (top - bottom);\n    const dz = (near - far);\n    dst[0] = 2 * near / dx;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 2 * near / dy;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = (left + right) / dx;\n    dst[9] = (top + bottom) / dy;\n    dst[10] = far / dz;\n    dst[11] = -1;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = near * far / dz;\n    dst[15] = 0;\n    return dst;\n}\nlet xAxis;\nlet yAxis;\nlet zAxis;\n/**\n * Computes a 4-by-4 aim transformation.\n *\n * This is a matrix which positions an object aiming down positive Z.\n * toward the target.\n *\n * Note: this is **NOT** the inverse of lookAt as lookAt looks at negative Z.\n *\n * @param position - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nfunction aim(position, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(target, position, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = xAxis[1];\n    dst[2] = xAxis[2];\n    dst[3] = 0;\n    dst[4] = yAxis[0];\n    dst[5] = yAxis[1];\n    dst[6] = yAxis[2];\n    dst[7] = 0;\n    dst[8] = zAxis[0];\n    dst[9] = zAxis[1];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = position[0];\n    dst[13] = position[1];\n    dst[14] = position[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 camera aim transformation.\n *\n * This is a matrix which positions an object aiming down negative Z.\n * toward the target.\n *\n * Note: this is the inverse of `lookAt`\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nfunction cameraAim(eye, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(eye, target, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = xAxis[1];\n    dst[2] = xAxis[2];\n    dst[3] = 0;\n    dst[4] = yAxis[0];\n    dst[5] = yAxis[1];\n    dst[6] = yAxis[2];\n    dst[7] = 0;\n    dst[8] = zAxis[0];\n    dst[9] = zAxis[1];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = eye[0];\n    dst[13] = eye[1];\n    dst[14] = eye[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 view transformation.\n *\n * This is a view matrix which transforms all other objects\n * to be in the space of the view defined by the parameters.\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The look-at matrix.\n */\nfunction lookAt(eye, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(eye, target, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = yAxis[0];\n    dst[2] = zAxis[0];\n    dst[3] = 0;\n    dst[4] = xAxis[1];\n    dst[5] = yAxis[1];\n    dst[6] = zAxis[1];\n    dst[7] = 0;\n    dst[8] = xAxis[2];\n    dst[9] = yAxis[2];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = -(xAxis[0] * eye[0] + xAxis[1] * eye[1] + xAxis[2] * eye[2]);\n    dst[13] = -(yAxis[0] * eye[0] + yAxis[1] * eye[1] + yAxis[2] * eye[2]);\n    dst[14] = -(zAxis[0] * eye[0] + zAxis[1] * eye[1] + zAxis[2] * eye[2]);\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nfunction translation(v, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nfunction translate(m, v, dst) {\n    dst = dst || new MatType(16);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m03 = m[3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    if (m !== dst) {\n        dst[0] = m00;\n        dst[1] = m01;\n        dst[2] = m02;\n        dst[3] = m03;\n        dst[4] = m10;\n        dst[5] = m11;\n        dst[6] = m12;\n        dst[7] = m13;\n        dst[8] = m20;\n        dst[9] = m21;\n        dst[10] = m22;\n        dst[11] = m23;\n    }\n    dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n    dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n    dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n    dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationX(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = c;\n    dst[6] = s;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = -s;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateX$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m10 = m[4];\n    const m11 = m[5];\n    const m12 = m[6];\n    const m13 = m[7];\n    const m20 = m[8];\n    const m21 = m[9];\n    const m22 = m[10];\n    const m23 = m[11];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[4] = c * m10 + s * m20;\n    dst[5] = c * m11 + s * m21;\n    dst[6] = c * m12 + s * m22;\n    dst[7] = c * m13 + s * m23;\n    dst[8] = c * m20 - s * m10;\n    dst[9] = c * m21 - s * m11;\n    dst[10] = c * m22 - s * m12;\n    dst[11] = c * m23 - s * m13;\n    if (m !== dst) {\n        dst[0] = m[0];\n        dst[1] = m[1];\n        dst[2] = m[2];\n        dst[3] = m[3];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationY(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = 0;\n    dst[2] = -s;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = s;\n    dst[9] = 0;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateY$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 - s * m20;\n    dst[1] = c * m01 - s * m21;\n    dst[2] = c * m02 - s * m22;\n    dst[3] = c * m03 - s * m23;\n    dst[8] = c * m20 + s * m00;\n    dst[9] = c * m21 + s * m01;\n    dst[10] = c * m22 + s * m02;\n    dst[11] = c * m23 + s * m03;\n    if (m !== dst) {\n        dst[4] = m[4];\n        dst[5] = m[5];\n        dst[6] = m[6];\n        dst[7] = m[7];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationZ(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = s;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = -s;\n    dst[5] = c;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateZ$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 + s * m10;\n    dst[1] = c * m01 + s * m11;\n    dst[2] = c * m02 + s * m12;\n    dst[3] = c * m03 + s * m13;\n    dst[4] = c * m10 - s * m00;\n    dst[5] = c * m11 - s * m01;\n    dst[6] = c * m12 - s * m02;\n    dst[7] = c * m13 - s * m03;\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n        dst[11] = m[11];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    const oneMinusCosine = 1 - c;\n    dst[0] = xx + (1 - xx) * c;\n    dst[1] = x * y * oneMinusCosine + z * s;\n    dst[2] = x * z * oneMinusCosine - y * s;\n    dst[3] = 0;\n    dst[4] = x * y * oneMinusCosine - z * s;\n    dst[5] = yy + (1 - yy) * c;\n    dst[6] = y * z * oneMinusCosine + x * s;\n    dst[7] = 0;\n    dst[8] = x * z * oneMinusCosine + y * s;\n    dst[9] = y * z * oneMinusCosine - x * s;\n    dst[10] = zz + (1 - zz) * c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle. (same as axisRotation)\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nconst rotation = axisRotation;\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    const oneMinusCosine = 1 - c;\n    const r00 = xx + (1 - xx) * c;\n    const r01 = x * y * oneMinusCosine + z * s;\n    const r02 = x * z * oneMinusCosine - y * s;\n    const r10 = x * y * oneMinusCosine - z * s;\n    const r11 = yy + (1 - yy) * c;\n    const r12 = y * z * oneMinusCosine + x * s;\n    const r20 = x * z * oneMinusCosine + y * s;\n    const r21 = y * z * oneMinusCosine - x * s;\n    const r22 = zz + (1 - zz) * c;\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m03 = m[3];\n    const m10 = m[4];\n    const m11 = m[5];\n    const m12 = m[6];\n    const m13 = m[7];\n    const m20 = m[8];\n    const m21 = m[9];\n    const m22 = m[10];\n    const m23 = m[11];\n    dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n    dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n    dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n    dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n    dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n    dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n    dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n    dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n    dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n    dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n    dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n    dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle. (same as rotate)\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nconst rotate = axisRotate;\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction scaling(v, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = v[0];\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = v[1];\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = v[2];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction scale$2(m, v, dst) {\n    dst = dst || new MatType(16);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dst[0] = v0 * m[0 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2];\n    dst[3] = v0 * m[0 * 4 + 3];\n    dst[4] = v1 * m[1 * 4 + 0];\n    dst[5] = v1 * m[1 * 4 + 1];\n    dst[6] = v1 * m[1 * 4 + 2];\n    dst[7] = v1 * m[1 * 4 + 3];\n    dst[8] = v2 * m[2 * 4 + 0];\n    dst[9] = v2 * m[2 * 4 + 1];\n    dst[10] = v2 * m[2 * 4 + 2];\n    dst[11] = v2 * m[2 * 4 + 3];\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales a uniform amount in each dimension.\n * @param s - the amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction uniformScaling(s, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = s;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = s;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = s;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Scales the given 4-by-4 matrix in each dimension by a uniform scale.\n * @param m - The matrix to be modified.\n * @param s - The amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction uniformScale(m, s, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = s * m[0 * 4 + 0];\n    dst[1] = s * m[0 * 4 + 1];\n    dst[2] = s * m[0 * 4 + 2];\n    dst[3] = s * m[0 * 4 + 3];\n    dst[4] = s * m[1 * 4 + 0];\n    dst[5] = s * m[1 * 4 + 1];\n    dst[6] = s * m[1 * 4 + 2];\n    dst[7] = s * m[1 * 4 + 3];\n    dst[8] = s * m[2 * 4 + 0];\n    dst[9] = s * m[2 * 4 + 1];\n    dst[10] = s * m[2 * 4 + 2];\n    dst[11] = s * m[2 * 4 + 3];\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n\nvar mat4Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    setDefaultType: setDefaultType$3,\n    create: create$2,\n    set: set$2,\n    fromMat3: fromMat3,\n    fromQuat: fromQuat,\n    negate: negate$1,\n    copy: copy$2,\n    clone: clone$2,\n    equalsApproximately: equalsApproximately$2,\n    equals: equals$2,\n    identity: identity$1,\n    transpose: transpose,\n    inverse: inverse$2,\n    determinant: determinant,\n    invert: invert$1,\n    multiply: multiply$2,\n    mul: mul$2,\n    setTranslation: setTranslation,\n    getTranslation: getTranslation,\n    getAxis: getAxis,\n    setAxis: setAxis,\n    getScaling: getScaling,\n    perspective: perspective,\n    ortho: ortho,\n    frustum: frustum,\n    aim: aim,\n    cameraAim: cameraAim,\n    lookAt: lookAt,\n    translation: translation,\n    translate: translate,\n    rotationX: rotationX,\n    rotateX: rotateX$1,\n    rotationY: rotationY,\n    rotateY: rotateY$1,\n    rotationZ: rotationZ,\n    rotateZ: rotateZ$1,\n    axisRotation: axisRotation,\n    rotation: rotation,\n    axisRotate: axisRotate,\n    rotate: rotate,\n    scaling: scaling,\n    scale: scale$2,\n    uniformScaling: uniformScaling,\n    uniformScale: uniformScale\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Quat4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Quat4`. In other words you can do this\n *\n *     const v = quat4.cross(v1, v2);  // Creates a new Quat4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = quat4.create();\n *     quat4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     quat4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet QuatType = Float32Array;\n/**\n * Sets the type this library creates for a Quat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Quat4\n */\nfunction setDefaultType$2(ctor) {\n    const oldType = QuatType;\n    QuatType = ctor;\n    return oldType;\n}\n/**\n * Creates a quat4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nfunction create$1(x, y, z, w) {\n    const dst = new QuatType(4);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n                if (w !== undefined) {\n                    dst[3] = w;\n                }\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a Quat; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nconst fromValues$1 = create$1;\n/**\n * Sets the values of a Quat\n * Also see {@link quat.create} and {@link quat.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$1(x, y, z, w, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    dst[3] = w;\n    return dst;\n}\n/**\n * Sets a quaternion from the given angle and  axis,\n * then returns it.\n *\n * @param axis - the axis to rotate around\n * @param angleInRadians - the angle\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The quaternion that represents the given axis and angle\n **/\nfunction fromAxisAngle(axis, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const s = Math.sin(halfAngle);\n    dst[0] = s * axis[0];\n    dst[1] = s * axis[1];\n    dst[2] = s * axis[2];\n    dst[3] = Math.cos(halfAngle);\n    return dst;\n}\n/**\n * Gets the rotation axis and angle\n * @param q - quaternion to compute from\n * @param dst - Vec3 to hold result. If not passed in a new one is created.\n * @return angle and axis\n */\nfunction toAxisAngle(q, dst) {\n    dst = dst || create$3(4);\n    const angle = Math.acos(q[3]) * 2;\n    const s = Math.sin(angle * 0.5);\n    if (s > EPSILON) {\n        dst[0] = q[0] / s;\n        dst[1] = q[1] / s;\n        dst[2] = q[2] / s;\n    }\n    else {\n        dst[0] = 1;\n        dst[1] = 0;\n        dst[2] = 0;\n    }\n    return { angle, axis: dst };\n}\n/**\n * Returns the angle in degrees between two rotations a and b.\n * @param a - quaternion a\n * @param b - quaternion b\n * @return angle in radians between the two quaternions\n */\nfunction angle(a, b) {\n    const d = dot$1(a, b);\n    return Math.acos(2 * d * d - 1);\n}\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction multiply$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const bw = b[3];\n    dst[0] = ax * bw + aw * bx + ay * bz - az * by;\n    dst[1] = ay * bw + aw * by + az * bx - ax * bz;\n    dst[2] = az * bw + aw * bz + ax * by - ay * bx;\n    dst[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return dst;\n}\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nconst mul$1 = multiply$1;\n/**\n * Rotates the given quaternion around the X axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateX(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const bx = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw + qw * bx;\n    dst[1] = qy * bw + qz * bx;\n    dst[2] = qz * bw - qy * bx;\n    dst[3] = qw * bw - qx * bx;\n    return dst;\n}\n/**\n * Rotates the given quaternion around the Y axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateY(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const by = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw - qz * by;\n    dst[1] = qy * bw + qw * by;\n    dst[2] = qz * bw + qx * by;\n    dst[3] = qw * bw - qy * by;\n    return dst;\n}\n/**\n * Rotates the given quaternion around the Z axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateZ(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const bz = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw + qy * bz;\n    dst[1] = qy * bw - qx * bz;\n    dst[2] = qz * bw + qw * bz;\n    dst[3] = qw * bw - qz * bz;\n    return dst;\n}\n/**\n * Spherically linear interpolate between two quaternions\n *\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction slerp(a, b, t, dst) {\n    dst = dst || new QuatType(4);\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    let bx = b[0];\n    let by = b[1];\n    let bz = b[2];\n    let bw = b[3];\n    let cosOmega = ax * bx + ay * by + az * bz + aw * bw;\n    if (cosOmega < 0) {\n        cosOmega = -cosOmega;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    let scale0;\n    let scale1;\n    if (1.0 - cosOmega > EPSILON) {\n        const omega = Math.acos(cosOmega);\n        const sinOmega = Math.sin(omega);\n        scale0 = Math.sin((1 - t) * omega) / sinOmega;\n        scale1 = Math.sin(t * omega) / sinOmega;\n    }\n    else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    dst[0] = scale0 * ax + scale1 * bx;\n    dst[1] = scale0 * ay + scale1 * by;\n    dst[2] = scale0 * az + scale1 * bz;\n    dst[3] = scale0 * aw + scale1 * bw;\n    return dst;\n}\n/**\n * Compute the inverse of a quaternion\n *\n * @param q - quaternion to compute the inverse of\n * @returns A quaternion that is the result of a * b\n */\nfunction inverse$1(q, dst) {\n    dst = dst || new QuatType(4);\n    const a0 = q[0];\n    const a1 = q[1];\n    const a2 = q[2];\n    const a3 = q[3];\n    const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    const invDot = dot ? 1 / dot : 0;\n    dst[0] = -a0 * invDot;\n    dst[1] = -a1 * invDot;\n    dst[2] = -a2 * invDot;\n    dst[3] = a3 * invDot;\n    return dst;\n}\n/**\n * Compute the conjugate of a quaternion\n * For quaternions with a magnitude of 1 (a unit quaternion)\n * this returns the same as the inverse but is faster to calculate.\n *\n * @param q - quaternion to compute the conjugate of.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The conjugate of q\n */\nfunction conjugate(q, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = -q[0];\n    dst[1] = -q[1];\n    dst[2] = -q[2];\n    dst[3] = q[3];\n    return dst;\n}\n/**\n * Creates a quaternion from the given rotation matrix.\n *\n * The created quaternion is not normalized.\n *\n * @param m - rotation matrix\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nfunction fromMat(m, dst) {\n    dst = dst || new QuatType(4);\n    /*\n    0 1 2\n    3 4 5\n    6 7 8\n  \n    0 1 2\n    4 5 6\n    8 9 10\n     */\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    const trace = m[0] + m[5] + m[10];\n    if (trace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        const root = Math.sqrt(trace + 1); // 2w\n        dst[3] = 0.5 * root;\n        const invRoot = 0.5 / root; // 1/(4w)\n        dst[0] = (m[6] - m[9]) * invRoot;\n        dst[1] = (m[8] - m[2]) * invRoot;\n        dst[2] = (m[1] - m[4]) * invRoot;\n    }\n    else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[5] > m[0]) {\n            i = 1;\n        }\n        if (m[10] > m[i * 4 + i]) {\n            i = 2;\n        }\n        const j = (i + 1) % 3;\n        const k = (i + 2) % 3;\n        const root = Math.sqrt(m[i * 4 + i] - m[j * 4 + j] - m[k * 4 + k] + 1.0);\n        dst[i] = 0.5 * root;\n        const invRoot = 0.5 / root;\n        dst[3] = (m[j * 4 + k] - m[k * 4 + j]) * invRoot;\n        dst[j] = (m[j * 4 + i] + m[i * 4 + j]) * invRoot;\n        dst[k] = (m[k * 4 + i] + m[i * 4 + k]) * invRoot;\n    }\n    return dst;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param xAngleInRadians - angle to rotate around X axis in radians.\n * @param yAngleInRadians - angle to rotate around Y axis in radians.\n * @param zAngleInRadians - angle to rotate around Z axis in radians.\n * @param order - order to apply euler angles\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion representing the same rotation as the euler angles applied in the given order\n */\nfunction fromEuler(xAngleInRadians, yAngleInRadians, zAngleInRadians, order, dst) {\n    dst = dst || new QuatType(4);\n    const xHalfAngle = xAngleInRadians * 0.5;\n    const yHalfAngle = yAngleInRadians * 0.5;\n    const zHalfAngle = zAngleInRadians * 0.5;\n    const sx = Math.sin(xHalfAngle);\n    const cx = Math.cos(xHalfAngle);\n    const sy = Math.sin(yHalfAngle);\n    const cy = Math.cos(yHalfAngle);\n    const sz = Math.sin(zHalfAngle);\n    const cz = Math.cos(zHalfAngle);\n    switch (order) {\n        case 'xyz':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'xzy':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        case 'yxz':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        case 'yzx':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'zxy':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'zyx':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        default:\n            throw new Error(`Unknown rotation order: ${order}`);\n    }\n    return dst;\n}\n/**\n * Copies a quaternion. (same as {@link quat.clone})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is a copy of q\n */\nfunction copy$1(q, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = q[0];\n    dst[1] = q[1];\n    dst[2] = q[2];\n    dst[3] = q[3];\n    return dst;\n}\n/**\n * Clones a quaternion. (same as {@link quat.copy})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A copy of q.\n */\nconst clone$1 = copy$1;\n/**\n * Adds two quaternions; assumes a and b have the same dimension.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the sum of a and b.\n */\nfunction add$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    dst[3] = a[3] + b[3];\n    return dst;\n}\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nfunction subtract$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    dst[3] = a[3] - b[3];\n    return dst;\n}\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nconst sub$1 = subtract$1;\n/**\n * Multiplies a quaternion by a scalar.\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nfunction mulScalar$1(v, k, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    dst[3] = v[3] * k;\n    return dst;\n}\n/**\n * Multiplies a quaternion by a scalar. (same as mulScalar)\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nconst scale$1 = mulScalar$1;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nfunction divScalar$1(v, k, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    dst[3] = v[3] / k;\n    return dst;\n}\n/**\n * Computes the dot product of two quaternions\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns dot product\n */\nfunction dot$1(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n/**\n * Performs linear interpolation on two quaternions.\n * Given quaternions a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param t - Interpolation coefficient.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$1(a, b, t, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    dst[3] = a[3] + t * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Computes the length of quaternion\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nfunction length$1(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n/**\n * Computes the length of quaternion (same as length)\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nconst len$1 = length$1;\n/**\n * Computes the square of the length of quaternion\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nfunction lengthSq$1(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n/**\n * Computes the square of the length of quaternion (same as lengthSq)\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nconst lenSq$1 = lengthSq$1;\n/**\n * Divides a quaternion by its Euclidean length and returns the quotient.\n * @param v - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The normalized quaternion.\n */\nfunction normalize$1(v, dst) {\n    dst = dst || new QuatType(4);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n        dst[3] = v3 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 0;\n    }\n    return dst;\n}\n/**\n * Check if 2 quaternions are approximately equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are approximately equal\n */\nfunction equalsApproximately$1(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON;\n}\n/**\n * Check if 2 quaternions are exactly equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are exactly equal\n */\nfunction equals$1(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Creates an identity quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns an identity quaternion\n */\nfunction identity(dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 1;\n    return dst;\n}\nlet tempVec3;\nlet xUnitVec3;\nlet yUnitVec3;\n/**\n * Computes a quaternion to represent the shortest rotation from one vector to another.\n *\n * @param aUnit - the start vector\n * @param bUnit - the end vector\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nfunction rotationTo(aUnit, bUnit, dst) {\n    dst = dst || new QuatType(4);\n    tempVec3 = tempVec3 || create$3();\n    xUnitVec3 = xUnitVec3 || create$3(1, 0, 0);\n    yUnitVec3 = yUnitVec3 || create$3(0, 1, 0);\n    const dot = dot$2(aUnit, bUnit);\n    if (dot < -0.999999) {\n        cross(xUnitVec3, aUnit, tempVec3);\n        if (len$2(tempVec3) < 0.000001) {\n            cross(yUnitVec3, aUnit, tempVec3);\n        }\n        normalize$2(tempVec3, tempVec3);\n        fromAxisAngle(tempVec3, Math.PI, dst);\n        return dst;\n    }\n    else if (dot > 0.999999) {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 1;\n        return dst;\n    }\n    else {\n        cross(aUnit, bUnit, tempVec3);\n        dst[0] = tempVec3[0];\n        dst[1] = tempVec3[1];\n        dst[2] = tempVec3[2];\n        dst[3] = 1 + dot;\n        return normalize$1(dst, dst);\n    }\n}\nlet tempQuat1;\nlet tempQuat2;\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param c - the third quaternion\n * @param d - the fourth quaternion\n * @param t - Interpolation coefficient 0 to 1\n * @returns result\n */\nfunction sqlerp(a, b, c, d, t, dst) {\n    dst = dst || new QuatType(4);\n    tempQuat1 = tempQuat1 || new QuatType(4);\n    tempQuat2 = tempQuat2 || new QuatType(4);\n    slerp(a, d, t, tempQuat1);\n    slerp(b, c, t, tempQuat2);\n    slerp(tempQuat1, tempQuat2, 2 * t * (1 - t), dst);\n    return dst;\n}\n\nvar quatImpl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$1,\n    setDefaultType: setDefaultType$2,\n    fromValues: fromValues$1,\n    set: set$1,\n    fromAxisAngle: fromAxisAngle,\n    toAxisAngle: toAxisAngle,\n    angle: angle,\n    multiply: multiply$1,\n    mul: mul$1,\n    rotateX: rotateX,\n    rotateY: rotateY,\n    rotateZ: rotateZ,\n    slerp: slerp,\n    inverse: inverse$1,\n    conjugate: conjugate,\n    fromMat: fromMat,\n    fromEuler: fromEuler,\n    copy: copy$1,\n    clone: clone$1,\n    add: add$1,\n    subtract: subtract$1,\n    sub: sub$1,\n    mulScalar: mulScalar$1,\n    scale: scale$1,\n    divScalar: divScalar$1,\n    dot: dot$1,\n    lerp: lerp$1,\n    length: length$1,\n    len: len$1,\n    lengthSq: lengthSq$1,\n    lenSq: lenSq$1,\n    normalize: normalize$1,\n    equalsApproximately: equalsApproximately$1,\n    equals: equals$1,\n    identity: identity,\n    rotationTo: rotationTo,\n    sqlerp: sqlerp\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec4`. In other words you can do this\n *\n *     const v = vec4.cross(v1, v2);  // Creates a new Vec4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec4.create();\n *     vec4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType = Float32Array;\n/**\n * Sets the type this library creates for a Vec4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec4\n */\nfunction setDefaultType$1(ctor) {\n    const oldType = VecType;\n    VecType = ctor;\n    return oldType;\n}\n/**\n * Creates a vec4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nfunction create(x, y, z, w) {\n    const dst = new VecType(4);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n                if (w !== undefined) {\n                    dst[3] = w;\n                }\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a vec4; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nconst fromValues = create;\n/**\n * Sets the values of a Vec4\n * Also see {@link vec4.create} and {@link vec4.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set(x, y, z, w, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    dst[3] = w;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    dst[2] = Math.ceil(v[2]);\n    dst[3] = Math.ceil(v[3]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    dst[2] = Math.floor(v[2]);\n    dst[3] = Math.floor(v[3]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    dst[2] = Math.round(v[2]);\n    dst[3] = Math.round(v[3]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    dst[2] = Math.min(max, Math.max(min, v[2]));\n    dst[3] = Math.min(max, Math.max(min, v[3]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    dst[3] = a[3] + b[3];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled(a, b, scale, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    dst[2] = a[2] + b[2] * scale;\n    dst[3] = a[3] + b[3] * scale;\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    dst[3] = a[3] - b[3];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub = subtract;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp(a, b, t, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    dst[3] = a[3] + t * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV(a, b, t, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    dst[2] = a[2] + t[2] * (b[2] - a[2]);\n    dst[3] = a[3] + t[3] * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    dst[2] = Math.max(a[2], b[2]);\n    dst[3] = Math.max(a[3], b[3]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    dst[2] = Math.min(a[2], b[2]);\n    dst[3] = Math.min(a[3], b[3]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar(v, k, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    dst[3] = v[3] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale = mulScalar;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar(v, k, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    dst[3] = v[3] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    dst[2] = 1 / v[2];\n    dst[3] = 1 / v[3];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert = inverse;\n/**\n * Computes the dot product of two vectors\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len = length;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq = lengthSq;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    const dw = a[3] - b[3];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist = distance;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    const dw = a[3] - b[3];\n    return dx * dx + dy * dy + dz * dz + dw * dw;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq = distanceSq;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize(v, dst) {\n    dst = dst || new VecType(4);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n        dst[3] = v3 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    dst[2] = -v[2];\n    dst[3] = -v[3];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec4.clone})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    dst[2] = v[2];\n    dst[3] = v[3];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec4.copy})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone = copy;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    dst[2] = a[2] * b[2];\n    dst[3] = a[3] * b[3];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul = multiply;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    dst[2] = a[2] / b[2];\n    dst[3] = a[3] / b[3];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div = divide;\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero(dst) {\n    dst = dst || new VecType(4);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    return dst;\n}\n/**\n * transform vec4 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec4 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4(v, m, dst) {\n    dst = dst || new VecType(4);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const w = v[3];\n    dst[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    dst[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    dst[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    dst[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return dst;\n}\n\nvar vec4Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create,\n    setDefaultType: setDefaultType$1,\n    fromValues: fromValues,\n    set: set,\n    ceil: ceil,\n    floor: floor,\n    round: round,\n    clamp: clamp,\n    add: add,\n    addScaled: addScaled,\n    subtract: subtract,\n    sub: sub,\n    equalsApproximately: equalsApproximately,\n    equals: equals,\n    lerp: lerp,\n    lerpV: lerpV,\n    max: max,\n    min: min,\n    mulScalar: mulScalar,\n    scale: scale,\n    divScalar: divScalar,\n    inverse: inverse,\n    invert: invert,\n    dot: dot,\n    length: length,\n    len: len,\n    lengthSq: lengthSq,\n    lenSq: lenSq,\n    distance: distance,\n    dist: dist,\n    distanceSq: distanceSq,\n    distSq: distSq,\n    normalize: normalize,\n    negate: negate,\n    copy: copy,\n    clone: clone,\n    multiply: multiply,\n    mul: mul,\n    divide: divide,\n    div: div,\n    zero: zero,\n    transformMat4: transformMat4\n});\n\n/**\n * Sets the type this library creates for all types\n *\n * example:\n *\n * ```\n * setDefaultType(Float64Array);\n * ```\n *\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n */\nfunction setDefaultType(ctor) {\n    setDefaultType$5(ctor);\n    setDefaultType$3(ctor);\n    setDefaultType$2(ctor);\n    setDefaultType$6(ctor);\n    setDefaultType$4(ctor);\n    setDefaultType$1(ctor);\n}\n\n\n//# sourceMappingURL=wgpu-matrix.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;