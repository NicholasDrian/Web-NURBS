/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cad.ts":
/*!********************!*\
  !*** ./src/cad.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INSTANCE: () => (/* binding */ INSTANCE)\n/* harmony export */ });\n/* harmony import */ var _render_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render/renderer */ \"./src/render/renderer.ts\");\n/* harmony import */ var _scene_scene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scene/scene */ \"./src/scene/scene.ts\");\n/* harmony import */ var _utils_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/timer */ \"./src/utils/timer.ts\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stats */ \"./src/stats.ts\");\n/* harmony import */ var _events_eventManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./events/eventManager */ \"./src/events/eventManager.ts\");\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mode */ \"./src/mode.ts\");\n/* harmony import */ var _commands_cli__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/cli */ \"./src/commands/cli.ts\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log */ \"./src/log.ts\");\n/* harmony import */ var _commands_commandManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/commandManager */ \"./src/commands/commandManager.ts\");\n/* harmony import */ var _tests_testScene1__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tests/testScene1 */ \"./src/tests/testScene1.ts\");\n/* harmony import */ var _window_windowManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./window/windowManager */ \"./src/window/windowManager.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\n\n/*\n  * Browser Based NURBS Modeling Software\n  * Inspired by Rhino, Vim\n  *\n  * By Nick Drian\n  *\n*/\nclass CAD {\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.windowManager = new _window_windowManager__WEBPACK_IMPORTED_MODULE_10__.WindowManager();\n            this.commandManager = new _commands_commandManager__WEBPACK_IMPORTED_MODULE_8__.CommandManager();\n            this.cli = new _commands_cli__WEBPACK_IMPORTED_MODULE_6__.CLI();\n            this.setMode(_mode__WEBPACK_IMPORTED_MODULE_5__.OperatingMode.Command);\n            this.renderer = new _render_renderer__WEBPACK_IMPORTED_MODULE_0__.Renderer();\n            yield this.renderer.init();\n            this.scene = new _scene_scene__WEBPACK_IMPORTED_MODULE_1__.Scene();\n            yield this.scene.init();\n            this.eventManager = new _events_eventManager__WEBPACK_IMPORTED_MODULE_4__.EventManager();\n            this.log = new _log__WEBPACK_IMPORTED_MODULE_7__.Log();\n            this.renderStats = new _stats__WEBPACK_IMPORTED_MODULE_3__.RenderStats();\n            (0,_tests_testScene1__WEBPACK_IMPORTED_MODULE_9__.addTestScene1)();\n        });\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (true) {\n                if (document.hasFocus()) {\n                    var frameTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    // update scene\n                    var sceneTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    this.scene.tick();\n                    this.renderStats.setSceneTime(sceneTimer.getTime());\n                    // render\n                    var renderTimer = new _utils_timer__WEBPACK_IMPORTED_MODULE_2__.Timer();\n                    yield this.renderer.render(this.scene);\n                    this.renderStats.setRenderTime(renderTimer.getTime());\n                    //stats\n                    this.renderStats.setFrameTime(frameTimer.getTime());\n                    // windows\n                    this.windowManager.tick();\n                }\n                else {\n                    yield new Promise(r => setTimeout(r, 100));\n                }\n            }\n        });\n    }\n    getMode() {\n        return this.operatingMode;\n    }\n    setMode(operatingMode) {\n        this.operatingMode = operatingMode;\n        if (this.operatingMode == _mode__WEBPACK_IMPORTED_MODULE_5__.OperatingMode.Command) {\n            this.cli.show();\n        }\n        else {\n            this.cli.hide();\n        }\n    }\n    getCli() {\n        return this.cli;\n    }\n    getStats() {\n        return this.renderStats;\n    }\n    getScene() {\n        return this.scene;\n    }\n    getRenderer() {\n        return this.renderer;\n    }\n    getLog() {\n        return this.log;\n    }\n    getCommandManager() {\n        return this.commandManager;\n    }\n    getWindowManager() {\n        return this.windowManager;\n    }\n}\nconst INSTANCE = new CAD();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDO0lBQzFCLENBQUM7SUFFTSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFTSxXQUFXO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRU0sTUFBTTtRQUNYLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNsQixDQUFDO0lBRU0saUJBQWlCO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUM3QixDQUFDO0lBRU0sZ0JBQWdCO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0NBRUY7QUFFTSxNQUFNLFFBQVEsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY2FkLnRzP2RkZTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVuZGVyZXIgfSBmcm9tIFwiLi9yZW5kZXIvcmVuZGVyZXJcIlxuaW1wb3J0IHsgU2NlbmUgfSBmcm9tIFwiLi9zY2VuZS9zY2VuZVwiO1xuaW1wb3J0IHsgVGltZXIgfSBmcm9tIFwiLi91dGlscy90aW1lclwiXG5pbXBvcnQgeyBSZW5kZXJTdGF0cyB9IGZyb20gXCIuL3N0YXRzXCJcbmltcG9ydCB7IEV2ZW50TWFuYWdlciB9IGZyb20gXCIuL2V2ZW50cy9ldmVudE1hbmFnZXJcIlxuaW1wb3J0IHsgT3BlcmF0aW5nTW9kZSB9IGZyb20gXCIuL21vZGVcIlxuaW1wb3J0IHsgQ0xJIH0gZnJvbSBcIi4vY29tbWFuZHMvY2xpXCJcbmltcG9ydCB7IExvZyB9IGZyb20gXCIuL2xvZ1wiO1xuaW1wb3J0IHsgQ29tbWFuZE1hbmFnZXIgfSBmcm9tIFwiLi9jb21tYW5kcy9jb21tYW5kTWFuYWdlclwiO1xuaW1wb3J0IHsgYWRkVGVzdFNjZW5lMSB9IGZyb20gXCIuL3Rlc3RzL3Rlc3RTY2VuZTFcIjtcbmltcG9ydCB7IFdpbmRvd01hbmFnZXIgfSBmcm9tIFwiLi93aW5kb3cvd2luZG93TWFuYWdlclwiO1xuXG4vKlxuICAqIEJyb3dzZXIgQmFzZWQgTlVSQlMgTW9kZWxpbmcgU29mdHdhcmVcbiAgKiBJbnNwaXJlZCBieSBSaGlubywgVmltXG4gICpcbiAgKiBCeSBOaWNrIERyaWFuXG4gICpcbiovXG5cbmNsYXNzIENBRCB7XG5cbiAgcHJpdmF0ZSByZW5kZXJlciE6IFJlbmRlcmVyO1xuICBwcml2YXRlIHNjZW5lITogU2NlbmU7XG4gIHByaXZhdGUgZXZlbnRNYW5hZ2VyITogRXZlbnRNYW5hZ2VyO1xuICBwcml2YXRlIGNvbW1hbmRNYW5hZ2VyITogQ29tbWFuZE1hbmFnZXI7XG4gIHByaXZhdGUgd2luZG93TWFuYWdlciE6IFdpbmRvd01hbmFnZXI7XG4gIHByaXZhdGUgcmVuZGVyU3RhdHMhOiBSZW5kZXJTdGF0cztcbiAgcHJpdmF0ZSBvcGVyYXRpbmdNb2RlITogT3BlcmF0aW5nTW9kZTtcbiAgcHJpdmF0ZSBjbGkhOiBDTEk7XG4gIHByaXZhdGUgbG9nITogTG9nXG5cbiAgcHVibGljIGFzeW5jIGluaXQoKSB7XG5cbiAgICB0aGlzLndpbmRvd01hbmFnZXIgPSBuZXcgV2luZG93TWFuYWdlcigpO1xuXG4gICAgdGhpcy5jb21tYW5kTWFuYWdlciA9IG5ldyBDb21tYW5kTWFuYWdlcigpO1xuICAgIHRoaXMuY2xpID0gbmV3IENMSSgpO1xuXG4gICAgdGhpcy5zZXRNb2RlKE9wZXJhdGluZ01vZGUuQ29tbWFuZCk7XG5cbiAgICB0aGlzLnJlbmRlcmVyID0gbmV3IFJlbmRlcmVyKCk7XG4gICAgYXdhaXQgdGhpcy5yZW5kZXJlci5pbml0KCk7XG5cbiAgICB0aGlzLnNjZW5lID0gbmV3IFNjZW5lKCk7XG4gICAgYXdhaXQgdGhpcy5zY2VuZS5pbml0KCk7XG5cbiAgICB0aGlzLmV2ZW50TWFuYWdlciA9IG5ldyBFdmVudE1hbmFnZXIoKTtcbiAgICB0aGlzLmxvZyA9IG5ldyBMb2coKTtcblxuICAgIHRoaXMucmVuZGVyU3RhdHMgPSBuZXcgUmVuZGVyU3RhdHMoKTtcblxuICAgIGFkZFRlc3RTY2VuZTEoKTtcblxuICB9XG5cbiAgcHVibGljIGFzeW5jIHJ1bigpIHtcblxuICAgIHdoaWxlICh0cnVlKSB7XG5cbiAgICAgIGlmIChkb2N1bWVudC5oYXNGb2N1cygpKSB7XG5cbiAgICAgICAgdmFyIGZyYW1lVGltZXIgPSBuZXcgVGltZXIoKTtcblxuICAgICAgICAvLyB1cGRhdGUgc2NlbmVcbiAgICAgICAgdmFyIHNjZW5lVGltZXIgPSBuZXcgVGltZXIoKTtcbiAgICAgICAgdGhpcy5zY2VuZS50aWNrKCk7XG4gICAgICAgIHRoaXMucmVuZGVyU3RhdHMuc2V0U2NlbmVUaW1lKHNjZW5lVGltZXIuZ2V0VGltZSgpKTtcblxuICAgICAgICAvLyByZW5kZXJcbiAgICAgICAgdmFyIHJlbmRlclRpbWVyID0gbmV3IFRpbWVyKCk7XG4gICAgICAgIGF3YWl0IHRoaXMucmVuZGVyZXIucmVuZGVyKHRoaXMuc2NlbmUpO1xuICAgICAgICB0aGlzLnJlbmRlclN0YXRzLnNldFJlbmRlclRpbWUocmVuZGVyVGltZXIuZ2V0VGltZSgpKTtcblxuICAgICAgICAvL3N0YXRzXG4gICAgICAgIHRoaXMucmVuZGVyU3RhdHMuc2V0RnJhbWVUaW1lKGZyYW1lVGltZXIuZ2V0VGltZSgpKTtcblxuICAgICAgICAvLyB3aW5kb3dzXG4gICAgICAgIHRoaXMud2luZG93TWFuYWdlci50aWNrKCk7XG5cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDEwMCkpO1xuXG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxuICBwdWJsaWMgZ2V0TW9kZSgpOiBPcGVyYXRpbmdNb2RlIHtcbiAgICByZXR1cm4gdGhpcy5vcGVyYXRpbmdNb2RlO1xuICB9XG5cbiAgcHVibGljIHNldE1vZGUob3BlcmF0aW5nTW9kZTogT3BlcmF0aW5nTW9kZSk6IHZvaWQge1xuICAgIHRoaXMub3BlcmF0aW5nTW9kZSA9IG9wZXJhdGluZ01vZGU7XG5cbiAgICBpZiAodGhpcy5vcGVyYXRpbmdNb2RlID09IE9wZXJhdGluZ01vZGUuQ29tbWFuZCkge1xuICAgICAgdGhpcy5jbGkuc2hvdygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNsaS5oaWRlKCk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGdldENsaSgpOiBDTEkge1xuICAgIHJldHVybiB0aGlzLmNsaTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdGF0cygpOiBSZW5kZXJTdGF0cyB7XG4gICAgcmV0dXJuIHRoaXMucmVuZGVyU3RhdHM7XG4gIH1cblxuICBwdWJsaWMgZ2V0U2NlbmUoKTogU2NlbmUge1xuICAgIHJldHVybiB0aGlzLnNjZW5lO1xuICB9XG5cbiAgcHVibGljIGdldFJlbmRlcmVyKCk6IFJlbmRlcmVyIHtcbiAgICByZXR1cm4gdGhpcy5yZW5kZXJlcjtcbiAgfVxuXG4gIHB1YmxpYyBnZXRMb2coKTogTG9nIHtcbiAgICByZXR1cm4gdGhpcy5sb2c7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q29tbWFuZE1hbmFnZXIoKTogQ29tbWFuZE1hbmFnZXIge1xuICAgIHJldHVybiB0aGlzLmNvbW1hbmRNYW5hZ2VyO1xuICB9XG5cbiAgcHVibGljIGdldFdpbmRvd01hbmFnZXIoKTogV2luZG93TWFuYWdlciB7XG4gICAgcmV0dXJuIHRoaXMud2luZG93TWFuYWdlcjtcbiAgfVxuXG59XG5cbmV4cG9ydCBjb25zdCBJTlNUQU5DRSA9IG5ldyBDQUQoKTtcblxuXG5cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/cad.ts\n");

/***/ }),

/***/ "./src/commands/cli.ts":
/*!*****************************!*\
  !*** ./src/commands/cli.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLI: () => (/* binding */ CLI)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass CLI {\n    constructor() {\n        this.element = document.getElementById(\"cli\");\n        this.input = \"\";\n        this.render();\n    }\n    show() {\n        this.element.hidden = false;\n    }\n    hide() {\n        this.element.hidden = true;\n    }\n    processKeyDownEvent(event) {\n        if (event.key == \"Enter\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleInput(this.input);\n            this.clearInput();\n        }\n        else if (event.key == \"Escape\") {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleInput(\"Escape\");\n            this.clearInput();\n        }\n        else if (event.key == \"Backspace\") {\n            this.deleteLast();\n        }\n        else if (event.key.length == 1) {\n            this.addChar(event.key);\n        }\n    }\n    hasInput() {\n        return this.input != \"\";\n    }\n    clearInput() {\n        this.input = \"\";\n        this.render();\n    }\n    render() {\n        this.element.innerText = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().getInstructions() + this.input;\n    }\n    deleteLast() {\n        if (this.input.length) {\n            this.input = this.input.slice(0, -1);\n            this.render();\n        }\n    }\n    addChar(char) {\n        this.input += char;\n        this.render();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY2xpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBRTNCLE1BQU0sR0FBRztJQUtaO1FBQ0ksSUFBSSxDQUFDLE9BQU8sR0FBb0IsUUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVNLElBQUk7UUFDUCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDaEMsQ0FBQztJQUNNLElBQUk7UUFDUCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDL0IsQ0FBQztJQUVNLG1CQUFtQixDQUFDLEtBQW9CO1FBQzNDLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxPQUFPLEVBQUU7WUFDdEIsMENBQVEsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckQsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ3JCO2FBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBRTtZQUM5QiwwQ0FBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ25ELElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUNyQjthQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxXQUFXLEVBQUU7WUFDakMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ3JCO2FBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDOUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDM0I7SUFDTCxDQUFDO0lBR00sUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVNLFVBQVU7UUFDYixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVNLE1BQU07UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsZUFBZSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN6RixDQUFDO0lBRU8sVUFBVTtRQUNkLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDbkIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDakI7SUFDTCxDQUFDO0lBRU8sT0FBTyxDQUFDLElBQVk7UUFDeEIsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2xCLENBQUM7Q0FHSiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NsaS50cz9hNWMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuXG5leHBvcnQgY2xhc3MgQ0xJIHtcblxuICAgIHByaXZhdGUgZWxlbWVudDogSFRNTERpdkVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBpbnB1dDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IDxIVE1MRGl2RWxlbWVudD4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjbGlcIik7XG4gICAgICAgIHRoaXMuaW5wdXQgPSBcIlwiO1xuICAgICAgICB0aGlzLnJlbmRlcigpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gZmFsc2U7XG4gICAgfVxuICAgIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsZW1lbnQuaGlkZGVuID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcHJvY2Vzc0tleURvd25FdmVudChldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICBpZiAoZXZlbnQua2V5ID09IFwiRW50ZXJcIikge1xuICAgICAgICAgICAgSU5TVEFOQ0UuZ2V0Q29tbWFuZE1hbmFnZXIoKS5oYW5kbGVJbnB1dCh0aGlzLmlucHV0KTtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJJbnB1dCgpO1xuICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LmtleSA9PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgICAgICBJTlNUQU5DRS5nZXRDb21tYW5kTWFuYWdlcigpLmhhbmRsZUlucHV0KFwiRXNjYXBlXCIpO1xuICAgICAgICAgICAgdGhpcy5jbGVhcklucHV0KCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09IFwiQmFja3NwYWNlXCIpIHtcbiAgICAgICAgICAgIHRoaXMuZGVsZXRlTGFzdCgpO1xuICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LmtleS5sZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgdGhpcy5hZGRDaGFyKGV2ZW50LmtleSk7XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIHB1YmxpYyBoYXNJbnB1dCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5wdXQgIT0gXCJcIjtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xlYXJJbnB1dCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5pbnB1dCA9IFwiXCI7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHJlbmRlcigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LmlubmVyVGV4dCA9IElOU1RBTkNFLmdldENvbW1hbmRNYW5hZ2VyKCkuZ2V0SW5zdHJ1Y3Rpb25zKCkgKyB0aGlzLmlucHV0O1xuICAgIH1cblxuICAgIHByaXZhdGUgZGVsZXRlTGFzdCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuaW5wdXQubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmlucHV0ID0gdGhpcy5pbnB1dC5zbGljZSgwLCAtMSk7XG4gICAgICAgICAgICB0aGlzLnJlbmRlcigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhZGRDaGFyKGNoYXI6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmlucHV0ICs9IGNoYXI7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfVxuXG5cbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/commands/cli.ts\n");

/***/ }),

/***/ "./src/commands/command.ts":
/*!*********************************!*\
  !*** ./src/commands/command.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command)\n/* harmony export */ });\nclass Command {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRU8sTUFBZSxPQUFPO0NBUTVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZC50cz80ZDA2Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tbWFuZCB7XG5cbiAgICBhYnN0cmFjdCBoYW5kbGVJbnB1dChpbnB1dDogc3RyaW5nKTogdm9pZDtcbiAgICBhYnN0cmFjdCBoYW5kbGVDbGljayh4OiBudW1iZXIsIHk6IG51bWJlcik6IHZvaWQ7XG4gICAgYWJzdHJhY3QgaGFuZGxlTW91c2VNb3ZlKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZDtcbiAgICBhYnN0cmFjdCBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nO1xuICAgIGFic3RyYWN0IGlzRmluaXNoZWQoKTogYm9vbGVhbjtcblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/commands/command.ts\n");

/***/ }),

/***/ "./src/commands/commandManager.ts":
/*!****************************************!*\
  !*** ./src/commands/commandManager.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommandManager: () => (/* binding */ CommandManager)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _commands_cameraCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/cameraCommand */ \"./src/commands/commands/cameraCommand.ts\");\n/* harmony import */ var _commands_constructionPlaneCommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands/constructionPlaneCommand */ \"./src/commands/commands/constructionPlaneCommand.ts\");\n/* harmony import */ var _commands_curveCommand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commands/curveCommand */ \"./src/commands/commands/curveCommand.ts\");\n/* harmony import */ var _commands_lineCommand__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commands/lineCommand */ \"./src/commands/commands/lineCommand.ts\");\n/* harmony import */ var _commands_polylineCommand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./commands/polylineCommand */ \"./src/commands/commands/polylineCommand.ts\");\n/* harmony import */ var _commands_windowCommand__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/windowCommand */ \"./src/commands/commands/windowCommand.ts\");\n/* harmony import */ var _oneTimeCommands_toggleDarkModeCommand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./oneTimeCommands/toggleDarkModeCommand */ \"./src/commands/oneTimeCommands/toggleDarkModeCommand.ts\");\n\n\n\n\n\n\n\n\nclass CommandManager {\n    constructor() {\n        this.currentCommand = null;\n        this.previousInput = \"\";\n    }\n    handleInput(input) {\n        var _a;\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().log(input);\n        input = input.toLowerCase();\n        if (this.currentCommand)\n            this.currentCommand.handleInput(input);\n        else {\n            switch (input) {\n                case \"\":\n                    this.handleInput(this.previousInput);\n                    return;\n                case \"darkmode\":\n                case \"dm\":\n                    (0,_oneTimeCommands_toggleDarkModeCommand__WEBPACK_IMPORTED_MODULE_7__.toggleDarkMode)();\n                    break;\n                case \"constructionplane\":\n                case \"cp\":\n                    this.currentCommand = new _commands_constructionPlaneCommand__WEBPACK_IMPORTED_MODULE_2__.ConstructionPlaneCommand();\n                    break;\n                case \"camera\":\n                case \"cam\":\n                    this.currentCommand = new _commands_cameraCommand__WEBPACK_IMPORTED_MODULE_1__.CameraCommand();\n                    break;\n                case \"line\":\n                case \"ln\":\n                    this.currentCommand = new _commands_lineCommand__WEBPACK_IMPORTED_MODULE_4__.LineCommand();\n                    break;\n                case \"polyline\":\n                case \"pl\":\n                    this.currentCommand = new _commands_polylineCommand__WEBPACK_IMPORTED_MODULE_5__.PolyLineCommand();\n                    break;\n                case \"curve\":\n                case \"cv\":\n                    this.currentCommand = new _commands_curveCommand__WEBPACK_IMPORTED_MODULE_3__.CurveCommand();\n                    break;\n                case \"window\":\n                case \"w\":\n                    this.currentCommand = new _commands_windowCommand__WEBPACK_IMPORTED_MODULE_6__.WindowCommand();\n                    break;\n                default: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getLog().log(\"Invalid Command\");\n            }\n            this.previousInput = input;\n        }\n        if ((_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.isFinished()) {\n            this.currentCommand = null;\n        }\n    }\n    handleClickInput(event) {\n        var _a, _b;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleClick(event.clientX, event.clientY);\n        if ((_b = this.currentCommand) === null || _b === void 0 ? void 0 : _b.isFinished()) {\n            this.currentCommand = null;\n        }\n    }\n    handleMouseMove(event) {\n        var _a;\n        (_a = this.currentCommand) === null || _a === void 0 ? void 0 : _a.handleMouseMove(event.clientX, event.clientY);\n    }\n    getInstructions() {\n        if (this.currentCommand)\n            return this.currentCommand.getInstructions();\n        return \"$\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQztRQUN2RSxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NvbW1hbmRNYW5hZ2VyLnRzPzRlMDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCI7XG5pbXBvcnQgeyBDb21tYW5kIH0gZnJvbSBcIi4vY29tbWFuZFwiO1xuaW1wb3J0IHsgQ2FtZXJhQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL2NhbWVyYUNvbW1hbmRcIjtcbmltcG9ydCB7IENvbnN0cnVjdGlvblBsYW5lQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL2NvbnN0cnVjdGlvblBsYW5lQ29tbWFuZFwiO1xuaW1wb3J0IHsgQ3VydmVDb21tYW5kIH0gZnJvbSBcIi4vY29tbWFuZHMvY3VydmVDb21tYW5kXCI7XG5pbXBvcnQgeyBMaW5lQ29tbWFuZCB9IGZyb20gXCIuL2NvbW1hbmRzL2xpbmVDb21tYW5kXCI7XG5pbXBvcnQgeyBQb2x5TGluZUNvbW1hbmQgfSBmcm9tIFwiLi9jb21tYW5kcy9wb2x5bGluZUNvbW1hbmRcIjtcbmltcG9ydCB7IFdpbmRvd0NvbW1hbmQgfSBmcm9tIFwiLi9jb21tYW5kcy93aW5kb3dDb21tYW5kXCI7XG5pbXBvcnQgeyB0b2dnbGVEYXJrTW9kZSB9IGZyb20gXCIuL29uZVRpbWVDb21tYW5kcy90b2dnbGVEYXJrTW9kZUNvbW1hbmRcIjtcblxuXG5leHBvcnQgY2xhc3MgQ29tbWFuZE1hbmFnZXIge1xuXG4gIHByaXZhdGUgY3VycmVudENvbW1hbmQ6IENvbW1hbmQgfCBudWxsO1xuICBwcml2YXRlIHByZXZpb3VzSW5wdXQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbnVsbDtcbiAgICB0aGlzLnByZXZpb3VzSW5wdXQgPSBcIlwiO1xuICB9XG5cbiAgcHVibGljIGhhbmRsZUlucHV0KGlucHV0OiBzdHJpbmcpIHtcblxuICAgIElOU1RBTkNFLmdldExvZygpLmxvZyhpbnB1dCk7XG5cbiAgICBpbnB1dCA9IGlucHV0LnRvTG93ZXJDYXNlKCk7XG5cbiAgICBpZiAodGhpcy5jdXJyZW50Q29tbWFuZCkgdGhpcy5jdXJyZW50Q29tbWFuZC5oYW5kbGVJbnB1dChpbnB1dCk7XG4gICAgZWxzZSB7XG4gICAgICBzd2l0Y2ggKGlucHV0KSB7XG4gICAgICAgIGNhc2UgXCJcIjpcbiAgICAgICAgICB0aGlzLmhhbmRsZUlucHV0KHRoaXMucHJldmlvdXNJbnB1dCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjYXNlIFwiZGFya21vZGVcIjogY2FzZSBcImRtXCI6XG4gICAgICAgICAgdG9nZ2xlRGFya01vZGUoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImNvbnN0cnVjdGlvbnBsYW5lXCI6IGNhc2UgXCJjcFwiOlxuICAgICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBuZXcgQ29uc3RydWN0aW9uUGxhbmVDb21tYW5kKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJjYW1lcmFcIjogY2FzZSBcImNhbVwiOlxuICAgICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBuZXcgQ2FtZXJhQ29tbWFuZCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwibGluZVwiOiBjYXNlIFwibG5cIjpcbiAgICAgICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbmV3IExpbmVDb21tYW5kKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJwb2x5bGluZVwiOiBjYXNlIFwicGxcIjpcbiAgICAgICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbmV3IFBvbHlMaW5lQ29tbWFuZCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiY3VydmVcIjogY2FzZSBcImN2XCI6XG4gICAgICAgICAgdGhpcy5jdXJyZW50Q29tbWFuZCA9IG5ldyBDdXJ2ZUNvbW1hbmQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIndpbmRvd1wiOiBjYXNlIFwid1wiOlxuICAgICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQgPSBuZXcgV2luZG93Q29tbWFuZCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiBJTlNUQU5DRS5nZXRMb2coKS5sb2coXCJJbnZhbGlkIENvbW1hbmRcIik7XG4gICAgICB9XG4gICAgICB0aGlzLnByZXZpb3VzSW5wdXQgPSBpbnB1dDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jdXJyZW50Q29tbWFuZD8uaXNGaW5pc2hlZCgpKSB7XG4gICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbnVsbDtcbiAgICB9XG5cblxuICB9XG5cbiAgcHVibGljIGhhbmRsZUNsaWNrSW5wdXQoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICB0aGlzLmN1cnJlbnRDb21tYW5kPy5oYW5kbGVDbGljayhldmVudC5jbGllbnRYLCBldmVudC5jbGllbnRZKTtcbiAgICBpZiAodGhpcy5jdXJyZW50Q29tbWFuZD8uaXNGaW5pc2hlZCgpKSB7XG4gICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlTW91c2VNb3ZlKGV2ZW50OiBNb3VzZUV2ZW50KSB7XG4gICAgdGhpcy5jdXJyZW50Q29tbWFuZD8uaGFuZGxlTW91c2VNb3ZlKGV2ZW50LmNsaWVudFgsIGV2ZW50LmNsaWVudFkpO1xuICB9XG5cbiAgcHVibGljIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLmN1cnJlbnRDb21tYW5kKSByZXR1cm4gdGhpcy5jdXJyZW50Q29tbWFuZCEuZ2V0SW5zdHJ1Y3Rpb25zKCk7XG4gICAgcmV0dXJuIFwiJFwiO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/commandManager.ts\n");

/***/ }),

/***/ "./src/commands/commands/cameraCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/cameraCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CameraCommand: () => (/* binding */ CameraCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n\nvar CameraCommandMode;\n(function (CameraCommandMode) {\n    CameraCommandMode[CameraCommandMode[\"Menu\"] = 0] = \"Menu\";\n    CameraCommandMode[CameraCommandMode[\"Fovy\"] = 1] = \"Fovy\";\n})(CameraCommandMode || (CameraCommandMode = {}));\nclass CameraCommand {\n    constructor() {\n        this.mode = CameraCommandMode.Menu;\n        this.finished = false;\n    }\n    handleInput(input) {\n        switch (this.mode) {\n            case CameraCommandMode.Menu:\n                this.handleMenuInput(input);\n                break;\n            case CameraCommandMode.Fovy:\n                this.handleFovyInput(input);\n                break;\n        }\n    }\n    handleClick(x, y) {\n    }\n    handleMouseMove(x, y) {\n    }\n    getInstructions() {\n        const fovy = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getFovy();\n        const fovyDegrees = (180.0 * fovy / Math.PI).toFixed(1);\n        switch (this.mode) {\n            case CameraCommandMode.Menu:\n                return `0:Exit,  1:FOVY(${fovyDegrees})  $`;\n            case CameraCommandMode.Fovy:\n                return `0:Exit,  Enter New FOVY(${fovyDegrees})  $`;\n            default:\n                console.error(\"Unimplemented CameraCommandMode\");\n                return \"\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleFovyInput(input) {\n        const inputNum = parseFloat(input);\n        if (inputNum === 0) {\n            this.mode = CameraCommandMode.Menu;\n        }\n        if (inputNum) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().setFovy(Math.PI * inputNum / 180.0);\n            this.mode = CameraCommandMode.Menu;\n        }\n    }\n    handleMenuInput(input) {\n        switch (input) {\n            case \"0\":\n            case \"exit\":\n                this.finished = true;\n                break;\n            case \"1\":\n            case \"fovy\":\n                this.mode = CameraCommandMode.Fovy;\n                break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvY2FtZXJhQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUVyQyxJQUFLLGlCQUdKO0FBSEQsV0FBSyxpQkFBaUI7SUFDcEIseURBQUk7SUFDSix5REFBSTtBQUNOLENBQUMsRUFISSxpQkFBaUIsS0FBakIsaUJBQWlCLFFBR3JCO0FBRU0sTUFBTSxhQUFhO0lBS3hCO1FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7UUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDeEIsQ0FBQztJQUVNLFdBQVcsQ0FBQyxLQUFhO1FBQzlCLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNqQixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVCLE1BQU07WUFDUixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVCLE1BQU07U0FDVDtJQUNILENBQUM7SUFFTSxXQUFXLENBQUMsQ0FBUyxFQUFFLENBQVM7SUFFdkMsQ0FBQztJQUVNLGVBQWUsQ0FBQyxDQUFTLEVBQUUsQ0FBUztJQUUzQyxDQUFDO0lBRU0sZUFBZTtRQUNwQixNQUFNLElBQUksR0FBVywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQy9ELE1BQU0sV0FBVyxHQUFXLENBQUMsS0FBSyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNqQixLQUFLLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3pCLE9BQU8sbUJBQW1CLFdBQVcsTUFBTSxDQUFDO1lBQzlDLEtBQUssaUJBQWlCLENBQUMsSUFBSTtnQkFDekIsT0FBTywyQkFBMkIsV0FBVyxNQUFNLENBQUM7WUFDdEQ7Z0JBQ0UsT0FBTyxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO2dCQUNqRCxPQUFPLEVBQUUsQ0FBQztTQUNiO0lBQ0gsQ0FBQztJQUVNLFVBQVU7UUFDZixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVPLGVBQWUsQ0FBQyxLQUFhO1FBQ25DLE1BQU0sUUFBUSxHQUF1QixVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkQsSUFBSSxRQUFRLEtBQUssQ0FBQyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1NBQ3BDO1FBQ0QsSUFBSSxRQUFRLEVBQUU7WUFDWiwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLFFBQVEsR0FBRyxLQUFLLENBQUMsQ0FBQztZQUNwRSxJQUFJLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQztTQUNwQztJQUNILENBQUM7SUFFTyxlQUFlLENBQUMsS0FBYTtRQUNuQyxRQUFRLEtBQUssRUFBRTtZQUNiLEtBQUssR0FBRyxDQUFDO1lBQUMsS0FBSyxNQUFNO2dCQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDckIsTUFBTTtZQUNSLEtBQUssR0FBRyxDQUFDO1lBQUMsS0FBSyxNQUFNO2dCQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQztnQkFDbkMsTUFBTTtTQUNUO0lBQ0gsQ0FBQztDQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvY2FtZXJhQ29tbWFuZC50cz81ZTIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uLy4uL2NhZFwiO1xuXG5lbnVtIENhbWVyYUNvbW1hbmRNb2RlIHtcbiAgTWVudSxcbiAgRm92eSxcbn1cblxuZXhwb3J0IGNsYXNzIENhbWVyYUNvbW1hbmQge1xuXG4gIHByaXZhdGUgbW9kZTogQ2FtZXJhQ29tbWFuZE1vZGU7XG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlSW5wdXQoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIENhbWVyYUNvbW1hbmRNb2RlLk1lbnU6XG4gICAgICAgIHRoaXMuaGFuZGxlTWVudUlucHV0KGlucHV0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIENhbWVyYUNvbW1hbmRNb2RlLkZvdnk6XG4gICAgICAgIHRoaXMuaGFuZGxlRm92eUlucHV0KGlucHV0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGhhbmRsZUNsaWNrKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZCB7XG5cbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVNb3VzZU1vdmUoeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcblxuICB9XG5cbiAgcHVibGljIGdldEluc3RydWN0aW9ucygpOiBzdHJpbmcge1xuICAgIGNvbnN0IGZvdnk6IG51bWJlciA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q2FtZXJhKCkuZ2V0Rm92eSgpO1xuICAgIGNvbnN0IGZvdnlEZWdyZWVzOiBzdHJpbmcgPSAoMTgwLjAgKiBmb3Z5IC8gTWF0aC5QSSkudG9GaXhlZCgxKTtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBDYW1lcmFDb21tYW5kTW9kZS5NZW51OlxuICAgICAgICByZXR1cm4gYDA6RXhpdCwgIDE6Rk9WWSgke2ZvdnlEZWdyZWVzfSkgICRgO1xuICAgICAgY2FzZSBDYW1lcmFDb21tYW5kTW9kZS5Gb3Z5OlxuICAgICAgICByZXR1cm4gYDA6RXhpdCwgIEVudGVyIE5ldyBGT1ZZKCR7Zm92eURlZ3JlZXN9KSAgJGA7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjb25zb2xlLmVycm9yKFwiVW5pbXBsZW1lbnRlZCBDYW1lcmFDb21tYW5kTW9kZVwiKTtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGlzRmluaXNoZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmluaXNoZWQ7XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZUZvdnlJbnB1dChpbnB1dDogc3RyaW5nKSB7XG4gICAgY29uc3QgaW5wdXROdW06IG51bWJlciB8IHVuZGVmaW5lZCA9IHBhcnNlRmxvYXQoaW5wdXQpO1xuICAgIGlmIChpbnB1dE51bSA9PT0gMCkge1xuICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICB9XG4gICAgaWYgKGlucHV0TnVtKSB7XG4gICAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENhbWVyYSgpLnNldEZvdnkoTWF0aC5QSSAqIGlucHV0TnVtIC8gMTgwLjApO1xuICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuTWVudTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZU1lbnVJbnB1dChpbnB1dDogc3RyaW5nKSB7XG4gICAgc3dpdGNoIChpbnB1dCkge1xuICAgICAgY2FzZSBcIjBcIjogY2FzZSBcImV4aXRcIjpcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIjFcIjogY2FzZSBcImZvdnlcIjpcbiAgICAgICAgdGhpcy5tb2RlID0gQ2FtZXJhQ29tbWFuZE1vZGUuRm92eTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/commands/commands/cameraCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/constructionPlaneCommand.ts":
/*!***********************************************************!*\
  !*** ./src/commands/commands/constructionPlaneCommand.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConstructionPlaneCommand: () => (/* binding */ ConstructionPlaneCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\nvar ConstructionPlaneCommandMode;\n(function (ConstructionPlaneCommandMode) {\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"Menu\"] = 0] = \"Menu\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeMajorCount\"] = 1] = \"ChangeMajorCount\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeMinorCount\"] = 2] = \"ChangeMinorCount\";\n    ConstructionPlaneCommandMode[ConstructionPlaneCommandMode[\"ChangeSpacing\"] = 3] = \"ChangeSpacing\";\n})(ConstructionPlaneCommandMode || (ConstructionPlaneCommandMode = {}));\nclass ConstructionPlaneCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n    constructor() {\n        super();\n        this.mode = ConstructionPlaneCommandMode.Menu;\n        this.finished = false;\n    }\n    handleInput(input) {\n        switch (this.mode) {\n            case ConstructionPlaneCommandMode.Menu:\n                this.handleMenuInput(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeMajorCount:\n                this.changeMajorCount(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeMinorCount:\n                this.changeMinorCount(input);\n                break;\n            case ConstructionPlaneCommandMode.ChangeSpacing:\n                this.changeCellSize(input);\n                break;\n            default: console.error(\"Unhandled Mode\");\n        }\n    }\n    handleClick(x, y) {\n    }\n    getInstructions() {\n        const constructionPlane = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane();\n        const minorCount = constructionPlane.getMinorCount().toString();\n        const majorCount = constructionPlane.getMajorCount().toString();\n        const cellSize = constructionPlane.getCellSize().toFixed(2);\n        switch (this.mode) {\n            case ConstructionPlaneCommandMode.Menu:\n                return `0:Exit,  1:MajorCount(${majorCount}),  2:MinorCount(${minorCount}),  3:CellSize(${cellSize})  $`;\n            case ConstructionPlaneCommandMode.ChangeMajorCount:\n                return `0:Exit,  Enter New Major Count(${majorCount})  $`;\n            case ConstructionPlaneCommandMode.ChangeMinorCount:\n                return `0:Exit,  Enter New Minor Count(${minorCount})  $`;\n            case ConstructionPlaneCommandMode.ChangeSpacing:\n                return `0:Exit,  Enter New Cell Size(${cellSize})  $`;\n            default: console.error(\"Unhandled Mode\");\n        }\n        return \"\";\n    }\n    isFinished() {\n        return this.finished;\n    }\n    handleMouseMove(x, y) {\n    }\n    handleMenuInput(input) {\n        switch (input) {\n            case \"0\":\n            case \"exit\":\n                this.finished = true;\n                return;\n            case \"1\":\n            case \"majorcount\":\n                this.mode = ConstructionPlaneCommandMode.ChangeMajorCount;\n                return;\n            case \"2\":\n            case \"minorcount\":\n                this.mode = ConstructionPlaneCommandMode.ChangeMinorCount;\n                return;\n            case \"3\":\n            case \"cellspacing\":\n                this.mode = ConstructionPlaneCommandMode.ChangeSpacing;\n                return;\n        }\n    }\n    changeMajorCount(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const count = parseInt(input);\n        if (count) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorCount(count);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n    changeMinorCount(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const count = parseInt(input);\n        if (count) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMinorCount(count);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n    changeCellSize(input) {\n        if (input === '0' || input === \"exit\") {\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n        const size = parseFloat(input);\n        if (size) {\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setCellSize(size);\n            this.mode = ConstructionPlaneCommandMode.Menu;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/constructionPlaneCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/curveCommand.ts":
/*!***********************************************!*\
  !*** ./src/commands/commands/curveCommand.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CurveCommand: () => (/* binding */ CurveCommand)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\n\nvar CurveCommandMode;\n(function (CurveCommandMode) {\n    CurveCommandMode[CurveCommandMode[\"AddPoints\"] = 0] = \"AddPoints\";\n    CurveCommandMode[CurveCommandMode[\"ChangeDegree\"] = 1] = \"ChangeDegree\";\n})(CurveCommandMode || (CurveCommandMode = {}));\nclass CurveCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.curve = null;\n        this.degree = 2;\n        this.mode = CurveCommandMode.AddPoints;\n    }\n    handleInput(input) {\n        var _a, _b;\n        if (this.mode === CurveCommandMode.AddPoints) {\n            switch (input) {\n                case \"0\":\n                    (_a = this.curve) === null || _a === void 0 ? void 0 : _a.destroy();\n                    this.finished = true;\n                    break;\n                case \"1\":\n                    this.mode = CurveCommandMode.ChangeDegree;\n                    break;\n                case \"\":\n                    if (this.curve != null) {\n                        if (this.curve.getControlPointCount() < 3)\n                            this.curve.destroy();\n                        else {\n                            this.curve.removeLastControlPoint();\n                            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.curve);\n                        }\n                    }\n                    this.finished = true;\n                    break;\n            }\n        }\n        else if (this.mode === CurveCommandMode.ChangeDegree) {\n            switch (input) {\n                case \"0\":\n                case \"\":\n                    break;\n                default:\n                    const degree = parseInt(input);\n                    if (degree) {\n                        this.degree = degree;\n                        (_b = this.curve) === null || _b === void 0 ? void 0 : _b.elevateDegree(Math.min(this.curve.getControlPointCount() - 1, this.degree));\n                    }\n                    break;\n            }\n            this.mode = CurveCommandMode.AddPoints;\n        }\n    }\n    handleClick(x, y) {\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n        const t = ray.intersectScene(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene());\n        if (t && t > 0.0) { // click intersected scene\n            const point = ray.at(t);\n            if (this.curve) {\n                this.curve.updateLastControlPoint(point, 1);\n                this.curve.addControlPoint(point, 1);\n                if (this.curve.getDegree() < this.degree)\n                    this.curve.elevateDegree(1);\n            }\n            else {\n                this.curve = new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_1__.Curve([wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...point, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...point, 1)], 1);\n            }\n        }\n    }\n    handleMouseMove(x, y) {\n        if (this.curve) {\n            const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n            const t = ray.intersectScene(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene());\n            if (t && t > 0.0) { // click intersected scene\n                this.curve.updateLastControlPoint(ray.at(t), 1);\n            }\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case CurveCommandMode.AddPoints:\n                if (this.curve == null)\n                    return `Exit:0  Degree(${this.degree}):1  Click start point.  $`;\n                return `Exit:0  Degree(${this.degree}):1  Click next point.  $`;\n            case CurveCommandMode.ChangeDegree:\n                return `Exit:0  Enter New Degree(${this.degree})  $`;\n            default:\n                return \"\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/commands/commands/curveCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/lineCommand.ts":
/*!**********************************************!*\
  !*** ./src/commands/commands/lineCommand.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineCommand: () => (/* binding */ LineCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/line */ \"./src/geometry/line.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\nclass LineCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.finished = false;\n        this.line = null;\n    }\n    handleInput(input) {\n        switch (input) {\n            case \"0\":\n            case \"\":\n                if (this.line)\n                    this.line.delete();\n                this.finished = true;\n                break;\n        }\n        // todo\n    }\n    handleMouseMove(x, y) {\n        if (this.line) {\n            const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n            const t = ray.intersectScene(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene());\n            if (t && t > 0.0) { // click intersected scene\n                const point = ray.at(t);\n                this.line.updateEnd(point);\n            }\n        }\n    }\n    handleClick(x, y) {\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n        const t = ray.intersectScene(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene());\n        if (t && t > 0.0) { // click intersected scene\n            const point = ray.at(t);\n            if (this.line) {\n                this.line.updateEnd(point);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.line);\n                this.finished = true;\n            }\n            else {\n                this.line = new _geometry_line__WEBPACK_IMPORTED_MODULE_1__.Line(point, point, [1, 0, 0, 1]);\n            }\n        }\n    }\n    getInstructions() {\n        if (this.line) {\n            return \"Exit:0  Click or type end point.  $\";\n        }\n        else {\n            return \"Exit:0  Click or type start point.  $\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvbGluZUNvbW1hbmQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNxQztBQUNNO0FBRU47QUFHOUIsTUFBTSxXQUFZLFNBQVEsNkNBQU87SUFLdEM7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFFTSxXQUFXLENBQUMsS0FBYTtRQUM5QixRQUFRLEtBQUssRUFBRTtZQUNiLEtBQUssR0FBRyxDQUFDO1lBQUMsS0FBSyxFQUFFO2dCQUNmLElBQUksSUFBSSxDQUFDLElBQUk7b0JBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztnQkFDbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7Z0JBQ3JCLE1BQU07U0FDVDtRQUVELE9BQU87SUFDVCxDQUFDO0lBRU0sZUFBZSxDQUFDLENBQVMsRUFBRSxDQUFTO1FBQ3pDLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLE1BQU0sR0FBRyxHQUFRLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNyRSxNQUFNLENBQUMsR0FBa0IsR0FBRyxDQUFDLGNBQWMsQ0FBQywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDakUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxFQUFFLDBCQUEwQjtnQkFDNUMsTUFBTSxLQUFLLEdBQVMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDNUI7U0FDRjtJQUNILENBQUM7SUFFTSxXQUFXLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFFckMsTUFBTSxHQUFHLEdBQVEsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLE1BQU0sQ0FBQyxHQUFrQixHQUFHLENBQUMsY0FBYyxDQUFDLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxFQUFFLEVBQUUsMEJBQTBCO1lBQzVDLE1BQU0sS0FBSyxHQUFTLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUIsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUMzQiwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzNDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO2FBQ3RCO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxnREFBSSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ2xEO1NBQ0Y7SUFDSCxDQUFDO0lBRU0sZUFBZTtRQUNwQixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixPQUFPLHFDQUFxQyxDQUFDO1NBQzlDO2FBQU07WUFDTCxPQUFPLHVDQUF1QyxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQztJQUVNLFVBQVU7UUFDZixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvbGluZUNvbW1hbmQudHM/ZTE4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IExpbmUgfSBmcm9tIFwiLi4vLi4vZ2VvbWV0cnkvbGluZVwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L3JheVwiO1xuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi9jb21tYW5kXCI7XG5cblxuZXhwb3J0IGNsYXNzIExpbmVDb21tYW5kIGV4dGVuZHMgQ29tbWFuZCB7XG5cbiAgcHJpdmF0ZSBmaW5pc2hlZDogYm9vbGVhbjtcbiAgcHJpdmF0ZSBsaW5lOiBMaW5lIHwgbnVsbDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuZmluaXNoZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxpbmUgPSBudWxsO1xuICB9XG5cbiAgcHVibGljIGhhbmRsZUlucHV0KGlucHV0OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBzd2l0Y2ggKGlucHV0KSB7XG4gICAgICBjYXNlIFwiMFwiOiBjYXNlIFwiXCI6XG4gICAgICAgIGlmICh0aGlzLmxpbmUpIHRoaXMubGluZS5kZWxldGUoKTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIC8vIHRvZG9cbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVNb3VzZU1vdmUoeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5saW5lKSB7XG4gICAgICBjb25zdCByYXk6IFJheSA9IElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q2FtZXJhKCkuZ2V0UmF5QXRQaXhlbCh4LCB5KTtcbiAgICAgIGNvbnN0IHQ6IG51bWJlciB8IG51bGwgPSByYXkuaW50ZXJzZWN0U2NlbmUoSU5TVEFOQ0UuZ2V0U2NlbmUoKSk7XG4gICAgICBpZiAodCAmJiB0ID4gMC4wKSB7IC8vIGNsaWNrIGludGVyc2VjdGVkIHNjZW5lXG4gICAgICAgIGNvbnN0IHBvaW50OiBWZWMzID0gcmF5LmF0KHQpO1xuICAgICAgICB0aGlzLmxpbmUudXBkYXRlRW5kKHBvaW50KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlQ2xpY2soeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcblxuICAgIGNvbnN0IHJheTogUmF5ID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDYW1lcmEoKS5nZXRSYXlBdFBpeGVsKHgsIHkpO1xuICAgIGNvbnN0IHQ6IG51bWJlciB8IG51bGwgPSByYXkuaW50ZXJzZWN0U2NlbmUoSU5TVEFOQ0UuZ2V0U2NlbmUoKSk7XG4gICAgaWYgKHQgJiYgdCA+IDAuMCkgeyAvLyBjbGljayBpbnRlcnNlY3RlZCBzY2VuZVxuICAgICAgY29uc3QgcG9pbnQ6IFZlYzMgPSByYXkuYXQodCk7XG4gICAgICBpZiAodGhpcy5saW5lKSB7XG4gICAgICAgIHRoaXMubGluZS51cGRhdGVFbmQocG9pbnQpO1xuICAgICAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLmFkZEdlb21ldHJ5KHRoaXMubGluZSk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5saW5lID0gbmV3IExpbmUocG9pbnQsIHBvaW50LCBbMSwgMCwgMCwgMV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5saW5lKSB7XG4gICAgICByZXR1cm4gXCJFeGl0OjAgIENsaWNrIG9yIHR5cGUgZW5kIHBvaW50LiAgJFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gXCJFeGl0OjAgIENsaWNrIG9yIHR5cGUgc3RhcnQgcG9pbnQuICAkXCI7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGlzRmluaXNoZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmluaXNoZWQ7XG4gIH1cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/lineCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/polylineCommand.ts":
/*!**************************************************!*\
  !*** ./src/commands/commands/polylineCommand.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PolyLineCommand: () => (/* binding */ PolyLineCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_polyLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/polyLine */ \"./src/geometry/polyLine.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\nclass PolyLineCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.polyline = null;\n        this.finished = false;\n    }\n    handleInput(input) {\n        switch (input) {\n            case \"0\":\n                if (this.polyline)\n                    this.polyline.delete();\n                this.finished = true;\n            case \"\":\n                if (this.polyline) {\n                    if (this.polyline.getSegmentCount() < 2)\n                        this.polyline.delete();\n                    else {\n                        this.polyline.removeLastPoint();\n                        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(this.polyline);\n                    }\n                }\n                this.finished = true;\n                break;\n        }\n    }\n    handleClick(x, y) {\n        const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n        const t = ray.intersectScene(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene());\n        if (t && t > 0.0) { // click intersected scene\n            const point = ray.at(t);\n            if (this.polyline) {\n                this.polyline.updateLastPoint(point);\n                this.polyline.addPoint(point);\n            }\n            else {\n                this.polyline = new _geometry_polyLine__WEBPACK_IMPORTED_MODULE_1__.PolyLine([point, point], [1, 0, 0, 1]);\n            }\n        }\n    }\n    handleMouseMove(x, y) {\n        if (this.polyline) {\n            const ray = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getRayAtPixel(x, y);\n            const t = ray.intersectScene(_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene());\n            if (t && t > 0.0) { // click intersected scene\n                const point = ray.at(t);\n                this.polyline.updateLastPoint(point);\n            }\n        }\n    }\n    getInstructions() {\n        if (this.polyline) {\n            return \"Exit:0  click or type next point  $\";\n        }\n        else {\n            return \"Exit:0  click or type start point  $\";\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvcG9seWxpbmVDb21tYW5kLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDcUM7QUFDYztBQUVkO0FBRTlCLE1BQU0sZUFBZ0IsU0FBUSw2Q0FBTztJQUsxQztRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDeEIsQ0FBQztJQUVNLFdBQVcsQ0FBQyxLQUFhO1FBQzlCLFFBQVEsS0FBSyxFQUFFO1lBQ2IsS0FBSyxHQUFHO2dCQUNOLElBQUksSUFBSSxDQUFDLFFBQVE7b0JBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztnQkFDMUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDdkIsS0FBSyxFQUFFO2dCQUNMLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtvQkFDakIsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxHQUFHLENBQUM7d0JBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQzt5QkFDM0Q7d0JBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLEVBQUUsQ0FBQzt3QkFDaEMsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3FCQUNoRDtpQkFDRjtnQkFDRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDckIsTUFBTTtTQUNUO0lBQ0gsQ0FBQztJQUVNLFdBQVcsQ0FBQyxDQUFTLEVBQUUsQ0FBUztRQUNyQyxNQUFNLEdBQUcsR0FBUSwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckUsTUFBTSxDQUFDLEdBQWtCLEdBQUcsQ0FBQyxjQUFjLENBQUMsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUUsRUFBRSwwQkFBMEI7WUFDNUMsTUFBTSxLQUFLLEdBQVMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNyQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUMvQjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksd0RBQVEsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUQ7U0FDRjtJQUVILENBQUM7SUFFTSxlQUFlLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDekMsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLE1BQU0sR0FBRyxHQUFRLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNyRSxNQUFNLENBQUMsR0FBa0IsR0FBRyxDQUFDLGNBQWMsQ0FBQywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDakUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxFQUFFLDBCQUEwQjtnQkFDNUMsTUFBTSxLQUFLLEdBQVMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDOUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDdEM7U0FDRjtJQUNILENBQUM7SUFFTSxlQUFlO1FBQ3BCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixPQUFPLHFDQUFxQyxDQUFDO1NBQzlDO2FBQU07WUFDTCxPQUFPLHNDQUFzQyxDQUFDO1NBQy9DO0lBQ0gsQ0FBQztJQUVNLFVBQVU7UUFDZixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvY29tbWFuZHMvY29tbWFuZHMvcG9seWxpbmVDb21tYW5kLnRzPzEwN2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBQb2x5TGluZSB9IGZyb20gXCIuLi8uLi9nZW9tZXRyeS9wb2x5TGluZVwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4uLy4uL2dlb21ldHJ5L3JheVwiO1xuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi9jb21tYW5kXCI7XG5cbmV4cG9ydCBjbGFzcyBQb2x5TGluZUNvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHtcblxuICBwcml2YXRlIHBvbHlsaW5lOiBQb2x5TGluZSB8IG51bGw7XG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnBvbHlsaW5lID0gbnVsbDtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlSW5wdXQoaW5wdXQ6IHN0cmluZyk6IHZvaWQge1xuICAgIHN3aXRjaCAoaW5wdXQpIHtcbiAgICAgIGNhc2UgXCIwXCI6XG4gICAgICAgIGlmICh0aGlzLnBvbHlsaW5lKSB0aGlzLnBvbHlsaW5lLmRlbGV0ZSgpO1xuICAgICAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgIGNhc2UgXCJcIjpcbiAgICAgICAgaWYgKHRoaXMucG9seWxpbmUpIHtcbiAgICAgICAgICBpZiAodGhpcy5wb2x5bGluZS5nZXRTZWdtZW50Q291bnQoKSA8IDIpIHRoaXMucG9seWxpbmUuZGVsZXRlKCk7XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnBvbHlsaW5lLnJlbW92ZUxhc3RQb2ludCgpO1xuICAgICAgICAgICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5hZGRHZW9tZXRyeSh0aGlzLnBvbHlsaW5lKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVDbGljayh4OiBudW1iZXIsIHk6IG51bWJlcik6IHZvaWQge1xuICAgIGNvbnN0IHJheTogUmF5ID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDYW1lcmEoKS5nZXRSYXlBdFBpeGVsKHgsIHkpO1xuICAgIGNvbnN0IHQ6IG51bWJlciB8IG51bGwgPSByYXkuaW50ZXJzZWN0U2NlbmUoSU5TVEFOQ0UuZ2V0U2NlbmUoKSk7XG4gICAgaWYgKHQgJiYgdCA+IDAuMCkgeyAvLyBjbGljayBpbnRlcnNlY3RlZCBzY2VuZVxuICAgICAgY29uc3QgcG9pbnQ6IFZlYzMgPSByYXkuYXQodCk7XG4gICAgICBpZiAodGhpcy5wb2x5bGluZSkge1xuICAgICAgICB0aGlzLnBvbHlsaW5lLnVwZGF0ZUxhc3RQb2ludChwb2ludCk7XG4gICAgICAgIHRoaXMucG9seWxpbmUuYWRkUG9pbnQocG9pbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5wb2x5bGluZSA9IG5ldyBQb2x5TGluZShbcG9pbnQsIHBvaW50XSwgWzEsIDAsIDAsIDFdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVNb3VzZU1vdmUoeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wb2x5bGluZSkge1xuICAgICAgY29uc3QgcmF5OiBSYXkgPSBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENhbWVyYSgpLmdldFJheUF0UGl4ZWwoeCwgeSk7XG4gICAgICBjb25zdCB0OiBudW1iZXIgfCBudWxsID0gcmF5LmludGVyc2VjdFNjZW5lKElOU1RBTkNFLmdldFNjZW5lKCkpO1xuICAgICAgaWYgKHQgJiYgdCA+IDAuMCkgeyAvLyBjbGljayBpbnRlcnNlY3RlZCBzY2VuZVxuICAgICAgICBjb25zdCBwb2ludDogVmVjMyA9IHJheS5hdCh0KTtcbiAgICAgICAgdGhpcy5wb2x5bGluZS51cGRhdGVMYXN0UG9pbnQocG9pbnQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5wb2x5bGluZSkge1xuICAgICAgcmV0dXJuIFwiRXhpdDowICBjbGljayBvciB0eXBlIG5leHQgcG9pbnQgICRcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIFwiRXhpdDowICBjbGljayBvciB0eXBlIHN0YXJ0IHBvaW50ICAkXCI7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGlzRmluaXNoZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmluaXNoZWQ7XG4gIH1cblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/commands/commands/polylineCommand.ts\n");

/***/ }),

/***/ "./src/commands/commands/windowCommand.ts":
/*!************************************************!*\
  !*** ./src/commands/commands/windowCommand.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WindowCommand: () => (/* binding */ WindowCommand)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window_windowManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../window/windowManager */ \"./src/window/windowManager.ts\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../command */ \"./src/commands/command.ts\");\n\n\n\nvar WindowCommandMode;\n(function (WindowCommandMode) {\n    WindowCommandMode[WindowCommandMode[\"SelectWindow\"] = 0] = \"SelectWindow\";\n    WindowCommandMode[WindowCommandMode[\"PlaceWindowStart\"] = 1] = \"PlaceWindowStart\";\n    WindowCommandMode[WindowCommandMode[\"PlaceWindowEnd\"] = 2] = \"PlaceWindowEnd\";\n})(WindowCommandMode || (WindowCommandMode = {}));\nclass WindowCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n    constructor() {\n        super();\n        this.windowName = \"none\";\n        this.finished = false;\n        this.mode = WindowCommandMode.SelectWindow;\n    }\n    handleInput(input) {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                if (input == \"0\") {\n                    this.finished = true;\n                    break;\n                }\n                if (_window_windowManager__WEBPACK_IMPORTED_MODULE_1__.WINDOW_NAMES.has(parseInt(input))) {\n                    this.windowName = _window_windowManager__WEBPACK_IMPORTED_MODULE_1__.WINDOW_NAMES.get(parseInt(input));\n                    this.mode = WindowCommandMode.PlaceWindowStart;\n                    // remove existing window to add it back\n                    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().removeWindow(this.windowName);\n                }\n                break;\n            case WindowCommandMode.PlaceWindowStart:\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    handleClick(x, y) {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                break;\n            case WindowCommandMode.PlaceWindowStart:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().addWindow(this.windowName, [x, y]);\n                this.mode = WindowCommandMode.PlaceWindowEnd;\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(this.windowName).updateEnd([x, y]);\n                this.windowName = \"none\";\n                this.mode = WindowCommandMode.SelectWindow;\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    handleMouseMove(x, y) {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                break;\n            case WindowCommandMode.PlaceWindowStart:\n                break;\n            case WindowCommandMode.PlaceWindowEnd:\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getWindowManager().getWindows().get(this.windowName).updateEnd([x, y]);\n                break;\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    getInstructions() {\n        switch (this.mode) {\n            case WindowCommandMode.SelectWindow:\n                var res = \"Exit:0  \";\n                for (let [key, value] of _window_windowManager__WEBPACK_IMPORTED_MODULE_1__.WINDOW_NAMES) {\n                    res += value + \"(\" + key.toString() + \")  \";\n                }\n                return res + \"$\";\n            case WindowCommandMode.PlaceWindowStart:\n                return \"Exit:0  Click first corner for window.\";\n            case WindowCommandMode.PlaceWindowEnd:\n                return \"Exit:0  Click second corner for window.\";\n            default:\n                throw new Error(\"Not implemented\");\n        }\n    }\n    isFinished() {\n        return this.finished;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFVBQVUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pGLE1BQU07WUFDUjtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRU0sZUFBZTtRQUNwQixRQUFRLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDakIsS0FBSyxpQkFBaUIsQ0FBQyxZQUFZO2dCQUNqQyxJQUFJLEdBQUcsR0FBVyxVQUFVLENBQUM7Z0JBQzdCLEtBQUssSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSwrREFBWSxFQUFFO29CQUNyQyxHQUFHLElBQUksS0FBSyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsUUFBUSxFQUFFLEdBQUcsS0FBSyxDQUFDO2lCQUM3QztnQkFDRCxPQUFPLEdBQUcsR0FBRyxHQUFHLENBQUM7WUFDbkIsS0FBSyxpQkFBaUIsQ0FBQyxnQkFBZ0I7Z0JBQ3JDLE9BQU8sd0NBQXdDLENBQUM7WUFDbEQsS0FBSyxpQkFBaUIsQ0FBQyxjQUFjO2dCQUNuQyxPQUFPLHlDQUF5QyxDQUFDO1lBQ25EO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztTQUN0QztJQUNILENBQUM7SUFFTSxVQUFVO1FBQ2YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL2NvbW1hbmRzL3dpbmRvd0NvbW1hbmQudHM/NGQ3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcbmltcG9ydCB7IFdJTkRPV19OQU1FUyB9IGZyb20gXCIuLi8uLi93aW5kb3cvd2luZG93TWFuYWdlclwiO1xuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi9jb21tYW5kXCI7XG5cbmVudW0gV2luZG93Q29tbWFuZE1vZGUge1xuICBTZWxlY3RXaW5kb3csXG4gIFBsYWNlV2luZG93U3RhcnQsXG4gIFBsYWNlV2luZG93RW5kLFxufVxuXG5leHBvcnQgY2xhc3MgV2luZG93Q29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuXG4gIHByaXZhdGUgZmluaXNoZWQ6IGJvb2xlYW47XG4gIHByaXZhdGUgbW9kZTogV2luZG93Q29tbWFuZE1vZGU7XG4gIHByaXZhdGUgd2luZG93TmFtZTogc3RyaW5nID0gXCJub25lXCI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmZpbmlzaGVkID0gZmFsc2U7XG4gICAgdGhpcy5tb2RlID0gV2luZG93Q29tbWFuZE1vZGUuU2VsZWN0V2luZG93O1xuICB9XG5cbiAgcHVibGljIGhhbmRsZUlucHV0KGlucHV0OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5TZWxlY3RXaW5kb3c6XG4gICAgICAgIGlmIChpbnB1dCA9PSBcIjBcIikge1xuICAgICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChXSU5ET1dfTkFNRVMuaGFzKHBhcnNlSW50KGlucHV0KSkpIHtcbiAgICAgICAgICB0aGlzLndpbmRvd05hbWUgPSBXSU5ET1dfTkFNRVMuZ2V0KHBhcnNlSW50KGlucHV0KSkhO1xuICAgICAgICAgIHRoaXMubW9kZSA9IFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93U3RhcnQ7XG5cbiAgICAgICAgICAvLyByZW1vdmUgZXhpc3Rpbmcgd2luZG93IHRvIGFkZCBpdCBiYWNrXG4gICAgICAgICAgSU5TVEFOQ0UuZ2V0V2luZG93TWFuYWdlcigpLnJlbW92ZVdpbmRvdyh0aGlzLndpbmRvd05hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5QbGFjZVdpbmRvd1N0YXJ0OlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dFbmQ6XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVDbGljayh4OiBudW1iZXIsIHk6IG51bWJlcik6IHZvaWQge1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlNlbGVjdFdpbmRvdzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93U3RhcnQ6XG4gICAgICAgIElOU1RBTkNFLmdldFdpbmRvd01hbmFnZXIoKS5hZGRXaW5kb3codGhpcy53aW5kb3dOYW1lLCBbeCwgeV0pO1xuICAgICAgICB0aGlzLm1vZGUgPSBXaW5kb3dDb21tYW5kTW9kZS5QbGFjZVdpbmRvd0VuZDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93RW5kOlxuICAgICAgICBJTlNUQU5DRS5nZXRXaW5kb3dNYW5hZ2VyKCkuZ2V0V2luZG93cygpLmdldCh0aGlzLndpbmRvd05hbWUpIS51cGRhdGVFbmQoW3gsIHldKTtcbiAgICAgICAgdGhpcy53aW5kb3dOYW1lID0gXCJub25lXCI7XG4gICAgICAgIHRoaXMubW9kZSA9IFdpbmRvd0NvbW1hbmRNb2RlLlNlbGVjdFdpbmRvdztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGhhbmRsZU1vdXNlTW92ZSh4OiBudW1iZXIsIHk6IG51bWJlcik6IHZvaWQge1xuICAgIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlNlbGVjdFdpbmRvdzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFdpbmRvd0NvbW1hbmRNb2RlLlBsYWNlV2luZG93U3RhcnQ6XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5QbGFjZVdpbmRvd0VuZDpcbiAgICAgICAgSU5TVEFOQ0UuZ2V0V2luZG93TWFuYWdlcigpLmdldFdpbmRvd3MoKS5nZXQodGhpcy53aW5kb3dOYW1lKSEudXBkYXRlRW5kKFt4LCB5XSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBnZXRJbnN0cnVjdGlvbnMoKTogc3RyaW5nIHtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBXaW5kb3dDb21tYW5kTW9kZS5TZWxlY3RXaW5kb3c6XG4gICAgICAgIHZhciByZXM6IHN0cmluZyA9IFwiRXhpdDowICBcIjtcbiAgICAgICAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIFdJTkRPV19OQU1FUykge1xuICAgICAgICAgIHJlcyArPSB2YWx1ZSArIFwiKFwiICsga2V5LnRvU3RyaW5nKCkgKyBcIikgIFwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXMgKyBcIiRcIjtcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dTdGFydDpcbiAgICAgICAgcmV0dXJuIFwiRXhpdDowICBDbGljayBmaXJzdCBjb3JuZXIgZm9yIHdpbmRvdy5cIjtcbiAgICAgIGNhc2UgV2luZG93Q29tbWFuZE1vZGUuUGxhY2VXaW5kb3dFbmQ6XG4gICAgICAgIHJldHVybiBcIkV4aXQ6MCAgQ2xpY2sgc2Vjb25kIGNvcm5lciBmb3Igd2luZG93LlwiO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBpc0ZpbmlzaGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZpbmlzaGVkO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/commands/windowCommand.ts\n");

/***/ }),

/***/ "./src/commands/oneTimeCommands/toggleDarkModeCommand.ts":
/*!***************************************************************!*\
  !*** ./src/commands/oneTimeCommands/toggleDarkModeCommand.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toggleDarkMode: () => (/* binding */ toggleDarkMode)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n\nvar isDarkMode = true;\nconst rootStyle = document.querySelector(':root');\nfunction toggleDarkMode() {\n    if (isDarkMode)\n        setLightMode();\n    else\n        setDarkMode();\n}\nfunction setLightMode() {\n    isDarkMode = false;\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().setClearColor([0.8, 0.8, 0.8, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorColor([0.3, 0.2, 0.2, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMinorColor([0.7, 0.6, 0.6, 1.0]);\n    rootStyle.style.setProperty(\"--floating-window-background-color\", \"var(--transparent-white)\");\n    rootStyle.style.setProperty(\"--floating-window-text-color\", \"var(--dark-red)\");\n    rootStyle.style.setProperty(\"--floating-window-border-color\", \"var(--dark-red)\");\n}\nfunction setDarkMode() {\n    isDarkMode = true;\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().setClearColor([0.1, 0.1, 0.1, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMajorColor([1.0, 0.8, 0.8, 1.0]);\n    _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getConstructionPlane().setMinorColor([0.6, 0.4, 0.4, 1.0]);\n    rootStyle.style.setProperty(\"--floating-window-background-color\", \"var(--transparent-black)\");\n    rootStyle.style.setProperty(\"--floating-window-text-color\", \"var(--light-red)\");\n    rootStyle.style.setProperty(\"--floating-window-border-color\", \"var(--light-red)\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbWFuZHMvb25lVGltZUNvbW1hbmRzL3RvZ2dsZURhcmtNb2RlQ29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUVyQyxJQUFJLFVBQVUsR0FBWSxJQUFJLENBQUM7QUFFL0IsTUFBTSxTQUFTLEdBQXVDLFFBQVEsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7QUFFL0UsU0FBUyxjQUFjO0lBQzVCLElBQUksVUFBVTtRQUFFLFlBQVksRUFBRSxDQUFDOztRQUMxQixXQUFXLEVBQUUsQ0FBQztBQUNyQixDQUFDO0FBRUQsU0FBUyxZQUFZO0lBQ25CLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDbkIsMENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzNELDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQy9FLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQy9FLFNBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLG9DQUFvQyxFQUFFLDBCQUEwQixDQUFDLENBQUM7SUFDOUYsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsOEJBQThCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztJQUMvRSxTQUFTLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxnQ0FBZ0MsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBRW5GLENBQUM7QUFFRCxTQUFTLFdBQVc7SUFDbEIsVUFBVSxHQUFHLElBQUksQ0FBQztJQUNsQiwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0QsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0UsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0UsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsb0NBQW9DLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztJQUM5RixTQUFTLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyw4QkFBOEIsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQ2hGLFNBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLGdDQUFnQyxFQUFFLGtCQUFrQixDQUFDLENBQUM7QUFDcEYsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2NvbW1hbmRzL29uZVRpbWVDb21tYW5kcy90b2dnbGVEYXJrTW9kZUNvbW1hbmQudHM/NWFmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi8uLi9jYWRcIjtcblxudmFyIGlzRGFya01vZGU6IGJvb2xlYW4gPSB0cnVlO1xuXG5jb25zdCByb290U3R5bGU6IEhUTUxTdHlsZUVsZW1lbnQgPSA8SFRNTFN0eWxlRWxlbWVudD5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCc6cm9vdCcpO1xuXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlRGFya01vZGUoKSB7XG4gIGlmIChpc0RhcmtNb2RlKSBzZXRMaWdodE1vZGUoKTtcbiAgZWxzZSBzZXREYXJrTW9kZSgpO1xufVxuXG5mdW5jdGlvbiBzZXRMaWdodE1vZGUoKSB7XG4gIGlzRGFya01vZGUgPSBmYWxzZTtcbiAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5zZXRDbGVhckNvbG9yKFswLjgsIDAuOCwgMC44LCAxLjBdKTtcbiAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDb25zdHJ1Y3Rpb25QbGFuZSgpLnNldE1ham9yQ29sb3IoWzAuMywgMC4yLCAwLjIsIDEuMF0pO1xuICBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENvbnN0cnVjdGlvblBsYW5lKCkuc2V0TWlub3JDb2xvcihbMC43LCAwLjYsIDAuNiwgMS4wXSk7XG4gIHJvb3RTdHlsZS5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tZmxvYXRpbmctd2luZG93LWJhY2tncm91bmQtY29sb3JcIiwgXCJ2YXIoLS10cmFuc3BhcmVudC13aGl0ZSlcIik7XG4gIHJvb3RTdHlsZS5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tZmxvYXRpbmctd2luZG93LXRleHQtY29sb3JcIiwgXCJ2YXIoLS1kYXJrLXJlZClcIik7XG4gIHJvb3RTdHlsZS5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tZmxvYXRpbmctd2luZG93LWJvcmRlci1jb2xvclwiLCBcInZhcigtLWRhcmstcmVkKVwiKTtcblxufVxuXG5mdW5jdGlvbiBzZXREYXJrTW9kZSgpIHtcbiAgaXNEYXJrTW9kZSA9IHRydWU7XG4gIElOU1RBTkNFLmdldFJlbmRlcmVyKCkuc2V0Q2xlYXJDb2xvcihbMC4xLCAwLjEsIDAuMSwgMS4wXSk7XG4gIElOU1RBTkNFLmdldFNjZW5lKCkuZ2V0Q29uc3RydWN0aW9uUGxhbmUoKS5zZXRNYWpvckNvbG9yKFsxLjAsIDAuOCwgMC44LCAxLjBdKTtcbiAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDb25zdHJ1Y3Rpb25QbGFuZSgpLnNldE1pbm9yQ29sb3IoWzAuNiwgMC40LCAwLjQsIDEuMF0pO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy1iYWNrZ3JvdW5kLWNvbG9yXCIsIFwidmFyKC0tdHJhbnNwYXJlbnQtYmxhY2spXCIpO1xuICByb290U3R5bGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWZsb2F0aW5nLXdpbmRvdy10ZXh0LWNvbG9yXCIsIFwidmFyKC0tbGlnaHQtcmVkKVwiKTtcbiAgcm9vdFN0eWxlLnN0eWxlLnNldFByb3BlcnR5KFwiLS1mbG9hdGluZy13aW5kb3ctYm9yZGVyLWNvbG9yXCIsIFwidmFyKC0tbGlnaHQtcmVkKVwiKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/commands/oneTimeCommands/toggleDarkModeCommand.ts\n");

/***/ }),

/***/ "./src/events/clickHandler.ts":
/*!************************************!*\
  !*** ./src/events/clickHandler.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClickHandler: () => (/* binding */ ClickHandler)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\nclass ClickHandler {\n    constructor() {\n        this.mouseDown = false;\n        this.shiftDown = false;\n        this.controlDown = false;\n        this.drag = null;\n    }\n    onMouseMove(event) {\n        var _a;\n        (_a = this.drag) === null || _a === void 0 ? void 0 : _a.update(event.clientX, event.clientY);\n    }\n    onMouseDown(event) {\n        if (event.button == 0) { // left click\n            this.drag = new Drag(event.clientX, event.clientY);\n            this.mouseDown = true;\n            this.shiftDown = event.shiftKey;\n            this.controlDown = event.ctrlKey;\n        }\n    }\n    onMouseUp(event) {\n        if (event.button == 0) { // left click\n            if (!this.drag.isDrag()) {\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCommandManager().handleClickInput(event);\n                _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getCli().render();\n            }\n            this.drag.destroy();\n            this.drag = null;\n            this.mouseDown = false;\n        }\n    }\n}\nclass Drag {\n    constructor(x1, y1) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.element = document.getElementById(\"selection-rectangle\");\n        this.update(this.x1, this.y1);\n        this.element.hidden = false;\n    }\n    update(x, y) {\n        this.x2 = x;\n        this.y2 = y;\n        const top = Math.min(this.y1, this.y2);\n        const bottom = Math.max(this.y1, this.y2);\n        const left = Math.min(this.x1, this.x2);\n        const right = Math.max(this.x1, this.x2);\n        this.element.style.left = `${left}px`;\n        this.element.style.top = `${top}px`;\n        this.element.style.width = `${right - left}px`;\n        this.element.style.height = `${bottom - top}px`;\n    }\n    isDrag() {\n        return this.x1 != this.x2 || this.y1 != this.y2;\n    }\n    destroy() {\n        this.element.hidden = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUksR0FBRyxHQUFHLElBQUksSUFBSSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxHQUFHLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQztRQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUM7SUFDbEQsQ0FBQztJQUVNLE1BQU07UUFDWCxPQUFPLElBQUksQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDbEQsQ0FBQztJQUVNLE9BQU87UUFDWixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDN0IsQ0FBQztDQUlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZXZlbnRzL2NsaWNrSGFuZGxlci50cz9mMmRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiO1xuXG5cblxuZXhwb3J0IGNsYXNzIENsaWNrSGFuZGxlciB7XG5cbiAgcHJpdmF0ZSBtb3VzZURvd246IGJvb2xlYW47XG4gIHByaXZhdGUgc2hpZnREb3duOiBib29sZWFuO1xuICBwcml2YXRlIGNvbnRyb2xEb3duOiBib29sZWFuO1xuICBwcml2YXRlIGRyYWc6IERyYWcgfCBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubW91c2VEb3duID0gZmFsc2U7XG4gICAgdGhpcy5zaGlmdERvd24gPSBmYWxzZTtcbiAgICB0aGlzLmNvbnRyb2xEb3duID0gZmFsc2U7XG4gICAgdGhpcy5kcmFnID0gbnVsbDtcbiAgfVxuXG4gIHB1YmxpYyBvbk1vdXNlTW92ZShldmVudDogTW91c2VFdmVudCk6IHZvaWQge1xuICAgIHRoaXMuZHJhZz8udXBkYXRlKGV2ZW50LmNsaWVudFgsIGV2ZW50LmNsaWVudFkpO1xuICB9XG5cbiAgcHVibGljIG9uTW91c2VEb3duKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgaWYgKGV2ZW50LmJ1dHRvbiA9PSAwKSB7IC8vIGxlZnQgY2xpY2tcblxuICAgICAgdGhpcy5kcmFnID0gbmV3IERyYWcoZXZlbnQuY2xpZW50WCwgZXZlbnQuY2xpZW50WSk7XG4gICAgICB0aGlzLm1vdXNlRG93biA9IHRydWU7XG4gICAgICB0aGlzLnNoaWZ0RG93biA9IGV2ZW50LnNoaWZ0S2V5O1xuICAgICAgdGhpcy5jb250cm9sRG93biA9IGV2ZW50LmN0cmxLZXk7XG5cbiAgICB9XG4gIH1cblxuICBwdWJsaWMgb25Nb3VzZVVwKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgaWYgKGV2ZW50LmJ1dHRvbiA9PSAwKSB7IC8vIGxlZnQgY2xpY2tcblxuICAgICAgaWYgKCF0aGlzLmRyYWchLmlzRHJhZygpKSB7XG4gICAgICAgIElOU1RBTkNFLmdldENvbW1hbmRNYW5hZ2VyKCkuaGFuZGxlQ2xpY2tJbnB1dChldmVudCk7XG4gICAgICAgIElOU1RBTkNFLmdldENsaSgpLnJlbmRlcigpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmRyYWchLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuZHJhZyA9IG51bGw7XG4gICAgICB0aGlzLm1vdXNlRG93biA9IGZhbHNlO1xuXG4gICAgfVxuICB9XG5cbn1cblxuXG5jbGFzcyBEcmFnIHtcblxuICBwcml2YXRlIHgyITogbnVtYmVyO1xuICBwcml2YXRlIHkyITogbnVtYmVyO1xuICBwcml2YXRlIGVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgeDE6IG51bWJlcixcbiAgICBwcml2YXRlIHkxOiBudW1iZXIsXG4gICkge1xuICAgIHRoaXMuZWxlbWVudCA9IDxIVE1MRGl2RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlbGVjdGlvbi1yZWN0YW5nbGVcIik7XG4gICAgdGhpcy51cGRhdGUodGhpcy54MSwgdGhpcy55MSk7XG4gICAgdGhpcy5lbGVtZW50LmhpZGRlbiA9IGZhbHNlO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZSh4OiBudW1iZXIsIHk6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMueDIgPSB4O1xuICAgIHRoaXMueTIgPSB5O1xuXG4gICAgY29uc3QgdG9wID0gTWF0aC5taW4odGhpcy55MSwgdGhpcy55Mik7XG4gICAgY29uc3QgYm90dG9tID0gTWF0aC5tYXgodGhpcy55MSwgdGhpcy55Mik7XG4gICAgY29uc3QgbGVmdCA9IE1hdGgubWluKHRoaXMueDEsIHRoaXMueDIpO1xuICAgIGNvbnN0IHJpZ2h0ID0gTWF0aC5tYXgodGhpcy54MSwgdGhpcy54Mik7XG5cbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCA9IGAke2xlZnR9cHhgO1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS50b3AgPSBgJHt0b3B9cHhgO1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS53aWR0aCA9IGAke3JpZ2h0IC0gbGVmdH1weGA7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLmhlaWdodCA9IGAke2JvdHRvbSAtIHRvcH1weGA7XG4gIH1cblxuICBwdWJsaWMgaXNEcmFnKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLngxICE9IHRoaXMueDIgfHwgdGhpcy55MSAhPSB0aGlzLnkyO1xuICB9XG5cbiAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmhpZGRlbiA9IHRydWU7XG4gIH1cblxuXG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/events/clickHandler.ts\n");

/***/ }),

/***/ "./src/events/eventManager.ts":
/*!************************************!*\
  !*** ./src/events/eventManager.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventManager: () => (/* binding */ EventManager)\n/* harmony export */ });\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mode */ \"./src/mode.ts\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _clickHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clickHandler */ \"./src/events/clickHandler.ts\");\n\n\n\nclass EventManager {\n    constructor() {\n        this.clickHandler = new _clickHandler__WEBPACK_IMPORTED_MODULE_2__.ClickHandler();\n        onmousemove = (event) => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getCommandManager().handleMouseMove(event);\n            this.clickHandler.onMouseMove(event);\n        };\n        onresize = () => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getRenderer().updateScreenSize();\n        };\n        onkeydown = (event) => {\n            if (event.code == \"Tab\") {\n                if (_cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Navigation) {\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.setMode(_mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Command);\n                }\n                else {\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getCli().clearInput();\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.setMode(_mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Navigation);\n                }\n                // prevent tab from chaging focus\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            else {\n                if (_cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_0__.OperatingMode.Command)\n                    _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getCli().processKeyDownEvent(event);\n            }\n        };\n        onfocus = () => {\n            _cad__WEBPACK_IMPORTED_MODULE_1__.INSTANCE.getStats().reset();\n        };\n        onmousedown = (event) => {\n            this.clickHandler.onMouseDown(event);\n        };\n        onmouseup = (event) => {\n            this.clickHandler.onMouseUp(event);\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXZlbnRzL2V2ZW50TWFuYWdlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVDO0FBQ047QUFDYTtBQUV2QyxNQUFNLFlBQVk7SUFJdkI7UUFFRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksdURBQVksRUFBRSxDQUFDO1FBRXZDLFdBQVcsR0FBRyxDQUFDLEtBQWlCLEVBQUUsRUFBRTtZQUNsQywwQ0FBUSxDQUFDLGlCQUFpQixFQUFFLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQztRQUVGLFFBQVEsR0FBRyxHQUFHLEVBQUU7WUFDZCwwQ0FBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDNUMsQ0FBQztRQUVELFNBQVMsR0FBRyxDQUFDLEtBQW9CLEVBQUUsRUFBRTtZQUNuQyxJQUFJLEtBQUssQ0FBQyxJQUFJLElBQUksS0FBSyxFQUFFO2dCQUN2QixJQUFJLDBDQUFRLENBQUMsT0FBTyxFQUFFLElBQUksZ0RBQWEsQ0FBQyxVQUFVLEVBQUU7b0JBQ2xELDBDQUFRLENBQUMsT0FBTyxDQUFDLGdEQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQ3pDO3FCQUFNO29CQUNMLDBDQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsVUFBVSxFQUFFLENBQUM7b0JBQy9CLDBDQUFRLENBQUMsT0FBTyxDQUFDLGdEQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7aUJBQzVDO2dCQUNELGlDQUFpQztnQkFDakMsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7YUFDekI7aUJBQU07Z0JBQ0wsSUFBSSwwQ0FBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLGdEQUFhLENBQUMsT0FBTztvQkFBRSwwQ0FBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQy9GO1FBQ0gsQ0FBQyxDQUFDO1FBRUYsT0FBTyxHQUFHLEdBQUcsRUFBRTtZQUNiLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDOUIsQ0FBQztRQUVELFdBQVcsR0FBRyxDQUFDLEtBQWlCLEVBQUUsRUFBRTtZQUNsQyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QyxDQUFDO1FBRUQsU0FBUyxHQUFHLENBQUMsS0FBaUIsRUFBRSxFQUFFO1lBQ2hDLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JDLENBQUM7SUFDSCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9ldmVudHMvZXZlbnRNYW5hZ2VyLnRzP2FkM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3BlcmF0aW5nTW9kZSB9IGZyb20gXCIuLi9tb2RlXCJcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiXG5pbXBvcnQgeyBDbGlja0hhbmRsZXIgfSBmcm9tIFwiLi9jbGlja0hhbmRsZXJcIjtcblxuZXhwb3J0IGNsYXNzIEV2ZW50TWFuYWdlciB7XG5cbiAgcHJpdmF0ZSBjbGlja0hhbmRsZXI6IENsaWNrSGFuZGxlcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcblxuICAgIHRoaXMuY2xpY2tIYW5kbGVyID0gbmV3IENsaWNrSGFuZGxlcigpO1xuXG4gICAgb25tb3VzZW1vdmUgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIElOU1RBTkNFLmdldENvbW1hbmRNYW5hZ2VyKCkuaGFuZGxlTW91c2VNb3ZlKGV2ZW50KTtcbiAgICAgIHRoaXMuY2xpY2tIYW5kbGVyLm9uTW91c2VNb3ZlKGV2ZW50KTtcbiAgICB9O1xuXG4gICAgb25yZXNpemUgPSAoKSA9PiB7XG4gICAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLnVwZGF0ZVNjcmVlblNpemUoKTtcbiAgICB9XG5cbiAgICBvbmtleWRvd24gPSAoZXZlbnQ6IEtleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5jb2RlID09IFwiVGFiXCIpIHtcbiAgICAgICAgaWYgKElOU1RBTkNFLmdldE1vZGUoKSA9PSBPcGVyYXRpbmdNb2RlLk5hdmlnYXRpb24pIHtcbiAgICAgICAgICBJTlNUQU5DRS5zZXRNb2RlKE9wZXJhdGluZ01vZGUuQ29tbWFuZCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgSU5TVEFOQ0UuZ2V0Q2xpKCkuY2xlYXJJbnB1dCgpO1xuICAgICAgICAgIElOU1RBTkNFLnNldE1vZGUoT3BlcmF0aW5nTW9kZS5OYXZpZ2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBwcmV2ZW50IHRhYiBmcm9tIGNoYWdpbmcgZm9jdXNcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoSU5TVEFOQ0UuZ2V0TW9kZSgpID09IE9wZXJhdGluZ01vZGUuQ29tbWFuZCkgSU5TVEFOQ0UuZ2V0Q2xpKCkucHJvY2Vzc0tleURvd25FdmVudChldmVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIG9uZm9jdXMgPSAoKSA9PiB7XG4gICAgICBJTlNUQU5DRS5nZXRTdGF0cygpLnJlc2V0KCk7XG4gICAgfVxuXG4gICAgb25tb3VzZWRvd24gPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIHRoaXMuY2xpY2tIYW5kbGVyLm9uTW91c2VEb3duKGV2ZW50KTtcbiAgICB9XG5cbiAgICBvbm1vdXNldXAgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIHRoaXMuY2xpY2tIYW5kbGVyLm9uTW91c2VVcChldmVudCk7XG4gICAgfVxuICB9XG5cbn1cblxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/events/eventManager.ts\n");

/***/ }),

/***/ "./src/geometry/boundingBox.ts":
/*!*************************************!*\
  !*** ./src/geometry/boundingBox.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoundingBox: () => (/* binding */ BoundingBox)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass BoundingBox {\n    constructor(xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, zMin = Infinity, zMax = -Infinity) {\n        this.xMin = xMin;\n        this.xMax = xMax;\n        this.yMin = yMin;\n        this.yMax = yMax;\n        this.zMin = zMin;\n        this.zMax = zMax;\n    }\n    getXMin() { return this.xMin; }\n    getYMin() { return this.yMin; }\n    getZMin() { return this.zMin; }\n    getXMax() { return this.xMax; }\n    getYMax() { return this.yMax; }\n    getZMax() { return this.zMax; }\n    print() {\n        console.log(`BB: x: [${this.xMin}, ${this.xMax}], y: [${this.yMin}, ${this.yMax}], z: [${this.zMin}, ${this.zMax}];`);\n    }\n    addVec3(v) {\n        this.xMin = Math.min(this.xMin, v[0]);\n        this.yMin = Math.min(this.yMin, v[1]);\n        this.zMin = Math.min(this.zMin, v[2]);\n        this.xMax = Math.max(this.xMax, v[0]);\n        this.yMax = Math.max(this.yMax, v[1]);\n        this.zMax = Math.max(this.zMax, v[2]);\n    }\n    addBoundingBox(bb) {\n        this.xMin = Math.min(this.xMin, bb.xMin);\n        this.yMin = Math.min(this.yMin, bb.yMin);\n        this.zMin = Math.min(this.zMin, bb.zMin);\n        this.xMax = Math.max(this.xMax, bb.xMax);\n        this.yMax = Math.max(this.yMax, bb.yMax);\n        this.zMax = Math.max(this.zMax, bb.zMax);\n    }\n    getCenter() {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.create((this.xMin + this.xMax) / 2, (this.yMin + this.yMax) / 2, (this.zMin + this.zMax) / 2);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvYm91bmRpbmdCb3gudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFFbEMsTUFBTSxXQUFXO0lBRXRCLFlBQ1UsT0FBZSxRQUFRLEVBQ3ZCLE9BQWUsQ0FBQyxRQUFRLEVBQ3hCLE9BQWUsUUFBUSxFQUN2QixPQUFlLENBQUMsUUFBUSxFQUN4QixPQUFlLFFBQVEsRUFDdkIsT0FBZSxDQUFDLFFBQVE7UUFMeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7UUFDeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7UUFDeEIsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFDdkIsU0FBSSxHQUFKLElBQUksQ0FBb0I7SUFHbEMsQ0FBQztJQUVNLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBRXZDLEtBQUs7UUFDVixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxVQUFVLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUksVUFBVSxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDO0lBQ3hILENBQUM7SUFFTSxPQUFPLENBQUMsQ0FBTztRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRU0sY0FBYyxDQUFDLEVBQWU7UUFDbkMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVNLFNBQVM7UUFDZCxPQUFPLDZDQUFJLENBQUMsTUFBTSxDQUNoQixDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFDM0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQzNCLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUM1QixDQUFDO0lBQ0osQ0FBQztDQUVGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvZ2VvbWV0cnkvYm91bmRpbmdCb3gudHM/ODcxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5cbmV4cG9ydCBjbGFzcyBCb3VuZGluZ0JveCB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB4TWluOiBudW1iZXIgPSBJbmZpbml0eSxcbiAgICBwcml2YXRlIHhNYXg6IG51bWJlciA9IC1JbmZpbml0eSxcbiAgICBwcml2YXRlIHlNaW46IG51bWJlciA9IEluZmluaXR5LFxuICAgIHByaXZhdGUgeU1heDogbnVtYmVyID0gLUluZmluaXR5LFxuICAgIHByaXZhdGUgek1pbjogbnVtYmVyID0gSW5maW5pdHksXG4gICAgcHJpdmF0ZSB6TWF4OiBudW1iZXIgPSAtSW5maW5pdHlcbiAgKSB7XG5cbiAgfVxuXG4gIHB1YmxpYyBnZXRYTWluKCk6IG51bWJlciB7IHJldHVybiB0aGlzLnhNaW47IH1cbiAgcHVibGljIGdldFlNaW4oKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMueU1pbjsgfVxuICBwdWJsaWMgZ2V0Wk1pbigpOiBudW1iZXIgeyByZXR1cm4gdGhpcy56TWluOyB9XG4gIHB1YmxpYyBnZXRYTWF4KCk6IG51bWJlciB7IHJldHVybiB0aGlzLnhNYXg7IH1cbiAgcHVibGljIGdldFlNYXgoKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMueU1heDsgfVxuICBwdWJsaWMgZ2V0Wk1heCgpOiBudW1iZXIgeyByZXR1cm4gdGhpcy56TWF4OyB9XG5cbiAgcHVibGljIHByaW50KCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKGBCQjogeDogWyR7dGhpcy54TWlufSwgJHt0aGlzLnhNYXh9XSwgeTogWyR7dGhpcy55TWlufSwgJHt0aGlzLnlNYXh9XSwgejogWyR7dGhpcy56TWlufSwgJHt0aGlzLnpNYXh9XTtgKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRWZWMzKHY6IFZlYzMpOiB2b2lkIHtcbiAgICB0aGlzLnhNaW4gPSBNYXRoLm1pbih0aGlzLnhNaW4sIHZbMF0pO1xuICAgIHRoaXMueU1pbiA9IE1hdGgubWluKHRoaXMueU1pbiwgdlsxXSk7XG4gICAgdGhpcy56TWluID0gTWF0aC5taW4odGhpcy56TWluLCB2WzJdKTtcbiAgICB0aGlzLnhNYXggPSBNYXRoLm1heCh0aGlzLnhNYXgsIHZbMF0pO1xuICAgIHRoaXMueU1heCA9IE1hdGgubWF4KHRoaXMueU1heCwgdlsxXSk7XG4gICAgdGhpcy56TWF4ID0gTWF0aC5tYXgodGhpcy56TWF4LCB2WzJdKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRCb3VuZGluZ0JveChiYjogQm91bmRpbmdCb3gpOiB2b2lkIHtcbiAgICB0aGlzLnhNaW4gPSBNYXRoLm1pbih0aGlzLnhNaW4sIGJiLnhNaW4pO1xuICAgIHRoaXMueU1pbiA9IE1hdGgubWluKHRoaXMueU1pbiwgYmIueU1pbik7XG4gICAgdGhpcy56TWluID0gTWF0aC5taW4odGhpcy56TWluLCBiYi56TWluKTtcbiAgICB0aGlzLnhNYXggPSBNYXRoLm1heCh0aGlzLnhNYXgsIGJiLnhNYXgpO1xuICAgIHRoaXMueU1heCA9IE1hdGgubWF4KHRoaXMueU1heCwgYmIueU1heCk7XG4gICAgdGhpcy56TWF4ID0gTWF0aC5tYXgodGhpcy56TWF4LCBiYi56TWF4KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDZW50ZXIoKTogVmVjMyB7XG4gICAgcmV0dXJuIHZlYzMuY3JlYXRlKFxuICAgICAgKHRoaXMueE1pbiArIHRoaXMueE1heCkgLyAyLFxuICAgICAgKHRoaXMueU1pbiArIHRoaXMueU1heCkgLyAyLFxuICAgICAgKHRoaXMuek1pbiArIHRoaXMuek1heCkgLyAyLFxuICAgICk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/boundingBox.ts\n");

/***/ }),

/***/ "./src/geometry/geometry.ts":
/*!**********************************!*\
  !*** ./src/geometry/geometry.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Geometry: () => (/* binding */ Geometry)\n/* harmony export */ });\nclass Geometry {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvZ2VvbWV0cnkudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUlPLE1BQWUsUUFBUTtDQU03QiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L2dlb21ldHJ5LnRzPzY5NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0NCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgQm91bmRpbmdCb3ggfSBmcm9tIFwiLi9ib3VuZGluZ0JveFwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4vcmF5XCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBHZW9tZXRyeSB7XG5cbiAgcHVibGljIGFic3RyYWN0IGdldEJvdW5kaW5nQm94KCk6IEJvdW5kaW5nQm94O1xuICBwdWJsaWMgYWJzdHJhY3QgZ2V0TW9kZWwoKTogTWF0NDtcbiAgcHVibGljIGFic3RyYWN0IGludGVyc2VjdChyYXk6IFJheSk6IG51bWJlciB8IG51bGw7XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/geometry.ts\n");

/***/ }),

/***/ "./src/geometry/line.ts":
/*!******************************!*\
  !*** ./src/geometry/line.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Line: () => (/* binding */ Line)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n\n\n\n\n\nclass Line extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(start, end, color, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.mat4.identity()) {\n        super();\n        this.start = start;\n        this.end = end;\n        this.color = color;\n        this.model = model;\n        this.renderLines = 0;\n        this.updateRenderLines();\n        this.updateBoundingBox();\n    }\n    intersect(ray) {\n        return ray.almostIntersectLine(this.start, this.end, 3);\n    }\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    updateRenderLines() {\n        // remove previous lines\n        if (this.renderLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n        // add new lines\n        this.renderLines = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(new Float32Array([...this.start, 1.0, ...this.end, 1.0]), new Int32Array([0, 1]), this.color));\n    }\n    getModel() {\n        return this.model;\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n    }\n    getStart() {\n        return this.start;\n    }\n    getEnd() {\n        return this.end;\n    }\n    updateEnd(point) {\n        this.end = point;\n        this.updateRenderLines();\n        this.updateBoundingBox();\n    }\n    getLength() {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.distance(this.start, this.end);\n    }\n    flip() {\n        [this.start, this.end] = [this.end, this.start];\n    }\n    updateBoundingBox() {\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        this.boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.start, this.model));\n        this.boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_4__.vec3.transformMat4(this.end, this.model));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNyRSxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9saW5lLnRzP2U4ZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0NCwgTWF0NCwgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCI7XG5pbXBvcnQgeyBSZW5kZXJMaW5lcyB9IGZyb20gXCIuLi9yZW5kZXIvcmVuZGVyTGluZXNcIjtcbmltcG9ydCB7IE9iamVjdElELCBSZW5kZXJJRCB9IGZyb20gXCIuLi9zY2VuZS9zY2VuZVwiO1xuaW1wb3J0IHsgQm91bmRpbmdCb3ggfSBmcm9tIFwiLi9ib3VuZGluZ0JveFwiO1xuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi9nZW9tZXRyeVwiO1xuaW1wb3J0IHsgUmF5IH0gZnJvbSBcIi4vcmF5XCI7XG5cblxuZXhwb3J0IGNsYXNzIExpbmUgZXh0ZW5kcyBHZW9tZXRyeSB7XG5cbiAgcHJpdmF0ZSByZW5kZXJMaW5lcyE6IFJlbmRlcklEO1xuICBwcml2YXRlIGJvdW5kaW5nQm94ITogQm91bmRpbmdCb3g7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBzdGFydDogVmVjMyxcbiAgICBwcml2YXRlIGVuZDogVmVjMyxcbiAgICBwcml2YXRlIGNvbG9yOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSxcbiAgICBwcml2YXRlIG1vZGVsOiBNYXQ0ID0gbWF0NC5pZGVudGl0eSgpXG4gICkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5yZW5kZXJMaW5lcyA9IDA7XG4gICAgdGhpcy51cGRhdGVSZW5kZXJMaW5lcygpO1xuICAgIHRoaXMudXBkYXRlQm91bmRpbmdCb3goKTtcbiAgfVxuXG4gIHB1YmxpYyBpbnRlcnNlY3QocmF5OiBSYXkpOiBudW1iZXIgfCBudWxsIHtcbiAgICByZXR1cm4gcmF5LmFsbW9zdEludGVyc2VjdExpbmUodGhpcy5zdGFydCwgdGhpcy5lbmQsIDMpO1xuICB9XG5cbiAgcHVibGljIGdldEJvdW5kaW5nQm94KCk6IEJvdW5kaW5nQm94IHtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveDtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlUmVuZGVyTGluZXMoKTogdm9pZCB7XG5cbiAgICAvLyByZW1vdmUgcHJldmlvdXMgbGluZXNcbiAgICBpZiAodGhpcy5yZW5kZXJMaW5lcykgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5yZW1vdmVMaW5lcyh0aGlzLnJlbmRlckxpbmVzKTtcblxuICAgIC8vIGFkZCBuZXcgbGluZXNcbiAgICB0aGlzLnJlbmRlckxpbmVzID0gSU5TVEFOQ0UuZ2V0U2NlbmUoKS5hZGRSZW5kZXJMaW5lcyhuZXcgUmVuZGVyTGluZXMoXG4gICAgICBuZXcgRmxvYXQzMkFycmF5KFsuLi50aGlzLnN0YXJ0LCAxLjAsIC4uLnRoaXMuZW5kLCAxLjBdKSxcbiAgICAgIG5ldyBJbnQzMkFycmF5KFswLCAxXSksXG4gICAgICB0aGlzLmNvbG9yXG4gICAgKSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TW9kZWwoKTogTWF0NCB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cblxuICBwdWJsaWMgZGVsZXRlKCk6IHZvaWQge1xuICAgIElOU1RBTkNFLmdldFNjZW5lKCkucmVtb3ZlTGluZXModGhpcy5yZW5kZXJMaW5lcyk7XG4gIH1cblxuICBwdWJsaWMgZ2V0U3RhcnQoKTogVmVjMyB7XG4gICAgcmV0dXJuIHRoaXMuc3RhcnQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0RW5kKCk6IFZlYzMge1xuICAgIHJldHVybiB0aGlzLmVuZDtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVFbmQocG9pbnQ6IFZlYzMpOiB2b2lkIHtcbiAgICB0aGlzLmVuZCA9IHBvaW50O1xuICAgIHRoaXMudXBkYXRlUmVuZGVyTGluZXMoKTtcbiAgICB0aGlzLnVwZGF0ZUJvdW5kaW5nQm94KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TGVuZ3RoKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHZlYzMuZGlzdGFuY2UodGhpcy5zdGFydCwgdGhpcy5lbmQpO1xuICB9XG5cbiAgcHVibGljIGZsaXAoKTogdm9pZCB7XG4gICAgW3RoaXMuc3RhcnQsIHRoaXMuZW5kXSA9IFt0aGlzLmVuZCwgdGhpcy5zdGFydF07XG4gIH1cbiAgcHJpdmF0ZSB1cGRhdGVCb3VuZGluZ0JveCgpOiB2b2lkIHtcbiAgICB0aGlzLmJvdW5kaW5nQm94ID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgdGhpcy5ib3VuZGluZ0JveC5hZGRWZWMzKHZlYzMudHJhbnNmb3JtTWF0NCh0aGlzLnN0YXJ0LCB0aGlzLm1vZGVsKSk7XG4gICAgdGhpcy5ib3VuZGluZ0JveC5hZGRWZWMzKHZlYzMudHJhbnNmb3JtTWF0NCh0aGlzLmVuZCwgdGhpcy5tb2RlbCkpO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/line.ts\n");

/***/ }),

/***/ "./src/geometry/lineBoundingBoxHeirarchy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/lineBoundingBoxHeirarchy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineBoundingBoxHeirarchy: () => (/* binding */ LineBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass LineBoundingBoxHeirarchyNode {\n    constructor(verts, indices, depth = 0) {\n        this.depth = depth;\n        this.setup(verts, indices);\n    }\n    setup(verts, indices) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (let index of indices) {\n            this.boundingBox.addVec3(verts[index]);\n        }\n        if (indices.length / 2 <= LineBoundingBoxHeirarchy.MAX_LINES_PER_LEAF) {\n            // leaf\n            this.indices = indices;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // non leaf\n            this.indices = null;\n            const child1Indices = [];\n            const child2Indices = [];\n            const bbCenter = this.boundingBox.getCenter();\n            for (let i = 0; i < indices.length; i += 2) {\n                const lineCenter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.add(verts[indices[i]], verts[indices[i + 1]]), 0.5);\n                if (lineCenter[this.axis] < bbCenter[this.axis]) {\n                    child1Indices.push(indices[i], indices[i + 1]);\n                }\n                else {\n                    child2Indices.push(indices[i], indices[i + 1]);\n                }\n            }\n            this.child1 = new LineBoundingBoxHeirarchyNode(verts, child1Indices, this.depth + 1);\n            this.child2 = new LineBoundingBoxHeirarchyNode(verts, child2Indices, this.depth + 1);\n        }\n    }\n    add(indices, verts) {\n        if (this.isLeaf()) {\n            this.indices.push(...indices);\n            if (this.indices.length / 2 < LineBoundingBoxHeirarchy.MAX_LINES_PER_LEAF) {\n                this.setup(verts, this.indices);\n            }\n        }\n        else {\n            const triCenterPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.add(verts[indices[0]], wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.add(verts[indices[1]], verts[indices[2]])), 1 / 3);\n            const bbCenterPoint = this.boundingBox.getCenter();\n            if (triCenterPoint[this.axis] < bbCenterPoint[this.axis]) {\n                this.child1.add(indices, verts);\n            }\n            else {\n                this.child2.add(indices, verts);\n            }\n        }\n    }\n    almostIntersect(ray, verts, pixels) {\n        if (ray.almostIntersectBoundingBox(this.boundingBox, pixels) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            for (let i = 0; i < this.indices.length; i += 2) {\n                var t = ray.almostIntersectLine(verts[this.indices[i]], verts[this.indices[i + 1]], pixels);\n                if (t !== null) {\n                    if (res === null)\n                        res = t;\n                    else\n                        res = Math.min(res, t);\n                }\n            }\n            return res;\n        }\n        else {\n            const t1 = this.child1.almostIntersect(ray, verts, pixels);\n            const t2 = this.child2.almostIntersect(ray, verts, pixels);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return Math.min(t1, t2);\n        }\n    }\n    isLeaf() {\n        return this.indices !== null;\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.indices)\n            str += `${this.indices.length / 2}lines`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n}\nclass LineBoundingBoxHeirarchy {\n    constructor(verts, indices) {\n        let reducedIndices = [];\n        for (let i = 0; i < indices.length; i += 2) {\n            const a = verts[indices[i]];\n            const b = verts[indices[i + 1]];\n            if (a[0] !== b[0] || a[1] !== b[1] || a[2] !== b[2]) {\n                reducedIndices.push(indices[i], indices[i + 1]);\n            }\n        }\n        this.root = new LineBoundingBoxHeirarchyNode(verts, reducedIndices);\n    }\n    print() {\n        console.log(\"========Line-BBH========\");\n        this.root.print();\n    }\n    almostIntersect(ray, verts, pixels) {\n        console.log(\"intersecting line bbh\");\n        return this.root.almostIntersect(ray, verts, pixels);\n    }\n}\nLineBoundingBoxHeirarchy.MAX_LINES_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/lineBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/mesh.ts":
/*!******************************!*\
  !*** ./src/geometry/mesh.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mesh: () => (/* binding */ Mesh)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderMesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderMesh */ \"./src/render/renderMesh.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./meshBoundingBoxHeirarchy */ \"./src/geometry/meshBoundingBoxHeirarchy.ts\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ray */ \"./src/geometry/ray.ts\");\n\n\n\n\n\n\n\nclass Mesh extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(verts, normals, indices, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.identity()) {\n        super();\n        this.verts = verts;\n        this.normals = normals;\n        this.indices = indices;\n        this.model = model;\n        const vertexBuffer = [];\n        for (let i = 0; i < verts.length; i++) {\n            vertexBuffer.push(...verts[i], 1, ...normals[i], 0);\n        }\n        this.renderMesh = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderMesh(new _render_renderMesh__WEBPACK_IMPORTED_MODULE_1__.RenderMesh(new Float32Array(vertexBuffer), new Int32Array(this.indices), new Float32Array([0, 1, 0, 1]), model));\n        this.boundingBoxHeirarchy = new _meshBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__.MeshBoundingBoxHeirarchy(this.verts, this.indices);\n    }\n    intersect(ray) {\n        const objectSpaceRay = _ray__WEBPACK_IMPORTED_MODULE_5__.Ray.transform(ray, wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.mat4.inverse(this.model));\n        return this.boundingBoxHeirarchy.intersect(objectSpaceRay, this.verts);\n    }\n    getModel() {\n        return this.model;\n    }\n    destroy() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeMesh(this.renderMesh);\n    }\n    getBoundingBox() {\n        const bb = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        this.verts.forEach((vert) => {\n            bb.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_6__.vec3.transformMat4(vert, this.model));\n        });\n        return bb;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvbWVzaC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFxRDtBQUNuQjtBQUNnQjtBQUVOO0FBQ047QUFDZ0M7QUFDMUM7QUFJckIsTUFBTSxJQUFLLFNBQVEsK0NBQVE7SUFNaEMsWUFDVSxLQUFhLEVBQ2IsT0FBZSxFQUNmLE9BQWlCLEVBQ2pCLFFBQWMsNkNBQUksQ0FBQyxRQUFRLEVBQUU7UUFFckMsS0FBSyxFQUFFLENBQUM7UUFMQSxVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUNmLFlBQU8sR0FBUCxPQUFPLENBQVU7UUFDakIsVUFBSyxHQUFMLEtBQUssQ0FBd0I7UUFHckMsTUFBTSxZQUFZLEdBQWEsRUFBRSxDQUFDO1FBQ2xDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ3JEO1FBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLDBEQUFVLENBQ2hFLElBQUksWUFBWSxDQUFDLFlBQVksQ0FBQyxFQUM5QixJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQzVCLElBQUksWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFDOUIsS0FBSyxDQUNOLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLCtFQUF3QixDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JGLENBQUM7SUFFTSxTQUFTLENBQUMsR0FBUTtRQUN2QixNQUFNLGNBQWMsR0FBUSxxQ0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsNkNBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekUsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsU0FBUyxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVNLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVNLE9BQU87UUFDWiwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVNLGNBQWM7UUFDbkIsTUFBTSxFQUFFLEdBQWdCLElBQUkscURBQVcsRUFBRSxDQUFDO1FBQzFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBVSxFQUFFLEVBQUU7WUFDaEMsRUFBRSxDQUFDLE9BQU8sQ0FBQyw2Q0FBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkQsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L21lc2gudHM/YzA0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXQ0LCBNYXQ0LCB2ZWMzLCBWZWMzIH0gZnJvbSBcIndncHUtbWF0cml4XCI7XG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIjtcbmltcG9ydCB7IFJlbmRlck1lc2ggfSBmcm9tIFwiLi4vcmVuZGVyL3JlbmRlck1lc2hcIjtcbmltcG9ydCB7IFJlbmRlcklEIH0gZnJvbSBcIi4uL3NjZW5lL3NjZW5lXCI7XG5pbXBvcnQgeyBCb3VuZGluZ0JveCB9IGZyb20gXCIuL2JvdW5kaW5nQm94XCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBNZXNoQm91bmRpbmdCb3hIZWlyYXJjaHkgfSBmcm9tIFwiLi9tZXNoQm91bmRpbmdCb3hIZWlyYXJjaHlcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuL3JheVwiO1xuXG5cblxuZXhwb3J0IGNsYXNzIE1lc2ggZXh0ZW5kcyBHZW9tZXRyeSB7XG5cblxuICBwcml2YXRlIHJlbmRlck1lc2g6IFJlbmRlcklEO1xuICBwcml2YXRlIGJvdW5kaW5nQm94SGVpcmFyY2h5OiBNZXNoQm91bmRpbmdCb3hIZWlyYXJjaHk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB2ZXJ0czogVmVjM1tdLFxuICAgIHByaXZhdGUgbm9ybWFsczogVmVjM1tdLFxuICAgIHByaXZhdGUgaW5kaWNlczogbnVtYmVyW10sXG4gICAgcHJpdmF0ZSBtb2RlbDogTWF0NCA9IG1hdDQuaWRlbnRpdHkoKVxuICApIHtcbiAgICBzdXBlcigpO1xuICAgIGNvbnN0IHZlcnRleEJ1ZmZlcjogbnVtYmVyW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZlcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2ZXJ0ZXhCdWZmZXIucHVzaCguLi52ZXJ0c1tpXSwgMSwgLi4ubm9ybWFsc1tpXSwgMCk7XG4gICAgfVxuICAgIHRoaXMucmVuZGVyTWVzaCA9IElOU1RBTkNFLmdldFNjZW5lKCkuYWRkUmVuZGVyTWVzaChuZXcgUmVuZGVyTWVzaChcbiAgICAgIG5ldyBGbG9hdDMyQXJyYXkodmVydGV4QnVmZmVyKSxcbiAgICAgIG5ldyBJbnQzMkFycmF5KHRoaXMuaW5kaWNlcyksXG4gICAgICBuZXcgRmxvYXQzMkFycmF5KFswLCAxLCAwLCAxXSksXG4gICAgICBtb2RlbFxuICAgICkpO1xuICAgIHRoaXMuYm91bmRpbmdCb3hIZWlyYXJjaHkgPSBuZXcgTWVzaEJvdW5kaW5nQm94SGVpcmFyY2h5KHRoaXMudmVydHMsIHRoaXMuaW5kaWNlcyk7XG4gIH1cblxuICBwdWJsaWMgaW50ZXJzZWN0KHJheTogUmF5KTogbnVtYmVyIHwgbnVsbCB7XG4gICAgY29uc3Qgb2JqZWN0U3BhY2VSYXk6IFJheSA9IFJheS50cmFuc2Zvcm0ocmF5LCBtYXQ0LmludmVyc2UodGhpcy5tb2RlbCkpO1xuICAgIHJldHVybiB0aGlzLmJvdW5kaW5nQm94SGVpcmFyY2h5LmludGVyc2VjdChvYmplY3RTcGFjZVJheSwgdGhpcy52ZXJ0cyk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TW9kZWwoKTogTWF0NCB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cblxuICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHtcbiAgICBJTlNUQU5DRS5nZXRTY2VuZSgpLnJlbW92ZU1lc2godGhpcy5yZW5kZXJNZXNoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCb3VuZGluZ0JveCgpOiBCb3VuZGluZ0JveCB7XG4gICAgY29uc3QgYmI6IEJvdW5kaW5nQm94ID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgdGhpcy52ZXJ0cy5mb3JFYWNoKCh2ZXJ0OiBWZWMzKSA9PiB7XG4gICAgICBiYi5hZGRWZWMzKHZlYzMudHJhbnNmb3JtTWF0NCh2ZXJ0LCB0aGlzLm1vZGVsKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGJiO1xuICB9XG5cbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/geometry/mesh.ts\n");

/***/ }),

/***/ "./src/geometry/meshBoundingBoxHeirarchy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/meshBoundingBoxHeirarchy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MeshBoundingBoxHeirarchy: () => (/* binding */ MeshBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass MeshBoundingBoxHeirarchyNode {\n    constructor(verts, indices, depth = 0) {\n        this.depth = depth;\n        this.setup(verts, indices);\n    }\n    setup(verts, indices) {\n        this.axis = this.depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        for (let index of indices) {\n            this.boundingBox.addVec3(verts[index]);\n        }\n        if (indices.length / 3 <= MeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF) {\n            // leaf\n            this.indices = indices;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // non leaf\n            this.indices = null;\n            const child1Indices = [];\n            const child2Indices = [];\n            for (let i = 0; i < indices.length; i += 3) {\n                const triCenter = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.add(verts[indices[i]], wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.add(verts[indices[i + 1]], verts[indices[i + 1]])), 1 / 3);\n                const bbCenter = this.boundingBox.getCenter();\n                if (triCenter[this.axis] < bbCenter[this.axis]) {\n                    child1Indices.push(indices[i], indices[i + 1], indices[i + 2]);\n                }\n                else {\n                    child2Indices.push(indices[i], indices[i + 1], indices[i + 2]);\n                }\n            }\n            this.child1 = new MeshBoundingBoxHeirarchyNode(verts, child1Indices, this.depth + 1);\n            this.child2 = new MeshBoundingBoxHeirarchyNode(verts, child2Indices, this.depth + 1);\n        }\n    }\n    add(indices, verts) {\n        if (this.isLeaf()) {\n            this.indices.push(...indices);\n            if (this.indices.length / 3 < MeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF) {\n                this.setup(verts, this.indices);\n            }\n        }\n        else {\n            const triCenterPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.scale(wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.add(verts[indices[0]], wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.vec3.add(verts[indices[1]], verts[indices[2]])), 1 / 3);\n            const bbCenterPoint = this.boundingBox.getCenter();\n            if (triCenterPoint[this.axis] < bbCenterPoint[this.axis]) {\n                this.child1.add(indices, verts);\n            }\n            else {\n                this.child2.add(indices, verts);\n            }\n        }\n    }\n    intersect(ray, verts) {\n        if (ray.intersectBoundingBox(this.boundingBox) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            for (let i = 0; i < this.indices.length; i += 3) {\n                var t = ray.intersectTriangle(verts[this.indices[i]], verts[this.indices[i + 1]], verts[this.indices[i + 2]]);\n                if (t !== null) {\n                    if (res === null)\n                        res = t;\n                    else\n                        res = Math.min(res, t);\n                }\n            }\n            return res;\n        }\n        else {\n            const t1 = this.child1.intersect(ray, verts);\n            const t2 = this.child2.intersect(ray, verts);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return Math.min(t1, t2);\n        }\n    }\n    isLeaf() {\n        return this.indices !== null;\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.indices)\n            str += `${this.indices.length / 3}triangles`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n}\nclass MeshBoundingBoxHeirarchy {\n    constructor(verts, indices) {\n        this.root = new MeshBoundingBoxHeirarchyNode(verts, indices);\n    }\n    print() {\n        console.log(\"========Mesh-BBH========\");\n        this.root.print();\n    }\n    intersect(ray, verts) {\n        console.log(\"intersecting mesh bbh\");\n        return this.root.intersect(ray, verts);\n    }\n}\nMeshBoundingBoxHeirarchy.MAX_TRIS_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/meshBoundingBoxHeirarchy.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/curve.ts":
/*!*************************************!*\
  !*** ./src/geometry/nurbs/curve.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Curve: () => (/* binding */ Curve)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _polyLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../polyLine */ \"./src/geometry/polyLine.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/geometry/nurbs/utils.ts\");\n\n\n\n\nclass Curve extends _geometry__WEBPACK_IMPORTED_MODULE_0__.Geometry {\n    constructor(controlPoints, degree, knots = []) {\n        super();\n        this.controlPoints = controlPoints;\n        this.degree = degree;\n        this.knots = knots;\n        if (this.knots.length == 0) {\n            this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.genericKnotVector)(this.controlPoints.length, this.degree);\n        }\n        this.controlCage = null;\n        this.polyline = null;\n        this.updateSamples();\n    }\n    getModel() {\n        return this.controlCage.getModel();\n    }\n    intersect(ray) {\n        return this.polyline.intersect(ray);\n    }\n    getBoundingBox() {\n        return this.controlCage.getBoundingBox();\n    }\n    getDegree() {\n        return this.degree;\n    }\n    destroy() {\n        this.controlCage.delete();\n        this.polyline.delete();\n    }\n    addControlPoint(point, weight) {\n        this.controlPoints.push(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...point, weight));\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.genericKnotVector)(this.controlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    updateLastControlPoint(point, weight) {\n        this.controlPoints[this.controlPoints.length - 1] = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(...point, weight);\n        this.updateSamples();\n    }\n    removeLastControlPoint() {\n        this.controlPoints.pop();\n        if (this.degree === this.controlPoints.length)\n            this.degree--;\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.genericKnotVector)(this.controlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    elevateDegree(count) {\n        this.degree += count;\n        this.knots = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.genericKnotVector)(this.controlPoints.length, this.degree);\n        this.updateSamples();\n    }\n    getControlPointCount() {\n        return this.controlPoints.length;\n    }\n    updateSamples() {\n        if (this.controlCage)\n            this.controlCage.delete();\n        if (this.polyline)\n            this.polyline.delete();\n        const samples = [];\n        const sampleCount = Curve.SAMPLES_PER_EDGE * (this.controlPoints.length - 1);\n        for (let i = 0; i <= sampleCount; i++) {\n            samples.push(this.sample(i / sampleCount));\n        }\n        this.polyline = new _polyLine__WEBPACK_IMPORTED_MODULE_1__.PolyLine(samples.map((point) => { return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(point[0] / point[3], point[1] / point[3], point[2] / point[3]); }), [0, 1, 0, 1]);\n        this.controlCage = new _polyLine__WEBPACK_IMPORTED_MODULE_1__.PolyLine(this.controlPoints.map((point) => { return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(point[0], point[1], point[2]); }), [0, 0, 1, 1]);\n    }\n    sample(t) {\n        const u = t * (this.knots.at(-1) - this.knots.at(0));\n        const knotSpan = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.span)(this.knots, u, this.degree);\n        const funcs = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.basisFuncs)(this.knots, u, this.degree);\n        let res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(0, 0, 0, 0);\n        for (let i = 0; i <= this.degree; i++) {\n            res = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.add(res, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.scale(this.controlPoints[knotSpan - this.degree + i], funcs[i]));\n        }\n        return res;\n    }\n}\nCurve.SAMPLES_PER_EDGE = 10;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/curve.ts\n");

/***/ }),

/***/ "./src/geometry/nurbs/utils.ts":
/*!*************************************!*\
  !*** ./src/geometry/nurbs/utils.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   basisFuncs: () => (/* binding */ basisFuncs),\n/* harmony export */   genericKnotVector: () => (/* binding */ genericKnotVector),\n/* harmony export */   span: () => (/* binding */ span)\n/* harmony export */ });\nconst span = function (knots, u, p) {\n    const n = knots.length - p - 2;\n    let l = p;\n    let h = n;\n    let m;\n    while (l < h) {\n        m = Math.floor((l + h) / 2);\n        if (u >= knots[m + 1])\n            l = m + 1;\n        else\n            h = m;\n    }\n    return l;\n};\nconst basisFuncs = function (knots, u, p) {\n    const funcs = [1];\n    const i = span(knots, u, p);\n    const left = (i, j) => { return u - knots[i - j + 1]; };\n    const right = (i, j) => { return knots[i + j] - u; };\n    for (let j = 1; j <= p; j++) {\n        let saved = 0;\n        for (let r = 0; r < j; r++) {\n            const temp = funcs[r] / (right(i, r + 1) + left(i, j - r));\n            funcs[r] = saved + right(i, r + 1) * temp;\n            saved = left(i, j - r) * temp;\n        }\n        funcs.push(saved);\n    }\n    return funcs;\n};\nconst genericKnotVector = function (pointCount, degree) {\n    const res = [];\n    for (let i = 0; i <= degree; i++)\n        res.push(0);\n    for (let i = 1; i < pointCount - degree; i++)\n        res.push(i);\n    for (let i = 0; i <= degree; i++)\n        res.push(pointCount - degree);\n    return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvbnVyYnMvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTSxJQUFJLEdBQUcsVUFBUyxLQUFlLEVBQUUsQ0FBUyxFQUFFLENBQVM7SUFDaEUsTUFBTSxDQUFDLEdBQVcsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZDLElBQUksQ0FBQyxHQUFXLENBQUMsQ0FBQztJQUNsQixJQUFJLENBQUMsR0FBVyxDQUFDLENBQUM7SUFDbEIsSUFBSSxDQUFTLENBQUM7SUFDZCxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDWixDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDOztZQUM1QixDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ1o7SUFDRCxPQUFPLENBQUMsQ0FBQztBQUNYLENBQUM7QUFFTSxNQUFNLFVBQVUsR0FBRyxVQUFTLEtBQWUsRUFBRSxDQUFTLEVBQUUsQ0FBUztJQUN0RSxNQUFNLEtBQUssR0FBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEUsTUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxFQUFFLEVBQUUsR0FBRyxPQUFPLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDM0IsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMxQixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNELEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQzFDLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDL0I7UUFDRCxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ25CO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBR00sTUFBTSxpQkFBaUIsR0FBRyxVQUFTLFVBQWtCLEVBQUUsTUFBYztJQUMxRSxNQUFNLEdBQUcsR0FBYSxFQUFFLENBQUM7SUFDekIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLE1BQU0sRUFBRSxDQUFDLEVBQUU7UUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLEdBQUcsTUFBTSxFQUFFLENBQUMsRUFBRTtRQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLE1BQU0sRUFBRSxDQUFDLEVBQUU7UUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsQ0FBQztJQUNoRSxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9nZW9tZXRyeS9udXJicy91dGlscy50cz9jNTI2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzcGFuID0gZnVuY3Rpb24oa25vdHM6IG51bWJlcltdLCB1OiBudW1iZXIsIHA6IG51bWJlcik6IG51bWJlciB7XG4gIGNvbnN0IG46IG51bWJlciA9IGtub3RzLmxlbmd0aCAtIHAgLSAyO1xuICBsZXQgbDogbnVtYmVyID0gcDtcbiAgbGV0IGg6IG51bWJlciA9IG47XG4gIGxldCBtOiBudW1iZXI7XG4gIHdoaWxlIChsIDwgaCkge1xuICAgIG0gPSBNYXRoLmZsb29yKChsICsgaCkgLyAyKTtcbiAgICBpZiAodSA+PSBrbm90c1ttICsgMV0pIGwgPSBtICsgMTtcbiAgICBlbHNlIGggPSBtO1xuICB9XG4gIHJldHVybiBsO1xufVxuXG5leHBvcnQgY29uc3QgYmFzaXNGdW5jcyA9IGZ1bmN0aW9uKGtub3RzOiBudW1iZXJbXSwgdTogbnVtYmVyLCBwOiBudW1iZXIpOiBudW1iZXJbXSB7XG4gIGNvbnN0IGZ1bmNzOiBudW1iZXJbXSA9IFsxXTtcbiAgY29uc3QgaSA9IHNwYW4oa25vdHMsIHUsIHApO1xuICBjb25zdCBsZWZ0ID0gKGk6IG51bWJlciwgajogbnVtYmVyKSA9PiB7IHJldHVybiB1IC0ga25vdHNbaSAtIGogKyAxXTsgfTtcbiAgY29uc3QgcmlnaHQgPSAoaTogbnVtYmVyLCBqOiBudW1iZXIpID0+IHsgcmV0dXJuIGtub3RzW2kgKyBqXSAtIHU7IH07XG4gIGZvciAobGV0IGogPSAxOyBqIDw9IHA7IGorKykge1xuICAgIGxldCBzYXZlZCA9IDA7XG4gICAgZm9yIChsZXQgciA9IDA7IHIgPCBqOyByKyspIHtcbiAgICAgIGNvbnN0IHRlbXAgPSBmdW5jc1tyXSAvIChyaWdodChpLCByICsgMSkgKyBsZWZ0KGksIGogLSByKSk7XG4gICAgICBmdW5jc1tyXSA9IHNhdmVkICsgcmlnaHQoaSwgciArIDEpICogdGVtcDtcbiAgICAgIHNhdmVkID0gbGVmdChpLCBqIC0gcikgKiB0ZW1wO1xuICAgIH1cbiAgICBmdW5jcy5wdXNoKHNhdmVkKTtcbiAgfVxuICByZXR1cm4gZnVuY3M7XG59XG5cblxuZXhwb3J0IGNvbnN0IGdlbmVyaWNLbm90VmVjdG9yID0gZnVuY3Rpb24ocG9pbnRDb3VudDogbnVtYmVyLCBkZWdyZWU6IG51bWJlcik6IG51bWJlcltdIHtcbiAgY29uc3QgcmVzOiBudW1iZXJbXSA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8PSBkZWdyZWU7IGkrKykgcmVzLnB1c2goMCk7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgcG9pbnRDb3VudCAtIGRlZ3JlZTsgaSsrKSAgcmVzLnB1c2goaSk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDw9IGRlZ3JlZTsgaSsrKSByZXMucHVzaChwb2ludENvdW50IC0gZGVncmVlKTtcbiAgcmV0dXJuIHJlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/nurbs/utils.ts\n");

/***/ }),

/***/ "./src/geometry/plane.ts":
/*!*******************************!*\
  !*** ./src/geometry/plane.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Plane: () => (/* binding */ Plane)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\nclass Plane {\n    constructor(origin, normal) {\n        this.origin = origin;\n        this.normal = normal;\n        this.normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_0__.vec3.normalize(this.normal);\n    }\n    getOrigin() {\n        return this.origin;\n    }\n    getNormal() {\n        return this.normal;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvcGxhbmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFHakMsTUFBTSxLQUFLO0lBRWQsWUFDWSxNQUFZLEVBQ1osTUFBWTtRQURaLFdBQU0sR0FBTixNQUFNLENBQU07UUFDWixXQUFNLEdBQU4sTUFBTSxDQUFNO1FBRXBCLElBQUksQ0FBQyxNQUFNLEdBQUcsNkNBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Q0FFSiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L3BsYW5lLnRzPzg2M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiXG5cblxuZXhwb3J0IGNsYXNzIFBsYW5lIHtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIG9yaWdpbjogVmVjMyxcbiAgICAgICAgcHJpdmF0ZSBub3JtYWw6IFZlYzNcbiAgICApIHtcbiAgICAgICAgdGhpcy5ub3JtYWwgPSB2ZWMzLm5vcm1hbGl6ZSh0aGlzLm5vcm1hbCk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldE9yaWdpbigpOiBWZWMzIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXROb3JtYWwoKTogVmVjMyB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vcm1hbDtcbiAgICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/plane.ts\n");

/***/ }),

/***/ "./src/geometry/polyLine.ts":
/*!**********************************!*\
  !*** ./src/geometry/polyLine.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PolyLine: () => (/* binding */ PolyLine)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./src/geometry/geometry.ts\");\n/* harmony import */ var _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lineBoundingBoxHeirarchy */ \"./src/geometry/lineBoundingBoxHeirarchy.ts\");\n\n\n\n\n\n\nclass PolyLine extends _geometry__WEBPACK_IMPORTED_MODULE_3__.Geometry {\n    constructor(points, color, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.mat4.identity()) {\n        super();\n        this.points = points;\n        this.color = color;\n        this.model = model;\n        this.renderLines = 0;\n        this.update();\n    }\n    intersect(ray) {\n        return this.boundingBoxHeirarchy.almostIntersect(ray, this.points, 3);\n    }\n    getModel() {\n        return this.model;\n    }\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    getSegmentCount() {\n        return this.points.length - 1;\n    }\n    updateLastPoint(point) {\n        this.points[this.points.length - 1] = point;\n        this.update();\n    }\n    removeLastPoint() {\n        this.points.pop();\n        this.update();\n    }\n    addPoint(point) {\n        this.points.push(point);\n        this.update();\n    }\n    delete() {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n    }\n    update() {\n        if (this.renderLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.renderLines);\n        const verts = [];\n        const indices = [];\n        for (let i = 0; i < this.points.length; i++) {\n            verts.push(...this.points[i], 1.0);\n            indices.push(i, i + 1);\n        }\n        indices.pop();\n        indices.pop();\n        this.renderLines = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(new Float32Array(verts), new Int32Array(indices), this.color));\n        this.updateBoundingBox();\n        this.boundingBoxHeirarchy = new _lineBoundingBoxHeirarchy__WEBPACK_IMPORTED_MODULE_4__.LineBoundingBoxHeirarchy(this.points, indices);\n    }\n    updateBoundingBox() {\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_2__.BoundingBox();\n        this.points.forEach((point) => {\n            this.boundingBox.addVec3(wgpu_matrix__WEBPACK_IMPORTED_MODULE_5__.vec3.transformMat4(point, this.model));\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvbWV0cnkvcG9seUxpbmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFxRDtBQUNuQjtBQUNrQjtBQUVSO0FBQ047QUFDZ0M7QUFJL0QsTUFBTSxRQUFTLFNBQVEsK0NBQVE7SUFNcEMsWUFDVSxNQUFjLEVBQ2QsS0FBdUMsRUFDdkMsUUFBYyw2Q0FBSSxDQUFDLFFBQVEsRUFBRTtRQUVyQyxLQUFLLEVBQUUsQ0FBQztRQUpBLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxVQUFLLEdBQUwsS0FBSyxDQUFrQztRQUN2QyxVQUFLLEdBQUwsS0FBSyxDQUF3QjtRQUdyQyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztRQUNyQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLFNBQVMsQ0FBQyxHQUFRO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLGVBQWUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRU0sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRU0sY0FBYztRQUNuQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVNLGVBQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLGVBQWUsQ0FBQyxLQUFXO1FBQ2hDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQzVDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRU0sZUFBZTtRQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRU0sUUFBUSxDQUFDLEtBQVc7UUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxNQUFNO1FBQ1gsMENBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFTyxNQUFNO1FBQ1osSUFBSSxJQUFJLENBQUMsV0FBVztZQUFFLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN4RSxNQUFNLEtBQUssR0FBYSxFQUFFLENBQUM7UUFDM0IsTUFBTSxPQUFPLEdBQWEsRUFBRSxDQUFDO1FBQzdCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUNuQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDeEI7UUFDRCxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7UUFBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDN0IsSUFBSSxDQUFDLFdBQVcsR0FBRywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLGNBQWMsQ0FBQyxJQUFJLDREQUFXLENBQ25FLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUN2QixJQUFJLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFDdkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUV6QixJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSwrRUFBd0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFFTyxpQkFBaUI7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLHFEQUFXLEVBQUUsQ0FBQztRQUNyQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQVcsRUFBRSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLDZDQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNsRSxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL2dlb21ldHJ5L3BvbHlMaW5lLnRzP2ExZjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF0NCwgTWF0NCwgdmVjMywgVmVjMyB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiO1xuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCI7XG5pbXBvcnQgeyBSZW5kZXJMaW5lcyB9IGZyb20gXCIuLi9yZW5kZXIvcmVuZGVyTGluZXNcIjtcbmltcG9ydCB7IFJlbmRlcklEIH0gZnJvbSBcIi4uL3NjZW5lL3NjZW5lXCI7XG5pbXBvcnQgeyBCb3VuZGluZ0JveCB9IGZyb20gXCIuL2JvdW5kaW5nQm94XCI7XG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL2dlb21ldHJ5XCI7XG5pbXBvcnQgeyBMaW5lQm91bmRpbmdCb3hIZWlyYXJjaHkgfSBmcm9tIFwiLi9saW5lQm91bmRpbmdCb3hIZWlyYXJjaHlcIjtcbmltcG9ydCB7IFJheSB9IGZyb20gXCIuL3JheVwiO1xuXG5cbmV4cG9ydCBjbGFzcyBQb2x5TGluZSBleHRlbmRzIEdlb21ldHJ5IHtcblxuICBwcml2YXRlIHJlbmRlckxpbmVzITogUmVuZGVySUQ7XG4gIHByaXZhdGUgYm91bmRpbmdCb3ghOiBCb3VuZGluZ0JveDtcbiAgcHJpdmF0ZSBib3VuZGluZ0JveEhlaXJhcmNoeSE6IExpbmVCb3VuZGluZ0JveEhlaXJhcmNoeTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHBvaW50czogVmVjM1tdLFxuICAgIHByaXZhdGUgY29sb3I6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLFxuICAgIHByaXZhdGUgbW9kZWw6IE1hdDQgPSBtYXQ0LmlkZW50aXR5KClcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnJlbmRlckxpbmVzID0gMDtcbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIGludGVyc2VjdChyYXk6IFJheSk6IG51bWJlciB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLmJvdW5kaW5nQm94SGVpcmFyY2h5LmFsbW9zdEludGVyc2VjdChyYXksIHRoaXMucG9pbnRzLCAzKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRNb2RlbCgpOiBNYXQ0IHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCb3VuZGluZ0JveCgpOiBCb3VuZGluZ0JveCB7XG4gICAgcmV0dXJuIHRoaXMuYm91bmRpbmdCb3g7XG4gIH1cblxuICBwdWJsaWMgZ2V0U2VnbWVudENvdW50KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMucG9pbnRzLmxlbmd0aCAtIDE7XG4gIH1cblxuICBwdWJsaWMgdXBkYXRlTGFzdFBvaW50KHBvaW50OiBWZWMzKTogdm9pZCB7XG4gICAgdGhpcy5wb2ludHNbdGhpcy5wb2ludHMubGVuZ3RoIC0gMV0gPSBwb2ludDtcbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZUxhc3RQb2ludCgpOiB2b2lkIHtcbiAgICB0aGlzLnBvaW50cy5wb3AoKTtcbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIGFkZFBvaW50KHBvaW50OiBWZWMzKTogdm9pZCB7XG4gICAgdGhpcy5wb2ludHMucHVzaChwb2ludCk7XG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxuXG4gIHB1YmxpYyBkZWxldGUoKTogdm9pZCB7XG4gICAgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5yZW1vdmVMaW5lcyh0aGlzLnJlbmRlckxpbmVzKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnJlbmRlckxpbmVzKSBJTlNUQU5DRS5nZXRTY2VuZSgpLnJlbW92ZUxpbmVzKHRoaXMucmVuZGVyTGluZXMpO1xuICAgIGNvbnN0IHZlcnRzOiBudW1iZXJbXSA9IFtdO1xuICAgIGNvbnN0IGluZGljZXM6IG51bWJlcltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmVydHMucHVzaCguLi50aGlzLnBvaW50c1tpXSwgMS4wKTtcbiAgICAgIGluZGljZXMucHVzaChpLCBpICsgMSk7XG4gICAgfVxuICAgIGluZGljZXMucG9wKCk7IGluZGljZXMucG9wKCk7XG4gICAgdGhpcy5yZW5kZXJMaW5lcyA9IElOU1RBTkNFLmdldFNjZW5lKCkuYWRkUmVuZGVyTGluZXMobmV3IFJlbmRlckxpbmVzKFxuICAgICAgbmV3IEZsb2F0MzJBcnJheSh2ZXJ0cyksXG4gICAgICBuZXcgSW50MzJBcnJheShpbmRpY2VzKSxcbiAgICAgIHRoaXMuY29sb3IpKTtcbiAgICB0aGlzLnVwZGF0ZUJvdW5kaW5nQm94KCk7XG5cbiAgICB0aGlzLmJvdW5kaW5nQm94SGVpcmFyY2h5ID0gbmV3IExpbmVCb3VuZGluZ0JveEhlaXJhcmNoeSh0aGlzLnBvaW50cywgaW5kaWNlcyk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUJvdW5kaW5nQm94KCk6IHZvaWQge1xuICAgIHRoaXMuYm91bmRpbmdCb3ggPSBuZXcgQm91bmRpbmdCb3goKTtcbiAgICB0aGlzLnBvaW50cy5mb3JFYWNoKChwb2ludDogVmVjMykgPT4ge1xuICAgICAgdGhpcy5ib3VuZGluZ0JveC5hZGRWZWMzKHZlYzMudHJhbnNmb3JtTWF0NChwb2ludCwgdGhpcy5tb2RlbCkpO1xuICAgIH0pO1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/geometry/polyLine.ts\n");

/***/ }),

/***/ "./src/geometry/ray.ts":
/*!*****************************!*\
  !*** ./src/geometry/ray.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ray: () => (/* binding */ Ray)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plane */ \"./src/geometry/plane.ts\");\n\n\n\nclass Ray {\n    constructor(origin, direction) {\n        this.origin = origin;\n        this.direction = direction;\n        this.direction = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.normalize(this.direction);\n    }\n    print() {\n        console.log(`RAY: origin: ${this.origin.toString()}, direction: ${this.direction.map((n) => {\n            return Math.round(n * 100);\n        }).toString()}`);\n    }\n    getOrigin() {\n        return this.origin;\n    }\n    getDirection() {\n        return this.direction;\n    }\n    at(time) {\n        return wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(this.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.scale(this.direction, time));\n    }\n    //todo make sure res is positive\n    intersectPlane(plane, allowNegative = false) {\n        const numerator = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(plane.getOrigin(), this.origin), plane.getNormal());\n        const denominator = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(this.direction, plane.getNormal());\n        if (denominator === 0) { // parallel case\n            return null;\n        }\n        const t = numerator / denominator;\n        if (allowNegative)\n            return t;\n        if (t <= 0)\n            return null;\n        return t;\n    }\n    almostIntersectBoundingBox(bb, pixels) {\n        var _a, _b, _c, _d, _e, _f;\n        const dxMin = Math.abs(this.origin[0] - bb.getXMin());\n        const dyMin = Math.abs(this.origin[1] - bb.getYMin());\n        const dzMin = Math.abs(this.origin[2] - bb.getZMin());\n        const dxMax = Math.abs(this.origin[0] - bb.getXMax());\n        const dyMax = Math.abs(this.origin[1] - bb.getYMax());\n        const dzMax = Math.abs(this.origin[2] - bb.getZMax());\n        const farthest = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(dxMin < dxMax ? bb.getXMax() : bb.getXMin(), dyMin < dyMax ? bb.getYMax() : bb.getYMin(), dzMin < dzMax ? bb.getZMax() : bb.getZMin());\n        const dist = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.distance(this.origin, farthest);\n        const delta = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().pixelSizeAtDist(dist) * pixels;\n        const min = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(bb.getXMin() - delta, bb.getYMin() - delta, bb.getZMin() - delta);\n        const max = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(bb.getXMax() - delta, bb.getYMax() - delta, bb.getZMax() - delta);\n        if (this.direction[0] < 0)\n            [min[0], max[0]] = [max[0], min[0]];\n        if (this.direction[1] < 0)\n            [min[1], max[1]] = [max[1], min[1]];\n        if (this.direction[2] < 0)\n            [min[2], max[2]] = [max[2], min[2]];\n        var xMin = (_a = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(1, 0, 0)), true)) !== null && _a !== void 0 ? _a : -Infinity;\n        var yMin = (_b = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 1, 0)), true)) !== null && _b !== void 0 ? _b : -Infinity;\n        var zMin = (_c = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 1)), true)) !== null && _c !== void 0 ? _c : -Infinity;\n        var xMax = (_d = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(1, 0, 0)), true)) !== null && _d !== void 0 ? _d : Infinity;\n        var yMax = (_e = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 1, 0)), true)) !== null && _e !== void 0 ? _e : Infinity;\n        var zMax = (_f = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 1)), true)) !== null && _f !== void 0 ? _f : Infinity;\n        const end = Math.min(xMax, Math.min(yMax, zMax));\n        const start = Math.max(xMin, Math.max(yMin, zMin));\n        if (end < 0 || start > end)\n            return null;\n        return Math.max(start, 0);\n    }\n    intersectBoundingBox(bb) {\n        var _a, _b, _c, _d, _e, _f;\n        const min = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(bb.getXMin(), bb.getYMin(), bb.getZMin());\n        const max = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(bb.getXMax(), bb.getYMax(), bb.getZMax());\n        if (this.direction[0] < 0)\n            [min[0], max[0]] = [max[0], min[0]];\n        if (this.direction[1] < 0)\n            [min[1], max[1]] = [max[1], min[1]];\n        if (this.direction[2] < 0)\n            [min[2], max[2]] = [max[2], min[2]];\n        var xMin = (_a = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(1, 0, 0)), true)) !== null && _a !== void 0 ? _a : -Infinity;\n        var yMin = (_b = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 1, 0)), true)) !== null && _b !== void 0 ? _b : -Infinity;\n        var zMin = (_c = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(min, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 1)), true)) !== null && _c !== void 0 ? _c : -Infinity;\n        var xMax = (_d = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(1, 0, 0)), true)) !== null && _d !== void 0 ? _d : Infinity;\n        var yMax = (_e = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 1, 0)), true)) !== null && _e !== void 0 ? _e : Infinity;\n        var zMax = (_f = this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(max, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 1)), true)) !== null && _f !== void 0 ? _f : Infinity;\n        const end = Math.min(xMax, Math.min(yMax, zMax));\n        const start = Math.max(xMin, Math.max(yMin, zMin));\n        if (end < 0 || start > end)\n            return null;\n        return Math.max(start, 0);\n    }\n    intersectScene(scene) {\n        const intersection = scene.getBoundingBoxHeirarchy().firstIntersection(this);\n        if (intersection !== null)\n            return intersection;\n        return this.intersectPlane(new _plane__WEBPACK_IMPORTED_MODULE_1__.Plane(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 0), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.create(0, 0, 1)));\n    }\n    intersectTriangle(p1, p2, p3) {\n        const v12 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(p2, p1);\n        const v13 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(p3, p1);\n        const normal = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.cross(v12, v13));\n        const denom = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(normal, this.direction);\n        if (denom === 0)\n            return null;\n        const t = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(p1, this.origin), normal) / denom;\n        if (t < 0)\n            return null;\n        const point = this.at(t);\n        const d1 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(point, p1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(p2, p1)));\n        const d2 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(point, p2), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(p3, p2)));\n        const d3 = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(normal, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.cross(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(point, p3), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(p1, p3)));\n        if (\n        // remove one of these lines for back face culling.\n        d1 > 0 && d2 > 0 && d3 > 0 ||\n            d1 < 0 && d2 < 0 && d3 < 0)\n            return t;\n        else\n            return null;\n    }\n    static transform(ray, mat) {\n        return new Ray(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.add(ray.origin, wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.mat4.getTranslation(mat)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.transformMat4(ray.direction, mat));\n    }\n    almostIntersectLine(start, end, pixels) {\n        const a = this.direction;\n        const b = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.normalize(wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(end, start));\n        if (a === b) {\n            return null;\n        }\n        const B = start;\n        const A = this.origin;\n        const c = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.sub(B, A);\n        const ab = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(a, b);\n        const ac = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(a, c);\n        const bc = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(b, c);\n        const aa = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(a, a);\n        const bb = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.dot(b, b);\n        const denom = aa * bb - ab * ab;\n        if (denom === 0) {\n            throw new Error(\"You're fired!\");\n            // TODO: figure out whats happening here\n        }\n        const tRay = (ab * bc + ac * bb) / denom;\n        const length = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.distance(start, end);\n        const tLine = Math.min(Math.max((ab * ac - bc * aa) / denom, 0), length);\n        const pRay = this.at(tRay);\n        const pLine = this.at(tLine);\n        const closest = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.distance(pRay, pLine);\n        const distToIntersection = wgpu_matrix__WEBPACK_IMPORTED_MODULE_2__.vec3.distance(this.origin, pRay);\n        const sizeOfPixel = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().pixelSizeAtDist(distToIntersection);\n        if (closest < sizeOfPixel * pixels) {\n            return tRay;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/ray.ts\n");

/***/ }),

/***/ "./src/geometry/sceneBoundingBoxHeirarcy.ts":
/*!**************************************************!*\
  !*** ./src/geometry/sceneBoundingBoxHeirarcy.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SceneBoundingBoxHeirarchy: () => (/* binding */ SceneBoundingBoxHeirarchy)\n/* harmony export */ });\n/* harmony import */ var _boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./boundingBox */ \"./src/geometry/boundingBox.ts\");\n\nvar Axis;\n(function (Axis) {\n    Axis[Axis[\"X\"] = 0] = \"X\";\n    Axis[Axis[\"Y\"] = 1] = \"Y\";\n    Axis[Axis[\"Z\"] = 2] = \"Z\";\n})(Axis || (Axis = {}));\nclass BBHNode {\n    constructor(geometry, depth) {\n        this.depth = depth;\n        this.setup(geometry, depth);\n    }\n    setup(geometry, depth) {\n        this.axis = depth % 3;\n        this.boundingBox = new _boundingBox__WEBPACK_IMPORTED_MODULE_0__.BoundingBox();\n        geometry.forEach((geo) => { this.boundingBox.addBoundingBox(geo.getBoundingBox()); });\n        if (geometry.length <= SceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF) {\n            // leaf\n            this.geometry = geometry;\n            this.child1 = null;\n            this.child2 = null;\n        }\n        else {\n            // not a leaf\n            this.geometry = null;\n            const center = this.boundingBox.getCenter()[this.axis];\n            const child1Geometry = [];\n            const child2Geometry = [];\n            geometry.forEach((geo) => {\n                if (geo.getBoundingBox().getCenter()[this.axis] < center) {\n                    child1Geometry.push(geo);\n                }\n                else {\n                    child2Geometry.push(geo);\n                }\n            });\n            this.child1 = new BBHNode(child1Geometry, depth + 1);\n            this.child2 = new BBHNode(child2Geometry, depth + 1);\n        }\n    }\n    print() {\n        var _a, _b;\n        let str = \"\";\n        for (let i = 0; i < this.depth; i++)\n            str += \"->\";\n        if (this.geometry)\n            str += `${this.geometry.length}geometry`;\n        else\n            str += \"node\";\n        console.log(str);\n        (_a = this.child1) === null || _a === void 0 ? void 0 : _a.print();\n        (_b = this.child2) === null || _b === void 0 ? void 0 : _b.print();\n    }\n    firstPositiveIntersectionTime(ray) {\n        if (ray.intersectBoundingBox(this.boundingBox) === null)\n            return null;\n        if (this.isLeaf()) {\n            var res = null;\n            this.geometry.forEach((geo) => {\n                var t = geo.intersect(ray);\n                if (t !== null && t > 0) {\n                    if (res === null)\n                        res = t;\n                    else\n                        res = Math.min(res, t);\n                }\n            });\n            return res;\n        }\n        else {\n            const t1 = this.child1.firstPositiveIntersectionTime(ray);\n            const t2 = this.child2.firstPositiveIntersectionTime(ray);\n            if (t1 === null)\n                return t2;\n            if (t2 === null)\n                return t1;\n            return Math.min(t1, t2);\n        }\n    }\n    add(geo) {\n        if (this.isLeaf()) {\n            if (this.geometry.length < SceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF) {\n                // leaf node with space\n                this.geometry.push(geo);\n            }\n            else {\n                this.geometry.push(geo);\n                this.setup(this.geometry, this.depth);\n            }\n        }\n        else {\n            // non leaf node\n            const nodeCenter = this.boundingBox.getCenter()[this.axis];\n            const geoCenter = geo.getBoundingBox().getCenter()[this.axis];\n            if (geoCenter < nodeCenter) {\n                this.child1.add(geo);\n            }\n            else {\n                this.child2.add(geo);\n            }\n        }\n        this.boundingBox.addBoundingBox(geo.getBoundingBox());\n    }\n    getDepth() {\n        return this.depth;\n    }\n    getChild1() {\n        return this.child1;\n    }\n    getChild2() {\n        return this.child2;\n    }\n    isLeaf() {\n        return this.geometry != null;\n    }\n}\nclass SceneBoundingBoxHeirarchy {\n    constructor(geometry) {\n        this.root = new BBHNode(geometry, 0);\n    }\n    add(geo) {\n        this.root.add(geo);\n    }\n    getRoot() {\n        return this.root;\n    }\n    firstIntersection(ray) {\n        console.log(\"intersecting scene bbh\");\n        return this.root.firstPositiveIntersectionTime(ray);\n    }\n    print() {\n        console.log(\"==========Scene-BBH===========\");\n        this.root.print();\n    }\n}\nSceneBoundingBoxHeirarchy.MAX_GEOMETRY_PER_LEAF = 5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/geometry/sceneBoundingBoxHeirarcy.ts\n");

/***/ }),

/***/ "./src/log.ts":
/*!********************!*\
  !*** ./src/log.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Log: () => (/* binding */ Log)\n/* harmony export */ });\nclass Log {\n    constructor() {\n        this.element = document.getElementById(\"log\");\n        this.element.style.overflow = \"scroll\";\n    }\n    log(text) {\n        this.element.innerHTML += \"<br>\" + text;\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n    show() {\n        this.element.hidden = false;\n    }\n    hide() {\n        this.element.hidden = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9nLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxNQUFNLEdBQUc7SUFJWjtRQUVJLElBQUksQ0FBQyxPQUFPLEdBQW9CLFFBQVEsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUUzQyxDQUFDO0lBRU0sR0FBRyxDQUFDLElBQVk7UUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUssTUFBTSxHQUFHLElBQUksQ0FBQztRQUN6QyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztJQUN2RCxDQUFDO0lBRU0sSUFBSTtRQUNQLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDO0lBRU0sSUFBSTtRQUNQLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUMvQixDQUFDO0NBSUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9sb2cudHM/ZGQzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGNsYXNzIExvZyB7XG5cbiAgICBwcml2YXRlIGVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG5cbiAgICAgICAgdGhpcy5lbGVtZW50ID0gPEhUTUxEaXZFbGVtZW50PiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ1wiKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LnN0eWxlLm92ZXJmbG93ID0gXCJzY3JvbGxcIjtcblxuICAgIH1cblxuICAgIHB1YmxpYyBsb2codGV4dDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgKz0gIFwiPGJyPlwiICsgdGV4dDtcbiAgICAgICAgdGhpcy5lbGVtZW50LnNjcm9sbFRvcCA9IHRoaXMuZWxlbWVudC5zY3JvbGxIZWlnaHQ7XG4gICAgfVxuXG4gICAgcHVibGljIHNob3coKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5oaWRkZW4gPSBmYWxzZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaGlkZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LmhpZGRlbiA9IHRydWU7XG4gICAgfVxuXG5cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/log.ts\n");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cad */ \"./src/cad.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst main = function () {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.init();\n        yield _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.run();\n    });\n};\nmain();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFpbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUVnQztBQUVoQyxNQUFNLElBQUksR0FBRzs7UUFFVCxNQUFNLDBDQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdEIsTUFBTSwwQ0FBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBRXpCLENBQUM7Q0FBQTtBQUVELElBQUksRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvbWFpbi50cz9jZDQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuL2NhZFwiXG5cbmNvbnN0IG1haW4gPSBhc3luYyBmdW5jdGlvbigpIHtcblxuICAgIGF3YWl0IElOU1RBTkNFLmluaXQoKTtcbiAgICBhd2FpdCBJTlNUQU5DRS5ydW4oKTtcblxufVxuXG5tYWluKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/main.ts\n");

/***/ }),

/***/ "./src/mode.ts":
/*!*********************!*\
  !*** ./src/mode.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperatingMode: () => (/* binding */ OperatingMode)\n/* harmony export */ });\nvar OperatingMode;\n(function (OperatingMode) {\n    OperatingMode[OperatingMode[\"Navigation\"] = 0] = \"Navigation\";\n    OperatingMode[OperatingMode[\"Command\"] = 1] = \"Command\";\n})(OperatingMode || (OperatingMode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRUEsSUFBWSxhQUdYO0FBSEQsV0FBWSxhQUFhO0lBQ3JCLDZEQUFVO0lBQ1YsdURBQU87QUFDWCxDQUFDLEVBSFcsYUFBYSxLQUFiLGFBQWEsUUFHeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy9tb2RlLnRzP2RlMGQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBlbnVtIE9wZXJhdGluZ01vZGUge1xuICAgIE5hdmlnYXRpb24sIC8vIEtleXMgY29udHJvbCBjYW1lcmEgbW90aW9uXG4gICAgQ29tbWFuZCwgLy8gS2V5cyBjb250cm9sIGNvbW1hbmQgaW5wdXRcbn1cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mode.ts\n");

/***/ }),

/***/ "./src/render/pipeline.ts":
/*!********************************!*\
  !*** ./src/render/pipeline.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pipeline: () => (/* binding */ Pipeline),\n/* harmony export */   PipelinePrimitive: () => (/* binding */ PipelinePrimitive)\n/* harmony export */ });\n/* harmony import */ var _renderMesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./renderMesh */ \"./src/render/renderMesh.ts\");\n/* harmony import */ var _renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderLines */ \"./src/render/renderLines.ts\");\n/* harmony import */ var _renderPoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderPoints */ \"./src/render/renderPoints.ts\");\n\n\n\nvar PipelinePrimitive;\n(function (PipelinePrimitive) {\n    PipelinePrimitive[PipelinePrimitive[\"Triangle\"] = 0] = \"Triangle\";\n    PipelinePrimitive[PipelinePrimitive[\"Line\"] = 1] = \"Line\";\n    PipelinePrimitive[PipelinePrimitive[\"Point\"] = 2] = \"Point\";\n})(PipelinePrimitive || (PipelinePrimitive = {}));\nclass Pipeline {\n    constructor(device, format, layout, shaderModule, primitive) {\n        const pipelineLayout = device.createPipelineLayout({\n            label: \"pipeline layout\",\n            bindGroupLayouts: [layout],\n        });\n        this.gpuPipeline = device.createRenderPipeline({\n            label: \"pipeline\",\n            primitive: {\n                topology: getTopology(primitive),\n                cullMode: \"none\"\n            },\n            layout: pipelineLayout,\n            depthStencil: {\n                depthWriteEnabled: true,\n                depthCompare: \"less\",\n                format: \"depth24plus\"\n            },\n            vertex: {\n                module: shaderModule,\n                entryPoint: \"vertexMain\",\n                buffers: [getVertexBufferLayout(primitive)]\n            },\n            fragment: {\n                module: shaderModule,\n                entryPoint: \"fragmentMain\",\n                targets: [\n                    {\n                        format: format\n                    }\n                ]\n            },\n            multisample: {\n                count: 4\n            }\n        });\n    }\n    get() {\n        return this.gpuPipeline;\n    }\n}\nfunction getTopology(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return \"triangle-list\";\n        case PipelinePrimitive.Line: return \"line-list\";\n        case PipelinePrimitive.Point: return \"point-list\";\n        default:\n            console.error(\"unimplemented primitive\");\n            return \"triangle-list\";\n    }\n}\nfunction getVertexBufferLayout(primitive) {\n    switch (primitive) {\n        case PipelinePrimitive.Triangle: return _renderMesh__WEBPACK_IMPORTED_MODULE_0__.RenderMesh.getVertexBufferLayout();\n        case PipelinePrimitive.Line: return _renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines.getVertexBufferLayout();\n        case PipelinePrimitive.Point: return _renderPoints__WEBPACK_IMPORTED_MODULE_2__.RenderPoints.getVertexBufferLayout();\n        default:\n            console.error(\"unimplemented primitive\");\n            return _renderMesh__WEBPACK_IMPORTED_MODULE_0__.RenderMesh.getVertexBufferLayout();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3BpcGVsaW5lLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlDO0FBQ0U7QUFDRztBQUU5QyxJQUFZLGlCQUlYO0FBSkQsV0FBWSxpQkFBaUI7SUFDM0IsaUVBQVE7SUFDUix5REFBSTtJQUNKLDJEQUFLO0FBQ1AsQ0FBQyxFQUpXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFJNUI7QUFFTSxNQUFNLFFBQVE7SUFJbkIsWUFBWSxNQUFpQixFQUFFLE1BQXdCLEVBQUUsTUFBMEIsRUFBRSxZQUE2QixFQUFFLFNBQTRCO1FBRTlJLE1BQU0sY0FBYyxHQUFzQixNQUFNLENBQUMsb0JBQW9CLENBQUM7WUFDcEUsS0FBSyxFQUFFLGlCQUFpQjtZQUN4QixnQkFBZ0IsRUFBRSxDQUFDLE1BQU0sQ0FBQztTQUMzQixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztZQUM3QyxLQUFLLEVBQUUsVUFBVTtZQUNqQixTQUFTLEVBQUU7Z0JBQ1QsUUFBUSxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUM7Z0JBQ2hDLFFBQVEsRUFBRSxNQUFNO2FBQ2pCO1lBQ0QsTUFBTSxFQUFFLGNBQWM7WUFDdEIsWUFBWSxFQUFFO2dCQUNaLGlCQUFpQixFQUFFLElBQUk7Z0JBQ3ZCLFlBQVksRUFBRSxNQUFNO2dCQUNwQixNQUFNLEVBQUUsYUFBYTthQUN0QjtZQUNELE1BQU0sRUFBRTtnQkFDTixNQUFNLEVBQUUsWUFBWTtnQkFDcEIsVUFBVSxFQUFFLFlBQVk7Z0JBQ3hCLE9BQU8sRUFBRSxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQzVDO1lBQ0QsUUFBUSxFQUFFO2dCQUNSLE1BQU0sRUFBRSxZQUFZO2dCQUNwQixVQUFVLEVBQUUsY0FBYztnQkFDMUIsT0FBTyxFQUFFO29CQUNQO3dCQUNFLE1BQU0sRUFBRSxNQUFNO3FCQUNmO2lCQUNGO2FBQ0Y7WUFDRCxXQUFXLEVBQUU7Z0JBQ1gsS0FBSyxFQUFFLENBQUM7YUFDVDtTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxHQUFHO1FBQ1IsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7Q0FFRjtBQUVELFNBQVMsV0FBVyxDQUFDLFNBQTRCO0lBQy9DLFFBQVEsU0FBUyxFQUFFO1FBQ2pCLEtBQUssaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxlQUFlLENBQUM7UUFDeEQsS0FBSyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLFdBQVcsQ0FBQztRQUNoRCxLQUFLLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sWUFBWSxDQUFDO1FBQ2xEO1lBQ0UsT0FBTyxDQUFDLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1lBQ3pDLE9BQU8sZUFBZSxDQUFDO0tBQzFCO0FBQ0gsQ0FBQztBQUNELFNBQVMscUJBQXFCLENBQUMsU0FBNEI7SUFDekQsUUFBUSxTQUFTLEVBQUU7UUFDakIsS0FBSyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPLG1EQUFVLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUMzRSxLQUFLLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8scURBQVcsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQ3hFLEtBQUssaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyx1REFBWSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDMUU7WUFDRSxPQUFPLENBQUMsS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDekMsT0FBTyxtREFBVSxDQUFDLHFCQUFxQixFQUFFLENBQUM7S0FDN0M7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3BpcGVsaW5lLnRzP2IzMGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVuZGVyTWVzaCB9IGZyb20gXCIuL3JlbmRlck1lc2hcIlxuaW1wb3J0IHsgUmVuZGVyTGluZXMgfSBmcm9tIFwiLi9yZW5kZXJMaW5lc1wiXG5pbXBvcnQgeyBSZW5kZXJQb2ludHMgfSBmcm9tIFwiLi9yZW5kZXJQb2ludHNcIjtcblxuZXhwb3J0IGVudW0gUGlwZWxpbmVQcmltaXRpdmUge1xuICBUcmlhbmdsZSxcbiAgTGluZSxcbiAgUG9pbnRcbn1cblxuZXhwb3J0IGNsYXNzIFBpcGVsaW5lIHtcblxuICBwcml2YXRlIGdwdVBpcGVsaW5lOiBHUFVSZW5kZXJQaXBlbGluZTtcblxuICBjb25zdHJ1Y3RvcihkZXZpY2U6IEdQVURldmljZSwgZm9ybWF0OiBHUFVUZXh0dXJlRm9ybWF0LCBsYXlvdXQ6IEdQVUJpbmRHcm91cExheW91dCwgc2hhZGVyTW9kdWxlOiBHUFVTaGFkZXJNb2R1bGUsIHByaW1pdGl2ZTogUGlwZWxpbmVQcmltaXRpdmUpIHtcblxuICAgIGNvbnN0IHBpcGVsaW5lTGF5b3V0OiBHUFVQaXBlbGluZUxheW91dCA9IGRldmljZS5jcmVhdGVQaXBlbGluZUxheW91dCh7XG4gICAgICBsYWJlbDogXCJwaXBlbGluZSBsYXlvdXRcIixcbiAgICAgIGJpbmRHcm91cExheW91dHM6IFtsYXlvdXRdLFxuICAgIH0pO1xuXG4gICAgdGhpcy5ncHVQaXBlbGluZSA9IGRldmljZS5jcmVhdGVSZW5kZXJQaXBlbGluZSh7XG4gICAgICBsYWJlbDogXCJwaXBlbGluZVwiLFxuICAgICAgcHJpbWl0aXZlOiB7XG4gICAgICAgIHRvcG9sb2d5OiBnZXRUb3BvbG9neShwcmltaXRpdmUpLFxuICAgICAgICBjdWxsTW9kZTogXCJub25lXCJcbiAgICAgIH0sXG4gICAgICBsYXlvdXQ6IHBpcGVsaW5lTGF5b3V0LFxuICAgICAgZGVwdGhTdGVuY2lsOiB7XG4gICAgICAgIGRlcHRoV3JpdGVFbmFibGVkOiB0cnVlLFxuICAgICAgICBkZXB0aENvbXBhcmU6IFwibGVzc1wiLFxuICAgICAgICBmb3JtYXQ6IFwiZGVwdGgyNHBsdXNcIlxuICAgICAgfSxcbiAgICAgIHZlcnRleDoge1xuICAgICAgICBtb2R1bGU6IHNoYWRlck1vZHVsZSxcbiAgICAgICAgZW50cnlQb2ludDogXCJ2ZXJ0ZXhNYWluXCIsXG4gICAgICAgIGJ1ZmZlcnM6IFtnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQocHJpbWl0aXZlKV1cbiAgICAgIH0sXG4gICAgICBmcmFnbWVudDoge1xuICAgICAgICBtb2R1bGU6IHNoYWRlck1vZHVsZSxcbiAgICAgICAgZW50cnlQb2ludDogXCJmcmFnbWVudE1haW5cIixcbiAgICAgICAgdGFyZ2V0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGZvcm1hdDogZm9ybWF0XG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgbXVsdGlzYW1wbGU6IHtcbiAgICAgICAgY291bnQ6IDRcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQoKTogR1BVUmVuZGVyUGlwZWxpbmUge1xuICAgIHJldHVybiB0aGlzLmdwdVBpcGVsaW5lO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gZ2V0VG9wb2xvZ3kocHJpbWl0aXZlOiBQaXBlbGluZVByaW1pdGl2ZSk6IEdQVVByaW1pdGl2ZVRvcG9sb2d5IHtcbiAgc3dpdGNoIChwcmltaXRpdmUpIHtcbiAgICBjYXNlIFBpcGVsaW5lUHJpbWl0aXZlLlRyaWFuZ2xlOiByZXR1cm4gXCJ0cmlhbmdsZS1saXN0XCI7XG4gICAgY2FzZSBQaXBlbGluZVByaW1pdGl2ZS5MaW5lOiByZXR1cm4gXCJsaW5lLWxpc3RcIjtcbiAgICBjYXNlIFBpcGVsaW5lUHJpbWl0aXZlLlBvaW50OiByZXR1cm4gXCJwb2ludC1saXN0XCI7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJ1bmltcGxlbWVudGVkIHByaW1pdGl2ZVwiKTtcbiAgICAgIHJldHVybiBcInRyaWFuZ2xlLWxpc3RcIjtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0VmVydGV4QnVmZmVyTGF5b3V0KHByaW1pdGl2ZTogUGlwZWxpbmVQcmltaXRpdmUpOiBHUFVWZXJ0ZXhCdWZmZXJMYXlvdXQge1xuICBzd2l0Y2ggKHByaW1pdGl2ZSkge1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuVHJpYW5nbGU6IHJldHVybiBSZW5kZXJNZXNoLmdldFZlcnRleEJ1ZmZlckxheW91dCgpO1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuTGluZTogcmV0dXJuIFJlbmRlckxpbmVzLmdldFZlcnRleEJ1ZmZlckxheW91dCgpO1xuICAgIGNhc2UgUGlwZWxpbmVQcmltaXRpdmUuUG9pbnQ6IHJldHVybiBSZW5kZXJQb2ludHMuZ2V0VmVydGV4QnVmZmVyTGF5b3V0KCk7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJ1bmltcGxlbWVudGVkIHByaW1pdGl2ZVwiKTtcbiAgICAgIHJldHVybiBSZW5kZXJNZXNoLmdldFZlcnRleEJ1ZmZlckxheW91dCgpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/pipeline.ts\n");

/***/ }),

/***/ "./src/render/renderLines.ts":
/*!***********************************!*\
  !*** ./src/render/renderLines.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderLines: () => (/* binding */ RenderLines)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\n\nclass RenderLines {\n    constructor(vertices, indices, color, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.identity()) {\n        this.model = model;\n        // vertex\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"vertex buffer\",\n            size: vertices.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertices);\n        //index\n        this.indexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"index buffer\",\n            size: indices.byteLength,\n            usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.indexBuffer, 0, indices);\n        this.indexCount = indices.length;\n        //mvp\n        this.mvpBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"mvp\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.mvp = new Float32Array(16);\n        //color\n        this.colorBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"color buffer\",\n            size: 16,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.setColor(color);\n    }\n    draw(pass) {\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount);\n    }\n    setColor(color) {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.colorBuffer, 0, new Float32Array(color));\n    }\n    update() {\n        this.updateMVP();\n        this.updateBindGroup();\n    }\n    updateMVP() {\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.mul(this.model, _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getViewProj(), this.mvp);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.mvpBuffer, 0, this.mvp);\n    }\n    updateBindGroup() {\n        this.bindGroup = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBindGroup({\n            label: \"bind group\",\n            layout: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getBindGroupLayout(),\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.mvpBuffer },\n                }, {\n                    binding: 1,\n                    resource: { buffer: this.colorBuffer },\n                }\n            ]\n        });\n    }\n    static getVertexBufferLayout() {\n        return RenderLines.vertexBufferLayout;\n    }\n}\nRenderLines.vertexBufferLayout = {\n    arrayStride: 16,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/render/renderLines.ts\n");

/***/ }),

/***/ "./src/render/renderMesh.ts":
/*!**********************************!*\
  !*** ./src/render/renderMesh.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderMesh: () => (/* binding */ RenderMesh)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n\n\nclass RenderMesh {\n    constructor(vertices, indices, color, model) {\n        this.model = model;\n        //vertex\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"vertex buffer\",\n            size: vertices.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertices);\n        //index\n        this.indexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"index buffer\",\n            size: indices.byteLength,\n            usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.indexBuffer, 0, indices);\n        this.indexCount = indices.length;\n        //mvp\n        this.mvpBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"mvp\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.mvp = new Float32Array(16);\n        //color\n        this.colorBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"color buffer\",\n            size: 16,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.colorBuffer, 0, color);\n    }\n    draw(pass) {\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.setIndexBuffer(this.indexBuffer, \"uint32\");\n        pass.drawIndexed(this.indexCount);\n    }\n    update() {\n        this.updateMVP();\n        this.updateBindGroup();\n    }\n    updateMVP() {\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.mul(this.model, _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getViewProj(), this.mvp);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.mvpBuffer, 0, this.mvp.buffer);\n    }\n    updateBindGroup() {\n        this.bindGroup = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBindGroup({\n            label: \"bind group\",\n            layout: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getBindGroupLayout(),\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.mvpBuffer },\n                }, {\n                    binding: 1,\n                    resource: { buffer: this.colorBuffer },\n                }\n            ]\n        });\n    }\n    static getVertexBufferLayout() {\n        return this.vertexBufferLayout;\n    }\n}\nRenderMesh.vertexBufferLayout = {\n    arrayStride: 32,\n    attributes: [\n        {\n            format: \"float32x4\",\n            offset: 0,\n            shaderLocation: 0,\n        }, {\n            format: \"float32x4\",\n            offset: 16,\n            shaderLocation: 1,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3JlbmRlck1lc2gudHM/NGYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlNUQU5DRSB9IGZyb20gXCIuLi9jYWRcIlxuaW1wb3J0IHsgbWF0NCwgTWF0NCB9IGZyb20gXCJ3Z3B1LW1hdHJpeFwiXG5cbmV4cG9ydCBjbGFzcyBSZW5kZXJNZXNoIHtcblxuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSB2ZXJ0ZXhCdWZmZXJMYXlvdXQ6IEdQVVZlcnRleEJ1ZmZlckxheW91dCA9IHtcbiAgICBhcnJheVN0cmlkZTogMzIsXG4gICAgYXR0cmlidXRlczogW1xuICAgICAgeyAvLyBsb2NhdGlvblxuICAgICAgICBmb3JtYXQ6IFwiZmxvYXQzMng0XCIsXG4gICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgc2hhZGVyTG9jYXRpb246IDAsXG4gICAgICB9LCB7IC8vIG5vcm1hbFxuICAgICAgICBmb3JtYXQ6IFwiZmxvYXQzMng0XCIsXG4gICAgICAgIG9mZnNldDogMTYsXG4gICAgICAgIHNoYWRlckxvY2F0aW9uOiAxLFxuICAgICAgfVxuICAgIF1cbiAgfTtcblxuICBwcml2YXRlIHZlcnRleEJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcml2YXRlIGluZGV4QnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByaXZhdGUgYmluZEdyb3VwITogR1BVQmluZEdyb3VwO1xuICBwcml2YXRlIG12cDogRmxvYXQzMkFycmF5O1xuICBwcml2YXRlIG12cEJ1ZmZlcjogR1BVQnVmZmVyO1xuICBwcml2YXRlIGNvbG9yQnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByaXZhdGUgaW5kZXhDb3VudDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHZlcnRpY2VzOiBGbG9hdDMyQXJyYXksXG4gICAgaW5kaWNlczogSW50MzJBcnJheSxcbiAgICBjb2xvcjogRmxvYXQzMkFycmF5LFxuICAgIHByaXZhdGUgbW9kZWw6IE1hdDQpIHtcblxuICAgIC8vdmVydGV4XG4gICAgdGhpcy52ZXJ0ZXhCdWZmZXIgPSBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLmNyZWF0ZUJ1ZmZlcih7XG4gICAgICBsYWJlbDogXCJ2ZXJ0ZXggYnVmZmVyXCIsXG4gICAgICBzaXplOiB2ZXJ0aWNlcy5ieXRlTGVuZ3RoLFxuICAgICAgdXNhZ2U6IEdQVUJ1ZmZlclVzYWdlLlZFUlRFWCB8IEdQVUJ1ZmZlclVzYWdlLkNPUFlfRFNULFxuICAgIH0pO1xuICAgIElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkucXVldWUud3JpdGVCdWZmZXIodGhpcy52ZXJ0ZXhCdWZmZXIsIDAsIHZlcnRpY2VzKTtcblxuICAgIC8vaW5kZXhcbiAgICB0aGlzLmluZGV4QnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwiaW5kZXggYnVmZmVyXCIsXG4gICAgICBzaXplOiBpbmRpY2VzLmJ5dGVMZW5ndGgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuSU5ERVggfCBHUFVCdWZmZXJVc2FnZS5DT1BZX0RTVCxcbiAgICB9KTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMuaW5kZXhCdWZmZXIsIDAsIGluZGljZXMpO1xuICAgIHRoaXMuaW5kZXhDb3VudCA9IGluZGljZXMubGVuZ3RoO1xuXG4gICAgLy9tdnBcbiAgICB0aGlzLm12cEJ1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcIm12cFwiLFxuICAgICAgc2l6ZTogNjQsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVU5JRk9STSB8IEdQVUJ1ZmZlclVzYWdlLkNPUFlfRFNULFxuICAgIH0pO1xuICAgIHRoaXMubXZwID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XG5cbiAgICAvL2NvbG9yXG4gICAgdGhpcy5jb2xvckJ1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcImNvbG9yIGJ1ZmZlclwiLFxuICAgICAgc2l6ZTogMTYsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVU5JRk9STSB8IEdQVUJ1ZmZlclVzYWdlLkNPUFlfRFNULFxuICAgIH0pO1xuICAgIElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkucXVldWUud3JpdGVCdWZmZXIodGhpcy5jb2xvckJ1ZmZlciwgMCwgY29sb3IpO1xuXG4gIH1cblxuICBwdWJsaWMgZHJhdyhwYXNzOiBHUFVSZW5kZXJQYXNzRW5jb2Rlcik6IHZvaWQge1xuICAgIHBhc3Muc2V0QmluZEdyb3VwKDAsIHRoaXMuYmluZEdyb3VwKTtcbiAgICBwYXNzLnNldFZlcnRleEJ1ZmZlcigwLCB0aGlzLnZlcnRleEJ1ZmZlcik7XG4gICAgcGFzcy5zZXRJbmRleEJ1ZmZlcih0aGlzLmluZGV4QnVmZmVyLCBcInVpbnQzMlwiKTtcbiAgICBwYXNzLmRyYXdJbmRleGVkKHRoaXMuaW5kZXhDb3VudCk7XG4gIH1cblxuXG4gIHB1YmxpYyB1cGRhdGUoKTogdm9pZCB7XG4gICAgdGhpcy51cGRhdGVNVlAoKTtcbiAgICB0aGlzLnVwZGF0ZUJpbmRHcm91cCgpO1xuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGVNVlAoKTogdm9pZCB7XG4gICAgbWF0NC5tdWwodGhpcy5tb2RlbCwgSU5TVEFOQ0UuZ2V0U2NlbmUoKS5nZXRDYW1lcmEoKS5nZXRWaWV3UHJvaigpLCB0aGlzLm12cCk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLm12cEJ1ZmZlciwgMCwgdGhpcy5tdnAuYnVmZmVyKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlQmluZEdyb3VwKCk6IHZvaWQge1xuICAgIHRoaXMuYmluZEdyb3VwID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCaW5kR3JvdXAoe1xuICAgICAgbGFiZWw6IFwiYmluZCBncm91cFwiLFxuICAgICAgbGF5b3V0OiBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldEJpbmRHcm91cExheW91dCgpLFxuICAgICAgZW50cmllczogW1xuICAgICAgICB7XG4gICAgICAgICAgYmluZGluZzogMCxcbiAgICAgICAgICByZXNvdXJjZTogeyBidWZmZXI6IHRoaXMubXZwQnVmZmVyIH0sXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBiaW5kaW5nOiAxLFxuICAgICAgICAgIHJlc291cmNlOiB7IGJ1ZmZlcjogdGhpcy5jb2xvckJ1ZmZlciB9LFxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0VmVydGV4QnVmZmVyTGF5b3V0KCk6IEdQVVZlcnRleEJ1ZmZlckxheW91dCB7XG4gICAgcmV0dXJuIHRoaXMudmVydGV4QnVmZmVyTGF5b3V0O1xuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/render/renderMesh.ts\n");

/***/ }),

/***/ "./src/render/renderPoints.ts":
/*!************************************!*\
  !*** ./src/render/renderPoints.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderPoints: () => (/* binding */ RenderPoints)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n\n\nclass RenderPoints {\n    constructor(vertices, color, model = wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.identity()) {\n        this.model = model;\n        // vertex\n        this.vertexBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"vertex buffer\",\n            size: vertices.byteLength,\n            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n        });\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.vertexBuffer, 0, vertices);\n        this.vertexCount = vertices.length;\n        //mvp\n        this.mvpBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"mvp\",\n            size: 64,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.mvp = new Float32Array(16);\n        //color\n        this.colorBuffer = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBuffer({\n            label: \"color buffer\",\n            size: 16,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        this.setColor(color);\n    }\n    draw(pass) {\n        pass.setBindGroup(0, this.bindGroup);\n        pass.setVertexBuffer(0, this.vertexBuffer);\n        pass.draw(this.vertexCount);\n    }\n    setColor(color) {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.colorBuffer, 0, new Float32Array(color));\n    }\n    update() {\n        this.updateMVP();\n        this.updateBindGroup();\n    }\n    updateMVP() {\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_1__.mat4.mul(this.model, _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getCamera().getViewProj(), this.mvp);\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().queue.writeBuffer(this.mvpBuffer, 0, this.mvp);\n    }\n    updateBindGroup() {\n        this.bindGroup = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getDevice().createBindGroup({\n            label: \"bind group\",\n            layout: _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getRenderer().getBindGroupLayout(),\n            entries: [\n                {\n                    binding: 0,\n                    resource: { buffer: this.mvpBuffer },\n                }, {\n                    binding: 1,\n                    resource: { buffer: this.colorBuffer },\n                }\n            ]\n        });\n    }\n    static getVertexBufferLayout() {\n        return RenderPoints.vertexBufferLayout;\n    }\n}\nRenderPoints.vertexBufferLayout = {\n    arrayStride: 4,\n    attributes: [\n        {\n            format: \"float32\",\n            offset: 0,\n            shaderLocation: 0,\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MENBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxlQUFlLENBQUM7WUFDbEUsS0FBSyxFQUFFLFlBQVk7WUFDbkIsTUFBTSxFQUFFLDBDQUFRLENBQUMsV0FBVyxFQUFFLENBQUMsa0JBQWtCLEVBQUU7WUFDbkQsT0FBTyxFQUFFO2dCQUNQO29CQUNFLE9BQU8sRUFBRSxDQUFDO29CQUNWLFFBQVEsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO2lCQUNyQyxFQUFFO29CQUNELE9BQU8sRUFBRSxDQUFDO29CQUNWLFFBQVEsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFO2lCQUN2QzthQUNGO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLE1BQU0sQ0FBQyxxQkFBcUI7UUFDakMsT0FBTyxZQUFZLENBQUMsa0JBQWtCLENBQUM7SUFDekMsQ0FBQzs7QUF4RnVCLCtCQUFrQixHQUEwQjtJQUNsRSxXQUFXLEVBQUUsQ0FBQztJQUNkLFVBQVUsRUFBRTtRQUNWO1lBQ0UsTUFBTSxFQUFFLFNBQVM7WUFDakIsTUFBTSxFQUFFLENBQUM7WUFDVCxjQUFjLEVBQUUsQ0FBQztTQUNsQjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9yZW5kZXJQb2ludHMudHM/ZDFmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXQ0LCBtYXQ0IH0gZnJvbSBcIndncHUtbWF0cml4XCJcbmltcG9ydCB7IElOU1RBTkNFIH0gZnJvbSBcIi4uL2NhZFwiXG5cbmV4cG9ydCBjbGFzcyBSZW5kZXJQb2ludHMge1xuXG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IHZlcnRleEJ1ZmZlckxheW91dDogR1BVVmVydGV4QnVmZmVyTGF5b3V0ID0ge1xuICAgIGFycmF5U3RyaWRlOiA0LFxuICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgIHsgLy8gbG9jYXRpb25cbiAgICAgICAgZm9ybWF0OiBcImZsb2F0MzJcIixcbiAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICBzaGFkZXJMb2NhdGlvbjogMCxcbiAgICAgIH1cbiAgICBdXG4gIH07XG5cbiAgcHJpdmF0ZSB2ZXJ0ZXhCdWZmZXI6IEdQVUJ1ZmZlcjtcbiAgcHJpdmF0ZSBiaW5kR3JvdXAhOiBHUFVCaW5kR3JvdXA7XG4gIHByaXZhdGUgbXZwOiBGbG9hdDMyQXJyYXk7XG4gIHByaXZhdGUgbXZwQnVmZmVyOiBHUFVCdWZmZXI7XG4gIHByaXZhdGUgY29sb3JCdWZmZXI6IEdQVUJ1ZmZlcjtcbiAgcHJpdmF0ZSB2ZXJ0ZXhDb3VudDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHZlcnRpY2VzOiBGbG9hdDMyQXJyYXksXG4gICAgY29sb3I6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLFxuICAgIHByaXZhdGUgbW9kZWw6IE1hdDQgPSBtYXQ0LmlkZW50aXR5KClcbiAgKSB7XG5cbiAgICAvLyB2ZXJ0ZXhcbiAgICB0aGlzLnZlcnRleEJ1ZmZlciA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQnVmZmVyKHtcbiAgICAgIGxhYmVsOiBcInZlcnRleCBidWZmZXJcIixcbiAgICAgIHNpemU6IHZlcnRpY2VzLmJ5dGVMZW5ndGgsXG4gICAgICB1c2FnZTogR1BVQnVmZmVyVXNhZ2UuVkVSVEVYIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5xdWV1ZS53cml0ZUJ1ZmZlcih0aGlzLnZlcnRleEJ1ZmZlciwgMCwgdmVydGljZXMpO1xuICAgIHRoaXMudmVydGV4Q291bnQgPSB2ZXJ0aWNlcy5sZW5ndGg7XG5cbiAgICAvL212cFxuICAgIHRoaXMubXZwQnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwibXZwXCIsXG4gICAgICBzaXplOiA2NCxcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5VTklGT1JNIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgdGhpcy5tdnAgPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcblxuICAgIC8vY29sb3JcbiAgICB0aGlzLmNvbG9yQnVmZmVyID0gSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXREZXZpY2UoKS5jcmVhdGVCdWZmZXIoe1xuICAgICAgbGFiZWw6IFwiY29sb3IgYnVmZmVyXCIsXG4gICAgICBzaXplOiAxNixcbiAgICAgIHVzYWdlOiBHUFVCdWZmZXJVc2FnZS5VTklGT1JNIHwgR1BVQnVmZmVyVXNhZ2UuQ09QWV9EU1QsXG4gICAgfSk7XG4gICAgdGhpcy5zZXRDb2xvcihjb2xvcik7XG4gIH1cblxuICBwdWJsaWMgZHJhdyhwYXNzOiBHUFVSZW5kZXJQYXNzRW5jb2Rlcik6IHZvaWQge1xuICAgIHBhc3Muc2V0QmluZEdyb3VwKDAsIHRoaXMuYmluZEdyb3VwKTtcbiAgICBwYXNzLnNldFZlcnRleEJ1ZmZlcigwLCB0aGlzLnZlcnRleEJ1ZmZlcik7XG4gICAgcGFzcy5kcmF3KHRoaXMudmVydGV4Q291bnQpO1xuICB9XG5cbiAgcHVibGljIHNldENvbG9yKGNvbG9yOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSkge1xuICAgIElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkucXVldWUud3JpdGVCdWZmZXIodGhpcy5jb2xvckJ1ZmZlciwgMCwgbmV3IEZsb2F0MzJBcnJheShjb2xvcikpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZSgpOiB2b2lkIHtcbiAgICB0aGlzLnVwZGF0ZU1WUCgpO1xuICAgIHRoaXMudXBkYXRlQmluZEdyb3VwKCk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZU1WUCgpOiB2b2lkIHtcbiAgICBtYXQ0Lm11bCh0aGlzLm1vZGVsLCBJTlNUQU5DRS5nZXRTY2VuZSgpLmdldENhbWVyYSgpLmdldFZpZXdQcm9qKCksIHRoaXMubXZwKTtcbiAgICBJTlNUQU5DRS5nZXRSZW5kZXJlcigpLmdldERldmljZSgpLnF1ZXVlLndyaXRlQnVmZmVyKHRoaXMubXZwQnVmZmVyLCAwLCB0aGlzLm12cCk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUJpbmRHcm91cCgpOiB2b2lkIHtcbiAgICB0aGlzLmJpbmRHcm91cCA9IElOU1RBTkNFLmdldFJlbmRlcmVyKCkuZ2V0RGV2aWNlKCkuY3JlYXRlQmluZEdyb3VwKHtcbiAgICAgIGxhYmVsOiBcImJpbmQgZ3JvdXBcIixcbiAgICAgIGxheW91dDogSU5TVEFOQ0UuZ2V0UmVuZGVyZXIoKS5nZXRCaW5kR3JvdXBMYXlvdXQoKSxcbiAgICAgIGVudHJpZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGJpbmRpbmc6IDAsXG4gICAgICAgICAgcmVzb3VyY2U6IHsgYnVmZmVyOiB0aGlzLm12cEJ1ZmZlciB9LFxuICAgICAgICB9LCB7XG4gICAgICAgICAgYmluZGluZzogMSxcbiAgICAgICAgICByZXNvdXJjZTogeyBidWZmZXI6IHRoaXMuY29sb3JCdWZmZXIgfSxcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXRWZXJ0ZXhCdWZmZXJMYXlvdXQoKTogR1BVVmVydGV4QnVmZmVyTGF5b3V0IHtcbiAgICByZXR1cm4gUmVuZGVyUG9pbnRzLnZlcnRleEJ1ZmZlckxheW91dDtcbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/render/renderPoints.ts\n");

/***/ }),

/***/ "./src/render/renderer.ts":
/*!********************************!*\
  !*** ./src/render/renderer.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Renderer: () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var _shaders_triangleShader_wgsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shaders/triangleShader.wgsl */ \"./src/render/shaders/triangleShader.wgsl\");\n/* harmony import */ var _shaders_lineShader_wgsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shaders/lineShader.wgsl */ \"./src/render/shaders/lineShader.wgsl\");\n/* harmony import */ var _shaders_pointShader_wgsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shaders/pointShader.wgsl */ \"./src/render/shaders/pointShader.wgsl\");\n/* harmony import */ var _pipeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pipeline */ \"./src/render/pipeline.ts\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\nconst compatibilityCheck = document.getElementById(\"compatibility-check\");\nclass Renderer {\n    constructor() {\n        this.clearColor = [0.1, 0.1, 0.1, 1.0];\n    }\n    getDevice() {\n        return this.device;\n    }\n    getBindGroupLayout() {\n        return this.bindGroupLayout;\n    }\n    setClearColor(color) {\n        this.clearColor = color;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createDevice();\n            this.createResources();\n            this.createPipelines();\n            this.updateScreenSize();\n        });\n    }\n    createDevice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!navigator.gpu) {\n                alert(\"Your browser / computer does not support WebGPU.\");\n                compatibilityCheck.innerText = \"This browser does not support WebGPU. Check here for a list of supported browsers https://caniuse.com/webgpu\";\n                return;\n            }\n            var adapter;\n            try {\n                adapter = yield navigator.gpu.requestAdapter();\n            }\n            catch (error) {\n                console.log(error);\n            }\n            if (adapter == null) {\n                alert(\"Your browser / computer does not support WebGPU.\");\n                compatibilityCheck.innerText = \"No valid gpu adapter. Check here for a list of supported browsers https://caniuse.com/webgpu\";\n                return;\n            }\n            this.device = (yield adapter.requestDevice());\n            this.canvas = document.getElementById(\"screen\");\n            this.context = this.canvas.getContext(\"webgpu\");\n            this.canvasFormat = navigator.gpu.getPreferredCanvasFormat();\n            this.context.configure({\n                device: this.device,\n                format: this.canvasFormat,\n            });\n        });\n    }\n    createResources() {\n        this.triangleShaderModule = this.device.createShaderModule({\n            label: \"shader module\",\n            code: _shaders_triangleShader_wgsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        });\n        this.lineShaderModule = this.device.createShaderModule({\n            label: \"shader module\",\n            code: _shaders_lineShader_wgsl__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        });\n        this.pointShaderModule = this.device.createShaderModule({\n            label: \"shader module\",\n            code: _shaders_pointShader_wgsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        });\n        this.bindGroupLayout = this.device.createBindGroupLayout({\n            label: \"bind group layout\",\n            entries: [\n                {\n                    binding: 0,\n                    visibility: GPUShaderStage.VERTEX,\n                    buffer: {}\n                }, {\n                    binding: 1,\n                    visibility: GPUShaderStage.FRAGMENT,\n                    buffer: {},\n                }\n            ]\n        });\n        this.updateScreenSize();\n    }\n    createPipelines() {\n        this.trianglePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_3__.Pipeline(this.device, this.canvasFormat, this.bindGroupLayout, this.triangleShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_3__.PipelinePrimitive.Triangle);\n        this.linePipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_3__.Pipeline(this.device, this.canvasFormat, this.bindGroupLayout, this.lineShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_3__.PipelinePrimitive.Line);\n        this.pointPipeline = new _pipeline__WEBPACK_IMPORTED_MODULE_3__.Pipeline(this.device, this.canvasFormat, this.bindGroupLayout, this.pointShaderModule, _pipeline__WEBPACK_IMPORTED_MODULE_3__.PipelinePrimitive.Point);\n    }\n    updateScreenSize() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n        this.depthTexture = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 4,\n            format: \"depth24plus\",\n            usage: GPUTextureUsage.RENDER_ATTACHMENT\n        });\n        this.renderTarget = this.device.createTexture({\n            size: [this.canvas.width, this.canvas.height],\n            sampleCount: 4,\n            format: this.canvasFormat,\n            usage: GPUTextureUsage.RENDER_ATTACHMENT\n        });\n    }\n    render(scene) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Factor this stuff out of main loop\n            const encoder = this.device.createCommandEncoder();\n            const pass = encoder.beginRenderPass({\n                colorAttachments: [\n                    {\n                        view: this.renderTarget.createView(),\n                        resolveTarget: this.context.getCurrentTexture().createView(),\n                        loadOp: \"clear\",\n                        clearValue: this.clearColor,\n                        storeOp: \"store\",\n                    },\n                ],\n                depthStencilAttachment: {\n                    view: this.depthTexture.createView(),\n                    depthClearValue: 1.0,\n                    depthLoadOp: \"clear\",\n                    depthStoreOp: \"store\"\n                }\n            });\n            var drawCalls = 0;\n            pass.setPipeline(this.trianglePipeline.get());\n            for (let mesh of scene.getAllMeshes()) {\n                mesh.draw(pass);\n                drawCalls++;\n            }\n            ;\n            pass.setPipeline(this.linePipeline.get());\n            for (let lines of scene.getAllLines()) {\n                lines.draw(pass);\n                drawCalls++;\n            }\n            ;\n            pass.setPipeline(this.pointPipeline.get());\n            for (let points of scene.getAllPoints()) {\n                points.draw(pass);\n                drawCalls++;\n            }\n            _cad__WEBPACK_IMPORTED_MODULE_4__.INSTANCE.getStats().setDrawCalls(drawCalls);\n            pass.end();\n            const commandBuffer = encoder.finish();\n            this.device.queue.submit([commandBuffer]);\n            yield this.device.queue.onSubmittedWorkDone();\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/render/renderer.ts\n");

/***/ }),

/***/ "./src/scene/camera.ts":
/*!*****************************!*\
  !*** ./src/scene/camera.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Camera: () => (/* binding */ Camera)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_ray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/ray */ \"./src/geometry/ray.ts\");\n/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mode */ \"./src/mode.ts\");\n\n\n\n\nclass Camera {\n    constructor(position, up, forward, fovy, screen) {\n        this.position = position;\n        this.up = up;\n        this.forward = forward;\n        this.fovy = fovy;\n        this.screen = screen;\n        this.isTurningRight = false;\n        this.isTurningLeft = false;\n        this.isMovingForward = false;\n        this.isMovingBackward = false;\n        this.isLookingUp = false;\n        this.isLookingDown = false;\n        this.isMovingLeft = false;\n        this.isMovingRight = false;\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.normalize(this.up);\n        this.lastFrameTime = performance.now();\n        this.viewProj = new Float32Array(16);\n        this.addEvents();\n    }\n    getViewProj() {\n        return this.viewProj;\n    }\n    getPosition() {\n        return this.position;\n    }\n    getFovy() {\n        return this.fovy;\n    }\n    setFovy(newFovy) {\n        this.fovy = newFovy;\n        this.updateViewProj();\n    }\n    getRayAtPixel(x, y) {\n        const center = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.position, this.forward);\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.forward, this.up);\n        const xRes = window.innerWidth;\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        const sizeX = sizeY / yRes * xRes;\n        const screenPoint = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(center, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(right, sizeX / xRes * (x - xRes / 2.0)), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.up, sizeY / yRes * (y - yRes / 2.0))));\n        return new _geometry_ray__WEBPACK_IMPORTED_MODULE_1__.Ray(this.position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.sub(screenPoint, this.position));\n    }\n    pixelSizeAtDist(dist) {\n        const yRes = window.innerHeight;\n        const sizeY = 2.0 * Math.tan(this.fovy / 2.0);\n        return sizeY / yRes * dist;\n    }\n    addEvents() {\n        document.addEventListener('keydown', (event) => {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.isTurningLeft = true;\n                    break;\n                case 'ArrowRight':\n                    this.isTurningRight = true;\n                    break;\n                case 'ArrowUp':\n                    this.isLookingUp = true;\n                    break;\n                case 'ArrowDown':\n                    this.isLookingDown = true;\n                    break;\n                case 'KeyW':\n                    this.isMovingForward = true;\n                    break;\n                case 'KeyS':\n                    this.isMovingBackward = true;\n                    break;\n                case 'KeyA':\n                    this.isMovingLeft = true;\n                    break;\n                case 'KeyD':\n                    this.isMovingRight = true;\n                    break;\n            }\n        }, false);\n        document.addEventListener('keyup', (event) => {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.isTurningLeft = false;\n                    break;\n                case 'ArrowRight':\n                    this.isTurningRight = false;\n                    break;\n                case 'ArrowUp':\n                    this.isLookingUp = false;\n                    break;\n                case 'ArrowDown':\n                    this.isLookingDown = false;\n                    break;\n                case 'KeyW':\n                    this.isMovingForward = false;\n                    break;\n                case 'KeyS':\n                    this.isMovingBackward = false;\n                    break;\n                case 'KeyA':\n                    this.isMovingLeft = false;\n                    break;\n                case 'KeyD':\n                    this.isMovingRight = false;\n                    break;\n            }\n        }, false);\n    }\n    tick() {\n        var now = performance.now();\n        if (_cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getMode() == _mode__WEBPACK_IMPORTED_MODULE_2__.OperatingMode.Navigation) {\n            if (this.isTurningLeft) {\n                this.turnRight((this.lastFrameTime - now) / 500);\n            }\n            else if (this.isTurningRight == true) {\n                this.turnRight((now - this.lastFrameTime) / 500);\n            }\n            if (this.isLookingUp) {\n                this.lookUp((now - this.lastFrameTime) / 500);\n            }\n            else if (this.isLookingDown) {\n                this.lookUp((this.lastFrameTime - now) / 500);\n            }\n            if (this.isMovingForward) {\n                this.goForward((now - this.lastFrameTime) / 50);\n            }\n            else if (this.isMovingBackward) {\n                this.goForward((this.lastFrameTime - now) / 50);\n            }\n            if (this.isMovingRight) {\n                this.goRight((now - this.lastFrameTime) / 50);\n            }\n            else if (this.isMovingLeft) {\n                this.goRight((this.lastFrameTime - now) / 50);\n            }\n        }\n        this.updateViewProj();\n        this.lastFrameTime = now;\n    }\n    turnRight(amount) {\n        const rotation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.rotateZ(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.identity(), -amount);\n        this.forward = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.transformMat4(this.forward, rotation);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.transformMat4(this.up, rotation);\n    }\n    lookUp(amount) {\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.forward, this.up);\n        const rotation = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.axisRotate(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.identity(), right, amount);\n        this.forward = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.transformMat4(this.forward, rotation);\n        this.up = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.transformMat4(this.up, rotation);\n    }\n    goForward(amount) {\n        this.position = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(this.forward, amount), this.position);\n    }\n    goRight(amount) {\n        const right = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.cross(this.up, this.forward);\n        this.position = wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(this.position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.scale(right, -amount));\n    }\n    updateViewProj() {\n        const view = new Float32Array(16);\n        const proj = new Float32Array(16);\n        const swapYZ = (v) => {\n            return wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(v[0], v[2], v[1]);\n        };\n        const forward = swapYZ(this.forward);\n        const position = swapYZ(this.position);\n        const up = swapYZ(this.up);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.lookAt(position, wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.add(position, forward), up, view);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.perspective(this.fovy, this.screen.width / this.screen.height, 0.1, 1000.0, proj);\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.mat4.multiply(proj, view, this.viewProj);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scene/camera.ts\n");

/***/ }),

/***/ "./src/scene/constructionPlane.ts":
/*!****************************************!*\
  !*** ./src/scene/constructionPlane.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConstructionPlane: () => (/* binding */ ConstructionPlane)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _render_renderLines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/renderLines */ \"./src/render/renderLines.ts\");\n\n\nclass ConstructionPlane {\n    constructor(majorCount = 10, minorCount = 10, cellSize = 1) {\n        this.majorCount = majorCount;\n        this.minorCount = minorCount;\n        this.cellSize = cellSize;\n        this.majorLines = 0;\n        this.minorLines = 0;\n        this.setup();\n    }\n    setup() {\n        if (this.majorLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.majorLines);\n        if (this.minorLines)\n            _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().removeLines(this.minorLines);\n        const cellCount = this.majorCount * this.minorCount;\n        const size = cellCount * this.cellSize;\n        const majorVerts = [];\n        const minorVerts = [];\n        const majorIndices = [];\n        const minorIndices = [];\n        var majorIndex = 0;\n        var minorIndex = 0;\n        const halfSize = size / 2.0;\n        const start = -halfSize;\n        for (var i = 0; i <= cellCount; i++) {\n            if (i % this.minorCount === 0) { // major line\n                majorVerts.push(start + i * this.cellSize, -halfSize, 0, 1, start + i * this.cellSize, halfSize, 0, 1, -halfSize, start + i * this.cellSize, 0, 1, halfSize, start + i * this.cellSize, 0, 1);\n                majorIndices.push(majorIndex, majorIndex + 1, majorIndex + 2, majorIndex + 3);\n                majorIndex += 4;\n            }\n            else { // minor line\n                minorVerts.push(start + i * this.cellSize, -halfSize, 0, 1, start + i * this.cellSize, halfSize, 0, 1, -halfSize, start + i * this.cellSize, 0, 1, halfSize, start + i * this.cellSize, 0, 1);\n                minorIndices.push(minorIndex, minorIndex + 1, minorIndex + 2, minorIndex + 3);\n                minorIndex += 4;\n            }\n        }\n        // TODO: colors based on dark mode\n        this.majorLines = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(new Float32Array(majorVerts), new Int32Array(majorIndices), [1.0, 0.9, 0.9, 1.0]));\n        this.minorLines = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addRenderLines(new _render_renderLines__WEBPACK_IMPORTED_MODULE_1__.RenderLines(new Float32Array(minorVerts), new Int32Array(minorIndices), [0.5, 0.4, 0.4, 1.0]));\n    }\n    getMinorCount() {\n        return this.minorCount;\n    }\n    getMajorCount() {\n        return this.majorCount;\n    }\n    getCellSize() {\n        return this.cellSize;\n    }\n    getMajorLines() {\n        return this.majorLines;\n    }\n    getMinorLines() {\n        return this.minorLines;\n    }\n    setMajorColor(color) {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getLines(this.majorLines).setColor(color);\n    }\n    setMinorColor(color) {\n        _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().getLines(this.minorLines).setColor(color);\n    }\n    setMinorCount(count) {\n        this.minorCount = count;\n        this.setup();\n    }\n    setMajorCount(count) {\n        this.majorCount = count;\n        this.setup();\n    }\n    setCellSize(size) {\n        this.cellSize = size;\n        this.setup();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scene/constructionPlane.ts\n");

/***/ }),

/***/ "./src/scene/scene.ts":
/*!****************************!*\
  !*** ./src/scene/scene.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scene: () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./camera */ \"./src/scene/camera.ts\");\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _constructionPlane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constructionPlane */ \"./src/scene/constructionPlane.ts\");\n/* harmony import */ var _geometry_sceneBoundingBoxHeirarcy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/sceneBoundingBoxHeirarcy */ \"./src/geometry/sceneBoundingBoxHeirarcy.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\nclass Scene {\n    constructor() {\n        this.renderLines = new Map();\n        this.renderMeshes = new Map();\n        this.renderPoints = new Map();\n        this.renderIDGenerator = 1;\n        this.objectIDGenerator = 1;\n        this.boundingBoxHeirarchy = new _geometry_sceneBoundingBoxHeirarcy__WEBPACK_IMPORTED_MODULE_2__.SceneBoundingBoxHeirarchy([]);\n        this.camera = new _camera__WEBPACK_IMPORTED_MODULE_0__.Camera(wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0.0, -20.0, 10.0), //position\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0.0, 0.0, 1.0), //up\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0.0, 1.0, 0.0), //forward\n        1.5, //fovy\n        document.getElementById(\"screen\"));\n    }\n    getConstructionPlane() {\n        return this.constructionPlane;\n    }\n    getBoundingBoxHeirarchy() {\n        return this.boundingBoxHeirarchy;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.constructionPlane = new _constructionPlane__WEBPACK_IMPORTED_MODULE_1__.ConstructionPlane();\n        });\n    }\n    addGeometry(geo) {\n        this.boundingBoxHeirarchy.add(geo);\n        this.boundingBoxHeirarchy.print();\n        return this.objectIDGenerator++;\n    }\n    addRenderMesh(mesh) {\n        this.renderMeshes.set(this.renderIDGenerator, mesh);\n        return this.renderIDGenerator++;\n    }\n    addRenderLines(lines) {\n        this.renderLines.set(this.renderIDGenerator, lines);\n        return this.renderIDGenerator++;\n    }\n    addRenderPoints(points) {\n        this.renderPoints.set(this.renderIDGenerator, points);\n        return this.renderIDGenerator++;\n    }\n    getLines(id) {\n        return this.renderLines.get(id);\n    }\n    getMesh(id) {\n        return this.renderMeshes.get(id);\n    }\n    getPoints(id) {\n        return this.renderPoints.get(id);\n    }\n    getAllLines() {\n        return this.renderLines.values();\n    }\n    getAllMeshes() {\n        return this.renderMeshes.values();\n    }\n    getAllPoints() {\n        return this.renderPoints.values();\n    }\n    removeMesh(id) {\n        this.renderMeshes.delete(id);\n    }\n    removeLines(id) {\n        this.renderLines.delete(id);\n    }\n    tick() {\n        this.camera.tick();\n        for (const line of this.renderLines.values()) {\n            line.update();\n        }\n        for (const mesh of this.renderMeshes.values()) {\n            mesh.update();\n        }\n    }\n    getCamera() {\n        return this.camera;\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBQ00sWUFBWTtRQUNqQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDcEMsQ0FBQztJQUVNLFVBQVUsQ0FBQyxFQUFZO1FBQzVCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFDTSxXQUFXLENBQUMsRUFBWTtRQUM3QixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU0sSUFBSTtRQUVULElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDbkIsS0FBSyxNQUFNLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQzVDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUNmO1FBQ0QsS0FBSyxNQUFNLElBQUksSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQzdDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUNmO0lBRUgsQ0FBQztJQUVNLFNBQVM7UUFDZCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztDQUVGO0FBQUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3NjZW5lL3NjZW5lLnRzP2M5YmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FtZXJhIH0gZnJvbSBcIi4vY2FtZXJhXCJcbmltcG9ydCB7IHZlYzMgfSBmcm9tIFwid2dwdS1tYXRyaXhcIlxuaW1wb3J0IHsgUmVuZGVyTWVzaCB9IGZyb20gXCIuLi9yZW5kZXIvcmVuZGVyTWVzaFwiXG5pbXBvcnQgeyBSZW5kZXJMaW5lcyB9IGZyb20gXCIuLi9yZW5kZXIvcmVuZGVyTGluZXNcIlxuaW1wb3J0IHsgQ29uc3RydWN0aW9uUGxhbmUgfSBmcm9tIFwiLi9jb25zdHJ1Y3Rpb25QbGFuZVwiXG5pbXBvcnQgeyBSZW5kZXJQb2ludHMgfSBmcm9tIFwiLi4vcmVuZGVyL3JlbmRlclBvaW50c1wiXG5pbXBvcnQgeyBTY2VuZUJvdW5kaW5nQm94SGVpcmFyY2h5IH0gZnJvbSBcIi4uL2dlb21ldHJ5L3NjZW5lQm91bmRpbmdCb3hIZWlyYXJjeVwiXG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi9nZW9tZXRyeS9nZW9tZXRyeVwiXG5cbmV4cG9ydCB0eXBlIFJlbmRlcklEID0gbnVtYmVyOyAvLyBmb3IgZ3B1IG9iamVjdHNcbmV4cG9ydCB0eXBlIE9iamVjdElEID0gbnVtYmVyOyAvLyBmb3IgY3B1IG9iamVjdHNcblxuZXhwb3J0IGNsYXNzIFNjZW5lIHtcblxuICBwcml2YXRlIGNhbWVyYTogQ2FtZXJhO1xuICBwcml2YXRlIGNvbnN0cnVjdGlvblBsYW5lITogQ29uc3RydWN0aW9uUGxhbmU7XG4gIHByaXZhdGUgcmVuZGVyTGluZXM6IE1hcDxSZW5kZXJJRCwgUmVuZGVyTGluZXM+ID0gbmV3IE1hcDxSZW5kZXJJRCwgUmVuZGVyTGluZXM+KCk7XG4gIHByaXZhdGUgcmVuZGVyTWVzaGVzOiBNYXA8UmVuZGVySUQsIFJlbmRlck1lc2g+ID0gbmV3IE1hcDxSZW5kZXJJRCwgUmVuZGVyTWVzaD4oKTtcbiAgcHJpdmF0ZSByZW5kZXJQb2ludHM6IE1hcDxSZW5kZXJJRCwgUmVuZGVyUG9pbnRzPiA9IG5ldyBNYXA8UmVuZGVySUQsIFJlbmRlclBvaW50cz4oKTtcbiAgcHJpdmF0ZSByZW5kZXJJREdlbmVyYXRvcjogUmVuZGVySUQgPSAxO1xuICBwcml2YXRlIG9iamVjdElER2VuZXJhdG9yOiBPYmplY3RJRCA9IDE7XG4gIHByaXZhdGUgYm91bmRpbmdCb3hIZWlyYXJjaHk6IFNjZW5lQm91bmRpbmdCb3hIZWlyYXJjaHkgPSBuZXcgU2NlbmVCb3VuZGluZ0JveEhlaXJhcmNoeShbXSk7XG5cbiAgY29uc3RydWN0b3IoXG4gICkge1xuXG4gICAgdGhpcy5jYW1lcmEgPSBuZXcgQ2FtZXJhKFxuICAgICAgdmVjMy5jcmVhdGUoMC4wLCAtMjAuMCwgMTAuMCksXHQvL3Bvc2l0aW9uXG4gICAgICB2ZWMzLmNyZWF0ZSgwLjAsIDAuMCwgMS4wKSxcdC8vdXBcbiAgICAgIHZlYzMuY3JlYXRlKDAuMCwgMS4wLCAwLjApLFx0Ly9mb3J3YXJkXG4gICAgICAxLjUsXHRcdC8vZm92eVxuICAgICAgPEhUTUxDYW52YXNFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2NyZWVuXCIpXG4gICAgKTtcblxuICB9XG5cbiAgcHVibGljIGdldENvbnN0cnVjdGlvblBsYW5lKCk6IENvbnN0cnVjdGlvblBsYW5lIHtcbiAgICByZXR1cm4gdGhpcy5jb25zdHJ1Y3Rpb25QbGFuZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCb3VuZGluZ0JveEhlaXJhcmNoeSgpOiBTY2VuZUJvdW5kaW5nQm94SGVpcmFyY2h5IHtcbiAgICByZXR1cm4gdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBpbml0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHRoaXMuY29uc3RydWN0aW9uUGxhbmUgPSBuZXcgQ29uc3RydWN0aW9uUGxhbmUoKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRHZW9tZXRyeShnZW86IEdlb21ldHJ5KTogT2JqZWN0SUQge1xuICAgIHRoaXMuYm91bmRpbmdCb3hIZWlyYXJjaHkuYWRkKGdlbyk7XG4gICAgdGhpcy5ib3VuZGluZ0JveEhlaXJhcmNoeS5wcmludCgpO1xuICAgIHJldHVybiB0aGlzLm9iamVjdElER2VuZXJhdG9yKys7XG4gIH1cblxuICBwdWJsaWMgYWRkUmVuZGVyTWVzaChtZXNoOiBSZW5kZXJNZXNoKTogUmVuZGVySUQge1xuICAgIHRoaXMucmVuZGVyTWVzaGVzLnNldCh0aGlzLnJlbmRlcklER2VuZXJhdG9yLCBtZXNoKTtcbiAgICByZXR1cm4gdGhpcy5yZW5kZXJJREdlbmVyYXRvcisrO1xuICB9XG5cbiAgcHVibGljIGFkZFJlbmRlckxpbmVzKGxpbmVzOiBSZW5kZXJMaW5lcyk6IFJlbmRlcklEIHtcbiAgICB0aGlzLnJlbmRlckxpbmVzLnNldCh0aGlzLnJlbmRlcklER2VuZXJhdG9yLCBsaW5lcyk7XG4gICAgcmV0dXJuIHRoaXMucmVuZGVySURHZW5lcmF0b3IrKztcbiAgfVxuXG4gIHB1YmxpYyBhZGRSZW5kZXJQb2ludHMocG9pbnRzOiBSZW5kZXJQb2ludHMpOiBSZW5kZXJJRCB7XG4gICAgdGhpcy5yZW5kZXJQb2ludHMuc2V0KHRoaXMucmVuZGVySURHZW5lcmF0b3IsIHBvaW50cyk7XG4gICAgcmV0dXJuIHRoaXMucmVuZGVySURHZW5lcmF0b3IrKztcbiAgfVxuXG4gIHB1YmxpYyBnZXRMaW5lcyhpZDogUmVuZGVySUQpOiBSZW5kZXJMaW5lcyB7XG4gICAgcmV0dXJuIDxSZW5kZXJMaW5lcz50aGlzLnJlbmRlckxpbmVzLmdldChpZCk7XG4gIH1cbiAgcHVibGljIGdldE1lc2goaWQ6IFJlbmRlcklEKTogUmVuZGVyTWVzaCB7XG4gICAgcmV0dXJuIDxSZW5kZXJNZXNoPnRoaXMucmVuZGVyTWVzaGVzLmdldChpZCk7XG4gIH1cbiAgcHVibGljIGdldFBvaW50cyhpZDogUmVuZGVySUQpOiBSZW5kZXJQb2ludHMge1xuICAgIHJldHVybiA8UmVuZGVyUG9pbnRzPnRoaXMucmVuZGVyUG9pbnRzLmdldChpZCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0QWxsTGluZXMoKTogSXRlcmFibGVJdGVyYXRvcjxSZW5kZXJMaW5lcz4ge1xuICAgIHJldHVybiB0aGlzLnJlbmRlckxpbmVzLnZhbHVlcygpO1xuICB9XG4gIHB1YmxpYyBnZXRBbGxNZXNoZXMoKTogSXRlcmFibGVJdGVyYXRvcjxSZW5kZXJNZXNoPiB7XG4gICAgcmV0dXJuIHRoaXMucmVuZGVyTWVzaGVzLnZhbHVlcygpO1xuICB9XG4gIHB1YmxpYyBnZXRBbGxQb2ludHMoKTogSXRlcmFibGVJdGVyYXRvcjxSZW5kZXJQb2ludHM+IHtcbiAgICByZXR1cm4gdGhpcy5yZW5kZXJQb2ludHMudmFsdWVzKCk7XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlTWVzaChpZDogUmVuZGVySUQpIHtcbiAgICB0aGlzLnJlbmRlck1lc2hlcy5kZWxldGUoaWQpO1xuICB9XG4gIHB1YmxpYyByZW1vdmVMaW5lcyhpZDogUmVuZGVySUQpIHtcbiAgICB0aGlzLnJlbmRlckxpbmVzLmRlbGV0ZShpZCk7XG4gIH1cblxuICBwdWJsaWMgdGljaygpOiB2b2lkIHtcblxuICAgIHRoaXMuY2FtZXJhLnRpY2soKTtcbiAgICBmb3IgKGNvbnN0IGxpbmUgb2YgdGhpcy5yZW5kZXJMaW5lcy52YWx1ZXMoKSkge1xuICAgICAgbGluZS51cGRhdGUoKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBtZXNoIG9mIHRoaXMucmVuZGVyTWVzaGVzLnZhbHVlcygpKSB7XG4gICAgICBtZXNoLnVwZGF0ZSgpO1xuICAgIH1cblxuICB9XG5cbiAgcHVibGljIGdldENhbWVyYSgpOiBDYW1lcmEge1xuICAgIHJldHVybiB0aGlzLmNhbWVyYTtcbiAgfVxuXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scene/scene.ts\n");

/***/ }),

/***/ "./src/stats.ts":
/*!**********************!*\
  !*** ./src/stats.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RenderStats: () => (/* binding */ RenderStats)\n/* harmony export */ });\nclass RenderStats {\n    constructor() {\n        // this.element = <HTMLDivElement>document.getElementById(\"stats\");\n        this.reset();\n    }\n    reset() {\n        this.renderTime = NaN;\n        this.frameTime = NaN;\n        this.sceneTime = NaN;\n        this.framesOver100ms = 0;\n        this.totalFrames = 0;\n        this.startTime = Date.now();\n    }\n    setRenderTime(renderTime) {\n        this.renderTime = renderTime;\n    }\n    setFrameTime(frameTime) {\n        this.totalFrames++;\n        if (frameTime > 0.1)\n            this.framesOver100ms++;\n        this.frameTime = frameTime;\n    }\n    setSceneTime(sceneTime) {\n        this.sceneTime = sceneTime;\n    }\n    setDrawCalls(count) {\n        this.drawCalls = count;\n    }\n    getInnerHTML() {\n        return \"<u>STATS:</u><br>\" +\n            \"<br>\" +\n            \"FPS: \" + (1.0 / this.frameTime).toFixed(3) + \"<br>\" +\n            \"Average FPS: \" + (1000.0 * this.totalFrames / (Date.now() - this.startTime)).toFixed(3) + \"<br>\" +\n            \"<br>\" +\n            \"Render Time: \" + this.renderTime.toFixed(3) + \"<br>\" +\n            \"Frame Time: \" + this.frameTime.toFixed(3) + \"<br>\" +\n            \"Scene Time: \" + this.sceneTime.toFixed(3) + \"<br>\" +\n            \"<br>\" +\n            \"Frames Over 100ms: \" + this.framesOver100ms.toString() + \"<br>\" +\n            \"<br>\" +\n            \"Draw Calls: \" + this.drawCalls.toString();\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3RhdHMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUNPLE1BQU0sV0FBVztJQVd0QjtRQUVFLG1FQUFtRTtRQUNuRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZixDQUFDO0lBRU0sS0FBSztRQUVWLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFTSxhQUFhLENBQUMsVUFBa0I7UUFDckMsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDL0IsQ0FBQztJQUVNLFlBQVksQ0FBQyxTQUFpQjtRQUNuQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxTQUFTLEdBQUcsR0FBRztZQUFFLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUM1QyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUM3QixDQUFDO0lBRU0sWUFBWSxDQUFDLFNBQWlCO1FBQ25DLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFTSxZQUFZLENBQUMsS0FBYTtRQUMvQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDO0lBRU0sWUFBWTtRQUNqQixPQUFPLG1CQUFtQjtZQUN4QixNQUFNO1lBQ04sT0FBTyxHQUFHLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTTtZQUNwRCxlQUFlLEdBQUcsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTTtZQUNqRyxNQUFNO1lBQ04sZUFBZSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU07WUFDckQsY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU07WUFDbkQsY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU07WUFDbkQsTUFBTTtZQUNOLHFCQUFxQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLEdBQUcsTUFBTTtZQUNoRSxNQUFNO1lBQ04sY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDL0MsQ0FBQztDQUdGO0FBQUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3N0YXRzLnRzPzAyNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgY2xhc3MgUmVuZGVyU3RhdHMge1xuXG4gIC8vcHJpdmF0ZSBlbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcbiAgcHJpdmF0ZSByZW5kZXJUaW1lITogbnVtYmVyO1xuICBwcml2YXRlIGZyYW1lVGltZSE6IG51bWJlcjtcbiAgcHJpdmF0ZSBzY2VuZVRpbWUhOiBudW1iZXI7XG4gIHByaXZhdGUgZnJhbWVzT3ZlcjEwMG1zITogbnVtYmVyO1xuICBwcml2YXRlIHRvdGFsRnJhbWVzITogbnVtYmVyO1xuICBwcml2YXRlIHN0YXJ0VGltZSE6IG51bWJlcjtcbiAgcHJpdmF0ZSBkcmF3Q2FsbHMhOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG5cbiAgICAvLyB0aGlzLmVsZW1lbnQgPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdGF0c1wiKTtcbiAgICB0aGlzLnJlc2V0KCk7XG4gIH1cblxuICBwdWJsaWMgcmVzZXQoKTogdm9pZCB7XG5cbiAgICB0aGlzLnJlbmRlclRpbWUgPSBOYU47XG4gICAgdGhpcy5mcmFtZVRpbWUgPSBOYU47XG4gICAgdGhpcy5zY2VuZVRpbWUgPSBOYU47XG4gICAgdGhpcy5mcmFtZXNPdmVyMTAwbXMgPSAwO1xuICAgIHRoaXMudG90YWxGcmFtZXMgPSAwO1xuICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRSZW5kZXJUaW1lKHJlbmRlclRpbWU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMucmVuZGVyVGltZSA9IHJlbmRlclRpbWU7XG4gIH1cblxuICBwdWJsaWMgc2V0RnJhbWVUaW1lKGZyYW1lVGltZTogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy50b3RhbEZyYW1lcysrO1xuICAgIGlmIChmcmFtZVRpbWUgPiAwLjEpIHRoaXMuZnJhbWVzT3ZlcjEwMG1zKys7XG4gICAgdGhpcy5mcmFtZVRpbWUgPSBmcmFtZVRpbWU7XG4gIH1cblxuICBwdWJsaWMgc2V0U2NlbmVUaW1lKHNjZW5lVGltZTogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5zY2VuZVRpbWUgPSBzY2VuZVRpbWU7XG4gIH1cblxuICBwdWJsaWMgc2V0RHJhd0NhbGxzKGNvdW50OiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLmRyYXdDYWxscyA9IGNvdW50O1xuICB9XG5cbiAgcHVibGljIGdldElubmVySFRNTCgpOiBzdHJpbmcge1xuICAgIHJldHVybiBcIjx1PlNUQVRTOjwvdT48YnI+XCIgK1xuICAgICAgXCI8YnI+XCIgK1xuICAgICAgXCJGUFM6IFwiICsgKDEuMCAvIHRoaXMuZnJhbWVUaW1lKS50b0ZpeGVkKDMpICsgXCI8YnI+XCIgK1xuICAgICAgXCJBdmVyYWdlIEZQUzogXCIgKyAoMTAwMC4wICogdGhpcy50b3RhbEZyYW1lcyAvIChEYXRlLm5vdygpIC0gdGhpcy5zdGFydFRpbWUpKS50b0ZpeGVkKDMpICsgXCI8YnI+XCIgK1xuICAgICAgXCI8YnI+XCIgK1xuICAgICAgXCJSZW5kZXIgVGltZTogXCIgKyB0aGlzLnJlbmRlclRpbWUudG9GaXhlZCgzKSArIFwiPGJyPlwiICtcbiAgICAgIFwiRnJhbWUgVGltZTogXCIgKyB0aGlzLmZyYW1lVGltZS50b0ZpeGVkKDMpICsgXCI8YnI+XCIgK1xuICAgICAgXCJTY2VuZSBUaW1lOiBcIiArIHRoaXMuc2NlbmVUaW1lLnRvRml4ZWQoMykgKyBcIjxicj5cIiArXG4gICAgICBcIjxicj5cIiArXG4gICAgICBcIkZyYW1lcyBPdmVyIDEwMG1zOiBcIiArIHRoaXMuZnJhbWVzT3ZlcjEwMG1zLnRvU3RyaW5nKCkgKyBcIjxicj5cIiArXG4gICAgICBcIjxicj5cIiArXG4gICAgICBcIkRyYXcgQ2FsbHM6IFwiICsgdGhpcy5kcmF3Q2FsbHMudG9TdHJpbmcoKTtcbiAgfVxuXG5cbn07XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/stats.ts\n");

/***/ }),

/***/ "./src/tests/testScene1.ts":
/*!*********************************!*\
  !*** ./src/tests/testScene1.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTestScene1: () => (/* binding */ addTestScene1)\n/* harmony export */ });\n/* harmony import */ var wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wgpu-matrix */ \"./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\");\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cad */ \"./src/cad.ts\");\n/* harmony import */ var _geometry_mesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry/mesh */ \"./src/geometry/mesh.ts\");\n/* harmony import */ var _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/nurbs/curve */ \"./src/geometry/nurbs/curve.ts\");\n\n\n\n\nconst addTestScene1 = function () {\n    const mesh = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(new _geometry_mesh__WEBPACK_IMPORTED_MODULE_1__.Mesh([wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(-5, -5, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(5, -5, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(5, 5, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(-5, 5, 1)], [wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1), wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec3.create(0, 0, 1)], [0, 1, 2, 2, 3, 0]));\n    const curve = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getScene().addGeometry(new _geometry_nurbs_curve__WEBPACK_IMPORTED_MODULE_2__.Curve([\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-50, -50, 0, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(-50, 50, 0, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(50, 50, 0, 1),\n        wgpu_matrix__WEBPACK_IMPORTED_MODULE_3__.vec4.create(50, -50, 0, 1)\n    ], 2));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGVzdHMvdGVzdFNjZW5lMS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3QztBQUNQO0FBQ007QUFDUztBQUd6QyxNQUFNLGFBQWEsR0FBRztJQUUzQixNQUFNLElBQUksR0FBYSwwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FDcEQsSUFBSSxnREFBSSxDQUNOLENBQUMsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQzVGLENBQUMsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsNkNBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUN4RixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQ25CLENBQ0YsQ0FBQztJQUNGLE1BQU0sS0FBSyxHQUFhLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsV0FBVyxDQUNyRCxJQUFJLHdEQUFLLENBQUM7UUFDUiw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNCLDZDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzFCLDZDQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6Qiw2Q0FBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUMzQixFQUNDLENBQUMsQ0FDRixDQUNGLENBQUM7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvdGVzdHMvdGVzdFNjZW5lMS50cz81MTE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlYzMsIHZlYzQgfSBmcm9tIFwid2dwdS1tYXRyaXhcIlxuaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vY2FkXCJcbmltcG9ydCB7IE1lc2ggfSBmcm9tIFwiLi4vZ2VvbWV0cnkvbWVzaFwiXG5pbXBvcnQgeyBDdXJ2ZSB9IGZyb20gXCIuLi9nZW9tZXRyeS9udXJicy9jdXJ2ZVwiO1xuaW1wb3J0IHsgT2JqZWN0SUQgfSBmcm9tIFwiLi4vc2NlbmUvc2NlbmVcIjtcblxuZXhwb3J0IGNvbnN0IGFkZFRlc3RTY2VuZTEgPSBmdW5jdGlvbigpIHtcblxuICBjb25zdCBtZXNoOiBPYmplY3RJRCA9IElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkoXG4gICAgbmV3IE1lc2goXG4gICAgICBbdmVjMy5jcmVhdGUoLTUsIC01LCAxKSwgdmVjMy5jcmVhdGUoNSwgLTUsIDEpLCB2ZWMzLmNyZWF0ZSg1LCA1LCAxKSwgdmVjMy5jcmVhdGUoLTUsIDUsIDEpXSxcbiAgICAgIFt2ZWMzLmNyZWF0ZSgwLCAwLCAxKSwgdmVjMy5jcmVhdGUoMCwgMCwgMSksIHZlYzMuY3JlYXRlKDAsIDAsIDEpLCB2ZWMzLmNyZWF0ZSgwLCAwLCAxKV0sXG4gICAgICBbMCwgMSwgMiwgMiwgMywgMF1cbiAgICApXG4gICk7XG4gIGNvbnN0IGN1cnZlOiBPYmplY3RJRCA9IElOU1RBTkNFLmdldFNjZW5lKCkuYWRkR2VvbWV0cnkoXG4gICAgbmV3IEN1cnZlKFtcbiAgICAgIHZlYzQuY3JlYXRlKC01MCwgLTUwLCAwLCAxKSxcbiAgICAgIHZlYzQuY3JlYXRlKC01MCwgNTAsIDAsIDEpLFxuICAgICAgdmVjNC5jcmVhdGUoNTAsIDUwLCAwLCAxKSxcbiAgICAgIHZlYzQuY3JlYXRlKDUwLCAtNTAsIDAsIDEpXG4gICAgXSxcbiAgICAgIDJcbiAgICApXG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/tests/testScene1.ts\n");

/***/ }),

/***/ "./src/utils/timer.ts":
/*!****************************!*\
  !*** ./src/utils/timer.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Timer: () => (/* binding */ Timer)\n/* harmony export */ });\nclass Timer {\n    constructor() {\n        this.startTime = 0;\n        this.reset();\n    }\n    reset() {\n        this.startTime = Date.now();\n    }\n    logTime() {\n        console.log((Date.now() - this.startTime) / 1000.0);\n    }\n    getTime() {\n        return (Date.now() - this.startTime) / 1000.0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdGltZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUdPLE1BQU0sS0FBSztJQUlkO1FBRlEsY0FBUyxHQUFXLENBQUMsQ0FBQztRQUcxQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVNLEtBQUs7UUFDUixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ2xELENBQUM7Q0FFSiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3V0aWxzL3RpbWVyLnRzPzI4ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuZXhwb3J0IGNsYXNzIFRpbWVyIHtcblxuICAgIHByaXZhdGUgc3RhcnRUaW1lOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVzZXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgbG9nVGltZSgpOiB2b2lkIHtcbiAgICAgICAgY29uc29sZS5sb2coKERhdGUubm93KCkgLSB0aGlzLnN0YXJ0VGltZSkgLyAxMDAwLjApO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUaW1lKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAoRGF0ZS5ub3coKSAtIHRoaXMuc3RhcnRUaW1lKSAvIDEwMDAuMDtcbiAgICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/timer.ts\n");

/***/ }),

/***/ "./src/window/window.ts":
/*!******************************!*\
  !*** ./src/window/window.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CADWindow: () => (/* binding */ CADWindow)\n/* harmony export */ });\nclass CADWindow {\n    constructor(name, start) {\n        this.element = document.createElement(\"div\");\n        this.element.id = name;\n        this.element.className = \"floating-window\";\n        this.start = start;\n        this.end = start;\n        this.updateSize();\n        document.body.appendChild(this.element);\n    }\n    updateEnd(end) {\n        this.end = end;\n        this.updateSize();\n    }\n    updateSize() {\n        const left = Math.min(this.start[0], this.end[0]);\n        const top = Math.min(this.start[1], this.end[1]);\n        const width = Math.abs(this.start[0] - this.end[0]);\n        const height = Math.abs(this.start[1] - this.end[1]);\n        console.log(left, top, width, height);\n        this.element.setAttribute(\"style\", `\n      left:${left}px;\n      top:${top}px;\n      width:${width}px;\n      height:${height}px;`);\n    }\n    destroy() {\n        document.body.removeChild(this.element);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvdy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBZSxTQUFTO0lBTTdCLFlBQVksSUFBWSxFQUFFLEtBQXVCO1FBQy9DLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsaUJBQWlCLENBQUM7UUFDM0MsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7UUFDakIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2xCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRU0sU0FBUyxDQUFDLEdBQXFCO1FBQ3BDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFTyxVQUFVO1FBQ2hCLE1BQU0sSUFBSSxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUQsTUFBTSxHQUFHLEdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6RCxNQUFNLEtBQUssR0FBVyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVELE1BQU0sTUFBTSxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUU7YUFDMUIsSUFBSTtZQUNMLEdBQUc7Y0FDRCxLQUFLO2VBQ0osTUFBTSxLQUFLLENBQ3JCLENBQUM7SUFDSixDQUFDO0lBRU0sT0FBTztRQUNaLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQyxDQUFDO0NBS0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93LnRzP2Q3Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFic3RyYWN0IGNsYXNzIENBRFdpbmRvdyB7XG5cbiAgcHJvdGVjdGVkIGVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xuICBwcml2YXRlIHN0YXJ0OiBbbnVtYmVyLCBudW1iZXJdO1xuICBwcml2YXRlIGVuZDogW251bWJlciwgbnVtYmVyXTtcblxuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsIHN0YXJ0OiBbbnVtYmVyLCBudW1iZXJdKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0aGlzLmVsZW1lbnQuaWQgPSBuYW1lO1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc05hbWUgPSBcImZsb2F0aW5nLXdpbmRvd1wiO1xuICAgIHRoaXMuc3RhcnQgPSBzdGFydDtcbiAgICB0aGlzLmVuZCA9IHN0YXJ0O1xuICAgIHRoaXMudXBkYXRlU2l6ZSgpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVFbmQoZW5kOiBbbnVtYmVyLCBudW1iZXJdKTogdm9pZCB7XG4gICAgdGhpcy5lbmQgPSBlbmQ7XG4gICAgdGhpcy51cGRhdGVTaXplKCk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZVNpemUoKTogdm9pZCB7XG4gICAgY29uc3QgbGVmdDogbnVtYmVyID0gTWF0aC5taW4odGhpcy5zdGFydFswXSwgdGhpcy5lbmRbMF0pO1xuICAgIGNvbnN0IHRvcDogbnVtYmVyID0gTWF0aC5taW4odGhpcy5zdGFydFsxXSwgdGhpcy5lbmRbMV0pO1xuICAgIGNvbnN0IHdpZHRoOiBudW1iZXIgPSBNYXRoLmFicyh0aGlzLnN0YXJ0WzBdIC0gdGhpcy5lbmRbMF0pO1xuICAgIGNvbnN0IGhlaWdodDogbnVtYmVyID0gTWF0aC5hYnModGhpcy5zdGFydFsxXSAtIHRoaXMuZW5kWzFdKTtcbiAgICBjb25zb2xlLmxvZyhsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHQpO1xuICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBgXG4gICAgICBsZWZ0OiR7bGVmdH1weDtcbiAgICAgIHRvcDoke3RvcH1weDtcbiAgICAgIHdpZHRoOiR7d2lkdGh9cHg7XG4gICAgICBoZWlnaHQ6JHtoZWlnaHR9cHg7YFxuICAgICk7XG4gIH1cblxuICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuZWxlbWVudCk7XG4gIH1cblxuICBwdWJsaWMgYWJzdHJhY3QgcG9wdWxhdGUoKTogdm9pZDtcbiAgcHVibGljIGFic3RyYWN0IHRpY2soKTogdm9pZDtcblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/window.ts\n");

/***/ }),

/***/ "./src/window/windowManager.ts":
/*!*************************************!*\
  !*** ./src/window/windowManager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WINDOW_NAMES: () => (/* binding */ WINDOW_NAMES),\n/* harmony export */   WindowManager: () => (/* binding */ WindowManager)\n/* harmony export */ });\n/* harmony import */ var _windows_logWindow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./windows/logWindow */ \"./src/window/windows/logWindow.ts\");\n/* harmony import */ var _windows_materialsWindow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./windows/materialsWindow */ \"./src/window/windows/materialsWindow.ts\");\n/* harmony import */ var _windows_sceneWindow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./windows/sceneWindow */ \"./src/window/windows/sceneWindow.ts\");\n/* harmony import */ var _windows_snapsWindow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./windows/snapsWindow */ \"./src/window/windows/snapsWindow.ts\");\n/* harmony import */ var _windows_statsWindow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./windows/statsWindow */ \"./src/window/windows/statsWindow.ts\");\n\n\n\n\n\nconst WINDOW_NAMES = new Map();\nWINDOW_NAMES.set(1, \"stats\");\nWINDOW_NAMES.set(2, \"log\");\nWINDOW_NAMES.set(3, \"materials\");\nWINDOW_NAMES.set(4, \"scene\");\nWINDOW_NAMES.set(5, \"snaps\");\nclass WindowManager {\n    constructor() {\n        this.windows = new Map();\n    }\n    getWindows() {\n        return this.windows;\n    }\n    addWindow(windowName, start) {\n        this.removeWindow(windowName);\n        switch (windowName) {\n            case \"stats\":\n                this.windows.set(\"stats\", new _windows_statsWindow__WEBPACK_IMPORTED_MODULE_4__.StatsWindow(windowName, start));\n                break;\n            case \"log\":\n                this.windows.set(\"log\", new _windows_logWindow__WEBPACK_IMPORTED_MODULE_0__.LogWindow(windowName, start));\n                break;\n            case \"materials\":\n                this.windows.set(\"materials\", new _windows_materialsWindow__WEBPACK_IMPORTED_MODULE_1__.MaterialsWindow(windowName, start));\n                break;\n            case \"scene\":\n                this.windows.set(\"scene\", new _windows_sceneWindow__WEBPACK_IMPORTED_MODULE_2__.SceneWindow(windowName, start));\n                break;\n            case \"snaps\":\n                this.windows.set(\"snaps\", new _windows_snapsWindow__WEBPACK_IMPORTED_MODULE_3__.SnapsWindow(windowName, start));\n                break;\n            default:\n                throw new Error(\"not implemented\");\n        }\n    }\n    removeWindow(windowName) {\n        var _a;\n        (_a = this.windows.get(windowName)) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.windows.delete(windowName);\n    }\n    tick() {\n        for (let window of this.windows.values()) {\n            window.tick();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd01hbmFnZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNnRDtBQUNZO0FBQ1I7QUFDQTtBQUNBO0FBRTdDLE1BQU0sWUFBWSxHQUF3QixJQUFJLEdBQUcsRUFBa0IsQ0FBQztBQUMzRSxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM3QixZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUMzQixZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUNqQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM3QixZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUV0QixNQUFNLGFBQWE7SUFJeEI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksR0FBRyxFQUFxQixDQUFDO0lBQzlDLENBQUM7SUFFTSxVQUFVO1FBQ2YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFTSxTQUFTLENBQUMsVUFBa0IsRUFBRSxLQUF1QjtRQUMxRCxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzlCLFFBQVEsVUFBVSxFQUFFO1lBQ2xCLEtBQUssT0FBTztnQkFDVixJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsSUFBSSw2REFBVyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUM5RCxNQUFNO1lBQ1IsS0FBSyxLQUFLO2dCQUNSLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxJQUFJLHlEQUFTLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQzFELE1BQU07WUFDUixLQUFLLFdBQVc7Z0JBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLElBQUkscUVBQWUsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDdEUsTUFBTTtZQUNSLEtBQUssT0FBTztnQkFDVixJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsSUFBSSw2REFBVyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUM5RCxNQUFNO1lBQ1IsS0FBSyxPQUFPO2dCQUNWLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxJQUFJLDZEQUFXLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQzlELE1BQU07WUFDUjtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRU0sWUFBWSxDQUFDLFVBQWtCOztRQUNwQyxVQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsMENBQUUsT0FBTyxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLElBQUk7UUFDVCxLQUFLLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDeEMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2Y7SUFDSCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93TWFuYWdlci50cz80YTM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENBRFdpbmRvdyB9IGZyb20gXCIuL3dpbmRvd1wiO1xuaW1wb3J0IHsgTG9nV2luZG93IH0gZnJvbSBcIi4vd2luZG93cy9sb2dXaW5kb3dcIjtcbmltcG9ydCB7IE1hdGVyaWFsc1dpbmRvdyB9IGZyb20gXCIuL3dpbmRvd3MvbWF0ZXJpYWxzV2luZG93XCI7XG5pbXBvcnQgeyBTY2VuZVdpbmRvdyB9IGZyb20gXCIuL3dpbmRvd3Mvc2NlbmVXaW5kb3dcIjtcbmltcG9ydCB7IFNuYXBzV2luZG93IH0gZnJvbSBcIi4vd2luZG93cy9zbmFwc1dpbmRvd1wiO1xuaW1wb3J0IHsgU3RhdHNXaW5kb3cgfSBmcm9tIFwiLi93aW5kb3dzL3N0YXRzV2luZG93XCI7XG5cbmV4cG9ydCBjb25zdCBXSU5ET1dfTkFNRVM6IE1hcDxudW1iZXIsIHN0cmluZz4gPSBuZXcgTWFwPG51bWJlciwgc3RyaW5nPigpO1xuV0lORE9XX05BTUVTLnNldCgxLCBcInN0YXRzXCIpO1xuV0lORE9XX05BTUVTLnNldCgyLCBcImxvZ1wiKTtcbldJTkRPV19OQU1FUy5zZXQoMywgXCJtYXRlcmlhbHNcIik7XG5XSU5ET1dfTkFNRVMuc2V0KDQsIFwic2NlbmVcIik7XG5XSU5ET1dfTkFNRVMuc2V0KDUsIFwic25hcHNcIik7XG5cbmV4cG9ydCBjbGFzcyBXaW5kb3dNYW5hZ2VyIHtcblxuICBwcml2YXRlIHdpbmRvd3M6IE1hcDxzdHJpbmcsIENBRFdpbmRvdz47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy53aW5kb3dzID0gbmV3IE1hcDxzdHJpbmcsIENBRFdpbmRvdz4oKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRXaW5kb3dzKCk6IE1hcDxzdHJpbmcsIENBRFdpbmRvdz4ge1xuICAgIHJldHVybiB0aGlzLndpbmRvd3M7XG4gIH1cblxuICBwdWJsaWMgYWRkV2luZG93KHdpbmRvd05hbWU6IHN0cmluZywgc3RhcnQ6IFtudW1iZXIsIG51bWJlcl0pIHtcbiAgICB0aGlzLnJlbW92ZVdpbmRvdyh3aW5kb3dOYW1lKTtcbiAgICBzd2l0Y2ggKHdpbmRvd05hbWUpIHtcbiAgICAgIGNhc2UgXCJzdGF0c1wiOlxuICAgICAgICB0aGlzLndpbmRvd3Muc2V0KFwic3RhdHNcIiwgbmV3IFN0YXRzV2luZG93KHdpbmRvd05hbWUsIHN0YXJ0KSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImxvZ1wiOlxuICAgICAgICB0aGlzLndpbmRvd3Muc2V0KFwibG9nXCIsIG5ldyBMb2dXaW5kb3cod2luZG93TmFtZSwgc3RhcnQpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwibWF0ZXJpYWxzXCI6XG4gICAgICAgIHRoaXMud2luZG93cy5zZXQoXCJtYXRlcmlhbHNcIiwgbmV3IE1hdGVyaWFsc1dpbmRvdyh3aW5kb3dOYW1lLCBzdGFydCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJzY2VuZVwiOlxuICAgICAgICB0aGlzLndpbmRvd3Muc2V0KFwic2NlbmVcIiwgbmV3IFNjZW5lV2luZG93KHdpbmRvd05hbWUsIHN0YXJ0KSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInNuYXBzXCI6XG4gICAgICAgIHRoaXMud2luZG93cy5zZXQoXCJzbmFwc1wiLCBuZXcgU25hcHNXaW5kb3cod2luZG93TmFtZSwgc3RhcnQpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJub3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHJlbW92ZVdpbmRvdyh3aW5kb3dOYW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLndpbmRvd3MuZ2V0KHdpbmRvd05hbWUpPy5kZXN0cm95KCk7XG4gICAgdGhpcy53aW5kb3dzLmRlbGV0ZSh3aW5kb3dOYW1lKTtcbiAgfVxuXG4gIHB1YmxpYyB0aWNrKCk6IHZvaWQge1xuICAgIGZvciAobGV0IHdpbmRvdyBvZiB0aGlzLndpbmRvd3MudmFsdWVzKCkpIHtcbiAgICAgIHdpbmRvdy50aWNrKCk7XG4gICAgfVxuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/window/windowManager.ts\n");

/***/ }),

/***/ "./src/window/windows/logWindow.ts":
/*!*****************************************!*\
  !*** ./src/window/windows/logWindow.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogWindow: () => (/* binding */ LogWindow)\n/* harmony export */ });\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\nclass LogWindow extends _window__WEBPACK_IMPORTED_MODULE_0__.CADWindow {\n    populate() {\n        this.element.innerText = \"Log Window\";\n    }\n    tick() {\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3MvbG9nV2luZG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBRS9CLE1BQU0sU0FBVSxTQUFRLDhDQUFTO0lBRS9CLFFBQVE7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUM7SUFDeEMsQ0FBQztJQUVNLElBQUk7SUFFWCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93cy9sb2dXaW5kb3cudHM/NzVhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDQURXaW5kb3cgfSBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmV4cG9ydCBjbGFzcyBMb2dXaW5kb3cgZXh0ZW5kcyBDQURXaW5kb3cge1xuXG4gIHB1YmxpYyBwb3B1bGF0ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuaW5uZXJUZXh0ID0gXCJMb2cgV2luZG93XCI7XG4gIH1cblxuICBwdWJsaWMgdGljaygpOiB2b2lkIHtcblxuICB9XG5cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/window/windows/logWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/materialsWindow.ts":
/*!***********************************************!*\
  !*** ./src/window/windows/materialsWindow.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaterialsWindow: () => (/* binding */ MaterialsWindow)\n/* harmony export */ });\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\nclass MaterialsWindow extends _window__WEBPACK_IMPORTED_MODULE_0__.CADWindow {\n    populate() {\n        this.element.innerText = \"Materials Window\";\n    }\n    tick() {\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3MvbWF0ZXJpYWxzV2luZG93LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDO0FBRzlCLE1BQU0sZUFBZ0IsU0FBUSw4Q0FBUztJQUVyQyxRQUFRO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsa0JBQWtCLENBQUM7SUFDOUMsQ0FBQztJQUVNLElBQUk7SUFFWCxDQUFDO0NBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ucG0tdGVzdC8uL3NyYy93aW5kb3cvd2luZG93cy9tYXRlcmlhbHNXaW5kb3cudHM/MzQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDQURXaW5kb3cgfSBmcm9tIFwiLi4vd2luZG93XCJcblxuXG5leHBvcnQgY2xhc3MgTWF0ZXJpYWxzV2luZG93IGV4dGVuZHMgQ0FEV2luZG93IHtcblxuICBwdWJsaWMgcG9wdWxhdGUoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVyVGV4dCA9IFwiTWF0ZXJpYWxzIFdpbmRvd1wiO1xuICB9XG5cbiAgcHVibGljIHRpY2soKTogdm9pZCB7XG5cbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/window/windows/materialsWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/sceneWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/sceneWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SceneWindow: () => (/* binding */ SceneWindow)\n/* harmony export */ });\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\nclass SceneWindow extends _window__WEBPACK_IMPORTED_MODULE_0__.CADWindow {\n    populate() {\n        this.element.innerText = \"Scene Window\";\n    }\n    tick() {\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc2NlbmVXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFFakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLGNBQWMsQ0FBQztJQUMxQyxDQUFDO0lBRU0sSUFBSTtJQUVYLENBQUM7Q0FDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL3NjZW5lV2luZG93LnRzPzY5N2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0FEV2luZG93IH0gZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5leHBvcnQgY2xhc3MgU2NlbmVXaW5kb3cgZXh0ZW5kcyBDQURXaW5kb3cge1xuXG4gIHB1YmxpYyBwb3B1bGF0ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuaW5uZXJUZXh0ID0gXCJTY2VuZSBXaW5kb3dcIjtcbiAgfVxuXG4gIHB1YmxpYyB0aWNrKCk6IHZvaWQge1xuXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/window/windows/sceneWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/snapsWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/snapsWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SnapsWindow: () => (/* binding */ SnapsWindow)\n/* harmony export */ });\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\nclass SnapsWindow extends _window__WEBPACK_IMPORTED_MODULE_0__.CADWindow {\n    populate() {\n        this.element.innerText = \"Snaps Window\";\n    }\n    tick() {\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc25hcHNXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFHakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLGNBQWMsQ0FBQztJQUMxQyxDQUFDO0lBRU0sSUFBSTtJQUVYLENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL3NuYXBzV2luZG93LnRzPzk5MmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0FEV2luZG93IH0gZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5leHBvcnQgY2xhc3MgU25hcHNXaW5kb3cgZXh0ZW5kcyBDQURXaW5kb3cge1xuXG5cbiAgcHVibGljIHBvcHVsYXRlKCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5pbm5lclRleHQgPSBcIlNuYXBzIFdpbmRvd1wiO1xuICB9XG5cbiAgcHVibGljIHRpY2soKTogdm9pZCB7XG5cbiAgfVxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/window/windows/snapsWindow.ts\n");

/***/ }),

/***/ "./src/window/windows/statsWindow.ts":
/*!*******************************************!*\
  !*** ./src/window/windows/statsWindow.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatsWindow: () => (/* binding */ StatsWindow)\n/* harmony export */ });\n/* harmony import */ var _cad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cad */ \"./src/cad.ts\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../window */ \"./src/window/window.ts\");\n\n\nclass StatsWindow extends _window__WEBPACK_IMPORTED_MODULE_1__.CADWindow {\n    populate() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getStats().getInnerHTML();\n    }\n    tick() {\n        this.element.innerHTML = _cad__WEBPACK_IMPORTED_MODULE_0__.INSTANCE.getStats().getInnerHTML();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2luZG93L3dpbmRvd3Mvc3RhdHNXaW5kb3cudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ0M7QUFFL0IsTUFBTSxXQUFZLFNBQVEsOENBQVM7SUFFakMsUUFBUTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLDBDQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDOUQsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRywwQ0FBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzlELENBQUM7Q0FFRiIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3dpbmRvdy93aW5kb3dzL3N0YXRzV2luZG93LnRzPzUyNGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU5TVEFOQ0UgfSBmcm9tIFwiLi4vLi4vY2FkXCI7XG5pbXBvcnQgeyBDQURXaW5kb3cgfSBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmV4cG9ydCBjbGFzcyBTdGF0c1dpbmRvdyBleHRlbmRzIENBRFdpbmRvdyB7XG5cbiAgcHVibGljIHBvcHVsYXRlKCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSBJTlNUQU5DRS5nZXRTdGF0cygpLmdldElubmVySFRNTCgpO1xuICB9XG5cbiAgcHVibGljIHRpY2soKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IElOU1RBTkNFLmdldFN0YXRzKCkuZ2V0SW5uZXJIVE1MKCk7XG4gIH1cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/window/windows/statsWindow.ts\n");

/***/ }),

/***/ "./src/render/shaders/lineShader.wgsl":
/*!********************************************!*\
  !*** ./src/render/shaders/lineShader.wgsl ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n\\t@builtin(position) position : vec4<f32>,\\n}\\n\\n@group(0) @binding(0) var<uniform> viewProj : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color : vec4<f32>;\\n\\n@vertex\\nfn vertexMain(\\n\\t@location(0) position : vec4<f32>,\\n\\t) -> VertexOutput\\n{\\n\\tvar output: VertexOutput;\\n\\toutput.position = viewProj * position.xzyw;\\n\\treturn output;\\n}\\n\\nstruct FragOutputs {\\n    @builtin(frag_depth) depth: f32,\\n    @location(0) color: vec4f,\\n  }\\n\\n  struct FragInputs {\\n      @builtin(position) position: vec4<f32>,\\n    }\\n\\n@fragment\\nfn fragmentMain(input: FragInputs) -> FragOutputs {\\n  var output: FragOutputs;\\n  output.color = color;\\n  output.depth = input.position.z * 0.9999999;\\n  return output;\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvbGluZVNoYWRlci53Z3NsIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSx3QkFBd0IsK0NBQStDLDhEQUE4RCx1REFBdUQseUZBQXlGLDZCQUE2QiwrQ0FBK0Msa0JBQWtCLEdBQUcsd0JBQXdCLDJFQUEyRSx5QkFBeUIsc0RBQXNELGtFQUFrRSw0QkFBNEIseUJBQXlCLGdEQUFnRCxrQkFBa0IsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9zaGFkZXJzL2xpbmVTaGFkZXIud2dzbD8yNTRjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiXFxuc3RydWN0IFZlcnRleE91dHB1dCB7XFxuXFx0QGJ1aWx0aW4ocG9zaXRpb24pIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcbn1cXG5cXG5AZ3JvdXAoMCkgQGJpbmRpbmcoMCkgdmFyPHVuaWZvcm0+IHZpZXdQcm9qIDogbWF0NHg0PGYzMj47XFxuQGdyb3VwKDApIEBiaW5kaW5nKDEpIHZhcjx1bmlmb3JtPiBjb2xvciA6IHZlYzQ8ZjMyPjtcXG5cXG5AdmVydGV4XFxuZm4gdmVydGV4TWFpbihcXG5cXHRAbG9jYXRpb24oMCkgcG9zaXRpb24gOiB2ZWM0PGYzMj4sXFxuXFx0KSAtPiBWZXJ0ZXhPdXRwdXRcXG57XFxuXFx0dmFyIG91dHB1dDogVmVydGV4T3V0cHV0O1xcblxcdG91dHB1dC5wb3NpdGlvbiA9IHZpZXdQcm9qICogcG9zaXRpb24ueHp5dztcXG5cXHRyZXR1cm4gb3V0cHV0O1xcbn1cXG5cXG5zdHJ1Y3QgRnJhZ091dHB1dHMge1xcbiAgICBAYnVpbHRpbihmcmFnX2RlcHRoKSBkZXB0aDogZjMyLFxcbiAgICBAbG9jYXRpb24oMCkgY29sb3I6IHZlYzRmLFxcbiAgfVxcblxcbiAgc3RydWN0IEZyYWdJbnB1dHMge1xcbiAgICAgIEBidWlsdGluKHBvc2l0aW9uKSBwb3NpdGlvbjogdmVjNDxmMzI+LFxcbiAgICB9XFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKGlucHV0OiBGcmFnSW5wdXRzKSAtPiBGcmFnT3V0cHV0cyB7XFxuICB2YXIgb3V0cHV0OiBGcmFnT3V0cHV0cztcXG4gIG91dHB1dC5jb2xvciA9IGNvbG9yO1xcbiAgb3V0cHV0LmRlcHRoID0gaW5wdXQucG9zaXRpb24ueiAqIDAuOTk5OTk5OTtcXG4gIHJldHVybiBvdXRwdXQ7XFxufVxcblxcblxcblxcblwiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/shaders/lineShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/pointShader.wgsl":
/*!*********************************************!*\
  !*** ./src/render/shaders/pointShader.wgsl ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nstruct VertexOutput {\\n\\t@builtin(position) position : vec4<f32>,\\n}\\n\\n@group(0) @binding(0) var<uniform> viewProj : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color : vec4<f32>;\\n\\n@vertex\\nfn vertexMain(\\n\\t@location(0) position : vec4<f32>,\\n\\t) -> VertexOutput\\n{\\n\\tvar output: VertexOutput;\\n\\toutput.position = viewProj * position.xzyw;\\n\\treturn output;\\n}\\n\\n\\n@fragment\\nfn fragmentMain() -> @location(0) vec4f {\\n    return color;\\n}\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvcG9pbnRTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0JBQXdCLCtDQUErQyw4REFBOEQsdURBQXVELHlGQUF5Riw2QkFBNkIsK0NBQStDLGtCQUFrQixHQUFHLDBEQUEwRCxtQkFBbUIsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS10ZXN0Ly4vc3JjL3JlbmRlci9zaGFkZXJzL3BvaW50U2hhZGVyLndnc2w/NjBkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIlxcbnN0cnVjdCBWZXJ0ZXhPdXRwdXQge1xcblxcdEBidWlsdGluKHBvc2l0aW9uKSBwb3NpdGlvbiA6IHZlYzQ8ZjMyPixcXG59XFxuXFxuQGdyb3VwKDApIEBiaW5kaW5nKDApIHZhcjx1bmlmb3JtPiB2aWV3UHJvaiA6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygxKSB2YXI8dW5pZm9ybT4gY29sb3IgOiB2ZWM0PGYzMj47XFxuXFxuQHZlcnRleFxcbmZuIHZlcnRleE1haW4oXFxuXFx0QGxvY2F0aW9uKDApIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcblxcdCkgLT4gVmVydGV4T3V0cHV0XFxue1xcblxcdHZhciBvdXRwdXQ6IFZlcnRleE91dHB1dDtcXG5cXHRvdXRwdXQucG9zaXRpb24gPSB2aWV3UHJvaiAqIHBvc2l0aW9uLnh6eXc7XFxuXFx0cmV0dXJuIG91dHB1dDtcXG59XFxuXFxuXFxuQGZyYWdtZW50XFxuZm4gZnJhZ21lbnRNYWluKCkgLT4gQGxvY2F0aW9uKDApIHZlYzRmIHtcXG4gICAgcmV0dXJuIGNvbG9yO1xcbn1cXG5cXG5cXG5cIiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/render/shaders/pointShader.wgsl\n");

/***/ }),

/***/ "./src/render/shaders/triangleShader.wgsl":
/*!************************************************!*\
  !*** ./src/render/shaders/triangleShader.wgsl ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"struct VertexOutput {\\n\\t@builtin(position) position : vec4<f32>,\\n\\t@location(0) @interpolate(linear) normal : vec4<f32>\\n}\\n\\n@group(0) @binding(0) var<uniform> viewProj : mat4x4<f32>;\\n@group(0) @binding(1) var<uniform> color : vec4<f32>;\\n\\n@vertex\\nfn vertexMain(\\n\\t@location(0) position : vec4<f32>,\\n\\t@location(1) normal : vec4<f32>\\n\\t) -> VertexOutput\\n{\\n\\tvar output: VertexOutput;\\n\\toutput.normal = normal.xzyw;\\n\\toutput.position = viewProj * position.xzyw;\\n\\treturn output;\\n}\\n\\n\\n@fragment\\nfn fragmentMain(@location(0) @interpolate(linear) normal : vec4f) -> @location(0) vec4f {\\n\\n\\tvar normalizedNormal: vec3<f32> = normalize(normal.xyz);\\n    return vec4<f32>(normalizedNormal/2.0 + vec3<f32>(0.5, 0.5, 0.5), 1.0);\\n\\n}\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyL3NoYWRlcnMvdHJpYW5nbGVTaGFkZXIud2dzbCIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsc0JBQXNCLHVHQUF1Ryw4REFBOEQsdURBQXVELDRIQUE0SCw2QkFBNkIsZ0NBQWdDLCtDQUErQyxrQkFBa0IsR0FBRywwR0FBMEcsOERBQThELDZFQUE2RSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnBtLXRlc3QvLi9zcmMvcmVuZGVyL3NoYWRlcnMvdHJpYW5nbGVTaGFkZXIud2dzbD9kM2RkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwic3RydWN0IFZlcnRleE91dHB1dCB7XFxuXFx0QGJ1aWx0aW4ocG9zaXRpb24pIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcblxcdEBsb2NhdGlvbigwKSBAaW50ZXJwb2xhdGUobGluZWFyKSBub3JtYWwgOiB2ZWM0PGYzMj5cXG59XFxuXFxuQGdyb3VwKDApIEBiaW5kaW5nKDApIHZhcjx1bmlmb3JtPiB2aWV3UHJvaiA6IG1hdDR4NDxmMzI+O1xcbkBncm91cCgwKSBAYmluZGluZygxKSB2YXI8dW5pZm9ybT4gY29sb3IgOiB2ZWM0PGYzMj47XFxuXFxuQHZlcnRleFxcbmZuIHZlcnRleE1haW4oXFxuXFx0QGxvY2F0aW9uKDApIHBvc2l0aW9uIDogdmVjNDxmMzI+LFxcblxcdEBsb2NhdGlvbigxKSBub3JtYWwgOiB2ZWM0PGYzMj5cXG5cXHQpIC0+IFZlcnRleE91dHB1dFxcbntcXG5cXHR2YXIgb3V0cHV0OiBWZXJ0ZXhPdXRwdXQ7XFxuXFx0b3V0cHV0Lm5vcm1hbCA9IG5vcm1hbC54enl3O1xcblxcdG91dHB1dC5wb3NpdGlvbiA9IHZpZXdQcm9qICogcG9zaXRpb24ueHp5dztcXG5cXHRyZXR1cm4gb3V0cHV0O1xcbn1cXG5cXG5cXG5AZnJhZ21lbnRcXG5mbiBmcmFnbWVudE1haW4oQGxvY2F0aW9uKDApIEBpbnRlcnBvbGF0ZShsaW5lYXIpIG5vcm1hbCA6IHZlYzRmKSAtPiBAbG9jYXRpb24oMCkgdmVjNGYge1xcblxcblxcdHZhciBub3JtYWxpemVkTm9ybWFsOiB2ZWMzPGYzMj4gPSBub3JtYWxpemUobm9ybWFsLnh5eik7XFxuICAgIHJldHVybiB2ZWM0PGYzMj4obm9ybWFsaXplZE5vcm1hbC8yLjAgKyB2ZWMzPGYzMj4oMC41LCAwLjUsIDAuNSksIDEuMCk7XFxuXFxufVxcblxcblxcblxcblwiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/render/shaders/triangleShader.wgsl\n");

/***/ }),

/***/ "./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js":
/*!*****************************************************************!*\
  !*** ./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mat3: () => (/* binding */ mat3Impl),\n/* harmony export */   mat4: () => (/* binding */ mat4Impl),\n/* harmony export */   quat: () => (/* binding */ quatImpl),\n/* harmony export */   setDefaultType: () => (/* binding */ setDefaultType),\n/* harmony export */   utils: () => (/* binding */ utils),\n/* harmony export */   vec2: () => (/* binding */ vec2Impl),\n/* harmony export */   vec3: () => (/* binding */ vec3Impl),\n/* harmony export */   vec4: () => (/* binding */ vec4Impl)\n/* harmony export */ });\n/* wgpu-matrix@2.5.0, license MIT */\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nlet EPSILON = 0.000001;\n/**\n * Set the value for EPSILON for various checks\n * @param v - Value to use for EPSILON.\n * @returns previous value of EPSILON;\n */\nfunction setEpsilon(v) {\n    const old = EPSILON;\n    EPSILON = v;\n    return old;\n}\n/**\n * Convert degrees to radians\n * @param degrees - Angle in degrees\n * @returns angle converted to radians\n */\nfunction degToRad(degrees) {\n    return degrees * Math.PI / 180;\n}\n/**\n * Convert radians to degrees\n * @param radians - Angle in radians\n * @returns angle converted to degrees\n */\nfunction radToDeg(radians) {\n    return radians * 180 / Math.PI;\n}\n/**\n * Lerps between a and b via t\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @returns a + (b - a) * t\n */\nfunction lerp$4(a, b, t) {\n    return a + (b - a) * t;\n}\n/**\n * Compute the opposite of lerp. Given a and b and a value between\n * a and b returns a value between 0 and 1. 0 if a, 1 if b.\n * Note: no clamping is done.\n * @param a - start value\n * @param b - end value\n * @param v - value between a and b\n * @returns (v - a) / (b - a)\n */\nfunction inverseLerp(a, b, v) {\n    const d = b - a;\n    return (Math.abs(b - a) < EPSILON)\n        ? a\n        : (v - a) / d;\n}\n/**\n * Compute the euclidean modulo\n *\n * ```\n * // table for n / 3\n * -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5   <- n\n * ------------------------------------\n * -2  -1  -0  -2  -1   0,  1,  2,  0,  1,  2   <- n % 3\n *  1   2   0   1   2   0,  1,  2,  0,  1,  2   <- euclideanModule(n, 3)\n * ```\n *\n * @param n - dividend\n * @param m - divisor\n * @returns the euclidean modulo of n / m\n */\nfunction euclideanModulo(n, m) {\n    return ((n % m) + m) % m;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get EPSILON () { return EPSILON; },\n    setEpsilon: setEpsilon,\n    degToRad: degToRad,\n    radToDeg: radToDeg,\n    lerp: lerp$4,\n    inverseLerp: inverseLerp,\n    euclideanModulo: euclideanModulo\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec2 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec2. In other words you can do this\n *\n *     const v = vec2.cross(v1, v2);  // Creates a new Vec2 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec2.create();\n *     vec2.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec2.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType$2 = Float32Array;\n/**\n * Sets the type this library creates for a Vec2\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec2\n */\nfunction setDefaultType$6(ctor) {\n    const oldType = VecType$2;\n    VecType$2 = ctor;\n    return oldType;\n}\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values.\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Vec2's specified type\n * it would be faster to use\n *\n * ```\n * const v = vec2.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Vec2Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `vec2.create` is usually used\n * to create a Vec2 to be filled out as in\n *\n * ```\n * const sum = vec2.create();\n * vec2.add(v1, v2, sum);\n * ```\n *\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nfunction create$5(x = 0, y = 0) {\n    const dst = new VecType$2(2);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nconst fromValues$3 = create$5;\n/**\n * Sets the values of a Vec2\n * Also see {@link vec2.create} and {@link vec2.copy}\n *\n * @param x first value\n * @param y second value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$5(x, y, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = x;\n    dst[1] = y;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round$2(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp$2(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add$3(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled$2(a, b, scale, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    return dst;\n}\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nfunction angle$2(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const bx = a[0];\n    const by = a[1];\n    const mag1 = Math.sqrt(ax * ax + ay * ay);\n    const mag2 = Math.sqrt(bx * bx + by * by);\n    const mag = mag1 * mag2;\n    const cosine = mag && dot$3(a, b) / mag;\n    return Math.acos(cosine);\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract$3(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub$3 = subtract$3;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately$5(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals$5(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$3(a, b, t, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV$2(a, b, t, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar$3(v, k, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale$5 = mulScalar$3;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar$3(v, k, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse$5(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert$4 = inverse$5;\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nfunction cross$1(a, b, dst) {\n    dst = dst || new VecType$2(3);\n    const z = a[0] * b[1] - a[1] * b[0];\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = z;\n    return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot$3(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length$3(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    return Math.sqrt(v0 * v0 + v1 * v1);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len$3 = length$3;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq$3(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    return v0 * v0 + v1 * v1;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq$3 = lengthSq$3;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance$2(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist$2 = distance$2;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq$2(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    return dx * dx + dy * dy;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq$2 = distanceSq$2;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize$3(v, dst) {\n    dst = dst || new VecType$2(2);\n    const v0 = v[0];\n    const v1 = v[1];\n    const len = Math.sqrt(v0 * v0 + v1 * v1);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate$4(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec2.clone})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy$5(v, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec2.copy})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone$5 = copy$5;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply$5(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul$5 = multiply$5;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide$2(a, b, dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div$2 = divide$2;\n/**\n * Creates a random unit vector * scale\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nfunction random$1(scale = 1, dst) {\n    dst = dst || new VecType$2(2);\n    const angle = Math.random() * 2 * Math.PI;\n    dst[0] = Math.cos(angle) * scale;\n    dst[1] = Math.sin(angle) * scale;\n    return dst;\n}\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero$2(dst) {\n    dst = dst || new VecType$2(2);\n    dst[0] = 0;\n    dst[1] = 0;\n    return dst;\n}\n/**\n * transform Vec2 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4$2(v, m, dst) {\n    dst = dst || new VecType$2(2);\n    const x = v[0];\n    const y = v[1];\n    dst[0] = x * m[0] + y * m[4] + m[12];\n    dst[1] = x * m[1] + y * m[5] + m[13];\n    return dst;\n}\n/**\n * Transforms vec4 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat3$1(v, m, dst) {\n    dst = dst || new VecType$2(2);\n    const x = v[0];\n    const y = v[1];\n    dst[0] = m[0] * x + m[4] * y + m[8];\n    dst[1] = m[1] * x + m[5] * y + m[9];\n    return dst;\n}\n\nvar vec2Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$5,\n    setDefaultType: setDefaultType$6,\n    fromValues: fromValues$3,\n    set: set$5,\n    ceil: ceil$2,\n    floor: floor$2,\n    round: round$2,\n    clamp: clamp$2,\n    add: add$3,\n    addScaled: addScaled$2,\n    angle: angle$2,\n    subtract: subtract$3,\n    sub: sub$3,\n    equalsApproximately: equalsApproximately$5,\n    equals: equals$5,\n    lerp: lerp$3,\n    lerpV: lerpV$2,\n    max: max$2,\n    min: min$2,\n    mulScalar: mulScalar$3,\n    scale: scale$5,\n    divScalar: divScalar$3,\n    inverse: inverse$5,\n    invert: invert$4,\n    cross: cross$1,\n    dot: dot$3,\n    length: length$3,\n    len: len$3,\n    lengthSq: lengthSq$3,\n    lenSq: lenSq$3,\n    distance: distance$2,\n    dist: dist$2,\n    distanceSq: distanceSq$2,\n    distSq: distSq$2,\n    normalize: normalize$3,\n    negate: negate$4,\n    copy: copy$5,\n    clone: clone$5,\n    multiply: multiply$5,\n    mul: mul$5,\n    divide: divide$2,\n    div: div$2,\n    random: random$1,\n    zero: zero$2,\n    transformMat4: transformMat4$2,\n    transformMat3: transformMat3$1\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * 3x3 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat3.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat3.create();\n *     mat3.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat3.identity();\n *     const trans = mat3.translation([1, 2, 3]);\n *     mat3.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType$1 = Float32Array;\n// This mess is because with Mat3 we have 3 unused elements.\n// For Float32Array and Float64Array that's not an issue\n// but for Array it's troublesome\nconst ctorMap = new Map([\n    [Float32Array, () => new Float32Array(12)],\n    [Float64Array, () => new Float64Array(12)],\n    [Array, () => new Array(12).fill(0)],\n]);\nlet newMat3 = ctorMap.get(Float32Array);\n/**\n * Sets the type this library creates for a Mat3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat3\n */\nfunction setDefaultType$5(ctor) {\n    const oldType = MatType$1;\n    MatType$1 = ctor;\n    newMat3 = ctorMap.get(ctor);\n    return oldType;\n}\n/**\n * Create a Mat3 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat3's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat3.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat3Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat3.create` is usually used\n * to create a Mat3 to be filled out as in\n *\n * ```\n * const m = mat3.create();\n * mat3.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @returns matrix created from values.\n */\nfunction create$4(v0, v1, v2, v3, v4, v5, v6, v7, v8) {\n    const dst = newMat3();\n    // to make the array homogenous\n    dst[3] = 0;\n    dst[7] = 0;\n    dst[11] = 0;\n    if (v0 !== undefined) {\n        dst[0] = v0;\n        if (v1 !== undefined) {\n            dst[1] = v1;\n            if (v2 !== undefined) {\n                dst[2] = v2;\n                if (v3 !== undefined) {\n                    dst[4] = v3;\n                    if (v4 !== undefined) {\n                        dst[5] = v4;\n                        if (v5 !== undefined) {\n                            dst[6] = v5;\n                            if (v6 !== undefined) {\n                                dst[8] = v6;\n                                if (v7 !== undefined) {\n                                    dst[9] = v7;\n                                    if (v8 !== undefined) {\n                                        dst[10] = v8;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dst;\n}\n/**\n * Sets the values of a Mat3\n * Also see {@link mat3.create} and {@link mat3.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 set from values.\n */\nfunction set$4(v0, v1, v2, v3, v4, v5, v6, v7, v8, dst) {\n    dst = dst || newMat3();\n    dst[0] = v0;\n    dst[1] = v1;\n    dst[2] = v2;\n    dst[3] = 0;\n    dst[4] = v3;\n    dst[5] = v4;\n    dst[6] = v5;\n    dst[7] = 0;\n    dst[8] = v6;\n    dst[9] = v7;\n    dst[10] = v8;\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Creates a Mat3 from the upper left 3x3 part of a Mat4\n * @param m4 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from m4\n */\nfunction fromMat4(m4, dst) {\n    dst = dst || newMat3();\n    dst[0] = m4[0];\n    dst[1] = m4[1];\n    dst[2] = m4[2];\n    dst[3] = 0;\n    dst[4] = m4[4];\n    dst[5] = m4[5];\n    dst[6] = m4[6];\n    dst[7] = 0;\n    dst[8] = m4[8];\n    dst[9] = m4[9];\n    dst[10] = m4[10];\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Creates a Mat3 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from q\n */\nfunction fromQuat$1(q, dst) {\n    dst = dst || newMat3();\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    dst[0] = 1 - yy - zz;\n    dst[1] = yx + wz;\n    dst[2] = zx - wy;\n    dst[3] = 0;\n    dst[4] = yx - wz;\n    dst[5] = 1 - xx - zz;\n    dst[6] = zy + wx;\n    dst[7] = 0;\n    dst[8] = zx + wy;\n    dst[9] = zy - wx;\n    dst[10] = 1 - xx - yy;\n    dst[11] = 0;\n    return dst;\n}\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nfunction negate$3(m, dst) {\n    dst = dst || newMat3();\n    dst[0] = -m[0];\n    dst[1] = -m[1];\n    dst[2] = -m[2];\n    dst[4] = -m[4];\n    dst[5] = -m[5];\n    dst[6] = -m[6];\n    dst[8] = -m[8];\n    dst[9] = -m[9];\n    dst[10] = -m[10];\n    return dst;\n}\n/**\n * Copies a matrix. (same as {@link mat3.clone})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nfunction copy$4(m, dst) {\n    dst = dst || newMat3();\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    return dst;\n}\n/**\n * Copies a matrix (same as {@link mat3.copy})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nconst clone$4 = copy$4;\n/**\n * Check if 2 matrices are approximately equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are approximately equal\n */\nfunction equalsApproximately$4(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[4] - b[4]) < EPSILON &&\n        Math.abs(a[5] - b[5]) < EPSILON &&\n        Math.abs(a[6] - b[6]) < EPSILON &&\n        Math.abs(a[8] - b[8]) < EPSILON &&\n        Math.abs(a[9] - b[9]) < EPSILON &&\n        Math.abs(a[10] - b[10]) < EPSILON;\n}\n/**\n * Check if 2 matrices are exactly equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are exactly equal\n */\nfunction equals$4(a, b) {\n    return a[0] === b[0] &&\n        a[1] === b[1] &&\n        a[2] === b[2] &&\n        a[4] === b[4] &&\n        a[5] === b[5] &&\n        a[6] === b[6] &&\n        a[8] === b[8] &&\n        a[9] === b[9] &&\n        a[10] === b[10];\n}\n/**\n * Creates a 3-by-3 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 3-by-3 identity matrix.\n */\nfunction identity$2(dst) {\n    dst = dst || newMat3();\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nfunction transpose$1(m, dst) {\n    dst = dst || newMat3();\n    if (dst === m) {\n        let t;\n        // 0 1 2\n        // 4 5 6\n        // 8 9 10\n        t = m[1];\n        m[1] = m[4];\n        m[4] = t;\n        t = m[2];\n        m[2] = m[8];\n        m[8] = t;\n        t = m[6];\n        m[6] = m[9];\n        m[9] = t;\n        return dst;\n    }\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    dst[0] = m00;\n    dst[1] = m10;\n    dst[2] = m20;\n    dst[4] = m01;\n    dst[5] = m11;\n    dst[6] = m21;\n    dst[8] = m02;\n    dst[9] = m12;\n    dst[10] = m22;\n    return dst;\n}\n/**\n * Computes the inverse of a 3-by-3 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nfunction inverse$4(m, dst) {\n    dst = dst || newMat3();\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const b01 = m22 * m11 - m12 * m21;\n    const b11 = -m22 * m10 + m12 * m20;\n    const b21 = m21 * m10 - m11 * m20;\n    const invDet = 1 / (m00 * b01 + m01 * b11 + m02 * b21);\n    dst[0] = b01 * invDet;\n    dst[1] = (-m22 * m01 + m02 * m21) * invDet;\n    dst[2] = (m12 * m01 - m02 * m11) * invDet;\n    dst[4] = b11 * invDet;\n    dst[5] = (m22 * m00 - m02 * m20) * invDet;\n    dst[6] = (-m12 * m00 + m02 * m10) * invDet;\n    dst[8] = b21 * invDet;\n    dst[9] = (-m21 * m00 + m01 * m20) * invDet;\n    dst[10] = (m11 * m00 - m01 * m10) * invDet;\n    return dst;\n}\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nfunction determinant$1(m) {\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    return m00 * (m11 * m22 - m21 * m12) -\n        m10 * (m01 * m22 - m21 * m02) +\n        m20 * (m01 * m12 - m11 * m02);\n}\n/**\n * Computes the inverse of a 3-by-3 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nconst invert$3 = inverse$4;\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nfunction multiply$4(a, b, dst) {\n    dst = dst || newMat3();\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[4 + 0];\n    const a11 = a[4 + 1];\n    const a12 = a[4 + 2];\n    const a20 = a[8 + 0];\n    const a21 = a[8 + 1];\n    const a22 = a[8 + 2];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b10 = b[4 + 0];\n    const b11 = b[4 + 1];\n    const b12 = b[4 + 2];\n    const b20 = b[8 + 0];\n    const b21 = b[8 + 1];\n    const b22 = b[8 + 2];\n    dst[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    dst[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    dst[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    dst[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    dst[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    dst[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    dst[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    dst[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    dst[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    return dst;\n}\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nconst mul$4 = multiply$4;\n/**\n * Sets the translation component of a 3-by-3 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nfunction setTranslation$1(a, v, dst) {\n    dst = dst || identity$2();\n    if (a !== dst) {\n        dst[0] = a[0];\n        dst[1] = a[1];\n        dst[2] = a[2];\n        dst[4] = a[4];\n        dst[5] = a[5];\n        dst[6] = a[6];\n    }\n    dst[8] = v[0];\n    dst[9] = v[1];\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Returns the translation component of a 3-by-3 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation$2(m, dst) {\n    dst = dst || create$5();\n    dst[0] = m[8];\n    dst[1] = m[9];\n    return dst;\n}\n/**\n * Returns an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y,\n * @returns The axis component of m.\n */\nfunction getAxis$2(m, axis, dst) {\n    dst = dst || create$5();\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    return dst;\n}\n/**\n * Sets an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nfunction setAxis$1(m, v, axis, dst) {\n    if (dst !== m) {\n        dst = copy$4(m, dst);\n    }\n    const off = axis * 4;\n    dst[off + 0] = v[0];\n    dst[off + 1] = v[1];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling$2(m, dst) {\n    dst = dst || create$5();\n    const xx = m[0];\n    const xy = m[1];\n    const yx = m[4];\n    const yy = m[5];\n    dst[0] = Math.sqrt(xx * xx + xy * xy);\n    dst[1] = Math.sqrt(yx * yx + yy * yy);\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which translates by the given vector v.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nfunction translation$1(v, dst) {\n    dst = dst || newMat3();\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[8] = v[0];\n    dst[9] = v[1];\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Translates the given 3-by-3 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nfunction translate$1(m, v, dst) {\n    dst = dst || newMat3();\n    const v0 = v[0];\n    const v1 = v[1];\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    if (m !== dst) {\n        dst[0] = m00;\n        dst[1] = m01;\n        dst[2] = m02;\n        dst[4] = m10;\n        dst[5] = m11;\n        dst[6] = m12;\n    }\n    dst[8] = m00 * v0 + m10 * v1 + m20;\n    dst[9] = m01 * v0 + m11 * v1 + m21;\n    dst[10] = m02 * v0 + m12 * v1 + m22;\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which rotates  by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotation$1(angleInRadians, dst) {\n    dst = dst || newMat3();\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = s;\n    dst[2] = 0;\n    dst[4] = -s;\n    dst[5] = c;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Rotates the given 3-by-3 matrix  by the given angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotate$1(m, angleInRadians, dst) {\n    dst = dst || newMat3();\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 + s * m10;\n    dst[1] = c * m01 + s * m11;\n    dst[2] = c * m02 + s * m12;\n    dst[4] = c * m10 - s * m00;\n    dst[5] = c * m11 - s * m01;\n    dst[6] = c * m12 - s * m02;\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     2 entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction scaling$1(v, dst) {\n    dst = dst || newMat3();\n    dst[0] = v[0];\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = v[1];\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of 2 entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction scale$4(m, v, dst) {\n    dst = dst || newMat3();\n    const v0 = v[0];\n    const v1 = v[1];\n    dst[0] = v0 * m[0 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2];\n    dst[4] = v1 * m[1 * 4 + 0];\n    dst[5] = v1 * m[1 * 4 + 1];\n    dst[6] = v1 * m[1 * 4 + 2];\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n/**\n * Creates a 3-by-3 matrix which scales uniformly in each dimension\n * @param s - Amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction uniformScaling$1(s, dst) {\n    dst = dst || newMat3();\n    dst[0] = s;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[4] = 0;\n    dst[5] = s;\n    dst[6] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    return dst;\n}\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given.\n * @param m - The matrix to be modified.\n * @param s - Amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction uniformScale$1(m, s, dst) {\n    dst = dst || newMat3();\n    dst[0] = s * m[0 * 4 + 0];\n    dst[1] = s * m[0 * 4 + 1];\n    dst[2] = s * m[0 * 4 + 2];\n    dst[4] = s * m[1 * 4 + 0];\n    dst[5] = s * m[1 * 4 + 1];\n    dst[6] = s * m[1 * 4 + 2];\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n    }\n    return dst;\n}\n\nvar mat3Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    setDefaultType: setDefaultType$5,\n    create: create$4,\n    set: set$4,\n    fromMat4: fromMat4,\n    fromQuat: fromQuat$1,\n    negate: negate$3,\n    copy: copy$4,\n    clone: clone$4,\n    equalsApproximately: equalsApproximately$4,\n    equals: equals$4,\n    identity: identity$2,\n    transpose: transpose$1,\n    inverse: inverse$4,\n    determinant: determinant$1,\n    invert: invert$3,\n    multiply: multiply$4,\n    mul: mul$4,\n    setTranslation: setTranslation$1,\n    getTranslation: getTranslation$2,\n    getAxis: getAxis$2,\n    setAxis: setAxis$1,\n    getScaling: getScaling$2,\n    translation: translation$1,\n    translate: translate$1,\n    rotation: rotation$1,\n    rotate: rotate$1,\n    scaling: scaling$1,\n    scale: scale$4,\n    uniformScaling: uniformScaling$1,\n    uniformScale: uniformScale$1\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec3 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec3`. In other words you can do this\n *\n *     const v = vec3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec3.create();\n *     vec3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType$1 = Float32Array;\n/**\n * Sets the type this library creates for a Vec3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec3\n */\nfunction setDefaultType$4(ctor) {\n    const oldType = VecType$1;\n    VecType$1 = ctor;\n    return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nfunction create$3(x, y, z) {\n    const dst = new VecType$1(3);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a vec3; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nconst fromValues$2 = create$3;\n/**\n * Sets the values of a Vec3\n * Also see {@link vec3.create} and {@link vec3.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$3(x, y, z, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    dst[2] = Math.ceil(v[2]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    dst[2] = Math.floor(v[2]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round$1(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    dst[2] = Math.round(v[2]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp$1(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    dst[2] = Math.min(max, Math.max(min, v[2]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add$2(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled$1(a, b, scale, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    dst[2] = a[2] + b[2] * scale;\n    return dst;\n}\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nfunction angle$1(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[0];\n    const by = a[1];\n    const bz = a[2];\n    const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n    const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n    const mag = mag1 * mag2;\n    const cosine = mag && dot$2(a, b) / mag;\n    return Math.acos(cosine);\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract$2(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub$2 = subtract$2;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately$3(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals$3(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$2(a, b, t, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV$1(a, b, t, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    dst[2] = a[2] + t[2] * (b[2] - a[2]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    dst[2] = Math.max(a[2], b[2]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    dst[2] = Math.min(a[2], b[2]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar$2(v, k, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale$3 = mulScalar$2;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar$2(v, k, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse$3(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    dst[2] = 1 / v[2];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert$2 = inverse$3;\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nfunction cross(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    const t1 = a[2] * b[0] - a[0] * b[2];\n    const t2 = a[0] * b[1] - a[1] * b[0];\n    dst[0] = a[1] * b[2] - a[2] * b[1];\n    dst[1] = t1;\n    dst[2] = t2;\n    return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot$2(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length$2(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len$2 = length$2;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq$2(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    return v0 * v0 + v1 * v1 + v2 * v2;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq$2 = lengthSq$2;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance$1(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist$1 = distance$1;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq$1(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq$1 = distanceSq$1;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize$2(v, dst) {\n    dst = dst || new VecType$1(3);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate$2(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    dst[2] = -v[2];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec3.clone})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy$3(v, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    dst[2] = v[2];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec3.copy})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone$3 = copy$3;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply$3(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    dst[2] = a[2] * b[2];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul$3 = multiply$3;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide$1(a, b, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    dst[2] = a[2] / b[2];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div$1 = divide$1;\n/**\n * Creates a random vector\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nfunction random(scale = 1, dst) {\n    dst = dst || new VecType$1(3);\n    const angle = Math.random() * 2 * Math.PI;\n    const z = Math.random() * 2 - 1;\n    const zScale = Math.sqrt(1 - z * z) * scale;\n    dst[0] = Math.cos(angle) * zScale;\n    dst[1] = Math.sin(angle) * zScale;\n    dst[2] = z * scale;\n    return dst;\n}\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero$1(dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    return dst;\n}\n/**\n * transform vec3 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4$1(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1;\n    dst[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    dst[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    dst[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return dst;\n}\n/**\n * Transform vec4 by upper 3x3 matrix inside 4x4 matrix.\n * @param v - The direction.\n * @param m - The matrix.\n * @param dst - optional Vec3 to store result. If not passed a new one is created.\n * @returns The transformed vector.\n */\nfunction transformMat4Upper3x3(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n    return dst;\n}\n/**\n * Transforms vec3 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat3(v, m, dst) {\n    dst = dst || new VecType$1(3);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    dst[0] = x * m[0] + y * m[4] + z * m[8];\n    dst[1] = x * m[1] + y * m[5] + z * m[9];\n    dst[2] = x * m[2] + y * m[6] + z * m[10];\n    return dst;\n}\n/**\n * Transforms vec3 by Quaternion\n * @param v - the vector to transform\n * @param q - the quaternion to transform by\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed\n */\nfunction transformQuat(v, q, dst) {\n    dst = dst || new VecType$1(3);\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const w2 = q[3] * 2;\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const uvX = qy * z - qz * y;\n    const uvY = qz * x - qx * z;\n    const uvZ = qx * y - qy * x;\n    dst[0] = x + uvX * w2 + (qy * uvZ - qz * uvY) * 2;\n    dst[1] = y + uvY * w2 + (qz * uvX - qx * uvZ) * 2;\n    dst[2] = z + uvZ * w2 + (qx * uvY - qy * uvX) * 2;\n    return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation$1(m, dst) {\n    dst = dst || new VecType$1(3);\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nfunction getAxis$1(m, axis, dst) {\n    dst = dst || new VecType$1(3);\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling$1(m, dst) {\n    dst = dst || new VecType$1(3);\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n\nvar vec3Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$3,\n    setDefaultType: setDefaultType$4,\n    fromValues: fromValues$2,\n    set: set$3,\n    ceil: ceil$1,\n    floor: floor$1,\n    round: round$1,\n    clamp: clamp$1,\n    add: add$2,\n    addScaled: addScaled$1,\n    angle: angle$1,\n    subtract: subtract$2,\n    sub: sub$2,\n    equalsApproximately: equalsApproximately$3,\n    equals: equals$3,\n    lerp: lerp$2,\n    lerpV: lerpV$1,\n    max: max$1,\n    min: min$1,\n    mulScalar: mulScalar$2,\n    scale: scale$3,\n    divScalar: divScalar$2,\n    inverse: inverse$3,\n    invert: invert$2,\n    cross: cross,\n    dot: dot$2,\n    length: length$2,\n    len: len$2,\n    lengthSq: lengthSq$2,\n    lenSq: lenSq$2,\n    distance: distance$1,\n    dist: dist$1,\n    distanceSq: distanceSq$1,\n    distSq: distSq$1,\n    normalize: normalize$2,\n    negate: negate$2,\n    copy: copy$3,\n    clone: clone$3,\n    multiply: multiply$3,\n    mul: mul$3,\n    divide: divide$1,\n    div: div$1,\n    random: random,\n    zero: zero$1,\n    transformMat4: transformMat4$1,\n    transformMat4Upper3x3: transformMat4Upper3x3,\n    transformMat3: transformMat3,\n    transformQuat: transformQuat,\n    getTranslation: getTranslation$1,\n    getAxis: getAxis$1,\n    getScaling: getScaling$1\n});\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat4.create();\n *     mat4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat4.identity();\n *     const trans = mat4.translation([1, 2, 3]);\n *     mat4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType = Float32Array;\n/**\n * Sets the type this library creates for a Mat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat4\n */\nfunction setDefaultType$3(ctor) {\n    const oldType = MatType;\n    MatType = ctor;\n    return oldType;\n}\n/**\n * Create a Mat4 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat4's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat4.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat4Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat4.create` is usually used\n * to create a Mat4 to be filled out as in\n *\n * ```\n * const m = mat4.create();\n * mat4.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @returns created from values.\n */\nfunction create$2(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {\n    const dst = new MatType(16);\n    if (v0 !== undefined) {\n        dst[0] = v0;\n        if (v1 !== undefined) {\n            dst[1] = v1;\n            if (v2 !== undefined) {\n                dst[2] = v2;\n                if (v3 !== undefined) {\n                    dst[3] = v3;\n                    if (v4 !== undefined) {\n                        dst[4] = v4;\n                        if (v5 !== undefined) {\n                            dst[5] = v5;\n                            if (v6 !== undefined) {\n                                dst[6] = v6;\n                                if (v7 !== undefined) {\n                                    dst[7] = v7;\n                                    if (v8 !== undefined) {\n                                        dst[8] = v8;\n                                        if (v9 !== undefined) {\n                                            dst[9] = v9;\n                                            if (v10 !== undefined) {\n                                                dst[10] = v10;\n                                                if (v11 !== undefined) {\n                                                    dst[11] = v11;\n                                                    if (v12 !== undefined) {\n                                                        dst[12] = v12;\n                                                        if (v13 !== undefined) {\n                                                            dst[13] = v13;\n                                                            if (v14 !== undefined) {\n                                                                dst[14] = v14;\n                                                                if (v15 !== undefined) {\n                                                                    dst[15] = v15;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dst;\n}\n/**\n * Sets the values of a Mat4\n * Also see {@link mat4.create} and {@link mat4.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 created from values.\n */\nfunction set$2(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = v0;\n    dst[1] = v1;\n    dst[2] = v2;\n    dst[3] = v3;\n    dst[4] = v4;\n    dst[5] = v5;\n    dst[6] = v6;\n    dst[7] = v7;\n    dst[8] = v8;\n    dst[9] = v9;\n    dst[10] = v10;\n    dst[11] = v11;\n    dst[12] = v12;\n    dst[13] = v13;\n    dst[14] = v14;\n    dst[15] = v15;\n    return dst;\n}\n/**\n * Creates a Mat4 from a Mat3\n * @param m3 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from m3\n */\nfunction fromMat3(m3, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = m3[0];\n    dst[1] = m3[1];\n    dst[2] = m3[2];\n    dst[3] = 0;\n    dst[4] = m3[4];\n    dst[5] = m3[5];\n    dst[6] = m3[6];\n    dst[7] = 0;\n    dst[8] = m3[8];\n    dst[9] = m3[9];\n    dst[10] = m3[10];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a Mat4 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from q\n */\nfunction fromQuat(q, dst) {\n    dst = dst || new MatType(16);\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    dst[0] = 1 - yy - zz;\n    dst[1] = yx + wz;\n    dst[2] = zx - wy;\n    dst[3] = 0;\n    dst[4] = yx - wz;\n    dst[5] = 1 - xx - zz;\n    dst[6] = zy + wx;\n    dst[7] = 0;\n    dst[8] = zx + wy;\n    dst[9] = zy - wx;\n    dst[10] = 1 - xx - yy;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nfunction negate$1(m, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = -m[0];\n    dst[1] = -m[1];\n    dst[2] = -m[2];\n    dst[3] = -m[3];\n    dst[4] = -m[4];\n    dst[5] = -m[5];\n    dst[6] = -m[6];\n    dst[7] = -m[7];\n    dst[8] = -m[8];\n    dst[9] = -m[9];\n    dst[10] = -m[10];\n    dst[11] = -m[11];\n    dst[12] = -m[12];\n    dst[13] = -m[13];\n    dst[14] = -m[14];\n    dst[15] = -m[15];\n    return dst;\n}\n/**\n * Copies a matrix. (same as {@link mat4.clone})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nfunction copy$2(m, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n    return dst;\n}\n/**\n * Copies a matrix (same as {@link mat4.copy})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nconst clone$2 = copy$2;\n/**\n * Check if 2 matrices are approximately equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are approximately equal\n */\nfunction equalsApproximately$2(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON &&\n        Math.abs(a[4] - b[4]) < EPSILON &&\n        Math.abs(a[5] - b[5]) < EPSILON &&\n        Math.abs(a[6] - b[6]) < EPSILON &&\n        Math.abs(a[7] - b[7]) < EPSILON &&\n        Math.abs(a[8] - b[8]) < EPSILON &&\n        Math.abs(a[9] - b[9]) < EPSILON &&\n        Math.abs(a[10] - b[10]) < EPSILON &&\n        Math.abs(a[11] - b[11]) < EPSILON &&\n        Math.abs(a[12] - b[12]) < EPSILON &&\n        Math.abs(a[13] - b[13]) < EPSILON &&\n        Math.abs(a[14] - b[14]) < EPSILON &&\n        Math.abs(a[15] - b[15]) < EPSILON;\n}\n/**\n * Check if 2 matrices are exactly equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are exactly equal\n */\nfunction equals$2(a, b) {\n    return a[0] === b[0] &&\n        a[1] === b[1] &&\n        a[2] === b[2] &&\n        a[3] === b[3] &&\n        a[4] === b[4] &&\n        a[5] === b[5] &&\n        a[6] === b[6] &&\n        a[7] === b[7] &&\n        a[8] === b[8] &&\n        a[9] === b[9] &&\n        a[10] === b[10] &&\n        a[11] === b[11] &&\n        a[12] === b[12] &&\n        a[13] === b[13] &&\n        a[14] === b[14] &&\n        a[15] === b[15];\n}\n/**\n * Creates a 4-by-4 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 4-by-4 identity matrix.\n */\nfunction identity$1(dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nfunction transpose(m, dst) {\n    dst = dst || new MatType(16);\n    if (dst === m) {\n        let t;\n        t = m[1];\n        m[1] = m[4];\n        m[4] = t;\n        t = m[2];\n        m[2] = m[8];\n        m[8] = t;\n        t = m[3];\n        m[3] = m[12];\n        m[12] = t;\n        t = m[6];\n        m[6] = m[9];\n        m[9] = t;\n        t = m[7];\n        m[7] = m[13];\n        m[13] = t;\n        t = m[11];\n        m[11] = m[14];\n        m[14] = t;\n        return dst;\n    }\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    dst[0] = m00;\n    dst[1] = m10;\n    dst[2] = m20;\n    dst[3] = m30;\n    dst[4] = m01;\n    dst[5] = m11;\n    dst[6] = m21;\n    dst[7] = m31;\n    dst[8] = m02;\n    dst[9] = m12;\n    dst[10] = m22;\n    dst[11] = m32;\n    dst[12] = m03;\n    dst[13] = m13;\n    dst[14] = m23;\n    dst[15] = m33;\n    return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nfunction inverse$2(m, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    const tmp0 = m22 * m33;\n    const tmp1 = m32 * m23;\n    const tmp2 = m12 * m33;\n    const tmp3 = m32 * m13;\n    const tmp4 = m12 * m23;\n    const tmp5 = m22 * m13;\n    const tmp6 = m02 * m33;\n    const tmp7 = m32 * m03;\n    const tmp8 = m02 * m23;\n    const tmp9 = m22 * m03;\n    const tmp10 = m02 * m13;\n    const tmp11 = m12 * m03;\n    const tmp12 = m20 * m31;\n    const tmp13 = m30 * m21;\n    const tmp14 = m10 * m31;\n    const tmp15 = m30 * m11;\n    const tmp16 = m10 * m21;\n    const tmp17 = m20 * m11;\n    const tmp18 = m00 * m31;\n    const tmp19 = m30 * m01;\n    const tmp20 = m00 * m21;\n    const tmp21 = m20 * m01;\n    const tmp22 = m00 * m11;\n    const tmp23 = m10 * m01;\n    const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n        (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n    const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n        (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n    const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n        (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n    const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n        (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n    const d = 1 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n    dst[0] = d * t0;\n    dst[1] = d * t1;\n    dst[2] = d * t2;\n    dst[3] = d * t3;\n    dst[4] = d * ((tmp1 * m10 + tmp2 * m20 + tmp5 * m30) -\n        (tmp0 * m10 + tmp3 * m20 + tmp4 * m30));\n    dst[5] = d * ((tmp0 * m00 + tmp7 * m20 + tmp8 * m30) -\n        (tmp1 * m00 + tmp6 * m20 + tmp9 * m30));\n    dst[6] = d * ((tmp3 * m00 + tmp6 * m10 + tmp11 * m30) -\n        (tmp2 * m00 + tmp7 * m10 + tmp10 * m30));\n    dst[7] = d * ((tmp4 * m00 + tmp9 * m10 + tmp10 * m20) -\n        (tmp5 * m00 + tmp8 * m10 + tmp11 * m20));\n    dst[8] = d * ((tmp12 * m13 + tmp15 * m23 + tmp16 * m33) -\n        (tmp13 * m13 + tmp14 * m23 + tmp17 * m33));\n    dst[9] = d * ((tmp13 * m03 + tmp18 * m23 + tmp21 * m33) -\n        (tmp12 * m03 + tmp19 * m23 + tmp20 * m33));\n    dst[10] = d * ((tmp14 * m03 + tmp19 * m13 + tmp22 * m33) -\n        (tmp15 * m03 + tmp18 * m13 + tmp23 * m33));\n    dst[11] = d * ((tmp17 * m03 + tmp20 * m13 + tmp23 * m23) -\n        (tmp16 * m03 + tmp21 * m13 + tmp22 * m23));\n    dst[12] = d * ((tmp14 * m22 + tmp17 * m32 + tmp13 * m12) -\n        (tmp16 * m32 + tmp12 * m12 + tmp15 * m22));\n    dst[13] = d * ((tmp20 * m32 + tmp12 * m02 + tmp19 * m22) -\n        (tmp18 * m22 + tmp21 * m32 + tmp13 * m02));\n    dst[14] = d * ((tmp18 * m12 + tmp23 * m32 + tmp15 * m02) -\n        (tmp22 * m32 + tmp14 * m02 + tmp19 * m12));\n    dst[15] = d * ((tmp22 * m22 + tmp16 * m02 + tmp21 * m12) -\n        (tmp20 * m12 + tmp23 * m22 + tmp17 * m02));\n    return dst;\n}\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nfunction determinant(m) {\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    const tmp0 = m22 * m33;\n    const tmp1 = m32 * m23;\n    const tmp2 = m12 * m33;\n    const tmp3 = m32 * m13;\n    const tmp4 = m12 * m23;\n    const tmp5 = m22 * m13;\n    const tmp6 = m02 * m33;\n    const tmp7 = m32 * m03;\n    const tmp8 = m02 * m23;\n    const tmp9 = m22 * m03;\n    const tmp10 = m02 * m13;\n    const tmp11 = m12 * m03;\n    const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n        (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n    const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n        (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n    const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n        (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n    const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n        (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n    return m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nconst invert$1 = inverse$2;\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nfunction multiply$2(a, b, dst) {\n    dst = dst || new MatType(16);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4 + 0];\n    const a11 = a[4 + 1];\n    const a12 = a[4 + 2];\n    const a13 = a[4 + 3];\n    const a20 = a[8 + 0];\n    const a21 = a[8 + 1];\n    const a22 = a[8 + 2];\n    const a23 = a[8 + 3];\n    const a30 = a[12 + 0];\n    const a31 = a[12 + 1];\n    const a32 = a[12 + 2];\n    const a33 = a[12 + 3];\n    const b00 = b[0];\n    const b01 = b[1];\n    const b02 = b[2];\n    const b03 = b[3];\n    const b10 = b[4 + 0];\n    const b11 = b[4 + 1];\n    const b12 = b[4 + 2];\n    const b13 = b[4 + 3];\n    const b20 = b[8 + 0];\n    const b21 = b[8 + 1];\n    const b22 = b[8 + 2];\n    const b23 = b[8 + 3];\n    const b30 = b[12 + 0];\n    const b31 = b[12 + 1];\n    const b32 = b[12 + 2];\n    const b33 = b[12 + 3];\n    dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n    dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n    dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n    dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n    dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n    dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n    dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n    dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n    dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n    dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n    dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n    dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n    dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n    dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n    dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n    dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n    return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nconst mul$2 = multiply$2;\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nfunction setTranslation(a, v, dst) {\n    dst = dst || identity$1();\n    if (a !== dst) {\n        dst[0] = a[0];\n        dst[1] = a[1];\n        dst[2] = a[2];\n        dst[3] = a[3];\n        dst[4] = a[4];\n        dst[5] = a[5];\n        dst[6] = a[6];\n        dst[7] = a[7];\n        dst[8] = a[8];\n        dst[9] = a[9];\n        dst[10] = a[10];\n        dst[11] = a[11];\n    }\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nfunction getTranslation(m, dst) {\n    dst = dst || create$3();\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nfunction getAxis(m, axis, dst) {\n    dst = dst || create$3();\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y, 2 = z;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nfunction setAxis(a, v, axis, dst) {\n    if (dst !== a) {\n        dst = copy$2(a, dst);\n    }\n    const off = axis * 4;\n    dst[off + 0] = v[0];\n    dst[off + 1] = v[1];\n    dst[off + 2] = v[2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nfunction getScaling(m, dst) {\n    dst = dst || create$3();\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n *\n * Note: If you pass `Infinity` for zFar then it will produce a projection matrix\n * returns -Infinity for Z when transforming coordinates with Z <= 0 and +Infinity for Z\n * otherwise.\n *\n * @param fieldOfViewYInRadians - The camera angle from top to bottom (in radians).\n * @param aspect - The aspect ratio width / height.\n * @param zNear - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param zFar - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The perspective matrix.\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n    dst = dst || new MatType(16);\n    const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n    dst[0] = f / aspect;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = f;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[11] = -1;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[15] = 0;\n    if (zFar === Infinity) {\n        dst[10] = -1;\n        dst[14] = -zNear;\n    }\n    else {\n        const rangeInv = 1 / (zNear - zFar);\n        dst[10] = zFar * rangeInv;\n        dst[14] = zFar * zNear * rangeInv;\n    }\n    return dst;\n}\n/**\n * Computes a 4-by-4 orthogonal transformation matrix that transforms from\n * the given the left, right, bottom, and top dimensions to -1 +1 in x, and y\n * and 0 to +1 in z.\n * @param left - Left side of the near clipping plane viewport.\n * @param right - Right side of the near clipping plane viewport.\n * @param bottom - Bottom of the near clipping plane viewport.\n * @param top - Top of the near clipping plane viewport.\n * @param near - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param far - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The orthographic projection matrix.\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 2 / (right - left);\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 2 / (top - bottom);\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1 / (near - far);\n    dst[11] = 0;\n    dst[12] = (right + left) / (left - right);\n    dst[13] = (top + bottom) / (bottom - top);\n    dst[14] = near / (near - far);\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param left - The x coordinate of the left plane of the box.\n * @param right - The x coordinate of the right plane of the box.\n * @param bottom - The y coordinate of the bottom plane of the box.\n * @param top - The y coordinate of the right plane of the box.\n * @param near - The negative z coordinate of the near plane of the box.\n * @param far - The negative z coordinate of the far plane of the box.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The perspective projection matrix.\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n    dst = dst || new MatType(16);\n    const dx = (right - left);\n    const dy = (top - bottom);\n    const dz = (near - far);\n    dst[0] = 2 * near / dx;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 2 * near / dy;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = (left + right) / dx;\n    dst[9] = (top + bottom) / dy;\n    dst[10] = far / dz;\n    dst[11] = -1;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = near * far / dz;\n    dst[15] = 0;\n    return dst;\n}\nlet xAxis;\nlet yAxis;\nlet zAxis;\n/**\n * Computes a 4-by-4 aim transformation.\n *\n * This is a matrix which positions an object aiming down positive Z.\n * toward the target.\n *\n * Note: this is **NOT** the inverse of lookAt as lookAt looks at negative Z.\n *\n * @param position - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nfunction aim(position, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(target, position, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = xAxis[1];\n    dst[2] = xAxis[2];\n    dst[3] = 0;\n    dst[4] = yAxis[0];\n    dst[5] = yAxis[1];\n    dst[6] = yAxis[2];\n    dst[7] = 0;\n    dst[8] = zAxis[0];\n    dst[9] = zAxis[1];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = position[0];\n    dst[13] = position[1];\n    dst[14] = position[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 camera aim transformation.\n *\n * This is a matrix which positions an object aiming down negative Z.\n * toward the target.\n *\n * Note: this is the inverse of `lookAt`\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nfunction cameraAim(eye, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(eye, target, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = xAxis[1];\n    dst[2] = xAxis[2];\n    dst[3] = 0;\n    dst[4] = yAxis[0];\n    dst[5] = yAxis[1];\n    dst[6] = yAxis[2];\n    dst[7] = 0;\n    dst[8] = zAxis[0];\n    dst[9] = zAxis[1];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = eye[0];\n    dst[13] = eye[1];\n    dst[14] = eye[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Computes a 4-by-4 view transformation.\n *\n * This is a view matrix which transforms all other objects\n * to be in the space of the view defined by the parameters.\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The look-at matrix.\n */\nfunction lookAt(eye, target, up, dst) {\n    dst = dst || new MatType(16);\n    xAxis = xAxis || create$3();\n    yAxis = yAxis || create$3();\n    zAxis = zAxis || create$3();\n    normalize$2(subtract$2(eye, target, zAxis), zAxis);\n    normalize$2(cross(up, zAxis, xAxis), xAxis);\n    normalize$2(cross(zAxis, xAxis, yAxis), yAxis);\n    dst[0] = xAxis[0];\n    dst[1] = yAxis[0];\n    dst[2] = zAxis[0];\n    dst[3] = 0;\n    dst[4] = xAxis[1];\n    dst[5] = yAxis[1];\n    dst[6] = zAxis[1];\n    dst[7] = 0;\n    dst[8] = xAxis[2];\n    dst[9] = yAxis[2];\n    dst[10] = zAxis[2];\n    dst[11] = 0;\n    dst[12] = -(xAxis[0] * eye[0] + xAxis[1] * eye[1] + xAxis[2] * eye[2]);\n    dst[13] = -(yAxis[0] * eye[0] + yAxis[1] * eye[1] + yAxis[2] * eye[2]);\n    dst[14] = -(zAxis[0] * eye[0] + zAxis[1] * eye[1] + zAxis[2] * eye[2]);\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nfunction translation(v, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = v[0];\n    dst[13] = v[1];\n    dst[14] = v[2];\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nfunction translate(m, v, dst) {\n    dst = dst || new MatType(16);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m03 = m[3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const m30 = m[3 * 4 + 0];\n    const m31 = m[3 * 4 + 1];\n    const m32 = m[3 * 4 + 2];\n    const m33 = m[3 * 4 + 3];\n    if (m !== dst) {\n        dst[0] = m00;\n        dst[1] = m01;\n        dst[2] = m02;\n        dst[3] = m03;\n        dst[4] = m10;\n        dst[5] = m11;\n        dst[6] = m12;\n        dst[7] = m13;\n        dst[8] = m20;\n        dst[9] = m21;\n        dst[10] = m22;\n        dst[11] = m23;\n    }\n    dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n    dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n    dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n    dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationX(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = c;\n    dst[6] = s;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = -s;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateX$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m10 = m[4];\n    const m11 = m[5];\n    const m12 = m[6];\n    const m13 = m[7];\n    const m20 = m[8];\n    const m21 = m[9];\n    const m22 = m[10];\n    const m23 = m[11];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[4] = c * m10 + s * m20;\n    dst[5] = c * m11 + s * m21;\n    dst[6] = c * m12 + s * m22;\n    dst[7] = c * m13 + s * m23;\n    dst[8] = c * m20 - s * m10;\n    dst[9] = c * m21 - s * m11;\n    dst[10] = c * m22 - s * m12;\n    dst[11] = c * m23 - s * m13;\n    if (m !== dst) {\n        dst[0] = m[0];\n        dst[1] = m[1];\n        dst[2] = m[2];\n        dst[3] = m[3];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationY(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = 0;\n    dst[2] = -s;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = 1;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = s;\n    dst[9] = 0;\n    dst[10] = c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateY$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m20 = m[2 * 4 + 0];\n    const m21 = m[2 * 4 + 1];\n    const m22 = m[2 * 4 + 2];\n    const m23 = m[2 * 4 + 3];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 - s * m20;\n    dst[1] = c * m01 - s * m21;\n    dst[2] = c * m02 - s * m22;\n    dst[3] = c * m03 - s * m23;\n    dst[8] = c * m20 + s * m00;\n    dst[9] = c * m21 + s * m01;\n    dst[10] = c * m22 + s * m02;\n    dst[11] = c * m23 + s * m03;\n    if (m !== dst) {\n        dst[4] = m[4];\n        dst[5] = m[5];\n        dst[6] = m[6];\n        dst[7] = m[7];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nfunction rotationZ(angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c;\n    dst[1] = s;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = -s;\n    dst[5] = c;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = 1;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction rotateZ$1(m, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    const m00 = m[0 * 4 + 0];\n    const m01 = m[0 * 4 + 1];\n    const m02 = m[0 * 4 + 2];\n    const m03 = m[0 * 4 + 3];\n    const m10 = m[1 * 4 + 0];\n    const m11 = m[1 * 4 + 1];\n    const m12 = m[1 * 4 + 2];\n    const m13 = m[1 * 4 + 3];\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    dst[0] = c * m00 + s * m10;\n    dst[1] = c * m01 + s * m11;\n    dst[2] = c * m02 + s * m12;\n    dst[3] = c * m03 + s * m13;\n    dst[4] = c * m10 - s * m00;\n    dst[5] = c * m11 - s * m01;\n    dst[6] = c * m12 - s * m02;\n    dst[7] = c * m13 - s * m03;\n    if (m !== dst) {\n        dst[8] = m[8];\n        dst[9] = m[9];\n        dst[10] = m[10];\n        dst[11] = m[11];\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    const oneMinusCosine = 1 - c;\n    dst[0] = xx + (1 - xx) * c;\n    dst[1] = x * y * oneMinusCosine + z * s;\n    dst[2] = x * z * oneMinusCosine - y * s;\n    dst[3] = 0;\n    dst[4] = x * y * oneMinusCosine - z * s;\n    dst[5] = yy + (1 - yy) * c;\n    dst[6] = y * z * oneMinusCosine + x * s;\n    dst[7] = 0;\n    dst[8] = x * z * oneMinusCosine + y * s;\n    dst[9] = y * z * oneMinusCosine - x * s;\n    dst[10] = zz + (1 - zz) * c;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle. (same as axisRotation)\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nconst rotation = axisRotation;\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n    dst = dst || new MatType(16);\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    const n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n    const xx = x * x;\n    const yy = y * y;\n    const zz = z * z;\n    const c = Math.cos(angleInRadians);\n    const s = Math.sin(angleInRadians);\n    const oneMinusCosine = 1 - c;\n    const r00 = xx + (1 - xx) * c;\n    const r01 = x * y * oneMinusCosine + z * s;\n    const r02 = x * z * oneMinusCosine - y * s;\n    const r10 = x * y * oneMinusCosine - z * s;\n    const r11 = yy + (1 - yy) * c;\n    const r12 = y * z * oneMinusCosine + x * s;\n    const r20 = x * z * oneMinusCosine + y * s;\n    const r21 = y * z * oneMinusCosine - x * s;\n    const r22 = zz + (1 - zz) * c;\n    const m00 = m[0];\n    const m01 = m[1];\n    const m02 = m[2];\n    const m03 = m[3];\n    const m10 = m[4];\n    const m11 = m[5];\n    const m12 = m[6];\n    const m13 = m[7];\n    const m20 = m[8];\n    const m21 = m[9];\n    const m22 = m[10];\n    const m23 = m[11];\n    dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n    dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n    dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n    dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n    dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n    dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n    dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n    dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n    dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n    dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n    dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n    dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle. (same as rotate)\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nconst rotate = axisRotate;\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction scaling(v, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = v[0];\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = v[1];\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = v[2];\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction scale$2(m, v, dst) {\n    dst = dst || new MatType(16);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    dst[0] = v0 * m[0 * 4 + 0];\n    dst[1] = v0 * m[0 * 4 + 1];\n    dst[2] = v0 * m[0 * 4 + 2];\n    dst[3] = v0 * m[0 * 4 + 3];\n    dst[4] = v1 * m[1 * 4 + 0];\n    dst[5] = v1 * m[1 * 4 + 1];\n    dst[6] = v1 * m[1 * 4 + 2];\n    dst[7] = v1 * m[1 * 4 + 3];\n    dst[8] = v2 * m[2 * 4 + 0];\n    dst[9] = v2 * m[2 * 4 + 1];\n    dst[10] = v2 * m[2 * 4 + 2];\n    dst[11] = v2 * m[2 * 4 + 3];\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales a uniform amount in each dimension.\n * @param s - the amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nfunction uniformScaling(s, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = s;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    dst[4] = 0;\n    dst[5] = s;\n    dst[6] = 0;\n    dst[7] = 0;\n    dst[8] = 0;\n    dst[9] = 0;\n    dst[10] = s;\n    dst[11] = 0;\n    dst[12] = 0;\n    dst[13] = 0;\n    dst[14] = 0;\n    dst[15] = 1;\n    return dst;\n}\n/**\n * Scales the given 4-by-4 matrix in each dimension by a uniform scale.\n * @param m - The matrix to be modified.\n * @param s - The amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nfunction uniformScale(m, s, dst) {\n    dst = dst || new MatType(16);\n    dst[0] = s * m[0 * 4 + 0];\n    dst[1] = s * m[0 * 4 + 1];\n    dst[2] = s * m[0 * 4 + 2];\n    dst[3] = s * m[0 * 4 + 3];\n    dst[4] = s * m[1 * 4 + 0];\n    dst[5] = s * m[1 * 4 + 1];\n    dst[6] = s * m[1 * 4 + 2];\n    dst[7] = s * m[1 * 4 + 3];\n    dst[8] = s * m[2 * 4 + 0];\n    dst[9] = s * m[2 * 4 + 1];\n    dst[10] = s * m[2 * 4 + 2];\n    dst[11] = s * m[2 * 4 + 3];\n    if (m !== dst) {\n        dst[12] = m[12];\n        dst[13] = m[13];\n        dst[14] = m[14];\n        dst[15] = m[15];\n    }\n    return dst;\n}\n\nvar mat4Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    setDefaultType: setDefaultType$3,\n    create: create$2,\n    set: set$2,\n    fromMat3: fromMat3,\n    fromQuat: fromQuat,\n    negate: negate$1,\n    copy: copy$2,\n    clone: clone$2,\n    equalsApproximately: equalsApproximately$2,\n    equals: equals$2,\n    identity: identity$1,\n    transpose: transpose,\n    inverse: inverse$2,\n    determinant: determinant,\n    invert: invert$1,\n    multiply: multiply$2,\n    mul: mul$2,\n    setTranslation: setTranslation,\n    getTranslation: getTranslation,\n    getAxis: getAxis,\n    setAxis: setAxis,\n    getScaling: getScaling,\n    perspective: perspective,\n    ortho: ortho,\n    frustum: frustum,\n    aim: aim,\n    cameraAim: cameraAim,\n    lookAt: lookAt,\n    translation: translation,\n    translate: translate,\n    rotationX: rotationX,\n    rotateX: rotateX$1,\n    rotationY: rotationY,\n    rotateY: rotateY$1,\n    rotationZ: rotationZ,\n    rotateZ: rotateZ$1,\n    axisRotation: axisRotation,\n    rotation: rotation,\n    axisRotate: axisRotate,\n    rotate: rotate,\n    scaling: scaling,\n    scale: scale$2,\n    uniformScaling: uniformScaling,\n    uniformScale: uniformScale\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Quat4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Quat4`. In other words you can do this\n *\n *     const v = quat4.cross(v1, v2);  // Creates a new Quat4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = quat4.create();\n *     quat4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     quat4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet QuatType = Float32Array;\n/**\n * Sets the type this library creates for a Quat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Quat4\n */\nfunction setDefaultType$2(ctor) {\n    const oldType = QuatType;\n    QuatType = ctor;\n    return oldType;\n}\n/**\n * Creates a quat4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nfunction create$1(x, y, z, w) {\n    const dst = new QuatType(4);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n                if (w !== undefined) {\n                    dst[3] = w;\n                }\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a Quat; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nconst fromValues$1 = create$1;\n/**\n * Sets the values of a Quat\n * Also see {@link quat.create} and {@link quat.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set$1(x, y, z, w, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    dst[3] = w;\n    return dst;\n}\n/**\n * Sets a quaternion from the given angle and  axis,\n * then returns it.\n *\n * @param axis - the axis to rotate around\n * @param angleInRadians - the angle\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The quaternion that represents the given axis and angle\n **/\nfunction fromAxisAngle(axis, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const s = Math.sin(halfAngle);\n    dst[0] = s * axis[0];\n    dst[1] = s * axis[1];\n    dst[2] = s * axis[2];\n    dst[3] = Math.cos(halfAngle);\n    return dst;\n}\n/**\n * Gets the rotation axis and angle\n * @param q - quaternion to compute from\n * @param dst - Vec3 to hold result. If not passed in a new one is created.\n * @return angle and axis\n */\nfunction toAxisAngle(q, dst) {\n    dst = dst || create$3(4);\n    const angle = Math.acos(q[3]) * 2;\n    const s = Math.sin(angle * 0.5);\n    if (s > EPSILON) {\n        dst[0] = q[0] / s;\n        dst[1] = q[1] / s;\n        dst[2] = q[2] / s;\n    }\n    else {\n        dst[0] = 1;\n        dst[1] = 0;\n        dst[2] = 0;\n    }\n    return { angle, axis: dst };\n}\n/**\n * Returns the angle in degrees between two rotations a and b.\n * @param a - quaternion a\n * @param b - quaternion b\n * @return angle in radians between the two quaternions\n */\nfunction angle(a, b) {\n    const d = dot$1(a, b);\n    return Math.acos(2 * d * d - 1);\n}\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction multiply$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const bw = b[3];\n    dst[0] = ax * bw + aw * bx + ay * bz - az * by;\n    dst[1] = ay * bw + aw * by + az * bx - ax * bz;\n    dst[2] = az * bw + aw * bz + ax * by - ay * bx;\n    dst[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return dst;\n}\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nconst mul$1 = multiply$1;\n/**\n * Rotates the given quaternion around the X axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateX(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const bx = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw + qw * bx;\n    dst[1] = qy * bw + qz * bx;\n    dst[2] = qz * bw - qy * bx;\n    dst[3] = qw * bw - qx * bx;\n    return dst;\n}\n/**\n * Rotates the given quaternion around the Y axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateY(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const by = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw - qz * by;\n    dst[1] = qy * bw + qw * by;\n    dst[2] = qz * bw + qx * by;\n    dst[3] = qw * bw - qy * by;\n    return dst;\n}\n/**\n * Rotates the given quaternion around the Z axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction rotateZ(q, angleInRadians, dst) {\n    dst = dst || new QuatType(4);\n    const halfAngle = angleInRadians * 0.5;\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const bz = Math.sin(halfAngle);\n    const bw = Math.cos(halfAngle);\n    dst[0] = qx * bw + qy * bz;\n    dst[1] = qy * bw - qx * bz;\n    dst[2] = qz * bw + qw * bz;\n    dst[3] = qw * bw - qz * bz;\n    return dst;\n}\n/**\n * Spherically linear interpolate between two quaternions\n *\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nfunction slerp(a, b, t, dst) {\n    dst = dst || new QuatType(4);\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    let bx = b[0];\n    let by = b[1];\n    let bz = b[2];\n    let bw = b[3];\n    let cosOmega = ax * bx + ay * by + az * bz + aw * bw;\n    if (cosOmega < 0) {\n        cosOmega = -cosOmega;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    let scale0;\n    let scale1;\n    if (1.0 - cosOmega > EPSILON) {\n        const omega = Math.acos(cosOmega);\n        const sinOmega = Math.sin(omega);\n        scale0 = Math.sin((1 - t) * omega) / sinOmega;\n        scale1 = Math.sin(t * omega) / sinOmega;\n    }\n    else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    dst[0] = scale0 * ax + scale1 * bx;\n    dst[1] = scale0 * ay + scale1 * by;\n    dst[2] = scale0 * az + scale1 * bz;\n    dst[3] = scale0 * aw + scale1 * bw;\n    return dst;\n}\n/**\n * Compute the inverse of a quaternion\n *\n * @param q - quaternion to compute the inverse of\n * @returns A quaternion that is the result of a * b\n */\nfunction inverse$1(q, dst) {\n    dst = dst || new QuatType(4);\n    const a0 = q[0];\n    const a1 = q[1];\n    const a2 = q[2];\n    const a3 = q[3];\n    const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    const invDot = dot ? 1 / dot : 0;\n    dst[0] = -a0 * invDot;\n    dst[1] = -a1 * invDot;\n    dst[2] = -a2 * invDot;\n    dst[3] = a3 * invDot;\n    return dst;\n}\n/**\n * Compute the conjugate of a quaternion\n * For quaternions with a magnitude of 1 (a unit quaternion)\n * this returns the same as the inverse but is faster to calculate.\n *\n * @param q - quaternion to compute the conjugate of.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The conjugate of q\n */\nfunction conjugate(q, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = -q[0];\n    dst[1] = -q[1];\n    dst[2] = -q[2];\n    dst[3] = q[3];\n    return dst;\n}\n/**\n * Creates a quaternion from the given rotation matrix.\n *\n * The created quaternion is not normalized.\n *\n * @param m - rotation matrix\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nfunction fromMat(m, dst) {\n    dst = dst || new QuatType(4);\n    /*\n    0 1 2\n    3 4 5\n    6 7 8\n  \n    0 1 2\n    4 5 6\n    8 9 10\n     */\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    const trace = m[0] + m[5] + m[10];\n    if (trace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        const root = Math.sqrt(trace + 1); // 2w\n        dst[3] = 0.5 * root;\n        const invRoot = 0.5 / root; // 1/(4w)\n        dst[0] = (m[6] - m[9]) * invRoot;\n        dst[1] = (m[8] - m[2]) * invRoot;\n        dst[2] = (m[1] - m[4]) * invRoot;\n    }\n    else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[5] > m[0]) {\n            i = 1;\n        }\n        if (m[10] > m[i * 4 + i]) {\n            i = 2;\n        }\n        const j = (i + 1) % 3;\n        const k = (i + 2) % 3;\n        const root = Math.sqrt(m[i * 4 + i] - m[j * 4 + j] - m[k * 4 + k] + 1.0);\n        dst[i] = 0.5 * root;\n        const invRoot = 0.5 / root;\n        dst[3] = (m[j * 4 + k] - m[k * 4 + j]) * invRoot;\n        dst[j] = (m[j * 4 + i] + m[i * 4 + j]) * invRoot;\n        dst[k] = (m[k * 4 + i] + m[i * 4 + k]) * invRoot;\n    }\n    return dst;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param xAngleInRadians - angle to rotate around X axis in radians.\n * @param yAngleInRadians - angle to rotate around Y axis in radians.\n * @param zAngleInRadians - angle to rotate around Z axis in radians.\n * @param order - order to apply euler angles\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion representing the same rotation as the euler angles applied in the given order\n */\nfunction fromEuler(xAngleInRadians, yAngleInRadians, zAngleInRadians, order, dst) {\n    dst = dst || new QuatType(4);\n    const xHalfAngle = xAngleInRadians * 0.5;\n    const yHalfAngle = yAngleInRadians * 0.5;\n    const zHalfAngle = zAngleInRadians * 0.5;\n    const sx = Math.sin(xHalfAngle);\n    const cx = Math.cos(xHalfAngle);\n    const sy = Math.sin(yHalfAngle);\n    const cy = Math.cos(yHalfAngle);\n    const sz = Math.sin(zHalfAngle);\n    const cz = Math.cos(zHalfAngle);\n    switch (order) {\n        case 'xyz':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'xzy':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        case 'yxz':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz - sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        case 'yzx':\n            dst[0] = sx * cy * cz + cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'zxy':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz + sx * sy * cz;\n            dst[3] = cx * cy * cz - sx * sy * sz;\n            break;\n        case 'zyx':\n            dst[0] = sx * cy * cz - cx * sy * sz;\n            dst[1] = cx * sy * cz + sx * cy * sz;\n            dst[2] = cx * cy * sz - sx * sy * cz;\n            dst[3] = cx * cy * cz + sx * sy * sz;\n            break;\n        default:\n            throw new Error(`Unknown rotation order: ${order}`);\n    }\n    return dst;\n}\n/**\n * Copies a quaternion. (same as {@link quat.clone})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is a copy of q\n */\nfunction copy$1(q, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = q[0];\n    dst[1] = q[1];\n    dst[2] = q[2];\n    dst[3] = q[3];\n    return dst;\n}\n/**\n * Clones a quaternion. (same as {@link quat.copy})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A copy of q.\n */\nconst clone$1 = copy$1;\n/**\n * Adds two quaternions; assumes a and b have the same dimension.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the sum of a and b.\n */\nfunction add$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    dst[3] = a[3] + b[3];\n    return dst;\n}\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nfunction subtract$1(a, b, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    dst[3] = a[3] - b[3];\n    return dst;\n}\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nconst sub$1 = subtract$1;\n/**\n * Multiplies a quaternion by a scalar.\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nfunction mulScalar$1(v, k, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    dst[3] = v[3] * k;\n    return dst;\n}\n/**\n * Multiplies a quaternion by a scalar. (same as mulScalar)\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nconst scale$1 = mulScalar$1;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nfunction divScalar$1(v, k, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    dst[3] = v[3] / k;\n    return dst;\n}\n/**\n * Computes the dot product of two quaternions\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns dot product\n */\nfunction dot$1(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n/**\n * Performs linear interpolation on two quaternions.\n * Given quaternions a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param t - Interpolation coefficient.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp$1(a, b, t, dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    dst[3] = a[3] + t * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Computes the length of quaternion\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nfunction length$1(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n/**\n * Computes the length of quaternion (same as length)\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nconst len$1 = length$1;\n/**\n * Computes the square of the length of quaternion\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nfunction lengthSq$1(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n/**\n * Computes the square of the length of quaternion (same as lengthSq)\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nconst lenSq$1 = lengthSq$1;\n/**\n * Divides a quaternion by its Euclidean length and returns the quotient.\n * @param v - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The normalized quaternion.\n */\nfunction normalize$1(v, dst) {\n    dst = dst || new QuatType(4);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n        dst[3] = v3 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 0;\n    }\n    return dst;\n}\n/**\n * Check if 2 quaternions are approximately equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are approximately equal\n */\nfunction equalsApproximately$1(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON;\n}\n/**\n * Check if 2 quaternions are exactly equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are exactly equal\n */\nfunction equals$1(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Creates an identity quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns an identity quaternion\n */\nfunction identity(dst) {\n    dst = dst || new QuatType(4);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 1;\n    return dst;\n}\nlet tempVec3;\nlet xUnitVec3;\nlet yUnitVec3;\n/**\n * Computes a quaternion to represent the shortest rotation from one vector to another.\n *\n * @param aUnit - the start vector\n * @param bUnit - the end vector\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nfunction rotationTo(aUnit, bUnit, dst) {\n    dst = dst || new QuatType(4);\n    tempVec3 = tempVec3 || create$3();\n    xUnitVec3 = xUnitVec3 || create$3(1, 0, 0);\n    yUnitVec3 = yUnitVec3 || create$3(0, 1, 0);\n    const dot = dot$2(aUnit, bUnit);\n    if (dot < -0.999999) {\n        cross(xUnitVec3, aUnit, tempVec3);\n        if (len$2(tempVec3) < 0.000001) {\n            cross(yUnitVec3, aUnit, tempVec3);\n        }\n        normalize$2(tempVec3, tempVec3);\n        fromAxisAngle(tempVec3, Math.PI, dst);\n        return dst;\n    }\n    else if (dot > 0.999999) {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 1;\n        return dst;\n    }\n    else {\n        cross(aUnit, bUnit, tempVec3);\n        dst[0] = tempVec3[0];\n        dst[1] = tempVec3[1];\n        dst[2] = tempVec3[2];\n        dst[3] = 1 + dot;\n        return normalize$1(dst, dst);\n    }\n}\nlet tempQuat1;\nlet tempQuat2;\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param c - the third quaternion\n * @param d - the fourth quaternion\n * @param t - Interpolation coefficient 0 to 1\n * @returns result\n */\nfunction sqlerp(a, b, c, d, t, dst) {\n    dst = dst || new QuatType(4);\n    tempQuat1 = tempQuat1 || new QuatType(4);\n    tempQuat2 = tempQuat2 || new QuatType(4);\n    slerp(a, d, t, tempQuat1);\n    slerp(b, c, t, tempQuat2);\n    slerp(tempQuat1, tempQuat2, 2 * t * (1 - t), dst);\n    return dst;\n}\n\nvar quatImpl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$1,\n    setDefaultType: setDefaultType$2,\n    fromValues: fromValues$1,\n    set: set$1,\n    fromAxisAngle: fromAxisAngle,\n    toAxisAngle: toAxisAngle,\n    angle: angle,\n    multiply: multiply$1,\n    mul: mul$1,\n    rotateX: rotateX,\n    rotateY: rotateY,\n    rotateZ: rotateZ,\n    slerp: slerp,\n    inverse: inverse$1,\n    conjugate: conjugate,\n    fromMat: fromMat,\n    fromEuler: fromEuler,\n    copy: copy$1,\n    clone: clone$1,\n    add: add$1,\n    subtract: subtract$1,\n    sub: sub$1,\n    mulScalar: mulScalar$1,\n    scale: scale$1,\n    divScalar: divScalar$1,\n    dot: dot$1,\n    lerp: lerp$1,\n    length: length$1,\n    len: len$1,\n    lengthSq: lengthSq$1,\n    lenSq: lenSq$1,\n    normalize: normalize$1,\n    equalsApproximately: equalsApproximately$1,\n    equals: equals$1,\n    identity: identity,\n    rotationTo: rotationTo,\n    sqlerp: sqlerp\n});\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n *\n * Vec4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec4`. In other words you can do this\n *\n *     const v = vec4.cross(v1, v2);  // Creates a new Vec4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec4.create();\n *     vec4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\nlet VecType = Float32Array;\n/**\n * Sets the type this library creates for a Vec4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec4\n */\nfunction setDefaultType$1(ctor) {\n    const oldType = VecType;\n    VecType = ctor;\n    return oldType;\n}\n/**\n * Creates a vec4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nfunction create(x, y, z, w) {\n    const dst = new VecType(4);\n    if (x !== undefined) {\n        dst[0] = x;\n        if (y !== undefined) {\n            dst[1] = y;\n            if (z !== undefined) {\n                dst[2] = z;\n                if (w !== undefined) {\n                    dst[3] = w;\n                }\n            }\n        }\n    }\n    return dst;\n}\n\n/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n * Creates a vec4; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nconst fromValues = create;\n/**\n * Sets the values of a Vec4\n * Also see {@link vec4.create} and {@link vec4.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nfunction set(x, y, z, w, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = x;\n    dst[1] = y;\n    dst[2] = z;\n    dst[3] = w;\n    return dst;\n}\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nfunction ceil(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.ceil(v[0]);\n    dst[1] = Math.ceil(v[1]);\n    dst[2] = Math.ceil(v[2]);\n    dst[3] = Math.ceil(v[3]);\n    return dst;\n}\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nfunction floor(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.floor(v[0]);\n    dst[1] = Math.floor(v[1]);\n    dst[2] = Math.floor(v[2]);\n    dst[3] = Math.floor(v[3]);\n    return dst;\n}\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nfunction round(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.round(v[0]);\n    dst[1] = Math.round(v[1]);\n    dst[2] = Math.round(v[2]);\n    dst[3] = Math.round(v[3]);\n    return dst;\n}\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nfunction clamp(v, min = 0, max = 1, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.min(max, Math.max(min, v[0]));\n    dst[1] = Math.min(max, Math.max(min, v[1]));\n    dst[2] = Math.min(max, Math.max(min, v[2]));\n    dst[3] = Math.min(max, Math.max(min, v[3]));\n    return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nfunction add(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + b[0];\n    dst[1] = a[1] + b[1];\n    dst[2] = a[2] + b[2];\n    dst[3] = a[3] + b[3];\n    return dst;\n}\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nfunction addScaled(a, b, scale, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + b[0] * scale;\n    dst[1] = a[1] + b[1] * scale;\n    dst[2] = a[2] + b[2] * scale;\n    dst[3] = a[3] + b[3] * scale;\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nfunction subtract(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] - b[0];\n    dst[1] = a[1] - b[1];\n    dst[2] = a[2] - b[2];\n    dst[3] = a[3] - b[3];\n    return dst;\n}\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nconst sub = subtract;\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nfunction equalsApproximately(a, b) {\n    return Math.abs(a[0] - b[0]) < EPSILON &&\n        Math.abs(a[1] - b[1]) < EPSILON &&\n        Math.abs(a[2] - b[2]) < EPSILON &&\n        Math.abs(a[3] - b[3]) < EPSILON;\n}\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nfunction equals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nfunction lerp(a, b, t, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + t * (b[0] - a[0]);\n    dst[1] = a[1] + t * (b[1] - a[1]);\n    dst[2] = a[2] + t * (b[2] - a[2]);\n    dst[3] = a[3] + t * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nfunction lerpV(a, b, t, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] + t[0] * (b[0] - a[0]);\n    dst[1] = a[1] + t[1] * (b[1] - a[1]);\n    dst[2] = a[2] + t[2] * (b[2] - a[2]);\n    dst[3] = a[3] + t[3] * (b[3] - a[3]);\n    return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nfunction max(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.max(a[0], b[0]);\n    dst[1] = Math.max(a[1], b[1]);\n    dst[2] = Math.max(a[2], b[2]);\n    dst[3] = Math.max(a[3], b[3]);\n    return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nfunction min(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = Math.min(a[0], b[0]);\n    dst[1] = Math.min(a[1], b[1]);\n    dst[2] = Math.min(a[2], b[2]);\n    dst[3] = Math.min(a[3], b[3]);\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction mulScalar(v, k, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0] * k;\n    dst[1] = v[1] * k;\n    dst[2] = v[2] * k;\n    dst[3] = v[3] * k;\n    return dst;\n}\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nconst scale = mulScalar;\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nfunction divScalar(v, k, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0] / k;\n    dst[1] = v[1] / k;\n    dst[2] = v[2] / k;\n    dst[3] = v[3] / k;\n    return dst;\n}\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nfunction inverse(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = 1 / v[0];\n    dst[1] = 1 / v[1];\n    dst[2] = 1 / v[2];\n    dst[3] = 1 / v[3];\n    return dst;\n}\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nconst invert = inverse;\n/**\n * Computes the dot product of two vectors\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nfunction dot(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nfunction length(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nconst len = length;\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nfunction lengthSq(v) {\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nconst lenSq = lengthSq;\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nfunction distance(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    const dw = a[3] - b[3];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n}\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nconst dist = distance;\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nfunction distanceSq(a, b) {\n    const dx = a[0] - b[0];\n    const dy = a[1] - b[1];\n    const dz = a[2] - b[2];\n    const dw = a[3] - b[3];\n    return dx * dx + dy * dy + dz * dz + dw * dw;\n}\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nconst distSq = distanceSq;\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nfunction normalize(v, dst) {\n    dst = dst || new VecType(4);\n    const v0 = v[0];\n    const v1 = v[1];\n    const v2 = v[2];\n    const v3 = v[3];\n    const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n    if (len > 0.00001) {\n        dst[0] = v0 / len;\n        dst[1] = v1 / len;\n        dst[2] = v2 / len;\n        dst[3] = v3 / len;\n    }\n    else {\n        dst[0] = 0;\n        dst[1] = 0;\n        dst[2] = 0;\n        dst[3] = 0;\n    }\n    return dst;\n}\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nfunction negate(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = -v[0];\n    dst[1] = -v[1];\n    dst[2] = -v[2];\n    dst[3] = -v[3];\n    return dst;\n}\n/**\n * Copies a vector. (same as {@link vec4.clone})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nfunction copy(v, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = v[0];\n    dst[1] = v[1];\n    dst[2] = v[2];\n    dst[3] = v[3];\n    return dst;\n}\n/**\n * Clones a vector. (same as {@link vec4.copy})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nconst clone = copy;\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nfunction multiply(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] * b[0];\n    dst[1] = a[1] * b[1];\n    dst[2] = a[2] * b[2];\n    dst[3] = a[3] * b[3];\n    return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nconst mul = multiply;\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nfunction divide(a, b, dst) {\n    dst = dst || new VecType(4);\n    dst[0] = a[0] / b[0];\n    dst[1] = a[1] / b[1];\n    dst[2] = a[2] / b[2];\n    dst[3] = a[3] / b[3];\n    return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nconst div = divide;\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nfunction zero(dst) {\n    dst = dst || new VecType(4);\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n    return dst;\n}\n/**\n * transform vec4 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec4 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nfunction transformMat4(v, m, dst) {\n    dst = dst || new VecType(4);\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const w = v[3];\n    dst[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    dst[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    dst[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    dst[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return dst;\n}\n\nvar vec4Impl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create,\n    setDefaultType: setDefaultType$1,\n    fromValues: fromValues,\n    set: set,\n    ceil: ceil,\n    floor: floor,\n    round: round,\n    clamp: clamp,\n    add: add,\n    addScaled: addScaled,\n    subtract: subtract,\n    sub: sub,\n    equalsApproximately: equalsApproximately,\n    equals: equals,\n    lerp: lerp,\n    lerpV: lerpV,\n    max: max,\n    min: min,\n    mulScalar: mulScalar,\n    scale: scale,\n    divScalar: divScalar,\n    inverse: inverse,\n    invert: invert,\n    dot: dot,\n    length: length,\n    len: len,\n    lengthSq: lengthSq,\n    lenSq: lenSq,\n    distance: distance,\n    dist: dist,\n    distanceSq: distanceSq,\n    distSq: distSq,\n    normalize: normalize,\n    negate: negate,\n    copy: copy,\n    clone: clone,\n    multiply: multiply,\n    mul: mul,\n    divide: divide,\n    div: div,\n    zero: zero,\n    transformMat4: transformMat4\n});\n\n/**\n * Sets the type this library creates for all types\n *\n * example:\n *\n * ```\n * setDefaultType(Float64Array);\n * ```\n *\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n */\nfunction setDefaultType(ctor) {\n    setDefaultType$5(ctor);\n    setDefaultType$3(ctor);\n    setDefaultType$2(ctor);\n    setDefaultType$6(ctor);\n    setDefaultType$4(ctor);\n    setDefaultType$1(ctor);\n}\n\n\n//# sourceMappingURL=wgpu-matrix.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wgpu-matrix/dist/2.x/wgpu-matrix.module.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;