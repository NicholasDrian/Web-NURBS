import { Intersection } from "../../geometry/intersection";
import { Curve } from "../../geometry/nurbs/curve";
import { Command } from "../command";

enum BlendCurvesCommandMode {
  SelectCurve1,
  SelectCurve2,
  Menu,
  AdjustCurve1,
  AdjustCurve2,
}

export class BlendCurvesCommand extends Command {

  private finished: boolean;
  private mode: BlendCurvesCommandMode;
  private curve: Curve | null;

  constructor() {
    super();
    this.finished = false;
    this.mode = BlendCurvesCommandMode.SelectCurve1;
    this.curve = null;
  }

  handleInputString(input: string): void {
    throw new Error("Method not implemented.");
  }

  handleClickResult(input: Intersection): void {
    throw new Error("Method not implemented.");
  }

  handleClick(): void {
    throw new Error("Method not implemented.");
  }

  handleMouseMove(): void {
    throw new Error("Method not implemented.");
  }

  getInstructions(): string {
    throw new Error("Method not implemented.");
  }

  isFinished(): boolean {
    return this.finished;
  }

  private done(): void {
    this.finished = true;

  }

}
